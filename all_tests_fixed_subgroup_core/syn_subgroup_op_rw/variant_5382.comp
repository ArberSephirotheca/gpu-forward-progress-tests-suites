#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y = subgroup_id;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false)); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z = subgroup_local_id, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z = _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, (0u | 0u), 1u)))) / 1u);
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4((gl_NumWorkGroups), uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) * 1.0) < injectionSwitch.y) && true))) ? _GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))) : _GLF_FUZZED(uvec3(77461u, 162357u, 165006u))))), max((_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (gl_NumWorkGroups), max(_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(1u, 1u, 1u) * (~ (gl_NumWorkGroups))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(183598u, 28646u, 84318u)) : gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(77461u, 162357u, 165006u))))), (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY(max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)), max(max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)), _GLF_IDENTITY(max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)), (max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(77461u, 162357u, 165006u))))))), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)), (gl_NumWorkGroups)))), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(_GLF_IDENTITY(~ (gl_NumWorkGroups), ~ (~ (~ (gl_NumWorkGroups)))), ~ (gl_NumWorkGroups)))), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))))) | ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), min(~ (~ (gl_NumWorkGroups)), _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(37068u, 115455u, 62845u)) : ~ (~ (gl_NumWorkGroups))))))))), ~ (~ (gl_NumWorkGroups)))))))))) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(159485u, 65573u, 125034u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(159485u, 65573u, 125034u)), (_GLF_FUZZED(uvec3(159485u, 65573u, 125034u))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), min(_GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))), (~ (gl_NumWorkGroups))))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), min(_GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))), (~ (gl_NumWorkGroups))))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), min(_GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))), (~ (gl_NumWorkGroups))))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), clamp(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))), (clamp(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), clamp(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u))), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups)))), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))))))) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))))) | (uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))) | uvec3(0u, 0u, 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(159485u, 65573u, 125034u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(159485u, 65573u, 125034u)), (_GLF_FUZZED(uvec3(159485u, 65573u, 125034u))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), min(_GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))), (~ (gl_NumWorkGroups))))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), min(_GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))), (~ (gl_NumWorkGroups))))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), min(_GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))), (~ (gl_NumWorkGroups))))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), clamp(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))), (clamp(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), clamp(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), ~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u))), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups)))), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))), (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), ((~ (gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), ~ (~ (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u))))))))) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))), _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups))))))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) | (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), max(~ (~ (gl_NumWorkGroups)), ~ (~ (gl_NumWorkGroups)))))))))) | (uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))) | uvec3(0u, 0u, 0u)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x) | 0u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize), uvec3(uvec3(max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))))).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_DEAD(false)))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w = workgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | uvec4(0u, 0u, 0u, 0u))) * _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) | (uvec4(1u, 1u, 1u, 1u)))).w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, uvec4(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[0], _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, min(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base))[1], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[3])))).y, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y) | 0u)) >> 0u) * subgroup_size, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, uvec4(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[0], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[1], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)))[2], clamp(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)))[2], _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)))[2], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base), ~ (~ (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base))))))[2], ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.31)), vec2(_GLF_FUZZED(9.7), (injectionSwitch)[1]), bvec2(false, true))))).x < injectionSwitch.y))))) ? _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)))[2]))))), GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[3])))).y, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)), GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)).y) >> 0u) * subgroup_size) | (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[0], (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[0]) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0))).x))), GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base[3])))).y, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y) >> 0u) * subgroup_size)) + _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base : _GLF_FUZZED(uvec4(180469u, 59484u, 75670u, 119681u)))).z;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)) ^ uvec4(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)).w, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | uvec4(0u, 0u, 0u, 0u))) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))))) ^ uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)).w, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | uvec4(0u, 0u, 0u, 0u))) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))))) ^ uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)).w))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) : _GLF_FUZZED(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base))))).y, 0u | _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y), _GLF_IDENTITY(max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y), (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y)), (max((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y), (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base)).y))) | 0u))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y, 0u | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u)).y), ((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y)) | (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y), (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y), _GLF_IDENTITY(uint(uint((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y))), _GLF_IDENTITY(min(uint(uint((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y))), uint(uint((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y)))), (min(uint(uint((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y))), uint(uint((GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.y))))) * 1u)))) >> 0u))))))) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u) & uvec4(47462u, 57838u, _GLF_IDENTITY(_GLF_IDENTITY(199596u, uint(uvec2(199596u, (1u ^ 1u)))), (199596u) | (199596u)), _GLF_IDENTITY(8545u, max(8545u, 8545u))))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, clamp(164762u, 164762u, _GLF_IDENTITY(164762u, (164762u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) / uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z + 1), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) / uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z + 1), 1u, 1u, 0u), ~ (~ (uvec4((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) / uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(117518u))), 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(164762u, max(164762u, 164762u)), 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z + 1), 1u, 1u, 0u)))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) / uvec4(1u, 1u, 1u, 1u)))), (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u)))) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))))) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, _GLF_IDENTITY(4054u, min(4054u, 4054u)), 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(_GLF_IDENTITY(47462u, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)) ? _GLF_FUZZED(uint(false)) : 47462u)), 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u)))) | (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), min((uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(0u, 0u, 0u, 0u))))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(0u, 0u, 0u, 0u))))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u)))), (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))) * uvec4(1u, 1u, 1u, 1u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z + 1) % subgroup_size)) << 0u)) | _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).z, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u) | ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u))))) + 1) % subgroup_size)), ((((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).z, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u) | ((_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base) | _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(138611u, 4054u, 163097u, 48190u)) : uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ((0u & 137223u) << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(47462u, 57838u, 199596u, 8545u))), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (~ _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(164762u, 30457u, 44591u, 34760u)) : (uvec4(0u, 0u, 0u, 0u))))))))) | (uvec4(0u, 0u, 0u, 0u)))).z) ^ 0u))))) + 1) % subgroup_size))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0))))).y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true))))))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, true))) || false)))
            {
             for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 << _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             barrier();
            }
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], 4, 64, 0);
 do
  {
   GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x = read;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 do
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) + _GLF_IDENTITY((0u | 0u), clamp(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) - 0u), (_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(subgroup_local_id)))), (0u | 0u)))), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-61.55), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.4)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.81)), bvec2(true, false))), injectionSwitch)).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.0)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, tan(0.0)))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y), false, false, false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) / 1.0)), float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) / 1.0)), float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-4809.9115)), bool(false))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(28.93), (true ? _GLF_FUZZED(28.93) : _GLF_FUZZED(-669.687)))), bool(false))), injectionSwitch.x)) > injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           do
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1)), _GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1))), (max((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) / 1)))) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec3(7, (0 >> _GLF_IDENTITY(int(2), int(2))), 0), ivec3(ivec4(ivec3(7, (0 >> _GLF_IDENTITY(int(2), int(2))), 0), 0)))))), int(7)))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-179.368))) > injectionSwitch.y)), false, false)))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-179.368))) > injectionSwitch.y)), false, false)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true)))), (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true))))) && true)))) && true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               do
                {
                 for(int _injected_loop_counter = (_GLF_IDENTITY((0 & 68281), _GLF_IDENTITY(((0 & 68281)) - 0, (((0 & 68281)) - 0) | 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) | (2)))), max(int(int(_GLF_IDENTITY(2, (2) | (2)))), int(int(_GLF_IDENTITY(2, (2) | (2)))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) | (2)))), max(int(int(_GLF_IDENTITY(2, (2) | (2)))), int(int(_GLF_IDENTITY(2, (2) | (2)))))))), (int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) | (2)))), max(int(int(_GLF_IDENTITY(2, (2) | (2)))), int(int(_GLF_IDENTITY(2, (2) | (2))))))))) | 0)) + 0), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 | (_GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))), ~ (~ (_GLF_IDENTITY((1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 | (_GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))), 0 + ((1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 | (_GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))))))))))), false || ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) << 0)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), clamp((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7))))), 0 | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), clamp((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (_GLF_IDENTITY(ivec4(int(7), 0, 1, 1), (ivec4(int(7), 0, 1, 1)) | ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))))) && true))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.z + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, ~ (~ (1))), 1)), 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))))), (subgroup_size) ^ 0u))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))) && true)))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
                      barrier();
                     do
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | 0, 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | 0))) != 0); _injected_loop_counter --)
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7651.5548), _GLF_FUZZED(4.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, abs(0.0))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)))));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x, 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1))))))) : _GLF_FUZZED(-63951))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0), _GLF_IDENTITY(1, (1) ^ 0))) ^ 1), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0), _GLF_IDENTITY(1, (1) ^ 0))) ^ 1), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) >> 0), _GLF_IDENTITY(1, (1) ^ 0))) ^ 1))))) - 0)); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) ^ 0, clamp(_GLF_IDENTITY((int(6)) ^ 0, ((int(6)) ^ 0) - 0), (int(6)) ^ 0, _GLF_IDENTITY((int(6)) ^ 0, ((int(6)) ^ 0) | 0))))) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(4), int(4)))))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   subgroupAll(false);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               else
                {
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) - 0)) / 1), 0, (0 << _GLF_IDENTITY(int(4), int(4))))), (int(ivec3(_GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) - 0)) / 1), 0, (0 << _GLF_IDENTITY(int(4), int(4)))))) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_IDENTITY(_GLF_FUZZED(113998u), clamp(_GLF_FUZZED(113998u), _GLF_IDENTITY(_GLF_FUZZED(113998u), (true ? _GLF_FUZZED(113998u) : _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(113998u))) : _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_IDENTITY(_GLF_FUZZED(113998u), clamp(_GLF_FUZZED(113998u), _GLF_IDENTITY(_GLF_FUZZED(113998u), (true ? _GLF_FUZZED(113998u) : _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(113998u))) : _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), 0u, 0u, 1u), (uvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_IDENTITY(_GLF_FUZZED(113998u), clamp(_GLF_FUZZED(113998u), _GLF_IDENTITY(_GLF_FUZZED(113998u), (true ? _GLF_FUZZED(113998u) : _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(113998u))) : _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (virtual_gid)), max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) >> 0u)) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - 0u))), (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - 0u)))) - 0u)), (max(virtual_gid, virtual_gid)) + 0u))))], _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x, 0u | (GLF_merged4_0_1_4_1_1_11_2_1_17_3_1_14readsubgroup_idsubgroup_local_idworkgroup_base.x))) << 0u), 4, 64, _GLF_IDENTITY(4, (4) ^ (0 << _GLF_IDENTITY(int(4), int(4)))));
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))));
                    }
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           subgroupAll(true);
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
  }
}
