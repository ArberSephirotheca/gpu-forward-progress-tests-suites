#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 ivec2 _f0;
 uint workgroup_id;
 bvec3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 uint num_workgroup;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 bool _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) || false))))) || false)))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(max(ivec4(1), ivec4(1)), (max(ivec4(1), ivec4(1))) * ivec4(1, 1, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(127898u, 188347u, 42265u) % uvec3(191859u, 7101u, 159295u))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))))) / uvec3(1u, 1u, 1u)).x, _GLF_struct_0(vec3(1.0), mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u), uint(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(subgroup_size) : (1u), 0u, 0u, 0u), (uvec4(false ? _GLF_FUZZED(subgroup_size) : (1u), 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))))) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, _GLF_IDENTITY(max(6u, 6u), clamp(_GLF_IDENTITY(max(6u, 6u), (max(6u, 6u)) / 1u), max(6u, 6u), _GLF_IDENTITY(max(6u, 6u), min(_GLF_IDENTITY(max(6u, 6u), (max(6u, 6u)) + 0u), max(6u, 6u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), (_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) + 0u), uint(6u))), uint(6u)))) << 0u)))), min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u), uint(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(subgroup_size) : (1u), 0u, 0u, 0u), (uvec4(false ? _GLF_FUZZED(subgroup_size) : (1u), 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))))) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, _GLF_IDENTITY(max(6u, 6u), clamp(_GLF_IDENTITY(max(6u, 6u), (max(6u, 6u)) / 1u), max(6u, 6u), _GLF_IDENTITY(max(6u, 6u), min(_GLF_IDENTITY(max(6u, 6u), (max(6u, 6u)) + 0u), max(6u, 6u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), (_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) + 0u), uint(6u))), uint(6u)))) << 0u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u), uint(_GLF_IDENTITY(uvec4(false ? _GLF_FUZZED(subgroup_size) : (1u), 0u, 0u, 0u), (uvec4(false ? _GLF_FUZZED(subgroup_size) : (1u), 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))))) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, _GLF_IDENTITY(max(6u, 6u), clamp(_GLF_IDENTITY(max(6u, 6u), (max(6u, 6u)) / 1u), max(6u, 6u), _GLF_IDENTITY(max(6u, 6u), min(_GLF_IDENTITY(max(6u, 6u), (max(6u, 6u)) + 0u), max(6u, 6u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), (_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) + 0u), uint(6u))), uint(6u)))) << 0u)))))), mat4x3(1.0))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true))))))), mat4(1.0), mat3x4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_3(ivec2(1), gl_WorkGroupID.x, bvec3(true), uvec2(1u))), mat2x4(1.0));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ _GLF_IDENTITY((workgroup_size), 1u * (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | 0u)))) * _GLF_struct_replacement_5._f0._f0.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.2)), float(1.0), bool(true)))), float(_GLF_FUZZED(317.623)), bool(false)))) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch), ((false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)) / vec2(1.0, 1.0))).x) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, _GLF_IDENTITY(length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))) / 1.0)) / 1.0), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), 0.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(sqrt(0.0), (sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))) - 0.0), 0.0, 1.0, 1.0)), clamp(float(mat3x4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), transpose(transpose(mat4x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))))))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(87.66)), bool(false))), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(1.2)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(1.2)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(1.2)), bool(false)), clamp(mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(1.2)), bool(false)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(1.2)), bool(false)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(1.2)), bool(false))))))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(1.0), 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0)), float(mat3x4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0))))), 0.0)) + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(42.54) : 0.0))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(16.17))), injectionSwitch.y))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u ^ _GLF_IDENTITY((0u), max((0u), (0u)))) | (subgroup_id * subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u ^ _GLF_IDENTITY((0u), max((0u), (0u)))) | (subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u ^ _GLF_IDENTITY((0u), max((0u), (0u)))) | (subgroup_id * subgroup_size)))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, _GLF_IDENTITY(1u, 0u + (1u)), 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), min(uint(uvec4(0u, 1u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), uint(uvec4(0u, 1u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u)), ((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u))) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, (true ? _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ 0u) : _GLF_FUZZED(workgroup_size)))))), ~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), clamp(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), (uvec4(0u, 1u, 1u, 0u)) | (uvec4(0u, 1u, 1u, 0u))), uvec4(0u, 1u, 1u, 0u), uvec4(0u, 1u, 1u, 0u))))), 0u ^ (_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), max(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), ((uint(uvec4(0u, 1u, 1u, 0u)))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))))), (uint(uvec4(0u, 1u, 1u, 0u)))))))))) : _GLF_FUZZED(22017u)))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (0u)), 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))) ? 0u : _GLF_FUZZED(workgroup_base))) ^ (0u)), min(_GLF_IDENTITY((0u ^ (0u)), ((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (0u))) >> 0u), (0u ^ (0u)))))) | (subgroup_id * subgroup_size)) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u))) | 0u, clamp(((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u))) | 0u, ((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u))) | 0u, _GLF_IDENTITY(((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u))) | 0u, (((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u))) | 0u) | (((true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), ~ (~ (uint(uvec4(0u, 1u, 1u, 0u)))))) : _GLF_FUZZED(22017u))) | 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u))), ~ (~ _GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), max(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), ((uint(uvec4(0u, 1u, 1u, 0u)))) | 0u), (uint(uvec4(0u, 1u, 1u, 0u))))), clamp(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), max(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), ((uint(uvec4(0u, 1u, 1u, 0u)))) | 0u), (uint(uvec4(0u, 1u, 1u, 0u))))), _GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), max(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), ((uint(uvec4(0u, 1u, 1u, 0u)))) | 0u), (uint(uvec4(0u, 1u, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), max(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), ((uint(uvec4(0u, 1u, 1u, 0u)))) | 0u), (uint(uvec4(0u, 1u, 1u, 0u))))), (_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), max(_GLF_IDENTITY((uint(uvec4(0u, 1u, 1u, 0u))), ((uint(uvec4(0u, 1u, 1u, 0u)))) | 0u), (uint(uvec4(0u, 1u, 1u, 0u)))))) >> 0u)))))))) : _GLF_FUZZED(22017u)))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) ^ (0u)), min(_GLF_IDENTITY((0u ^ (0u)), ((0u ^ (0u))) >> 0u), (0u ^ (_GLF_IDENTITY(0u, (0u) << 0u))))))) | (subgroup_id * subgroup_size)) + subgroup_local_id) << 0u)) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false))), true, _GLF_IDENTITY(true, (true) && true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false)))) || false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false)))) || false))))), false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(uint(uvec2((true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size : _GLF_FUZZED(subgroup_id)), 1u)), (uint(uvec2((true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size : _GLF_FUZZED(subgroup_id)), 1u))) | (uint(uvec2((true ? _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) / 1u)) | 0u)), 1u)))))))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))), _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))))))))], 4, 64, _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY(4, 0 + (4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 ^ 0)), _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(virtual_gid) : virtual_gid))) >> 0u)))], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], read, 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, max(64, 64)))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true)))))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false, false, true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_IDENTITY(false, (false) && true), false, true)))), false, false), false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true, false, true))))), false, false, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))))), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true, false, true))))), false, false, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))))), false), false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(false, (false) || false), false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(false, (false) || false), false), false))))) || false)), false || ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))), _GLF_IDENTITY(false, (false) || false), false), false)))))))))))) || (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bool(false)))))), ((_GLF_IDENTITY(! (bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bool(false))))))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.5))) < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))), _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec3(bvec2(bvec2(false, false)), true)))))), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), false), bvec2(bvec4(bvec2(bool(bvec2(false, false)), false), true, true))), true)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false, false)))), false, false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false)))), ((! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))))), false), true, true)))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(bool(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))))), false), true, true))))) && true))), false)))), ((! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bvec2(false, false)), false))))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))) || false))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))) || false))), true), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))), true && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))) && true), false)))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(bool(bvec2(false, false)), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec2(bool(bvec2(false, false)), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false))))))))))))))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), false, false, false)), ! (! (bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), false, false, false))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false)))), ! (! ((! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))), true && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))) && true), false)))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(bool(bvec2(false, false)), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec2(bool(bvec2(false, false)), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false))))))))))))))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), false, false, false)), ! (! (bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), false, false, false))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))), false))))))), ((! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))), false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)), false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))))))))))), bool(bvec2((! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false)))))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false))), false)), false)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), _GLF_IDENTITY(false, (false) && true)))))))))))) || false)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))))), true), false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), true), false)))))))))))))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true) || false)) && true), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true), false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true), false)))))))), true && ((! (! (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true), false)))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true), false)))))))), true && ((! (! (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true), false)))))))))), true, false)))))))))))));
  }
}
