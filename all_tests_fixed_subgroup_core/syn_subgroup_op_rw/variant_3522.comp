#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(inverse(mat2(mat3x4(7898.6706, -31.59, 3.6, 9.2, 9.2, 6525.3044, -6.4, -987.621, 288.503, 50.05, -7696.9431, 208.730)))))) * (mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), float(mat2(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 0.0)))), 0.0, 0.0, 0.0))))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, false))), true)))), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(179.232), _GLF_FUZZED(-4643.9778)), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(785.174) : 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(normalize(7.1)) : 1.0)))))[1]), bvec2(true, true)))))), injectionSwitch)).x < injectionSwitch.y)), false)))), true && (false)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, true)))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, true)))))))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, true))))))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, true)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, true, false)))) && true), true, false, true)))))))))), true, false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true)))) || false))
      {
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))) || false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5416.7749)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4726.7353)), bool(false)))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              continue;
             return;
            }
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))) && true) || false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, (_GLF_IDENTITY((injectionSwitch.x) + 0.0, max((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, max((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0))))) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))) > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1072.6271, -7.0, 218.449, 1133.1910).b)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), (! (_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), true && (bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), true, true)))))) || false), false || ((! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1072.6271, -7.0, 218.449, 1133.1910).b)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), (! (_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), true && (bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), true, true)))))) || false), false || ((! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, tan(0.0), exp(0.0), 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1072.6271, -7.0, 218.449, 1133.1910).b)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), (! (_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), true && (bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), true, true)))))) || false), false || ((! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, tan(0.0), exp(0.0), 1.0, 0.0)), float(mat4x3(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1072.6271, -7.0, 218.449, 1133.1910).b)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), (! (_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), true && (bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), true, true)))))) || false), false || ((! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, tan(0.0), exp(0.0), 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-8.6)), bool(false))), (_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1072.6271, -7.0, 218.449, 1133.1910).b)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), (! (_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), true && (bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false), bool(bvec3(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true)))))) || false), false || ((! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, tan(0.0), exp(0.0), 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1072.6271, -7.0, 218.449, 1133.1910).b)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), true && (bool(true)))), (! (_GLF_IDENTITY(bool(true), true && (bool(true))))) || false)), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), true && (bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(_GLF_IDENTITY(true, (true) && true)))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), true, true)))))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), false || ((! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, tan(0.0), exp(0.0), 1.0, 0.0)), float(mat4x3(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(1072.6271, -7.0, 218.449, _GLF_IDENTITY(1133.1910, min(1133.1910, _GLF_IDENTITY(1133.1910, min(_GLF_IDENTITY(1133.1910, clamp(1133.1910, 1133.1910, 1133.1910)), 1133.1910))))).b)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), true && (bool(true)))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), true && (bool(true))))) || false)), ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), bool(bvec3((_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(_GLF_IDENTITY(true, true && (true))))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(true), true && (bool(true))))), (bool((_GLF_IDENTITY(bool(true), true && (bool(true)))))) || false)), true, true)))))) || false), false || ((! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, tan(0.0), exp(0.0), 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-8.6)), bool(false)))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), 1.0))), _GLF_FUZZED(-1.9)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-8.5, 61.58, -4.8, -74.21) * mat2x4(-868.962, 20.55, 692.253, 9.6, 1626.4171, -40.36, -1844.2970, 5774.7136))) : injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(9.7, 788.204))) : injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1))))))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)))), true, false, false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(log(refract(0.6, -7868.7636, -43.15))), clamp(_GLF_FUZZED(log(refract(0.6, -7868.7636, -43.15))), _GLF_FUZZED(log(refract(0.6, -7868.7636, -43.15))), _GLF_FUZZED(log(refract(0.6, -7868.7636, -43.15))))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))) || false, ! (! ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))) || (false))) || false)))) || false))))), ! (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))) || false, false || ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))) || false))))))))))), bvec2(bvec2(bvec2(bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, true)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, true, false, true)), false)))), _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(false, true, false, true)), false), bvec2(bvec2(bvec2(bool(bvec4(false, true, false, true)), false)))), false)), false)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(_GLF_IDENTITY(-12349, int(_GLF_IDENTITY(int(-12349), ~ (~ (int(-12349))))))) : int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-333.217, -4777.9705, -494.812, 66.33, -71.28, -17.15, 8.0, 19.71)) : mat2x4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0))), 0.0, 0.0)))), (true ? float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-333.217, -4777.9705, -494.812, 66.33, -71.28, -17.15, 8.0, 19.71)) : mat2x4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0))), 0.0, 0.0)))) : _GLF_FUZZED(5.2)))))), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(92.75), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)))[0], _GLF_FUZZED(-654.741)), bvec2(true, false)))))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(92.75), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)))[0], _GLF_FUZZED(-654.741)), bvec2(true, false)))))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)), mix(vec2(_GLF_FUZZED(92.75), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)))[0], _GLF_FUZZED(-654.741)), bvec2(true, false)))))).x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), true))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec2(65.72, -8.0))))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, clamp((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, length(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch.x, 0.0, length(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     for(int _injected_loop_counter = _GLF_IDENTITY((-97973 & 0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(-97973, (-97973) + ((0 << _GLF_IDENTITY(int(0), int(0))) | 0)) & 0)), (~ ((-97973 & 0))) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) / 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (bool(bvec4((! (false)), false, false, true))) || false))), true))), bool(_GLF_IDENTITY(bool((bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (bool(bvec4((! (false)), false, false, true))) || false))), true)))), false || (bool((bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, false, true)), (bool(bvec4((! (false)), false, false, true))) || false))), true))))))))), ! (! (! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), ((bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false, true), bvec3(bvec4(bvec3(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false, true), false)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), false, false))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, false)), false || (bool(bvec4((false), false, true, false)))))))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, false, true, false)), (bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, false, true, false))) || false))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), false, false))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, false)), false || (bool(bvec4((false), false, true, false)))))))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, false, true, false)), (bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, false, true, false))) || false))))))), true))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), false, false))), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, false)), false || (bool(bvec4((false), false, true, false)))))))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, false, true, false)), (bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) && true, false, true, false))) || false))))))), true)))) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(cos(0.0), float(vec4(cos(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, sqrt(0.0)))), 1.0, 0.0))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(72.47)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(72.47)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))) && true)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, abs(0.0) + (1.0))))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, abs(0.0) + (1.0))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, abs(0.0) + (1.0))))).y)))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(false)), true && _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) && (_GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false)))))))) && true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true, false, false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-626.585), _GLF_FUZZED(-4.2)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false), bvec2(bvec2(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))))), true)), false)))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), false), false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x < injectionSwitch.y))))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! _GLF_IDENTITY(((true) || false), ! (! (((true) || false))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)), min(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)), true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))))).y)))), true)), false), bvec2(bvec2(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false)))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true)))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y))))))), true)), false), false, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x < injectionSwitch.y)))), (bool(bool(((injectionSwitch.x < injectionSwitch.y))))) && true))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))))))), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))).y)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) || false))))))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, (false) || false), ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-56.56) : injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-901.443, 771.825)), min(_GLF_FUZZED(vec2(-901.443, 771.825)), _GLF_FUZZED(vec2(-901.443, 771.825)))))).y)))), true)), false), bvec2(bvec2(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false)))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false))), false), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false), bvec2(bvec2(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true))))), bvec2(bvec4(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), false), false, false))))) || false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, false || ((true) || false)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y))), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y))), true, false, false)))), true)), false), bvec2(bvec2(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false)))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), true && ((true))) || false)))), (injectionSwitch.x < injectionSwitch.y)), true)), false), false, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! _GLF_IDENTITY((! ((true) || false)), bool(bool((! ((true) || false))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825))), ((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))) * mat2(1.0))).y)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false), bvec2(bvec2(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, bool(bool(false))), ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false)))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool((! (true)))))), (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), false), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! _GLF_IDENTITY((! ((true) || false)), ((! ((true) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))).y)))), true)), false), bvec2(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-901.443, 771.825)))))).y)))), true)), false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool((false) && true), true && (bool((false) && true))))))), bvec2(bvec4(bvec2(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false)))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), false), false, false))))) || false)) && true))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)); _injected_loop_counter ++)
    {
     if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-92067) : 1)) < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), subgroup_size)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.9)), vec2(_GLF_FUZZED(_GLF_IDENTITY(914.869, 0.0 + (_GLF_IDENTITY(914.869, (914.869) / 1.0)))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6228.4659) : injectionSwitch.x)) > injectionSwitch.y)), true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(2.9)), vec2(_GLF_FUZZED(914.869), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)) && true))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))], read, 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))), 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, abs(0.0), sin(0.0), 0.0, 0.0, cos(0.0))), max(float(mat3x2(1.0, abs(0.0), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), float(_GLF_IDENTITY(mat4x3(sin(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 1.0, 0.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat4x3(mat4(mat4x3(sin(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 1.0, 0.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8846.2134)), float(0.0), bool(true))), 0.0))))), min(sin(0.0), sin(0.0))), sin(0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(76.06)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))), (false ? _GLF_FUZZED(mod(27.01, 3.1)) : _GLF_IDENTITY(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))), min(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))), float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))))))), mix(float(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))))), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(3.6), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.6), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6159.7997)), (_GLF_IDENTITY(float(_GLF_FUZZED(-6159.7997)), (float(_GLF_FUZZED(-6159.7997))) + 0.0)) / 1.0), float(_GLF_FUZZED(_GLF_IDENTITY(3.6, (true ? _GLF_IDENTITY(3.6, float(mat2x3(_GLF_IDENTITY(3.6, mix(float(3.6), float(_GLF_FUZZED(-475.404)), bool(false))), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))) : _GLF_FUZZED(42.95))))), bool(true))), (_GLF_IDENTITY(false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), max(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(3.6, (3.6) / 1.0)))), (false ? _GLF_FUZZED(ceil(-0.0)) : false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), max(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(3.6, (3.6) / 1.0)))))))), _GLF_FUZZED(3.6)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-9498.7316, (-9498.7316) / 1.0))), float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-9498.7316), (_GLF_FUZZED(-9498.7316)) + 0.0)), (float(_GLF_IDENTITY(_GLF_FUZZED(-9498.7316), (_GLF_FUZZED(-9498.7316)) + 0.0))) - 0.0), 0.0, determinant(mat3(length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), exp(0.0), exp(0.0))), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0, 0.0))) + tan(0.0))), float(_GLF_FUZZED(-79.67)), bool(false))), 0.0, 1.0))), bool(false)))))), 1.0, 0.0, 0.0))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, abs(0.0), sin(0.0), 0.0, 0.0, cos(0.0))), max(float(mat3x2(1.0, abs(0.0), _GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), float(_GLF_IDENTITY(mat4x3(sin(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 1.0, 0.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat4x3(mat4(mat4x3(sin(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), 1.0, 0.0, abs(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8846.2134)), float(0.0), bool(true))), 0.0))))), min(sin(0.0), sin(0.0))), sin(0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(76.06)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))), (false ? _GLF_FUZZED(mod(27.01, 3.1)) : _GLF_IDENTITY(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))), min(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))), float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 3.6 : _GLF_FUZZED(-6.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(3.6), (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), (true ? _GLF_IDENTITY(_GLF_FUZZED(3.6), min(_GLF_FUZZED(3.6), _GLF_FUZZED(3.6))) : _GLF_FUZZED(5.1))))), _GLF_IDENTITY(_GLF_FUZZED(3.6), float(float(_GLF_FUZZED(3.6)))))))))))))), mix(float(float(mat3x2(1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + log(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))))), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (true ? cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(3.6), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.6), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6159.7997)), (_GLF_IDENTITY(float(_GLF_FUZZED(-6159.7997)), (float(_GLF_FUZZED(-6159.7997))) + 0.0)) / 1.0), float(_GLF_FUZZED(_GLF_IDENTITY(3.6, (true ? _GLF_IDENTITY(3.6, float(mat2x3(_GLF_IDENTITY(3.6, mix(float(3.6), float(_GLF_FUZZED(-475.404)), bool(false))), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))) : _GLF_FUZZED(42.95))))), bool(true))), (_GLF_IDENTITY(false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), max(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(3.6, (3.6) / 1.0)))), (false ? _GLF_FUZZED(ceil(-0.0)) : false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(_GLF_FUZZED(3.6), max(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(3.6, (3.6) / 1.0)))))))), _GLF_FUZZED(3.6)))))))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-9498.7316, (-9498.7316) / 1.0))), float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-9498.7316), (_GLF_FUZZED(-9498.7316)) + 0.0)), (float(_GLF_IDENTITY(_GLF_FUZZED(-9498.7316), (_GLF_FUZZED(-9498.7316)) + 0.0))) - 0.0), 0.0, determinant(mat3(length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), exp(0.0), exp(0.0))), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0, 0.0))) + tan(0.0))), float(_GLF_FUZZED(-79.67)), bool(false))), 0.0, 1.0))), bool(false)))))), 1.0, 0.0, 0.0))).y)) || false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(-0.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true)))) || false)))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             break;
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          break;
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], read, 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
       subgroupAll(true);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
}
