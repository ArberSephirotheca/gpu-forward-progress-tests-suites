#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 bool _f0;
 uint subgroup_local_id;
 vec3 _f1;
 mat3 _f2;
 uvec3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 mat2 _f1;
 ivec2 _f2;
 ivec3 _f3;
 bool _f4;
 bvec4 _f5;
 int _f6;
} ;

struct _GLF_struct_19 {
 bool _f0;
 vec4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 ivec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
 _GLF_struct_18 _f1;
 vec3 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
 _GLF_struct_21 _f5;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 bvec3 _f1;
 _GLF_struct_22 _f2;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 mat4x2 _f1;
 uint _f2;
 mat3x2 _f3;
 uvec3 _f4;
 ivec2 _f5;
 int _f6;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 mat4x3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 uint _f1;
 uvec2 _f2;
 float _f3;
 vec4 _f4;
 vec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 vec2 _f3;
 uvec2 _f4;
 mat3x4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_10 {
 uint _f0;
 ivec3 _f1;
 vec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_9 {
 bool _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 bvec2 _f4;
 bvec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 uint _f3;
 mat2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 ivec2 _f1;
 uvec4 _f2;
 uint _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 mat2 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 uint next_virtual_gid;
 uvec3 _f1;
 mat2x3 _f2;
 mat2x3 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 uint workgroup_id;
 vec3 _f1;
 uint _f2;
 int _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 uvec3 _f1;
 bvec3 _f2;
 bvec4 _f3;
 bvec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_3 {
 uint _f0;
 _GLF_struct_0 _f1;
 vec4 _f2;
 ivec3 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 ivec4 _f2;
 mat3 _f3;
 vec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(uvec4(1u), bvec3(true), _GLF_struct_22(uvec3(1u), _GLF_struct_18(mat4x3(1.0), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x3(1.0), ivec3(1), ivec4(1), uvec2(1u)), vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))))), _GLF_struct_19(true, vec4(1.0), uvec4(_GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_struct_20(ivec4(1), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), ivec2(1), ivec3(1), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (true)) || false)))))), bvec4(true), 1), _GLF_struct_21(true, gl_SubgroupInvocationID, vec3(1.0), mat3(1.0), uvec3(1u), mat3(1.0))));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(1u, _GLF_struct_0(ivec2(1), ivec3(1)), vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(ivec4(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1))), 1))), ~ (~ (_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(_GLF_IDENTITY(0, 0 | (0)), 0, 0))))), _GLF_struct_1(bvec2(true)), _GLF_struct_2(bvec4(true), uvec3(1u), bvec3(true), bvec4(true), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (true))))), true)), _GLF_struct_5(_GLF_struct_4(mat2x3(1.0), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, true))), ! (! (! (bool(bvec4(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true, true))))))))) ? 1.0 : _GLF_FUZZED(-9.0)))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)), 1), mat3(1.0)), ivec4(1), _GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0)))), vec4(1.0));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6._f1._f0.workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) * 1u, 1u * ((workgroup_base) * 1u))))), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) / 1u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base))) - 0u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (0u | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | 0u)))))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) * 1u) / 1u))) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : workgroup_base))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (0u | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | 0u)))))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) * 1u) / 1u))) : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), (uint((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) << 0u))))) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (0u) | (0u)))))), clamp((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u))))) - 0u, 1u * (((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec3((true), true, true))), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), (! (! ((true)))) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u), (_GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u)) ^ 0u))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) * 1u, max((workgroup_base) * 1u, _GLF_IDENTITY((workgroup_base) * 1u, (true ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((workgroup_base) * 1u)) : _GLF_FUZZED(subgroup_size)))))), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base)))))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))), (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | 0u)))) << 0u)) ^ 0u)), max(_GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u))))) - 0u, 1u * _GLF_IDENTITY((((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u), clamp((((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u), (((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u), _GLF_IDENTITY((((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u), max((((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u), (((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((true)), (((true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.0) : injectionSwitch.y)), injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968))) | (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (! (bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((true)), (((true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.0) : injectionSwitch.y)), injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968))) | (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (! (bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u)))))), (~ ((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((true)), (((true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.0) : injectionSwitch.y)), injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968))) | (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (! (bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u))))))) | (~ ((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! _GLF_IDENTITY(((true)), (((true))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.0) : injectionSwitch.y)), injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968))) | (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (! (bool(bvec3(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u)))))))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) * 1u, max((workgroup_base) * 1u, (workgroup_base) * 1u))), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base))), clamp(~ (workgroup_base), ~ (workgroup_base), ~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))), (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | 0u)))) << 0u)) ^ 0u)), 0u + (max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u))), (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u)))) | 0u))) - 0u, 1u * (((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), bool(bvec3(_GLF_IDENTITY(! (! ((true))), true && (! (! ((true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u), uint(_GLF_IDENTITY(uvec4(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u), 1u, 1u, 0u), (uvec4(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u), 1u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base))))))) * 1u, max((workgroup_base) * 1u, (workgroup_base) * 1u))), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base)))))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u & 88524u) | (0u)))))), (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | 0u)))) << 0u)) ^ 0u)))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u))))) - 0u, 1u * (((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) >> (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), false || (_GLF_IDENTITY((true), ! (! ((true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((true))), ((! ((true)))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size))))) ^ 0u) : _GLF_FUZZED(uint(32968)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) * 1u, max((workgroup_base) * 1u, (workgroup_base) * 1u))), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), ~ (workgroup_base), ~ (workgroup_base)))))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))), (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | 0u)))) << 0u)) ^ 0u)), (max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) << 0u) : _GLF_FUZZED(subgroup_id))))))) - 0u, 1u * (((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u), _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) << 0u))))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))), (bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))))) && true))), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (_GLF_IDENTITY(! ((true)), (! ((true))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * _GLF_IDENTITY(1u, (1u) | 0u), 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), (_GLF_IDENTITY((true), ! (! ((true))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), true, true), bvec3(bvec3(bvec3(bool(bvec3(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), true, true)))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), (1u ^ 1u) ^ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)))), workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))), (0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))), (0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) - 0u))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, cos(0.0), 0.0, 1.0, determinant(mat2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0)), float(mat4x3(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, cos(0.0), 0.0, 1.0, determinant(mat2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0)), float(mat3(float(mat2x3(injectionSwitch.x, cos(0.0), 0.0, 1.0, determinant(mat2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(uint(32968)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | (workgroup_base))) * 1u)), (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), true && (! (! ((true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))) ? _GLF_IDENTITY((workgroup_base) * 1u, 0u | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)), workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) * 1u)) : _GLF_FUZZED(workgroup_size)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY((workgroup_base) << 0u, (_GLF_IDENTITY((workgroup_base) << 0u, clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u))) + 0u))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) * 1u, max((workgroup_base) * 1u, (workgroup_base) * 1u))), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base)))))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))), (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) | 0u)))) << 0u)) ^ 0u))) << 0u)))) | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), ((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) * 1u), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) * 1u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), max(_GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))))) * 1u))), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) ^ 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) - 0u))), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) * 1u, min((workgroup_base) * 1u, _GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) | 0u)))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) ^ 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u), max(_GLF_IDENTITY(clamp((workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, 0u ^ (_GLF_IDENTITY((workgroup_base) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) | 0u))))), (workgroup_base) << 0u), (true ? clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u) : _GLF_FUZZED(num_workgroup))), clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u)))))), 0u ^ (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp(_GLF_IDENTITY((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (workgroup_base) << 0u, (workgroup_base) << 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u), max(_GLF_IDENTITY(clamp((workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, 0u ^ (_GLF_IDENTITY((workgroup_base) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) | 0u))))), (workgroup_base) << 0u), (true ? clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u) : _GLF_FUZZED(num_workgroup))), clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u)))))), 0u ^ (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp(_GLF_IDENTITY((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (workgroup_base) << 0u, (workgroup_base) << 0u)))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u), max(_GLF_IDENTITY(clamp((workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, 0u ^ (_GLF_IDENTITY((workgroup_base) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) | 0u))))), (workgroup_base) << 0u), (true ? clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u) : _GLF_FUZZED(num_workgroup))), clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u)))))), 0u ^ (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp(_GLF_IDENTITY((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (workgroup_base) << 0u, (workgroup_base) << 0u))))))) >> 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u), max(_GLF_IDENTITY(clamp((workgroup_base) << 0u, _GLF_IDENTITY((workgroup_base) << 0u, 0u ^ (_GLF_IDENTITY((workgroup_base) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((workgroup_base) << 0u, ((workgroup_base) << 0u) | 0u))))), (workgroup_base) << 0u), (true ? clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u) : _GLF_FUZZED(num_workgroup))), clamp((workgroup_base) << 0u, (workgroup_base) << 0u, (workgroup_base) << 0u)))))), 0u ^ (clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, clamp(_GLF_IDENTITY((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((workgroup_base) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (workgroup_base) << 0u, (workgroup_base) << 0u)))))))))))))) >> 0u) + subgroup_id * subgroup_size + _GLF_struct_replacement_23._f2._f5.subgroup_local_id;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(mat2x3(1.0), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1, (_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1) | _GLF_IDENTITY((_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1)) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), min((_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1), _GLF_IDENTITY((_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1), ((_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1)) ^ 0u))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1) % subgroup_size)) - 0u), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), mat2x3(1.0), mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_struct_12(_GLF_struct_7(mat3x2(1.0), ivec2(1), uvec4(1u), 1u, mat3x2(1.0)), _GLF_struct_8(bvec2(true), _GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> _GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), (~ (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))), ivec2(0, 0) | ((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))), ivec2(0, 0) | ((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))), ivec2(0, 0) | ((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))))), ivec2(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))), ivec2(0, 0) | ((_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))))))))))) >> ivec2(0, 0)))) / ivec2(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, _GLF_IDENTITY(0, ~ (~ (0)))))), clamp(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), max(_GLF_IDENTITY(ivec2(1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), 0))), ivec2(1))), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ _GLF_IDENTITY((~ (ivec2(1))), min((~ (ivec2(1))), (~ (ivec2(1))))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), clamp(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), clamp(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1))), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))))))) + ivec2(0, 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), clamp(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, _GLF_IDENTITY(0, 0 | (0))))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0)))))), (ivec2(0, 0) & ivec2(53059, -27461)) ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), clamp(~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))), ~ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1))))) >> ivec2(0, 0))))))))))))), _GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))))), mat2x4(1.0), 1u, mat2(1.0), mat4(1.0)), mat2(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.9)), float(1.0), bool(true))))))), _GLF_struct_9(true, mat3x2(1.0), mat2x3(1.0), mat3x4(1.0), bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (_GLF_IDENTITY(true, true && (true))))))))), bvec3(true), mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((372.599 + -975.708))), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))))), _GLF_struct_10(1u, ivec3(1), vec3(1.0), bvec3(true)), _GLF_struct_11(uvec3(1u), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3x2(1.0), vec2(1.0), uvec2(1u), mat3x4(1.0), bvec2(true)), uvec2(1u)), _GLF_struct_16(_GLF_struct_13(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(ivec2(-79418, 49976)) : ivec2(1))), 1u, uvec2(1u), 1.0, vec4(1.0), vec4(1.0), ivec4(1)), _GLF_struct_14(mat2x4(1.0), mat4x3(1.0), vec3(1.0)), _GLF_struct_15(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / exp(0.0))), max(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), 0.0, 1.0, 1.0))), vec3(1.0))), mat4x2(1.0), 1u, mat3x2(1.0), uvec3(1u), ivec2(1), 1)));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))));
 atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_struct_replacement_23._f2._f5.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
