#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false)), bool(bool((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false))))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (true))))))) && true, ((bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (true))))))) && true) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), (bool(! (! (false)))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0), _GLF_IDENTITY(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))), mat2x3(mat2x3(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(1.4, -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), max(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0), _GLF_IDENTITY(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))), mat2x3(mat2x3(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(1.4, -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0), _GLF_IDENTITY(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))), mat2x3(mat2x3(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(1.4, -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), max(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0), _GLF_IDENTITY(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))), mat2x3(mat2x3(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(1.4, -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), max(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0), _GLF_IDENTITY(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))), mat2x3(mat2x3(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(1.4, -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0), _GLF_IDENTITY(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))), mat2x3(mat2x3(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(1.4, -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0), _GLF_IDENTITY(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))), mat2x3(mat2x3(mat2x3(mat3x4(mat2x3((injectionSwitch)[0], round(length(normalize(1.0))), 0.0, cos(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))), (injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(1.4, -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).y)))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))) && _GLF_IDENTITY(true, ! (! (true))))))))), false || (true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(_GLF_IDENTITY(1.4, max(1.4, 1.4)), -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(_GLF_IDENTITY(1.4, max(1.4, 1.4)), -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(vec2(_GLF_IDENTITY(1.4, max(1.4, 1.4)), -60.59).y)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.9), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3839.3290), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(3839.3290), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0, abs(1.0), exp(0.0)), mat3(1.0) * (mat4x3(_GLF_FUZZED(3839.3290), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0, abs(1.0), exp(0.0))))), max(float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(3839.3290), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0, abs(1.0), exp(0.0)), mat3(1.0) * (mat4x3(_GLF_FUZZED(3839.3290), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0, abs(1.0), exp(0.0))))), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(3839.3290), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0, abs(1.0), exp(0.0)), mat3(1.0) * (mat4x3(_GLF_FUZZED(3839.3290), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0, abs(1.0), exp(0.0)))))))), (true ? _GLF_FUZZED(3839.3290) : _GLF_FUZZED(-47.67))), (_GLF_IDENTITY(_GLF_FUZZED(3839.3290), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(3839.3290) : _GLF_FUZZED(-47.67)))) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.9, mix(float(_GLF_IDENTITY(-2.9, (-2.9) - 0.0)), float(_GLF_FUZZED(-68.78)), bool(false)))), (_GLF_FUZZED(-2.9)) + 0.0)), bool(true))) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), 0.0 + (1.0 * (injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(153125u, 12625u, 141167u, 20537u)) : uvec4(gl_WorkGroupID.x, 1u, 0u, 1u))), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uint(0u))))) ^ (0u))) | 0u), 1u), (uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)) | (uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)))))), clamp(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(153125u, _GLF_IDENTITY(12625u, (12625u) << 0u), 141167u, 20537u)) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)) | (gl_WorkGroupID.x)), min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) - 0u, min(_GLF_IDENTITY((gl_WorkGroupID.x) - 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((gl_WorkGroupID.x) - 0u)), (gl_WorkGroupID.x) - 0u))))), 1u, 0u, 1u))), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), (uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)) | (_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 1u), max(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), min(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)))))))))), uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, 1u, 0u, 1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) ? _GLF_FUZZED(uvec4(153125u, 12625u, 141167u, 20537u)) : uvec4(gl_WorkGroupID.x, 1u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), (uvec4(gl_WorkGroupID.x, 1u, 0u, _GLF_IDENTITY(1u, ~ (~ (1u))))) | (uvec4(gl_WorkGroupID.x, 1u, 0u, 1u))), (_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec2(1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY(1u, 1u * (1u)))), 0u, 1u)) | (uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)))) | (_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), (uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)) | (uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)))))))), uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(153125u, 12625u, 141167u, 20537u)) : uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)), min((false ? _GLF_FUZZED(uvec4(153125u, 12625u, 141167u, 20537u)) : uvec4(gl_WorkGroupID.x, 1u, 0u, 1u)), (false ? _GLF_FUZZED(uvec4(153125u, 12625u, 141167u, 20537u)) : uvec4(gl_WorkGroupID.x, 1u, 0u, 1u))))), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 1u, 0u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), max(~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), min(_GLF_IDENTITY(~ (1u), max(~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), _GLF_IDENTITY(~ (1u), max(~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))))))))) | (uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), 1u, 0u, 1u)))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), clamp(subgroup_id, subgroup_id, subgroup_id))) + 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), clamp(subgroup_id, subgroup_id, subgroup_id))) + 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), clamp(subgroup_id, subgroup_id, subgroup_id))) + 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))) | (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), max(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), max(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), ~ (~ ((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u))))), (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), min(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))) | 0u), _GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u)), uint(uvec2(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u), min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0u))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), max(_GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u)))), (~ (0u))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), (34009u & 0u) | (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), (true ? subgroup_size : _GLF_FUZZED(num_workgroup)) - 0u), true ? subgroup_size : _GLF_FUZZED(num_workgroup))))))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), (34009u & 0u) | (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), (true ? subgroup_size : _GLF_FUZZED(num_workgroup)) - 0u), true ? subgroup_size : _GLF_FUZZED(num_workgroup))))))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), (34009u & 0u) | (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(num_workgroup), (true ? subgroup_size : _GLF_FUZZED(num_workgroup)) - 0u), true ? subgroup_size : _GLF_FUZZED(num_workgroup))))))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), 0u, 0u, 0u), (uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) << uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (uint(uvec4(0u, 1u, 1u, 0u))) | (uint(uvec4(0u, 1u, 1u, 0u))))))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))) | (~ (0u))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u), ~ (~ (uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), min(uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(num_workgroup))), subgroup_size))), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u))))))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u | (1u)))))))))), max((_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uvec4(~ (0u), 0u, 0u, 0u)), (uint(uvec4(~ (0u), 0u, 0u, 0u))) / 1u)), ~ (0u), ~ (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) / 1u), (~ (subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_size), 1u)), min(uint(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (~ (subgroup_size))), 1u)), uint(uvec2(~ (subgroup_size), 1u))))), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), 0u + (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) * 1u)))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) << 0u)))) << 0u)) ^ 0u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) << 0u)))) << 0u)) ^ 0u)), (0u ^ 0u) | ((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) << 0u)))) << 0u)) ^ 0u)))))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * (subgroup_local_id), clamp(_GLF_IDENTITY(1u, (1u) | 0u) * (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), 1u * (subgroup_local_id), 1u * (subgroup_local_id)))) + 1, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), 4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4))))), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)), 0 ^ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)), 0 ^ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0))))) ^ (0 | 0))) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) | ((int(4)))) / 1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 1)), int(ivec4(int(ivec2(4, 1)), 0, 1, 1))))), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(2, 0, (ivec4(57989, -35060, 11324, 58520).w & 0), (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0)))), max(ivec4(2, 0, (ivec4(57989, -35060, 11324, 58520).w & 0), (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0)))), ivec4(2, 0, (ivec4(57989, -35060, 11324, 58520).w & 0), (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))))))))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) ^ 0) : _GLF_FUZZED(74171)))))))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)), 0 ^ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0))))) * int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), ((int(4))) << 0)) - 0) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)), 0 ^ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) / 1, ((int(4)) / 1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (4))), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2), int(2))))))) >> 0))))) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))) / 1))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec3(2, 0, (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))))), int(2))))) >> 0)), 0 ^ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0))))) * int(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0)) - 0), (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), _GLF_IDENTITY((_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, 0 + (2))))))) >> _GLF_IDENTITY(int(2), int(2))), ((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27651) : 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, 0 + (2))))))) >> _GLF_IDENTITY(int(2), int(2))), ((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27651) : 0))))), clamp((_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, 0 + (2))))))) >> _GLF_IDENTITY(int(2), int(2))), ((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27651) : 0))))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, 0 + (2))))))) >> _GLF_IDENTITY(int(2), int(2))), ((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27651) : 0))))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, 0 + (2))))))) >> _GLF_IDENTITY(int(2), int(2))), ((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27651) : 0)))))))) | ((_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, 0 + (2))))))) >> _GLF_IDENTITY(int(2), int(2))), ((int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-27651) : 0))))))) >> 0))), clamp((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), 1 * (int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), min((int(4)), _GLF_IDENTITY((int(4)), ((int(4))) + 0))) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), 1 * (int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), min((int(4)), _GLF_IDENTITY((int(4)), ((int(4))) + 0))) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0))) | 0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))), int(ivec4((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))), 0, 1, 0))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / 1), 0 ^ (_GLF_IDENTITY(int(4), (int(4)) / 1))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(int(int(4)))), (_GLF_IDENTITY(int(4), (int(4)) * ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))))) >> 0))))) : _GLF_FUZZED(-99429))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true))))))), false || (_GLF_IDENTITY((true), bool(bool((true)))))) && true) ? 4 : _GLF_FUZZED(-71631))), 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(int(64), 0 | (_GLF_IDENTITY(int(64), (int(64)) / 1)))), min(int(_GLF_IDENTITY(int(64), 0 | (_GLF_IDENTITY(int(64), (int(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) >> (0 ^ 0)))) / _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))))), int(_GLF_IDENTITY(int(64), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(64), (int(64)) / 1)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(int(64), (int(64)) / 1)), int(int((_GLF_IDENTITY(int(64), (int(64)) / 1))))) : _GLF_FUZZED(-17315)))))))), 0);
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), max(64, 64))) / 1)))), 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(read))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) | (4)), _GLF_IDENTITY(4, int(ivec2(4, 1))))), _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-88997))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(int(ivec4(4, 1, 0, 0)), max(int(ivec4(4, 1, 0, 0)), int(ivec4(4, 1, 0, 0))))), (0 & 19196))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(int(ivec4(4, 1, 0, 0)), max(int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec2(4, 1))))), 1, 0, 0)), int(ivec4(4, 1, 0, 0))))), (0 & 19196))), max(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), min(4, 4)), _GLF_IDENTITY(int(ivec4(4, 1, 0, 0)), max(int(ivec4(4, 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec4(21672, -98714, -32650, 20688)[2]) : _GLF_IDENTITY(0, (0) / 1))), 0)), int(ivec4(4, 1, 0, 0))))), (0 & 19196))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(int(ivec4(4, 1, 0, 0)), max(int(ivec4(4, 1, 0, 0)), int(ivec4(4, 1, 0, 0))))), (0 & 19196))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(int(ivec4(4, 1, 0, 0)), max(int(ivec4(4, 1, 0, 0)), int(ivec4(4, 1, 0, 0))))), (0 & 19196)))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, _GLF_IDENTITY(true, false || (true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         atomicStore(buf[virtual_gid], read, 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))))), false)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) + vec2(0.0, 0.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) * sqrt(abs(1.0))))), false, _GLF_IDENTITY(false, (false) && true), true))))), false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), true && (_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), ! (! (true && (! (_GLF_DEAD(false)))))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true))))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(308.534)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(308.534)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(308.534)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(308.534)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-7.1)), float(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(308.534)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.6) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
