#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)) && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(10.89, 134.595)) : vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true && ((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(10.89, 134.595)) : vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), false || (! (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))).x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bool(false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), false, true)))), false)))))))) && (_GLF_DEAD(false)))))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), min(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(injectionSwitch.x, 1.0, 1.0))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(float(_GLF_FUZZED(-53.43)), clamp(float(_GLF_FUZZED(-53.43)), float(_GLF_FUZZED(-53.43)), _GLF_IDENTITY(float(_GLF_FUZZED(-53.43)), (true ? float(_GLF_FUZZED(-53.43)) : _GLF_FUZZED(753.428))))), bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(float(_GLF_FUZZED(-53.43)), clamp(float(_GLF_FUZZED(-53.43)), float(_GLF_FUZZED(-53.43)), _GLF_IDENTITY(float(_GLF_FUZZED(-53.43)), (true ? float(_GLF_FUZZED(-53.43)) : _GLF_FUZZED(753.428))))), bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true))))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(4.8))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(4.8))) > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(4.8))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(4.8))) > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y)))))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))) || false))) && true)))))), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, tan(0.0), 0.0, 1.0))))).x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))))), true, true))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true))))) || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), min(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (vec3(injectionSwitch.x, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(injectionSwitch.x, 1.0, 1.0))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-53.43)), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-53.43)), bool(false))), false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-53.43)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-53.43)), bool(false))))) && true)), true, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(determinant(mat2(0.7, -1.3, -1.6, 472.212))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(determinant(mat2(0.7, -1.3, -1.6, 472.212))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), false || (bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(abs(0.0), tan(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(abs(0.0), tan(0.0), 0.0, 1.0))), sqrt(1.0), 1.0))) > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))))), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))))), true, true))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(determinant(mat2(0.7, -1.3, -1.6, 472.212))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(determinant(mat2(0.7, -1.3, -1.6, 472.212))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, exp(0.0)), (vec2(injectionSwitch.x, exp(0.0))) * mat2(1.0))), (float(_GLF_IDENTITY(vec2(injectionSwitch.x, exp(0.0)), (vec2(injectionSwitch.x, exp(0.0))) * mat2(1.0)))) - 0.0)) < injectionSwitch.y)))))))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, exp(0.0)), (vec2(injectionSwitch.x, exp(0.0))) * mat2(1.0))), (float(_GLF_IDENTITY(vec2(injectionSwitch.x, exp(0.0)), (vec2(injectionSwitch.x, exp(0.0))) * mat2(1.0)))) - 0.0)) < injectionSwitch.y)))))))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))) || false) && true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true))))), (injectionSwitch.x < injectionSwitch.y))), false, true)))), false || (bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(abs(0.0), tan(0.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(abs(0.0), tan(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), sqrt(1.0), 1.0))) > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))) || false))) && true)))))), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))))))), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) || false)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(uvec3(uvec4(80468u, 99237u, 88603u, 61636u))), (_GLF_FUZZED(uvec3(uvec4(80468u, 99237u, 88603u, 61636u)))) | uvec3(0u, 0u, 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) << 0u);
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id, workgroup_id))))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), 1u * _GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec4(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u | 0u)), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id), uint(uint(clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u | 0u)), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) ^ 0)), (0 | 0) + (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) ^ 0)))))), clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)))), 0u, 1u, 0u)))) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) << 0))) >> _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)), (true ? int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) : _GLF_FUZZED(-14096)))) >> 0)), 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) - 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(read) : next_virtual_gid), 0u | (_GLF_IDENTITY((false ? _GLF_FUZZED(read) : next_virtual_gid), ~ (~ ((false ? _GLF_FUZZED(read) : next_virtual_gid)))))))], uint(1), 4, 64, 4);
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (1.0 * (injectionSwitch.x)) - _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(906.875, -0.5, -3.7).g)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(mix(float(_GLF_FUZZED(vec3(906.875, -0.5, -3.7).g)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(906.875, -0.5, -3.7).g)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(906.875, -0.5, -3.7).g)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(vec3(906.875, -0.5, -3.7).g)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(425.369)), bool(false))), mix(float(_GLF_FUZZED(vec3(906.875, -0.5, -3.7).g)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4565.5752)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)) * 1u))))))) + 0u, ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)) * 1u))))))) + 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)) * 1u))))))) + 0u, max((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)) * 1u))))))) + 0u, (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), (_GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) >> 0u)) * 1u))))))) + 0u))))), _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), 1u * (1u * (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)) | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u, (1u) - 0u) * (subgroup_size)) | (1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), 1u * (subgroup_size), _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u)))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), 1u * (subgroup_size), _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), 1u * (subgroup_size), _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u))))) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))), 0u, (1u ^ 1u))), min(uint(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))), 0u, (1u ^ 1u))), uint(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))), 0u, (1u ^ 1u))))))), (1u * (subgroup_size)) | (1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ ((subgroup_size)), ~ ((subgroup_size)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), 0u ^ (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))))) | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uvec2(150409u, 130992u)[1]))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) / uvec3(1u, 1u, 1u))), min(uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) / uvec3(1u, 1u, 1u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) / uvec3(1u, 1u, 1u)))))) * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (subgroup_size)), 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u * (subgroup_size))))))) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (subgroup_size)), 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u * (subgroup_size))))))) | 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1u * (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (subgroup_size)), 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u * (subgroup_size))))))) | 0u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (subgroup_size)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u) * (subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (false ? _GLF_FUZZED(uint(-85830)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(read) : subgroup_size)), 1u * (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))) | 0u))))))) + 0u) | 0u))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read)), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(false, (false) || false));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) << _GLF_IDENTITY(0u, 0u ^ (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), 0u | ((_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))) : _GLF_FUZZED((workgroup_size * subgroup_size)))) | (virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), (true ? _GLF_IDENTITY(~ (~ (virtual_gid)), (true ? _GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid)))) : _GLF_FUZZED((mat2x4(-3265.0943, -3448.9022, -2.2, 5.6, 11.15, 8704.8793, -9.8, -6.5) , num_workgroup)))) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid))))), ~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), max(max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))), virtual_gid)), ~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u))), _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), min(_GLF_IDENTITY(~ (virtual_gid), max(~ (virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))), min(_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) << (0u | 0u)), ~ (virtual_gid))))), ~ (virtual_gid))))), min(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) | (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), max(max(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))))))), virtual_gid)), ~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))))))))) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(17035) : _GLF_IDENTITY(4, int(ivec2(4, 1))))), (_GLF_IDENTITY(4, (4) | (4))) ^ 0), (4) / 1), _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, true, true)), (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, true, true))) && true)) || _GLF_IDENTITY(false, (false) && true))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
