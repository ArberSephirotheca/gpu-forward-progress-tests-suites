#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec3(bvec3(! (false), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false)))), false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))), false))), false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec3(bvec3(! (false), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false)))), false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))), false))), false))), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec3(bvec3(! (false), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false)))), false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))), false))), false))), true)))), true, false, true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec3(bvec3(! (false), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false)))), false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))), false))), false))), true)))), true, false, true))))))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))), false, true), false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (false), false || (! (false)))))), (! ((! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true))) || false)), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (false), false || (! (false)))))), (! ((! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true))) || false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true), bvec3(bvec4(bvec3(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec3(bool(bool(true)), false, true))))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (false))) || (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), false, true))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), false, true))))), false)), true))))))), false))), true))))))), true && (! ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)), (bool(bvec2(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))) && true)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)), (bool(bvec2(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))) && true)))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)), (bool(bvec2(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))) && true)))), true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))), bool(bvec4((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))), true, false, true)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))), bool(bvec4((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))), true, false, true))))), (! ((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))), bool(bvec4((_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || false))), true, false, true)))))) || false)))), false, false)))) && true), false, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(bvec3(! _GLF_IDENTITY((false), true && ((false))), false, true), false))), false))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) && true), (_GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), false, true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), false, true, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), false, true, false)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), ! (! (bool(_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), false, true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((bool(bool(true))) && true, false || ((bool(bool(true))) && true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), false, true, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), (bool(bool(true))) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))) && true))) || false)), false, true, false)))))))))))))))))))))))))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), min(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0])), _GLF_FUZZED(8.8)), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0])), _GLF_FUZZED(8.8)), (vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(8.8))) * mat2(1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(8.8)), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(8.8), max(_GLF_FUZZED(8.8), _GLF_IDENTITY(_GLF_FUZZED(8.8), min(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8)))))))))), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec4(-5387.0852, -9.9, 72.88, -282.199))))), 0.0)), 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5059.8404)), vec2(_GLF_FUZZED(5.8), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.8), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(8.8, mix(float(_GLF_FUZZED(-8.4)), float(8.8), bool(true))), (_GLF_IDENTITY(8.8, (8.8) / 1.0)) / 1.0))) - 0.0)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, log(1.0)), transpose(transpose(mat4x2(0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, log(1.0))))))), 1.0, determinant(_GLF_IDENTITY(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat3(8.2, -1304.5224, -0.7, -5005.8586, -0.7, 2166.6174, -5.2, -915.008, -6.6), (_GLF_IDENTITY(mat3(8.2, -1304.5224, -0.7, -5005.8586, -0.7, 2166.6174, -5.2, -915.008, -6.6), mat3(mat4x3(mat3(8.2, -1304.5224, -0.7, -5005.8586, -0.7, 2166.6174, -5.2, -915.008, -6.6))))) * mat3(1.0)))))), 1.0, 1.0) : _GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, _GLF_IDENTITY(1951.4280, mix(float(_GLF_IDENTITY(1951.4280, clamp(1951.4280, 1951.4280, 1951.4280))), float(_GLF_FUZZED(85.53)), bool(false))), 337.767, 1.0, -132.135, -57.23)))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.8), (_GLF_FUZZED(_GLF_IDENTITY(8.8, (_GLF_IDENTITY(8.8, _GLF_IDENTITY((8.8), min(_GLF_IDENTITY((8.8), round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY((8.8), 0.0 + ((8.8))))), (8.8))) / 1.0)) / 1.0))) - 0.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), vec2(mat3x2(vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), 1.0, 1.0, 0.0, 0.0))), bvec2(false, true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-596.978))), 1.0, 0.0, 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec2(1, 1)))))]), bvec2(false, true))), 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0)), 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.8), (_GLF_FUZZED(_GLF_IDENTITY(8.8, (_GLF_IDENTITY(8.8, (8.8) / 1.0)) / 1.0))) - 0.0)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0, 0.0)), 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(abs(1.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23)), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat3(69.55, -11.13, _GLF_IDENTITY(-49.63, clamp(-49.63, -49.63, -49.63)), 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23)), (false ? _GLF_FUZZED(mat3(4780.7496, 1786.6844, _GLF_IDENTITY(2297.8104, (2297.8104) * 1.0), -490.401, 4434.8564, -4.5, -4957.6130, 54.94, 2.1)) : _GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23))))))))))).y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0])), _GLF_FUZZED(8.8)), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0])), _GLF_FUZZED(8.8)), (vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(8.8))) * mat2(1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(8.8)), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(8.8), max(_GLF_FUZZED(8.8), _GLF_IDENTITY(_GLF_FUZZED(8.8), min(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8)))))))))), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec4(-5387.0852, -9.9, 72.88, -282.199))))), 0.0)), 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5059.8404)), vec2(_GLF_FUZZED(5.8), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.8), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(8.8, mix(float(_GLF_FUZZED(-8.4)), float(8.8), bool(true))), (_GLF_IDENTITY(8.8, (8.8) / 1.0)) / 1.0))) - 0.0)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, log(1.0)), transpose(transpose(mat4x2(0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, log(1.0))))))), 1.0, determinant(_GLF_IDENTITY(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat3(8.2, -1304.5224, -0.7, -5005.8586, -0.7, 2166.6174, -5.2, -915.008, -6.6), (_GLF_IDENTITY(mat3(8.2, -1304.5224, -0.7, -5005.8586, -0.7, 2166.6174, -5.2, -915.008, -6.6), mat3(mat4x3(mat3(8.2, -1304.5224, -0.7, -5005.8586, -0.7, 2166.6174, -5.2, -915.008, -6.6))))) * mat3(1.0)))))), 1.0, 1.0) : _GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, _GLF_IDENTITY(1951.4280, mix(float(_GLF_IDENTITY(1951.4280, clamp(1951.4280, 1951.4280, 1951.4280))), float(_GLF_FUZZED(85.53)), bool(false))), 337.767, 1.0, -132.135, -57.23)))))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.8), (_GLF_FUZZED(_GLF_IDENTITY(8.8, (_GLF_IDENTITY(8.8, _GLF_IDENTITY((8.8), min(_GLF_IDENTITY((8.8), round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY((8.8), 0.0 + ((8.8))))), (8.8))) / 1.0)) / 1.0))) - 0.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), vec2(mat3x2(vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), 1.0, 1.0, 0.0, 0.0))), bvec2(false, true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-596.978))), 1.0, 0.0, 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0) : _GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec2(1, 1)))))]), bvec2(false, true))), 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0)), 1.0, 1.0), (true ? mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.8), (_GLF_FUZZED(_GLF_IDENTITY(8.8, (_GLF_IDENTITY(8.8, (8.8) / 1.0)) / 1.0))) - 0.0)), vec2(_GLF_FUZZED(-42.68), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0)), 0.0, 0.0)), 1.0, determinant(mat3(1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(abs(1.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), abs(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23)), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat3(69.55, -11.13, _GLF_IDENTITY(-49.63, clamp(-49.63, -49.63, -49.63)), 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23)), (false ? _GLF_FUZZED(mat3(4780.7496, 1786.6844, _GLF_IDENTITY(2297.8104, (2297.8104) * 1.0), -490.401, 4434.8564, -4.5, -4957.6130, 54.94, 2.1)) : _GLF_FUZZED(mat3(69.55, -11.13, -49.63, 1.3, 1951.4280, 337.767, 1.0, -132.135, -57.23))))))))))).y))))))))
    {
    }
   else
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))) && true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                break;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (1u ^ 1u) + (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false))), true)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))), max((_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))))) / 1u)), (~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))))) * 1u));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 1u))), subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 1u)), 0u + (uint(uvec2(subgroup_id, 1u))))))) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)), 0u ^ (uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u)))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)))))) % subgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))), _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) | 0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u ^ (uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)))))))), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))) + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(uvec4(69416u, 100172u, 194040u, 100119u)[3]) : subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (uint(uvec3(subgroup_local_id + 1, 0u, 0u)))), (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))) | 0u)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))) : _GLF_FUZZED(workgroup_base)))))) % subgroup_size), min((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))), clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)), 0u ^ (uint(uvec2(uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), 0u, 0u)), 0u)))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (true ? 0u | (0u) : _GLF_FUZZED(atomicAnd(subgroup_size, (workgroup_base << num_workgroup)))))), 0u)), 0u | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)))))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))), max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)), 0u ^ (uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)))))) % subgroup_size), (false ? _GLF_FUZZED(137666u) : (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))), max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0), _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)), 0u ^ (uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (uint(uvec3(subgroup_local_id + 1, 0u, 0u))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)))))) % subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))), min(0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))), 0u | (uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), 0u, 0u))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)), 0u ^ (uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u))))))), (true ? _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u)), 0u ^ (uint(uvec2(uint(uvec3(subgroup_local_id + 1, 0u, 0u)), 0u))))))) : _GLF_FUZZED(subgroup_id)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u | (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u) + 1, 0u, 0u))))), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED((workgroup_size << virtual_gid)))), subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(47.31, -1471.3836), vec2(mat3x2(_GLF_IDENTITY(vec2(47.31, -1471.3836), mix(vec2((vec2(47.31, -1471.3836))[0], (vec2(47.31, -1471.3836))[1]), vec2(_GLF_FUZZED(-68.73), _GLF_FUZZED(-71.09)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(1.0), 1.0, 0.0)))))))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(76598u))), bool(false))))), 0.0, abs(0.0), 1.0)))).x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false, true))))), (! ((! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(896.966)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(abs(2.6)) : injectionSwitch.y))) / 1.0)))), ! (! ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))), true))))))))))
      break;
     do
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (147646u & 0u) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u, 0u, 0u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)) | (~ (subgroup_size)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))) | ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)))), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)))) | (~ (subgroup_size)))))), false || (bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u))) | ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)))), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)))) | (~ (subgroup_size)))))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)) | (~ (subgroup_size))))))))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)) | (~ (subgroup_size)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)) | (~ (subgroup_size))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)) | (~ (subgroup_size))))))))), (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u)) | (~ (subgroup_size)))))))))) && true)) || false))), true, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), max(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), max(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), min(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), max(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), max(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), max(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))))) < subgroup_size))), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), (bool(subgroup_local_id + 1 < subgroup_size)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size))), true, true))), bool(bool(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(6.4, (false ? _GLF_FUZZED(-76.40) : _GLF_IDENTITY(6.4, mix(float(_GLF_FUZZED(-81.84)), float(6.4), bool(true))))))), vec2(_GLF_FUZZED((- -7.0)), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)))), bool(bool(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false, true, true))), bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), false, true, true))), bool(bool(subgroup_local_id + 1 < subgroup_size)))) || false), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) < _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), bool(bvec2(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), ~ (~ (_GLF_IDENTITY(1u * (subgroup_size), min(1u * (subgroup_size), 1u * (subgroup_size))))))) >> 0u)))) && true), (_GLF_IDENTITY(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), bool(bvec2(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))))
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) ^ 0u)) | 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.9, -9.0)))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, 0 + (1 & 1))) * 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (1 ^ 1) | (_injected_loop_counter --)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))))))); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-954.550) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(10.80), _GLF_FUZZED(42.30)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
        return;
       continue;
      }
     subgroupAll(false);
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), _GLF_IDENTITY(float(0.0), float(mat2(_GLF_IDENTITY(float(0.0), mix(float(float(0.0)), float(_GLF_FUZZED(8.5)), bool(false))), 1.0, 1.0, 1.0))), bool(true))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-150.161)), float(injectionSwitch.x), bool(true))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(virtual_gid, 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (1u ^ _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, (1u) | 0u), 1u))) ^ (uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), uint(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 1u)))))), max(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0))))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))))))), ~ (~ (uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec4(virtual_gid, _GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(25.73)), bool(false))), injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.7)), float(0.0), bool(true))), injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), (1u ^ _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | 0u), 1u))) ^ (uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), max(uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0))))), uvec4(virtual_gid, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))))), clamp(uint(virtual_gid), uint(virtual_gid), uint(virtual_gid))))), virtual_gid, virtual_gid))], _GLF_IDENTITY(read, _GLF_IDENTITY(uint(uint(read)), min(uint(uint(read)), uint(uint(read))))), _GLF_IDENTITY(4, (4) >> (0 << _GLF_IDENTITY(int(4), int(4)))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-1.8, -3024.5394).t)), bool(false))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(0.1, -638.812, -524.260, -7.9).s) : injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(0.1, -638.812, -524.260, -7.9).s) : injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(0.1, -638.812, -524.260, -7.9).s) : injectionSwitch.x)) > injectionSwitch.y), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(0.1, -638.812, -524.260, -7.9).s) : injectionSwitch.x)) > injectionSwitch.y), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(0.1, -638.812, -524.260, -7.9).s) : injectionSwitch.x)) > injectionSwitch.y), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))))) && true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), float(_GLF_FUZZED((762.818 - 9.4))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), float(_GLF_FUZZED((762.818 - 9.4))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y) && true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[0], _GLF_FUZZED(-462.858)), vec2(_GLF_FUZZED(-3524.9365), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), float(_GLF_FUZZED((762.818 - 9.4))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1984.1572) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(-7.2)))))), injectionSwitch.x, injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-5.1 + 4.7))), bool(false)))) && true)))))))))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0)), 0.0 + (float(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0))))))), float(_GLF_FUZZED((762.818 - 9.4))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3)))), float(_GLF_FUZZED(42.98)), bool(false))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED((-6.9 + -102.074))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(0.0, (0.0) / 1.0)) > injectionSwitch.y) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), float(_GLF_FUZZED((_GLF_IDENTITY(762.818 - 9.4, max(762.818 - 9.4, 762.818 - 9.4))))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.3))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED((-6.9 + -102.074)), mix(float(_GLF_FUZZED((- 1.5))), float(_GLF_IDENTITY(_GLF_FUZZED((-6.9 + -102.074)), max(_GLF_FUZZED((-6.9 + -102.074)), _GLF_FUZZED((-6.9 + -102.074))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(0.0, (0.0) / 1.0)) > injectionSwitch.y) && true)))))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false || (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))))) / vec2(1.0, 1.0))).y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (1 & (1 ^ 0)), 1), (ivec3(1, (1 & (1 ^ 0)), 1)) | ivec3(0, 0, 0))))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (false), false))), false, true)))))))))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))).x < injectionSwitch.y))))) && true)))
                  {
                   return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-24.04))), bool(false))) > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))));
              }
             if(_GLF_DEAD(false))
              return;
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((40355 & int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY((40355 & int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 | ((40355 & int(_GLF_ZERO(0.0, injectionSwitch.x))))), (40355 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
}
