#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9536.1108, 12.22)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.4), _GLF_FUZZED((-6.3 + 8.0))), bvec2(false, false))))), injectionSwitch)).x > injectionSwitch.y))), true, false, true))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), ((_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))))), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) * 1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))))), mix(float(length(normalize(vec2(1.0, 1.0)))), float(_GLF_FUZZED(4751.2355)), bool(false)))))), 1.0, 0.0), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, cos(0.0)), (vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, sin(0.0), 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), cos(0.0))) / abs(vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, sqrt(cos(0.0)) * (1.0))))), min(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))))), mix(float(length(normalize(vec2(1.0, 1.0)))), float(_GLF_FUZZED(4751.2355)), bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, length(vec2(0.0, 0.0)) + (0.0))) / 1.0)), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, cos(0.0)), (vec2(0.0, cos(0.0))) / abs(vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4939.6699) : 0.0)), cos(0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0))))).y, mix(float(_GLF_FUZZED(-915.240)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, sqrt(cos(0.0)) * (1.0))))), min(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))))), mix(float(length(normalize(vec2(1.0, 1.0)))), float(_GLF_FUZZED(4751.2355)), bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, length(vec2(0.0, 0.0)) + (0.0))) / 1.0)), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, cos(0.0)), (vec2(0.0, cos(0.0))) / abs(vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4939.6699) : 0.0)), cos(0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0))))).y), bool(true)))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + vec2(0.0, 0.0))) / sqrt(vec2(1.0, 1.0))))), min(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))))), mix(float(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(618.400)), float(1.0), bool(true))), 1.0)), 1.0)))), float(_GLF_FUZZED(4751.2355)), bool(false)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), (mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-45.64)))), float(_GLF_FUZZED(-3.3)), bool(false))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, cos(0.0)), (vec2(0.0, cos(0.0))) / abs(vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0))))).y)))))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (1 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), ~ (~ (1 << _GLF_IDENTITY(int(4), int(4)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4))), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec3(_injected_loop_counter != 0, false, false)))); _GLF_IDENTITY(_injected_loop_counter --, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter --), (~ (_injected_loop_counter --)) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0 | (~ _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) ^ 0))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))), false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), true, false), false)))))))))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) && (false)), false || ((_GLF_IDENTITY(true, true && (true)) && (false)))))) || false))) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          return;
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), int(int(int(6))))) | (int(6))), (int(6)) >> 0), min(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) >> 0), min(int(6), int(6)))))) * (1 | 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(60677) : _GLF_IDENTITY(6, clamp(6, 6, 6))))), int(6)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(60677) : _GLF_IDENTITY(6, clamp(6, 6, 6))))), max(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(60677) : _GLF_IDENTITY(6, clamp(6, 6, 6))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(60677) : _GLF_IDENTITY(6, clamp(6, 6, 6))))), (int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(60677) : _GLF_IDENTITY(6, clamp(6, 6, 6)))))) | 0))), int(6))))), 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), 0 | ((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), 0 | ((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 ^ (int(6)))))))), max(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), 0 | ((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))))), _GLF_IDENTITY(_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), 0 | ((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))))), (true ? _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), 0 | ((((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, _GLF_IDENTITY(1, (1) << 0), 1), (ivec4(1, 0, _GLF_IDENTITY(1, (1) << 0), 1)) | (ivec4(1, 0, _GLF_IDENTITY(1, (1) << 0), 1))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(6, max(6, 6)), 1, 0)), clamp(int(ivec3(_GLF_IDENTITY(6, max(6, 6)), 1, 0)), int(ivec3(_GLF_IDENTITY(6, max(6, 6)), 1, 0)), int(ivec3(_GLF_IDENTITY(6, max(6, 6)), 1, 0)))))) << 0)), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))))) : _GLF_FUZZED(23269)))))))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))), 0 ^ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | 0)), _GLF_IDENTITY(int(6), min(int(6), int(6)))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(6), min(int(6), int(_GLF_IDENTITY(6, (6) / 1))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) ^ 0)))) >> _GLF_IDENTITY(int(6), int(6))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))) && true))
        continue;
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (true)), true, false), bvec3(bvec3(bvec3(! (! (true)), true, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(! (! (true)), true, false), bvec3(bvec3(bvec3(! (! (true)), true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x)), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), gl_WorkGroupID.x))))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), _GLF_IDENTITY(true, false || (true)) && ((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, bool(bvec2((_GLF_IDENTITY(false, (false) || false)) || false, true))), true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false) && true))))))))))));
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_TRUE(true), false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-86.27)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(clamp(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(subgroup_size) : ~ (workgroup_base))), ~ (workgroup_base)), (clamp(~ (workgroup_base), ~ (workgroup_base), ~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u))) / 1u)), ~ (workgroup_base)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) | _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, _GLF_IDENTITY(0u, (0u) - 0u)))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_id), (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_id)) | (true ? max(workgroup_base, workgroup_base) : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base)))), ~ (_GLF_IDENTITY(~ (workgroup_base), min(_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base))), ~ (workgroup_base)))))), min((_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (workgroup_base)), min(workgroup_base, workgroup_base)), ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))))) | _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(191580u))) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), uint(uvec2(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), 0u))), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), min(subgroup_local_id, subgroup_local_id)))))) << 0u));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), true, false))); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
      {
       return;
      }
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (false ? _GLF_FUZZED(91353u) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) / 1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-42992) : _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(75137) : _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4))))) ^ 0)), int(4))), max(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (-16656 & 0) ^ (int(4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(41820))))))))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), (~ (int(4))) | 0))), int(4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(int(4), int(4))), 1, 1, 0), (ivec4((1 << _GLF_IDENTITY(int(4), int(4))), 1, 1, 0)) << ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(int(4), int(4))), 1, 1, 0), (ivec4((1 << _GLF_IDENTITY(int(4), int(4))), 1, 1, 0)) << ivec4(0, 0, 0, 0))), 0, 1, 0), ~ (~ (ivec4(int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(int(4), int(4))), 1, 1, 0), (ivec4((1 << _GLF_IDENTITY(int(4), int(4))), 1, 1, 0)) << ivec4(0, 0, 0, 0))), 0, 1, 0))))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) + 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(0.0))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-8235.7712), min(_GLF_FUZZED(-8235.7712), _GLF_FUZZED(-8235.7712)))))) + determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))) || false))))))))), false)), false))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | _GLF_IDENTITY(0, (0) >> 0)))) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) < injectionSwitch.y))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(abs(20305))))), max(~ (1), ~ (1)))) >> 0))), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4((1), 1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (5) ^ 0), 5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (5) ^ 0), 5))), (int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (5) ^ 0), 5)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1), int(5))), (0 ^ 0))), (int(ivec4((_GLF_IDENTITY(1, 0 | (1))), 1, (0 >> _GLF_IDENTITY(int(5), int(5))), (0 ^ 0)))) | (int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(5), int(5))), (0 ^ 0)))))), (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))) >> 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (5) ^ 0), 5))), int(5))), (0 ^ 0))), (int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(5), int(5))), (0 ^ 0)))) | (int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(5), int(5))), (0 ^ 0)))))), (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))) >> 0)), 0 ^ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (5) ^ 0), 5))), int(5))), (0 ^ 0))), (int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(5), int(5))), (0 ^ 0)))) | (int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(5), int(5))), (0 ^ 0)))))), (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))) >> 0)))))), ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), 0 | ((1))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, (5) ^ 0), 5))), int(5))), (0 ^ 0))), (int(ivec4((1), 1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), ((0 >> _GLF_IDENTITY(int(5), int(5)))) | 0), (0 ^ 0)))) | (int(ivec4((1), 1, (0 >> _GLF_IDENTITY(int(5), int(5))), (0 ^ 0)))))), (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))) >> 0))))) + 0)) << 0), max(0 ^ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(max(~ (1), ~ (1)), ~ (~ (max(~ (1), ~ (1))))))) >> 0)))), 0 ^ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY(max(~ (1), ~ (1)), (max(~ (1), ~ (1))) ^ 0))) >> 0)))))))), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false))))
    return;
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), int(ivec4((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) - 0)))), 0, _GLF_IDENTITY(1, (0 & 6333) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (0 >> _GLF_IDENTITY(int(3), int(3)))), (ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (0 >> _GLF_IDENTITY(int(3), int(3))))) | (ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (0 >> _GLF_IDENTITY(int(3), int(3))))))))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))) || false))
  {
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((0 ^ ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), (int(0)) | 0)))) + 0))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 1), ! (! (_GLF_IDENTITY(_injected_loop_counter != ((0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 1), _GLF_IDENTITY((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, clamp(0, 0, 0))))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1, 1), ~ (~ (ivec3(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1, 1)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, _GLF_IDENTITY(1, min(1, 1))), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), (false ? _GLF_FUZZED(min(ivec4(42887, 2075, -46754, 76740), max(_injected_loop_counter, _injected_loop_counter))) : _GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) / 1)) << 0, 0, 0, 1), (ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)) | ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (_GLF_IDENTITY(0, max(0, 0)))), (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), (ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)) | (ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (false ? _GLF_FUZZED(bitCount(workgroup_id)) : _GLF_IDENTITY(0, (0) / 1)))))) << 0, 0, 0, 1)))) << ivec4(0, 0, 0, 0))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0)))), (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) >> 0)) << _GLF_IDENTITY(0, min(0, 0)), ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))) | (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), max((0), (0)))) + (1 ^ 1)) / 1)) << 0))), int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) | ((1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0)))), (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, min((0) / 1, (0) / 1)))) << 0))))), 1, 0))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0))) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, 0 | ((_GLF_IDENTITY(0, (0) / 1)) << 0)), ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))), ((~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0))) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, 0 | ((_GLF_IDENTITY(0, (0) / 1)) << 0)), ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0)))))) << (-86500 & 0))))))))) - 0))))) ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))) - (0 >> _GLF_IDENTITY(int(8), int(8))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), ~ (~ (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0)))))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0))))) ^ 1))), (bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, max((0) / 1, (0) / 1)))) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) << 0)))) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0))))) ^ 1)))) && true)), true && (bool(_GLF_IDENTITY(bool((_injected_loop_counter != ((_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0)))), ~ (~ (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | 0)) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) / 1))) | ((_GLF_IDENTITY(0, (0) / 1)))) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0), (ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0)) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(4), ivec3(4)))))))))) - 0)))))))) ^ 1))), (bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0))))) ^ 1)))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))) - (0 >> _GLF_IDENTITY(int(8), int(8))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), ~ (~ (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0)))))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0))))) ^ 1))), (bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, max((0) / 1, (0) / 1)))) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) << 0)))) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0))))) ^ 1)))) && true)), true && (bool(_GLF_IDENTITY(bool((_injected_loop_counter != ((_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0)))), ~ (~ (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | 0)) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) / 1))) | ((_GLF_IDENTITY(0, (0) / 1)))) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0), (ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0)) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(4), ivec3(4)))))))))) - 0)))))))) ^ 1))), (bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0))))) ^ 1)))) && true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, min(1, 1)))) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1, 1), (ivec4(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1, 1)) ^ ivec4(0, 0, 0, 0))))), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))) - (0 >> _GLF_IDENTITY(int(8), int(8))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), ~ (~ (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0)))))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)) | (_GLF_IDENTITY(1, min(1, 1)))), 0))))))) - 0))))) ^ 1))), (bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, _GLF_IDENTITY(1, 0 ^ (1))))), ivec4((_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, max((0) / 1, (0) / 1)))) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))), (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) << 0)))) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), clamp((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) << 0)))) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), (1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) << 0)))) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), (1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) << 0)))) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))))), 1, 0))))))) - 0))))) ^ 1)))) && true)), true && (bool(_GLF_IDENTITY(bool((_injected_loop_counter != ((_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_IDENTITY(int((0)), min(int((0)), _GLF_IDENTITY(int((0)), (int((0))) / 1))))) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0))))))) - 0)))), ~ (~ (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | 0)) | ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) / 1)) << 0))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, min(1, 1)), 1)))) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), (false ? _GLF_FUZZED(ivec4(65762, 48667, -43700, -66338)) : _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), (true ? _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), max(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1))) : _GLF_FUZZED(ivec4(35658, 78560, 51844, 87403)))))), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, _GLF_IDENTITY(0, min(0, 0)), 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)), ((_GLF_IDENTITY(0, (0) / 1))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) / 1)))) << 0, 0, 0, 1))), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, clamp((0) / 1, (0) / 1, (0) / 1)))) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0), (ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1, 0)) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(4), ivec3(4)))))))))) - 0)))))))) ^ 1))), (bool((_injected_loop_counter != ((0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), max((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))))), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << 0))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (0) / 1)) << 0, 0, 0, 1), clamp(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), ivec4((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), max(~ ((0)), ~ ((0)))))) / 1)) << 0, 0, 0, 1))), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1), (ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)) << ivec4(0, 0, 0, 0)), ivec4((_GLF_IDENTITY(0, (0) / 1)) << 0, 0, 0, 1)))))))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) << _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0), int(0))), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1)) << 0, ((_GLF_IDENTITY(0, (0) / 1)) << 0) | ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) << _GLF_IDENTITY(0, (0) >> 0)))))), 1, 0))))))) - 0))))) ^ 1)))) && true))))))))) && true))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true) ? _GLF_FUZZED(vec3(-527.642, 5309.6289, 96.60)[0]) : injectionSwitch.y))))))
          continue;
         if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) : _GLF_FUZZED(workgroup_base)))) < subgroup_size)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)) | 0) != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.4) : injectionSwitch.x)) < injectionSwitch.y))))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                }
               else
                {
                }
              }
             return;
            }
           int i = 0;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                return;
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(64, 1 * (64)), 4);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY((false || (_GLF_DEAD(false))), true && ((false || (_GLF_DEAD(false))))) || false)))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))) && true)), true && _GLF_IDENTITY((! (false)), ((! (false))) && true))))))
            continue;
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
                continue;
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) < 1); _injected_loop_counter ++)
                    {
                     atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(sign(-31963)))), 4);
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.1))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
    }
   else
    {
    }
  }
}
