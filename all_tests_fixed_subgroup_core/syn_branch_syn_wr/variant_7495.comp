#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.00), _GLF_FUZZED(9.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-38.14), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), bvec2(true, false)))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))), (true ? float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(-2.8)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, abs(sqrt(1.0)), 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(_GLF_IDENTITY(length(normalize(1.0)), min(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) + 0.0)), length(normalize(1.0))))), float(_GLF_FUZZED(-5.2)), bool(false))))), (mat2x3(injectionSwitch, abs(sqrt(1.0)), 0.0, 1.0, round(length(normalize(1.0))))) + mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-84.06)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))))))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && true)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && true)))), false, false)))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) && true)))))))))) && true))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(-81.73)), vec2(_GLF_FUZZED(-9.3), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, log(1.0), 0.0, sqrt(0.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0), mat3x4(mat4(mat3x4(injectionSwitch, determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, log(1.0), 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) / 1.0), 0.0, 1.0)))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(53.63, 681.898)))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x2(99.39, 300.325, -7.6, -552.025, 6658.5691, -6.0, 2199.7681, -3493.2963)[1]) : injectionSwitch)), determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((false ? -6939.4293 : -37.92))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), 0.0, 0.0, 1.0)), 0.0, log(1.0), 0.0, sqrt(0.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0), mat3x4(mat4(mat3x4(injectionSwitch, determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, log(1.0), 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), (determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(69.04)))))) / 1.0), 0.0, 1.0)))))))))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-81.73)), vec2(_GLF_FUZZED(-9.3), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1])), min((injectionSwitch)[1], (injectionSwitch)[1]))), float(_GLF_FUZZED(-98.39)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-81.73)), vec2(_GLF_FUZZED(-9.3), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1])), min((injectionSwitch)[1], (injectionSwitch)[1]))), float(_GLF_FUZZED(-98.39)), bool(false)))), bvec2(false, true))), 1.0, 1.0)), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-81.73)), vec2(_GLF_FUZZED(-9.3), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1])), min((injectionSwitch)[1], (injectionSwitch)[1]))), float(_GLF_FUZZED(-98.39)), bool(false)))), bvec2(false, true))), 1.0, 1.0))))).x > injectionSwitch.y))), bool(bool(bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-81.73), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-81.73), min(_GLF_FUZZED(-81.73), _GLF_IDENTITY(_GLF_FUZZED(-81.73), (_GLF_FUZZED(-81.73)) - 0.0)))), 1.0 * ((_GLF_IDENTITY(_GLF_FUZZED(-81.73), min(_GLF_FUZZED(-81.73), _GLF_IDENTITY(_GLF_FUZZED(-81.73), (_GLF_FUZZED(-81.73)) - 0.0)))))) + 0.0)), vec2(_GLF_FUZZED(-9.3), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), 0.0, abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(301.157))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x3(616.160, -972.268, -8.1, -5.8, -8.2, 1.0)) : _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x3(616.160, -972.268, -8.1, -5.8, -8.2, 1.0)) : _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(0.9)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / cos(vec2(0.0, 0.0)))))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) << 0)))]), bvec2(false, true))).x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))) : _GLF_FUZZED(-1.5))))))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && true))) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(2.0, -3103.5689)))).y, injectionSwitch.y), clamp(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1)), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat2x3(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0, 1.0)))))))))))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)))))))), injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-177.488))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (true ? vec2(1.0, 1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(67.91, 3826.2440))))) + vec2(0.0, 0.0))).y, injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED((49.50 - -715.111)) : injectionSwitch[1])))) : _GLF_FUZZED(vec2(2.0, -3103.5689)))).y, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1)))) : _GLF_FUZZED(-4.9))), max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat2x3(max(injectionSwitch.y, injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0, 1.0)))))))))))))), true, false, true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && true))) && true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(2.0, -3103.5689)))).y, injectionSwitch.y), clamp(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1)), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat2x3(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0, 1.0)))))))))))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0)))))))), injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-177.488))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (true ? vec2(1.0, 1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(67.91, 3826.2440))))) + vec2(0.0, 0.0))).y, injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED((49.50 - -715.111)) : injectionSwitch[1])))) : _GLF_FUZZED(vec2(2.0, -3103.5689)))).y, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED((mat2x4(-515.650, 7496.8126, -9.3, -70.63, -98.29, 77.20, 7.1, 3279.5707) , 5.1)))) : _GLF_FUZZED(-4.9))), max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat2x3(max(injectionSwitch.y, injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0, 1.0)))))))))))))), true, false, true))))))))), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(0.0))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))) && true)))) || false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)).x, (gl_WorkGroupID.x) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false))), _GLF_IDENTITY(true, ! (! (true))), true))))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)))))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? 0u : _GLF_FUZZED(98748u))) ^ (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) / 1u)))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
  }
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) << 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-2.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(23054) : _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | 0)), int(ivec4(false ? _GLF_FUZZED(23054) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), min(int(4), int(4))))), (4) | 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, (1 ^ 1) + (_GLF_IDENTITY((1) - 0, ((1) - 0) ^ 0)))), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95837)))))) | (_GLF_IDENTITY(1, (1) << 0)))) - 0))) : _GLF_FUZZED(93153)))) / 1), 1, 1))))) + ((4))) | 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, (1 ^ 1) + (_GLF_IDENTITY((1) - 0, ((1) - 0) ^ 0)))), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95837)))))) | (_GLF_IDENTITY(1, (1) << 0)))) - 0))) : _GLF_FUZZED(93153)))) / 1), 1, 1))))) + ((4))) | 0)), ~ (~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), int(ivec4(0 >> _GLF_IDENTITY(int(1), int(1)), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(73484) : 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, (1 ^ 1) + (_GLF_IDENTITY((1) - 0, ((1) - 0) ^ 0)))), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95837)))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED((82892 ^ -6835)) : (1))) << 0)))) - 0))) : _GLF_FUZZED(93153)))) / 1), 1, 1))))) + ((4))) | 0)))))) - 0)), (false ? _GLF_FUZZED(-28270) : (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), min(ivec4((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) | (0 >> _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), min(ivec4(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), max((0 >> _GLF_IDENTITY(int(1), int(1))), (0 >> _GLF_IDENTITY(int(1), int(1))))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1)))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0, ~ (~ (0))) >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), min(ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), _GLF_IDENTITY(ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), (_GLF_IDENTITY(ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1), (ivec4((0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))), 0, 0, 1)) >> ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)))))))))) + _GLF_IDENTITY(((4)), (((4))) | (0 & 76478))) | 0)))))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), 0, 0)), 1, 1)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(23054) : _GLF_IDENTITY(4, (4) | 0), int(ivec4(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(_GLF_IDENTITY(23054, min(23054, 23054))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ~ (~ ((4)))), (4))))), (_GLF_IDENTITY((4), (1 ^ 1) + ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) | (4)))))) | 0) | 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_IDENTITY(_GLF_FUZZED(23054), max(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) >> 0))), _GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) ^ 0), _GLF_FUZZED(23054))), _GLF_FUZZED(23054))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), ~ (~ (~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) | 0)) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, ~ (~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_IDENTITY(_GLF_FUZZED(23054), max(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) >> 0))), _GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) ^ 0), _GLF_FUZZED(23054))), _GLF_FUZZED(23054))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), ~ (~ (~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) | 0)) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, ~ (~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0)))))), min(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_IDENTITY(_GLF_FUZZED(23054), max(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) >> 0))), _GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) ^ 0), _GLF_FUZZED(23054))), _GLF_FUZZED(23054))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), ~ (~ (~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) | 0)) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, ~ (~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0)))))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_IDENTITY(_GLF_FUZZED(23054), max(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) >> 0))), _GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) ^ 0), _GLF_FUZZED(23054))), _GLF_FUZZED(23054))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), ~ (~ (~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) | 0)) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, ~ (~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0))))))))) | (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_IDENTITY(_GLF_FUZZED(23054), max(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) >> 0))), _GLF_IDENTITY(_GLF_FUZZED(23054), clamp(_GLF_FUZZED(23054), _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) ^ 0), _GLF_FUZZED(23054))), _GLF_FUZZED(23054))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))), ~ (~ (~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) | 0)) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0, ~ (~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0))))))))), (~ (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0))))) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), (true ? (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(95122))), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(23054), min(_GLF_FUZZED(23054), _GLF_FUZZED(23054))), _GLF_IDENTITY((_GLF_FUZZED(23054)), ((_GLF_FUZZED(23054))) / _GLF_IDENTITY(1, (1) - 0)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4))))), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY(1, (1) + 0) ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + (_GLF_IDENTITY((4), int(int((4))))))) | 0))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY(1, (1) + 0) ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + (_GLF_IDENTITY((4), int(int((4))))))) | 0))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY(1, (1) + 0) ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + (_GLF_IDENTITY((4), int(int((4))))))) | 0)))))) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + (_GLF_IDENTITY((4), min((4), (4)))))) | 0) | 0))))))) ^ 0))) | (~ (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-95912))), (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 ^ (4)))))))) | 0) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(23054, (_GLF_IDENTITY(23054, clamp(23054, 23054, 23054))) | 0)), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + (_GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))))))))) | 0) | 0)))), clamp(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (true ? _GLF_IDENTITY((4), (1 ^ 1) + ((4))) : _GLF_FUZZED(-85394))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), min(false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (true ? _GLF_IDENTITY((4), (1 ^ 1) + ((4))) : _GLF_FUZZED(-85394))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(_GLF_IDENTITY(23054, (true ? 23054 : _GLF_FUZZED(81063))))) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) << (-89450 & 0))))), (1 ^ 1) + ((4))), (true ? _GLF_IDENTITY((4), (1 ^ 1) + ((4))) : _GLF_FUZZED(-85394))), (_GLF_IDENTITY((4), (1 ^ 1) + _GLF_IDENTITY(((4)), (((4))) * (1 | 0)))) | 0) | 0)))))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_IDENTITY(_GLF_FUZZED(23054), 1 * (_GLF_FUZZED(23054))))) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + (_GLF_IDENTITY((4), ((4)) | ((4))))), (_GLF_IDENTITY((4), (1 ^ 1) + ((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)))))) | 0) | 0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(23054), (_GLF_FUZZED(23054)) | (_GLF_FUZZED(23054))) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, ~ (~ ((4) | 0)))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (1 ^ 1) + ((4))), (_GLF_IDENTITY((4), (1 ^ 1) + ((4)))) | 0) | 0))))))) ^ 0)))))), 0, 1, 1))))) >> 0)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))) && true))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0))))))) || false))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), false || ((false))))), false || (bool(bool(_GLF_IDENTITY((false), false || ((false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))), _GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))), _GLF_IDENTITY(false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(28.77)))))))))))))))) || false))) && true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-6886.3035 / 2.9, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(9392.5247) : -6886.3035 / 2.9))), sin(0.0) + ((_GLF_IDENTITY(-6886.3035 / 2.9, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (false))))) ? _GLF_FUZZED(9392.5247) : -6886.3035 / 2.9))))))), bool(false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), true && (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true, true, true)))))), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec4(_GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(false, (false) || false), false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(false, (false) || false), false, true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec4(_GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(false, (false) || false), false, true)))))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec4(_GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((! (bool((injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_IDENTITY(false, (false) || false), false, true))))))))) && true))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (_GLF_IDENTITY(0, (0) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | (0)) | (_GLF_IDENTITY(0, (0) ^ 0)), 0 | (_GLF_IDENTITY(0, (0) ^ 0)), 0 | (_GLF_IDENTITY(0, (0) ^ 0)))))], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9317.5466), _GLF_FUZZED(3798.3003)), bvec2(false, false)))) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- _GLF_IDENTITY(6.7, float(vec2(6.7, 0.0))))), _GLF_FUZZED(6919.6587)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), (bool(bvec3(false, false, false))) && true))))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-58.39), _GLF_FUZZED(float(true))), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (! (false))))) || false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ! (! ((false)))))), ((! (! _GLF_IDENTITY((false), ! (! ((false))))))) && true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)), (true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0)), (mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0)), (mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0)), (mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0)), (mat4(1.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, sin(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED((true ? 25.70 : 617.842))), vec2(_GLF_FUZZED(9528.1049), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4))), clamp((true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4))), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4))), _GLF_IDENTITY((true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4))), clamp(_GLF_IDENTITY((true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4))), ((true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4)))) - vec2(0.0, 0.0)), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4))), (true ? max(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-477.163, -5.4))))))))))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1773.5131)), bool(false))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false, false, true)))) || false)))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))), (true ? true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(3.7, 3748.0552)))))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    return;
   int i = _GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) | (0)))), clamp((~ (0)), (_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), (~ (0)) << (0 << _GLF_IDENTITY(int(2), int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), clamp(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), _GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), _GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (0)), ((~ _GLF_IDENTITY((0), ~ (~ ((0)))))) << 0)) | 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (((~ (0))) | 0))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))), float(mat3x2(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 1.0, 1.0, exp(0.0), log(round(length(normalize(1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 1.0)))), 1.0, 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))), float(mat3x2(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, abs(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 1.0, 1.0, exp(0.0), log(round(length(normalize(1.0)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2(dot(vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 1.0, 1.0)))), 1.0, 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) - 0.0))), 1.0, abs(1.0), 1.0), mat2(1.0) * (mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0), 1.0)))), (false ? _GLF_FUZZED(-309.585) : float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0), 1.0), mat2(1.0) * (mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, abs(1.0), 1.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && (false))))), ! (! (bool(bool((_GLF_IDENTITY(false, true && (false)))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), bool(bvec4(bool((_GLF_IDENTITY(false, true && (false)))), true, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), bool(bvec4(bool((_GLF_IDENTITY(false, true && (false)))), true, true, false))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), bool(bvec4(bool((_GLF_IDENTITY(false, true && (false)))), true, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), bool(bvec4(bool((_GLF_IDENTITY(false, true && (false)))), true, true, false))), true), true, false)))))))), ! (! (bool(bool((_GLF_IDENTITY(false, true && (false)))))))), true, true, true))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9999.9054)), bool(false))), 1.0, 1.0, cos(0.0), 1.0, 0.0))) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(checker[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z], read, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))).y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-94.85), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8315.8495)), bvec2(true, false))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))) || false))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1864.9671)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-781.033) : injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, exp(0.0), abs(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, exp(0.0), abs(1.0)))).y) - 0.0))), false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(37.07, -8.6, -586.343).x)), float(injectionSwitch.y), bool(true)))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true)))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true))))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true)))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
