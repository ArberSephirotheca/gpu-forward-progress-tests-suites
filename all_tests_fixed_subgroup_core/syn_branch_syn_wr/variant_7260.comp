#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_4_1_1_12readworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_IDENTITY(_GLF_SWITCH((1 ^ 1)), (_GLF_SWITCH((1 ^ 1))) << (0 >> _GLF_IDENTITY(int(1), int(1)))))
    {
     case 73:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     mat4(7.3, -2.7, -509.038, -5.5, -127.042, -9.4, 2.7, 2.0, 61.72, 7228.8037, 8486.5507, -2285.1864, -27.89, 67.08, -9.1, 361.462);
     case 0:
     case 30:
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 92:
     if(_GLF_DEAD(false))
      barrier();
     case 40:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_IDENTITY(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0))
          {
           case 80:
           for(uvec2 _GLF_SWITCH_3_0v[66], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v; any(greaterThan(abs(ivec3(-58580, -98560, 67057)), ivec3(_GLF_IDENTITY(-39481, (-39481) >> 0), -18057, 36417))); max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(40486, clamp(_GLF_IDENTITY(40486, min(40486, 40486)), 40486, _GLF_IDENTITY(40486, 0 | (40486)))), 10827, 21017, 82620), min(_GLF_IDENTITY(ivec4(40486, 10827, 21017, 82620), ~ (~ (ivec4(40486, 10827, 21017, _GLF_IDENTITY(82620, (82620) | (_GLF_IDENTITY(82620, max(82620, 82620)))))))), ivec4(40486, 10827, 21017, 82620))), ivec4(21767, -899, 37772, -41698)))
            {
             for(             notEqual(vec2(-3.0, 1.8), injectionSwitch);
 isinf(-80.05); 322.506)
              {
               mat4x3 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[30], _GLF_SWITCH_3_5v[57];
               ivec4 _GLF_SWITCH_3_6v, _GLF_SWITCH_3_7v[91], _GLF_SWITCH_3_8v[52];
               greaterThanEqual(ivec2(30737, 8698), ivec2(-24747, -77168));
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(false)
                {
                 bvec4 _GLF_SWITCH_3_9v;
                 mat3x4(-692.438, -88.82, -4.2, -7906.1800, -6.8, -99.34, -2040.5685, 69.72, 435.972, 634.027, 6395.1926, 78.38);
                 vec2(-57.85, 338.467);
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3x2(mat2x4(358.226, -0.2, 81.76, -9.0, -3.6, 158.861, -93.06, 108.154));
                 if(_GLF_DEAD(false))
                  barrier();
                 uvec3 _GLF_SWITCH_3_10v[58];
                 bvec4 _GLF_SWITCH_3_11v;
                 ;
                 mat3(-8538.9572, -0.0, 4.6, -902.476, 160.484, -633.501, 306.067, -5.6, -4.3);
                }
               else
                {
                 ;
                 ivec4(ivec2(4903, 49384), ivec2(-83838, _GLF_IDENTITY(-62067, (-62067) | (-62067))));
                }
              }
             mat3 _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v[55], _GLF_SWITCH_3_14v[26];
             uint _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v;
             uvec2 _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v[28], _GLF_SWITCH_3_20v[36];
             uvec3 _GLF_SWITCH_3_21v;
             vec4 _GLF_SWITCH_3_22v;
             mat2 _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v;
             (uvec4(139176u, 99755u, 102924u, 95154u) , mat2x3(-673.514, 30.35, -1.5, -2.3, 4.5, 5.7));
            }
           case 65:
           ivec3(29642, 78360, 68567);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           case 67:
           case 84:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 77:
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           break;
           default:
           1;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     case 62:
     case 31:
     case 55:
     barrier();
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 90:
     (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) ? uvec3(39378u, 78208u, 167634u) : uvec3(83144u, 92528u, 77909u));
     case 70:
     for(mat3x4 _GLF_SWITCH_2_0v[63], _GLF_SWITCH_2_1v; true; equal((- vec2(-85.25, -1.0)), vec2(4403.3098, 333.753)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       bvec3(true);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       vec2(2.3, -6.3);
       (mat2(-7.4, -3815.3628, -7.2, -2363.4379) * mat3x2(459.893, _GLF_IDENTITY(-673.040, cos(0.0) * (_GLF_IDENTITY(-673.040, 1.0 * (-673.040)))), 94.70, 4239.5077, 1.0, 2.6));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     default:
     if(_GLF_DEAD(false))
      barrier();
     1;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), true), bvec3(bvec3(bvec3(false, true, true))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       switch(_GLF_SWITCH((1 ^ 1)))
        {
         case 4:
         ivec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
         case 86:
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           vec4(-81.01, 0.2, -6.0, -26.35);
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 1:
         case 60:
         case 79:
         case 5:
         case 10:
         case 18:
         case 19:
         barrier();
         break;
         default:
         _GLF_IDENTITY(1, min(1, 1));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY((0 & -69910), (_GLF_IDENTITY((0 & -69910), min((0 & -69910), (0 & -69910)))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(0), int(0))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 53:
     case 68:
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     case 42:
     case 98:
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       switch(_GLF_SWITCH(0))
        {
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 35:
         case 61:
         case 22:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 42:
         case 78:
         if(_GLF_DEAD(false))
          barrier();
         case 65:
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 20:
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))), false), false))))))))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-594.067))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           uvec4(140746u, 192644u, 80999u, 51892u);
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         case 80:
         mat4x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
         default:
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 19347)); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
          }
         1;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     break;
     case 4:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       while((mat2x4(-92.64, -3.2, 6.3, 857.635, -9.1, 82.84, 9.8, 2.1) == (mat2x4(9.4, -3709.9543, 8653.0135, -16.75, 363.878, 26.48, -7735.5479, 8.6))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         float _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[9], _GLF_SWITCH_4_2v;
         notEqual(bvec3(true, true, true), bvec3(true, true, false));
         vec2(-4496.3095, 93.18);
         mat2x3 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[81];
         while(false)
          {
           findLSB((max(94604, 71274) * 2618));
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           uvec2(75115u, 185276u).xx;
           if(_GLF_DEAD(false))
            barrier();
           ivec3(51138, -38413, 62556);
           (38728 / int(-21.77));
           vec2 _GLF_SWITCH_4_5v[2];
          }
         while(true);
         if(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           mat4x2 _GLF_SWITCH_4_6v;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           ;
           (uvec4(58625u, 138251u, 134684u, 97348u) & floatBitsToUint(vec4(-818.205, 96.20, -6.7, 16.11)));
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x2(1.7, 428.704, -8.1, 70.71, -5.7, -20.78, -6556.5730, 89.14);
           dot(mix(vec4(-6919.4546, 1413.3171, 74.00, -7084.6805), mix(vec4(28.96, -713.475, -3.9, -48.86), vec4(0.2, -50.00, 4.6, 6.4), vec4(-238.726, 4.7, -7.9, 1.3)), _GLF_SWITCH_4_2v), vec4(-3.3, -9.0, -5.4, 9506.1144));
           ;
           bvec4(bvec3(true, true, true), false);
          }
         {
          vec2 _GLF_SWITCH_4_7v;
          ;
          -82271;
          uvec2 _GLF_SWITCH_4_8v[4], _GLF_SWITCH_4_9v[57], _GLF_SWITCH_4_10v[75];
          _GLF_SWITCH_4_3v;
         }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     case 26:
     ;
     default:
     1;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 1.0, 1.0, 1.0, log(1.0), determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 1.0, 1.0, 1.0, log(1.0), determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0)), 0.0, 1.0)))))))) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_12readworkgroup_id.y = workgroup_id, (false ? _GLF_FUZZED(116056u) : GLF_merged2_0_1_4_1_1_12readworkgroup_id.y = workgroup_id));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_4_1_1_12readworkgroup_id.y;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size);
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1), 1 * (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) * 1), 0);
 GLF_merged2_0_1_4_1_1_12readworkgroup_id.x = read;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat2(0.0, 0.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 28:
             ivec4 _GLF_SWITCH_3_0v;
             case 15:
             mat4x3(9.8, 3655.1683, -4452.9358, -0.9, -4.5, -6.0, 8539.4197, 4.7, -4020.5713, 648.067, -4.0, -47.96);
             case 0:
             case 71:
             if(_GLF_DEAD(false))
              barrier();
             case 66:
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             case 7:
             case 77:
             case 12:
             case 4:
             barrier();
             break;
             case 9:
             uvec3 _GLF_SWITCH_3_1v;
             case 69:
             injectionSwitch;
             default:
             1;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     do
      {
       switch(_GLF_SWITCH((_GLF_IDENTITY(0, (0) | (0)) ^ 0)))
        {
         case 0:
         int i = 0;
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), _GLF_IDENTITY(true && (bool(bvec4(true, true, false, false))), _GLF_IDENTITY(bool(bvec4(true && (bool(bvec4(true, true, false, false))), true, false, true)), false || (bool(bvec4(true && (bool(bvec4(true, true, false, false))), true, false, true)))))))))
            {
             switch(_GLF_SWITCH((1 ^ 1)))
              {
               case 11:
               vec2 _GLF_SWITCH_2_0v[38], _GLF_SWITCH_2_1v;
               case 0:
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))))))))
                barrier();
               case 53:
               case 25:
               if(_GLF_DEAD(false))
                barrier();
               case 68:
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
                barrier();
               case 99:
               case 19:
               case 26:
               case 24:
               case 28:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 1:
                     case 23:
                     case 55:
                     case 21:
                     case 17:
                     case 25:
                     case 11:
                     atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_12readworkgroup_id.x, 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4)))));
                     break;
                     case 49:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       mat4x3(9721.5974, 3307.7390, 8098.9497, 203.441, -39.26, 4.5, -9.3, 6.7, -3796.3074, -5.1, 79.53, 7.0);
                      }
                     case 88:
                     (mat3(vec3(-1.4, 1680.8627, 9.7), vec3(-6202.1594, -124.678, -9.2), vec3(-79.15, -5.3, -7.1)) * mat4x3(5830.6607, 6.9, 3870.5179, -720.241, -2.7, 6445.1386, 9622.4122, 3.3, 4617.4886, -6.7, 6325.7759, -5299.9208));
                     default:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     1;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               break;
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 8:
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 mat4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 case 18:
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 mat2x4 _GLF_SWITCH_2_2v[83], _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 83:
                 uint _GLF_SWITCH_2_5v[8], _GLF_SWITCH_2_6v;
                 default:
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 1;
                }
              }
            }
           else
            {
            }
          }
         case 61:
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 51:
                 (ivec4(25563, -87745, -20458, 72557));
                 case 27:
                 mat2x4(-5122.5589, -5436.3974, -8.1, -5.7, -2920.2446, -1042.1043, -5249.4265, 5606.8661);
                 case 0:
                 notEqual(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(false, true, true)))), (bool(bool(bool(bvec3(false, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))), (bool(bool(bool(bvec3(false, true, true))))) && true))), true, true, false), bvec4(true, true, true, false));
                 case 2:
                 case 13:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 27:
                     int _GLF_SWITCH_4_0v[19], _GLF_SWITCH_4_1v[16], _GLF_SWITCH_4_2v;
                     case 79:
                     mat3x4(-6.6, 0.6, -4.8, -765.226, -3.4, -463.835, -9.7, -7721.7827, 8.6, 9.9, 0.0, 27.48);
                     case 0:
                     case 63:
                     case 82:
                     case 76:
                     case 47:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))))))
                        {
                         case 19:
                         uint _GLF_SWITCH_3_0v[74], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                         case 0:
                         case 12:
                         case 56:
                         case 16:
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         default:
                         1;
                        }
                      }
                     break;
                     default:
                     1;
                    }
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         findLSB(uvec4(3135u, 128758u, 58394u, 130934u));
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 case 23:
                 case 69:
                 bvec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[66];
                 vec2 _GLF_SWITCH_0_2v[5], _GLF_SWITCH_0_3v;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 34:
                 any(greaterThanEqual(ivec4(-75373, 29290, -52001, -74401), ivec4(35297, _GLF_IDENTITY(-88412, _GLF_IDENTITY((-88412) << 0, min((-88412) << 0, _GLF_IDENTITY((-88412) << 0, max((-88412) << 0, (-88412) << 0))))), 84371, -44102)));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                   barrier();
                  }
                 case 38:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
                  {
                  }
                 else
                  {
                   for(ivec4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[20], _GLF_SWITCH_0_6v; false; _GLF_IDENTITY(mat4(-9626.5375, 590.479, _GLF_IDENTITY(-7.2, clamp(-7.2, -7.2, -7.2)), 418.077, 4327.7760, -8.0, 0.0, 9818.5029, -6.4, -68.02, 34.52, _GLF_IDENTITY(-2.0, clamp(-2.0, -2.0, _GLF_IDENTITY(-2.0, float(mat2x3(-2.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(-611.782, _GLF_IDENTITY(dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))) + (-611.782)), 2550.6068, -5.5, 8.5), transpose(transpose(mat4(-9626.5375, 590.479, -7.2, _GLF_IDENTITY(418.077, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-6.4 * roundEven(39.82))) : 1.0)) * (418.077)), 4327.7760, -8.0, 0.0, 9818.5029, _GLF_IDENTITY(-6.4, float(vec3(_GLF_IDENTITY(-6.4, (-6.4) / 1.0), 1.0, 0.0))), -68.02, 34.52, _GLF_IDENTITY(-2.0, clamp(-2.0, -2.0, _GLF_IDENTITY(_GLF_IDENTITY(-2.0, max(-2.0, -2.0)), float(mat2x3(-2.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), _GLF_IDENTITY(-611.782, (-611.782) / 1.0), _GLF_IDENTITY(2550.6068, (false ? _GLF_FUZZED(47.80) : 2550.6068)), -5.5, 8.5)))))
                    {
                     do
                      {
                       if(false)
                        {
                         vec2 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                            }
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       else
                        {
                         i;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           mat4(-45.18, 4.4, 1.1, 4172.7899, 1960.3865, 45.02, 9821.3755, -1078.8325, -5.4, 5.1, 34.90, -441.888, -2.8, 2.1, -8.4, 87.62);
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           asin(vec4(-743.004, 5.4, 939.794, -7568.9260));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         matrixCompMult(mat3(-404.487, -263.943, 0.2, _GLF_IDENTITY(5447.1506, clamp(5447.1506, 5447.1506, _GLF_IDENTITY(5447.1506, clamp(5447.1506, 5447.1506, 5447.1506)))), 185.497, 12.47, -34.80, -0.0, -9.5), mat3(-85.31, 568.021, 3707.2993, 6.8, 60.72, -7503.7759, -0.4, -932.130, -635.076));
                         true;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           else
                            {
                            }
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))))))
                              {
                               case 0:
                               case 87:
                               case 59:
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               case 2:
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                barrier();
                               case 49:
                               case 88:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 31:
                               case 70:
                               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 mat3x2(7.2, -7284.9049, -955.745, -364.711, -6.6, -94.52);
                                }
                               break;
                               case 48:
                               uvec3 _GLF_SWITCH_3_0v[34], _GLF_SWITCH_3_1v[44], _GLF_SWITCH_3_2v;
                               default:
                               1;
                              }
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                              barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         mat3(3019.4487, -39.70, -2.2, _GLF_IDENTITY(-965.081, (_GLF_IDENTITY(-965.081, (-965.081) / 1.0)) / 1.0), 5.0, 321.775, -79.16, -4520.6619, -9859.9760);
                         if(_GLF_DEAD(false))
                          barrier();
                         (+ mat3x2(-34.07, 75.27, _GLF_IDENTITY(-454.553, (-454.553) / 1.0), 30.51, 2578.7682, 7.1));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(ivec3 _GLF_SWITCH_0_10v[46], _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v; false; vec4(-9.5, -6818.4893, -93.46, -850.810))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 barrier();
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             _GLF_IDENTITY(outerProduct(max(_GLF_SWITCH_0_3v, -3.7), vec2(-663.493, 9.6)), transpose(transpose(outerProduct(max(_GLF_SWITCH_0_3v, -3.7), vec2(-663.493, 9.6)))));
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             uvec4 _GLF_SWITCH_0_13v;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                              {
                               ((mat3x2(7590.6283, -25.20, -7.2, -66.11, _GLF_IDENTITY(-839.790, 1.0 * (-839.790)), -8.9) == mat3x2(mat4x2(-0.8, 5.4, 674.014, -7819.1219, -3.0, -5.4, -237.327, 73.92))) ? (mat2(16.94, -3.3, -1.5, 4.9) / mat2(335.047, _GLF_IDENTITY(-72.18, mix(float(-72.18), float(_GLF_FUZZED(6.3)), bool(false))), 4.7, 915.572)) : mat2(-753.976, -66.13, _GLF_IDENTITY(422.010, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(dot(-15.57, 0.4)) : 422.010)), -7830.8723));
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             do
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && true))))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               exp2(vec4(-7.7, 69.63, 692.349, 1.8));
                              }
                            }
                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))) != 0); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                {
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                              }
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     do
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))));
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             if(_GLF_DEAD(false))
                              barrier();
                             do
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     do
                                      {
                                       barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             break;
                             case 3:
                             false;
                             default:
                             if(_GLF_DEAD(false))
                              barrier();
                             1;
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(bvec3(false, false, false).r)
                            {
                             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))
                              barrier();
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               ;
                              }
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 3:
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           case 44:
                           uvec2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(26.69), _GLF_FUZZED(2558.8593)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_3v))).y))));
                           matrixCompMult(mat2x4(236.933, 303.819, 0.5, 390.820, 8.9, -470.941, 620.140, -2.8), mat2x4(2653.7142, 874.419, -4.3, 1.4, _GLF_IDENTITY(0.0, (0.0) - 0.0), -70.66, 58.06, -38.83));
                           ;
                           isnan(refract(_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), max(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), -441.480)))) / vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), mix(_GLF_IDENTITY(vec4(_GLF_FUZZED(vec4(-49.41, 6.7, 7129.2766, -88.48).g), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), max(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5)), 1.0 * (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), -441.480)))) / vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED((false ? 5.6 : -641.114)), _GLF_FUZZED(7.6)), (false ? _GLF_FUZZED(vec4(1679.2383, 3419.3010, 7788.9741, 7.1)) : vec4(_GLF_FUZZED(vec4(-49.41, 6.7, 7129.2766, -88.48).g), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), max(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5)), 1.0 * (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), -441.480)))) / vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED((false ? 5.6 : -641.114)), _GLF_FUZZED(7.6)))), vec4((_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), max(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), -441.480)))) / vec4(1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-93.56), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), max(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), -441.480)))) / vec4(1.0, 1.0, 1.0, 1.0)))[2], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(77.61, mix(float(77.61), float(_GLF_FUZZED(9910.1210)), bool(false))), _GLF_IDENTITY(-12.95, float(float(-12.95))), _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), (_GLF_IDENTITY(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5)), mix(float(_GLF_FUZZED(16.84)), float(_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))), bool(true))), 1.0, 0.0)))) / 1.0), -441.480), max(vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -441.480), vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / _GLF_IDENTITY(1.0, 0.0 + (1.0))), -441.480)))) / vec4(1.0, 1.0, 1.0, 1.0)))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), vec4(77.61, -12.95, _GLF_IDENTITY(-9.5, _GLF_IDENTITY((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, max((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, min((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, float(mat4x2((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)), (float(mat2(_GLF_IDENTITY((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, min((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, float(mat4x2((_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 1.0))) * 1.0))))), _GLF_IDENTITY(-441.480, min(-441.480, -441.480))))), vec4(5.9, 7.9, 8477.7617, -5.6), 5517.0758));
                           if(_GLF_DEAD(false))
                            barrier();
                           int _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[40], _GLF_SWITCH_0_18v;
                           if(_GLF_DEAD(false))
                            barrier();
                           case 59:
                           pow(-3946.9945, (_GLF_IDENTITY(_GLF_IDENTITY(-104.946, (-104.946) + 0.0) / 8.6, (false ? _GLF_FUZZED(asin(-284.701)) : _GLF_IDENTITY(-104.946, (-104.946) + _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0))) * (0.0))) / 8.6))));
                           bool _GLF_SWITCH_0_19v[67], _GLF_SWITCH_0_20v;
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           break;
                           case 11:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           bool _GLF_SWITCH_1_0v;
                           default:
                           1;
                          }
                        }
                       while(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id == workgroup_size, (subgroup_local_id == workgroup_size) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))) || ((_GLF_IDENTITY(subgroup_local_id == workgroup_size, (subgroup_local_id == workgroup_size) || false)))));
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 case 97:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (false ? _GLF_FUZZED(-6794.7696) : _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0)))))), float(_GLF_FUZZED(-5437.3556)), bool(false)))))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       while((-4183.3790 != 1.0))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         switch(_GLF_SWITCH((0 & -26298)))
                          {
                           case 0:
                           case 19:
                           mat3x4(3.0, -2.5, -582.596, 4.3, -757.100, 9449.4415, _GLF_IDENTITY(-46.26, mix(float(_GLF_FUZZED(-5.1)), float(-46.26), bool(true))), 0.2, 35.59, 16.53, 17.43, -93.16);
                           case 69:
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                {
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                  barrier();
                                 barrier();
                                }
                              }
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(true)
                                {
                                 virtual_gid;
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   uvec3(90411u, 147498u, 78099u);
                                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) - 0)))
                              {
                               case 0:
                               case 45:
                               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                                barrier();
                               do
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 59:
                                     ivec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                                     case 0:
                                     case 30:
                                     case 51:
                                     case 56:
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 4:
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       mat2x3 _GLF_SWITCH_3_0v[45], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                                       case 21:
                                       mod(vec3(-770.128, 8.6, -9269.1927), -1.5);
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       case 0:
                                       case 42:
                                       case 60:
                                       case 31:
                                       case 8:
                                       case 40:
                                       case 37:
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       case 98:
                                       case 86:
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       case 59:
                                       barrier();
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       break;
                                       case 68:
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         float(-20931);
                                        }
                                       case 35:
                                       (ivec4(-11193, 23067, -35476, -76443) & ivec4(-4439, 62087, 63785, -3132));
                                       default:
                                       1;
                                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                                        barrier();
                                      }
                                     break;
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     default:
                                     do
                                      {
                                       1;
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                                    }
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               break;
                               case 85:
                               ;
                               if(_GLF_DEAD(false))
                                barrier();
                               default:
                               1;
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           case 22:
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 mat4x3(-8094.8706, -5312.0469, -0.4, 4.9, _GLF_IDENTITY(8.4, min(8.4, 8.4)), -420.724, 644.003, -8.3, -7.9, 4305.2493, -8707.2676, -7.9);
                                }
                               else
                                {
                                 do
                                  {
                                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             else
                              {
                              }
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 82:
                                     (mat3(-7.3, -5.6, 47.20, -39.93, -14.40, -7245.5991, -2.9, 7781.5316, 2321.6680) / 8.3);
                                     case 89:
                                     mat2(-38.28, 6454.9083, 324.367, -0.3);
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     case 0:
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     case 96:
                                     case 85:
                                     case 30:
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     case 26:
                                     case 33:
                                     case 41:
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 44:
                                       bvec3(false, true, false);
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       case 0:
                                       case 9:
                                       case 68:
                                       case 1:
                                       case 26:
                                       case 33:
                                       case 27:
                                       case 11:
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_DEAD(false))
                                              barrier();
                                            }
                                           barrier();
                                          }
                                        }
                                       break;
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       default:
                                       _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(41164)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)));
                                      }
                                     break;
                                     case 15:
                                     (13316u + GLF_merged2_0_1_4_1_1_12readworkgroup_id);
                                     default:
                                     1;
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                           case 10:
                           case 63:
                           case 32:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, false || (false))), false)))))))))))))
                              {
                               do
                                {
                                 _GLF_IDENTITY(_GLF_SWITCH_0_3v, vec2(_GLF_SWITCH_0_3v[0], _GLF_SWITCH_0_3v[_GLF_IDENTITY(1, (1) / 1)])).g;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                           break;
                           case 97:
                           mat2(-492.656, -143.050, 0.8, _GLF_IDENTITY(3295.8835, _GLF_IDENTITY(float(mat3x4(3295.8835, 0.0, tan(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(cos(0.0)))), float(vec4(float(mat3x4(3295.8835, 0.0, tan(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(cos(0.0)))), 1.0, 1.0, 1.0)))));
                           default:
                           1;
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 case 25:
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       do
                        {
                         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
                          {
                           case 0:
                           case 89:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                              barrier();
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           break;
                           case 95:
                           do
                            {
                             ;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           default:
                           1;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 float _GLF_SWITCH_0_21v;
                 break;
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         default:
         _GLF_IDENTITY(1, ~ (~ (1)));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(15080) : 0)))), 0 | (int(4))), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))))
    {
     case 23:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 71:
           uvec3(139370u, 154125u, 144641u);
           case 62:
           while(false)
            {
             ivec3(-79364, -36697, 41610);
             do
              {
               ivec4(-33334, -44464, -76507, 81719);
              }
             while(_GLF_WRAPPED_LOOP(false));
             uvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[59];
             int _GLF_SWITCH_4_2v[31], _GLF_SWITCH_4_3v[13], _GLF_SWITCH_4_4v[47];
            }
           case 0:
           case 37:
           case 15:
           case 65:
           case 21:
           if(_GLF_DEAD(false))
            barrier();
           case 58:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             uvec4(uvec2(95350u, 190831u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(30487u, 64490u) + uvec2(199960u, 197861u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_12readworkgroup_id) : uvec2(30487u, 64490u) + uvec2(199960u, 197861u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(30487u, 64490u) + uvec2(199960u, 197861u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_12readworkgroup_id) : uvec2(30487u, 64490u) + uvec2(199960u, 197861u))), uvec2(uvec4(_GLF_IDENTITY(uvec2(30487u, 64490u) + uvec2(199960u, 197861u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_12readworkgroup_id) : uvec2(30487u, 64490u) + uvec2(199960u, 197861u))), 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec2(30487u, 64490u) + uvec2(199960u, 197861u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) ? _GLF_FUZZED(GLF_merged2_0_1_4_1_1_12readworkgroup_id) : uvec2(30487u, 64490u) + uvec2(199960u, 197861u)))))))))));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
           default:
           1;
          }
        }
       else
        {
        }
      }
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 42:
     case 26:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && (false))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     case 90:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     case 74:
     do
      {
       do
        {
         do
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 40:
             if(_GLF_DEAD(false))
              barrier();
             (mat4x2(-0.2, 55.39, -810.657, 9.5, -8.6, 0.6, -51.38, 3657.1631) + mat4x2(4.9, 5371.0611, 0.8, 1443.8825, -237.660, 3454.5523, -129.991, -8.0));
             case 0:
             case 85:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 52:
                   ivec3(-12435, -61537, 49126);
                   case 98:
                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     mat2x3(-35.46, 958.426, 4046.3796, 1302.3559, 164.057, 17.18);
                    }
                   case 0:
                   atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_12readworkgroup_id.x, 4, 64, 4);
                   break;
                   default:
                   1;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   switch(_GLF_SWITCH(0))
                    {
                     case 4:
                     vec3 _GLF_SWITCH_4_0v;
                     case 81:
                     if(_GLF_DEAD(false))
                      barrier();
                     mat3 _GLF_SWITCH_4_1v[57];
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     case 0:
                     case 82:
                     case 11:
                     case 67:
                     case 89:
                     case 87:
                     case 22:
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                     default:
                     1;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             break;
             if(_GLF_DEAD(false))
              barrier();
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     default:
     1;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
