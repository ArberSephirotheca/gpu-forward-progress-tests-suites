#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), (true ? 0.0 + (injectionSwitch.y) : _GLF_FUZZED(-3670.4911))))), clamp(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), (float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), min(_GLF_IDENTITY(0.0 + (injectionSwitch.y), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))), 0.0 + (injectionSwitch.y)))))) - 0.0))), bool(true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.2) : _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))) + 0.0) : _GLF_FUZZED(vec3(-2442.4121, 405.839, 5600.2181).g))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), 0.0))).y)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, cos(0.0), abs(1.0), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0)), (vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(1.0), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0))) - vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat3(mat4x3(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))), min(float(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat3(mat4x3(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat3(mat4x3(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))), 0.0 + (float(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat3(mat4x3(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / exp(vec2(0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))))))))), float(_GLF_FUZZED(60.24)), bool(false))), max(max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(float(float(injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), clamp(float(float(injectionSwitch.y)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.4), _GLF_FUZZED(-35.00)), bvec2(false, false))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((7738.2134 * 7882.2413))), float(1.0), bool(true))), 1.0)))).y)))))), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-868.188), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-885.350, -40.51))))))))).y))))))), (false ? _GLF_FUZZED(-58.32) : float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y))))))))))))))), _GLF_IDENTITY(float(float(injectionSwitch.y)), (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(float(float(injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))))))))) / 1.0), (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.6))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), clamp(float(float(injectionSwitch.y)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)).y)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y))))))), min(float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y))))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y))))))), (false ? _GLF_FUZZED(-5.6) : float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y))))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-58.32) : float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y))))))), _GLF_ONE(1.0, injectionSwitch.y) * (false ? _GLF_FUZZED(-58.32) : float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-198.268)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).y)))))))))))))), float(float(injectionSwitch.y))))) / 1.0)) - 0.0))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), clamp(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-9.0))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0))), (injectionSwitch) + vec2(0.0, 0.0)))))) / vec2(1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4042.7884)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)))), (_GLF_DEAD(false)) && true), false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), min((injectionSwitch) - abs(vec2(0.0, 0.0)), (injectionSwitch) - abs(vec2(0.0, 0.0))))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), min((injectionSwitch) - abs(vec2(0.0, 0.0)), (injectionSwitch) - abs(vec2(0.0, 0.0))))).x > injectionSwitch.y)), false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec3(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true, false)))))) || false)) ? _GLF_FUZZED(subgroup_size) : 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))) ? _GLF_FUZZED(subgroup_size) : 0u, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))) ? _GLF_FUZZED(subgroup_size) : 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))) ? _GLF_FUZZED(subgroup_size) : 0u))), 1u, 1u, 1u))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))) / 1.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), false || (! _GLF_IDENTITY((false), ((false)) && true))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), false || (! _GLF_IDENTITY((false), ((false)) && true))), false, false))), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u & 128222u)), ~ (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (0u & 128222u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0)))[0], (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 0.0)))[1]), vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(12.53)), bvec2(false, false))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), min(_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))))) | 0u))) * 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))))) - 0u)) * 1u) >> 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), (true ? _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))) : _GLF_FUZZED(subgroup_id))))) * 1u), 0u, 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ 0u)), (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ 0u))) | 0u)))))) * 1u), 0u, 1u)), (true ? uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ 0u)), (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ 0u))) | 0u)))))) * 1u), 0u, 1u)) : _GLF_FUZZED(subgroup_id))), min(uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) ^ 0u)))))), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) ^ 0u)))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) ^ 0u))))))))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) ^ 0u))))))))))) * _GLF_IDENTITY(1u, ~ (~ (1u)))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) ^ 0u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) ^ 0u)), ~ (~ (max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))))), (uint(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))))))) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))))))))), (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))))) - 0u)))) * 1u), 0u, 1u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) << 0u)) | (subgroup_id)) * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) << 0u)) | (subgroup_id)) * subgroup_size))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u)) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u)) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uint(true)))))) % subgroup_size)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(60.48)), bool(false))) > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 58764), min(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 58764), ~ (~ ((_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 58764)))), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 58764)))), int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)))))), clamp(int(ivec3(1, 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))) : _GLF_FUZZED(-5.1)))))), int(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(mix(ivec3(_GLF_IDENTITY(-76575, (-76575) | 0), -15207, -11536), ivec3(-45987, 4605, 20942), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, false)))), false, false))) : _GLF_IDENTITY(ivec3(1, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), (ivec3(1, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-897.955) : injectionSwitch.y)))))) << ivec3(_GLF_IDENTITY(0, (0) | (0)), 0, 0))))), int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64)))), 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u | (buf[virtual_gid]), (0u | (buf[virtual_gid])) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), buf[virtual_gid])))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], buf[virtual_gid]))))), _GLF_IDENTITY((~ _GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY((~ _GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid)))), ((~ _GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid))))) | (_GLF_IDENTITY((~ _GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid)))), uint(uvec2((~ _GLF_IDENTITY((buf[virtual_gid]), (true ? (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid)))), 1u))))))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 0u ^ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], max(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)), 0u ^ (virtual_gid))], buf[virtual_gid]))))), (~ _GLF_IDENTITY((buf[virtual_gid]), (true ? _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) : _GLF_FUZZED(next_virtual_gid)))) - 0u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], buf[virtual_gid]))))), (~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY(true ? (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid), (true ? (buf[virtual_gid]) : _GLF_FUZZED(next_virtual_gid)) + 0u)))) - 0u))) - 0u)) << 0u)), buf[virtual_gid], buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))), false), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), true && (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))), (false || (_GLF_IDENTITY(false, ! (! (false))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true, false)), _GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ! (! ((true))))))) || false) && true) && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false))))), ! (! (true && (! (false))))))))))))), true, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec2(bool(bvec3(true, false, true)), false))))) && true) && (_GLF_IDENTITY(false, (false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, false || (false)))))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(! (false))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true)))))))), true && (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))), (_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, ! (! (false))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true, false)), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false))))))))))))), true, false)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false))))))))))))), true, false))))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))), _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false), ((false)) || false) || false))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), true && (bool(bool(! (false))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), true && (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), true && (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))), true, false, true)), true && (bool(bvec4(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), true && (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))))), true, false, true))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))) || false)))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true, false)), _GLF_IDENTITY(true, (true) && true) && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), true)))) && true)))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), true)))) && true)))))))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))), true)))) && true)))))))), true, false))))))))))))))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(47636) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(11181) : 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(47636) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(11181) : 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1)))), ((false ? _GLF_FUZZED(47636) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(11181) : 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1))))) ^ 0)) << 0)))), 1u * (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(47636) : 1)))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(47636) : 1))))) << (1u ^ 1u)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(47636) : 1))), 1 * (clamp(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(47636), max(_GLF_FUZZED(47636), _GLF_FUZZED(47636))) : 1)))))), subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(47636) : 1)))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(47636, ~ _GLF_IDENTITY((~ (47636)), (true ? (~ (47636)) : _GLF_FUZZED(-22227))))) : 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(47636) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(47636), min(_GLF_IDENTITY(_GLF_FUZZED(47636), clamp(_GLF_FUZZED(47636), _GLF_FUZZED(47636), _GLF_FUZZED(47636))), _GLF_IDENTITY(_GLF_FUZZED(47636), (_GLF_FUZZED(47636)) | 0))) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 1 * (1)), 0), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), 1 * (1)), 0))))))), _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(47636) : 1), clamp((false ? _GLF_FUZZED(47636) : 1), (false ? _GLF_FUZZED(47636) : 1), _GLF_IDENTITY((false ? _GLF_FUZZED(47636) : 1), (false ? _GLF_FUZZED((41430)) : (false ? _GLF_FUZZED(47636) : 1))))))))) ^ (0 | 0)))), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))) / (1 | 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(47636, 0 ^ (47636))) : 1))), (0 ^ 0) ^ (clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))) / (1 | 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(47636, 0 ^ (47636))) : 1)))))))))) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (false ? _GLF_FUZZED(42372) : _GLF_IDENTITY(0, max(0, 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (~ ((_GLF_IDENTITY(4, min(4, 4)))))) | (_GLF_IDENTITY(4, (4) << 0))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-140.651)))), max(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))) / 1.0) > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(read, max(read, read))), ((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / 1u), max(read, read)))) | 0u), (~ _GLF_IDENTITY((read), max((_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) | (read)), 0u + (_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, uint(uint(read))), read), (max(_GLF_IDENTITY(read, uint(uint(read))), read)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (read)))) | (~ (read)))), min((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(read, max(read, read))), ((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / 1u), max(read, read)))) | 0u), (~ _GLF_IDENTITY((read), max((_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) | (read)), 0u + (_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, uint(uint(read))), read), (max(_GLF_IDENTITY(read, uint(uint(read))), read)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (read)))) | (~ (read)))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(read, max(read, read))), ((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / 1u), max(read, read)))) | 0u), (~ _GLF_IDENTITY((read), max((_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) | (read)), 0u + (_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, uint(uint(read))), read), (max(_GLF_IDENTITY(read, uint(uint(read))), read)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (read)))) | (~ (read)))), (false ? _GLF_FUZZED(read) : (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(read, max(read, read))), ((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / 1u), max(read, read)))) | 0u), (~ _GLF_IDENTITY((read), max((_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) | (read)), 0u + (_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, uint(uint(read))), read), (max(_GLF_IDENTITY(read, uint(uint(read))), read)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), (read)))) | (~ (read))))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, true, true))), _GLF_IDENTITY((bool(bvec3(false, false, true))) && true, ! (! ((bool(bvec3(false, false, true))) && true)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (! (bool(true && (false)))))), ! (! (bool(_GLF_IDENTITY(bool(true && (false)), ! (! (bool(true && (false)))))))))))) || false), false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, true, true))), _GLF_IDENTITY((bool(bvec3(false, false, true))) && true, ! (! ((bool(bvec3(false, false, true))) && true)))))))) && _GLF_IDENTITY(true, true && (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(35463))), bool(false)))))))
    barrier();
  }
}
