#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 float _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 uint read;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 vec3 _f1;
 uint _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 float _f1;
 mat2x3 _f2;
 mat2 _f3;
 bvec3 _f4;
 mat4x2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_15 {
 float _f0;
 _GLF_struct_13 _f1;
 ivec3 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 mat3 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_18 _f4;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
} ;

struct _GLF_struct_9 {
 float _f0;
 uvec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 int _f1;
 bvec3 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 ivec3 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 vec2 _f4;
 mat4x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 int _f3;
 ivec2 _f4;
 int _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat2x3 _f1;
 ivec4 _f2;
 mat4 _f3;
 uint _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 uint next_virtual_gid;
 _GLF_struct_4 _f1;
 bvec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat3 _f1;
 bvec3 _f2;
 vec3 _f3;
 int _f4;
 mat3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 mat3 _f1;
 mat2x3 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_11 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool((_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))), ! (! (false))), false, true), true)))), false))), (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, (true) && true)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-27.03, 8.5, 4.1, 652.600, 5.3, 90.85, 41.23, -5.7, -3.2)) : mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)))))))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)))))))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)))))))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true, ! (! ((false) && true)))))), (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), bool(bvec3(! (! ((false) && true)), true, true)))))))) && true)))))))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)))), false, true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)))), false, true)))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), true, false, false)), false || (bool(bvec4(((injectionSwitch.x < injectionSwitch.y)), true, false, false))))) && _GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), vec2(mat2x4((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9398.5483) : 1.0))) * 1.0), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0)))).x, sqrt(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(0.8)), float(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), bool(true))))) + (1.0)), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0)), max(normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) / 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.9), (_GLF_FUZZED(-1.9)) * 1.0) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0)), normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0))))))), _GLF_IDENTITY(1.0, float(mat2x4(1.0, sqrt(1.0), sin(0.0), 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0))))))))), mix(float(round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(0.8)), float(dot(vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), vec3(0.0, 1.0, 0.0))), bool(true))))) + (1.0)), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0)), max(normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) / 1.0)))), _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.9), (_GLF_FUZZED(-1.9)) * 1.0) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0)), normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0))))))), _GLF_IDENTITY(1.0, float(mat2x4(1.0, sqrt(1.0), sin(0.0), 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0)))))))))), float(_GLF_FUZZED(6.6)), bool(false)))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), (true ? vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(clamp(vec2(261.815, 4854.9338), -123.585, -7.4), (clamp(vec2(261.815, 4854.9338), -123.585, -7.4)) * mat2(1.0))))))).x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.2)), bool(false))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-154.858, -489.389)))), (injectionSwitch) * mat2(1.0))))), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0)))).x, sqrt(round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false))) : _GLF_FUZZED(-3.4))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false))) : _GLF_FUZZED(-3.4))), 1.0, 0.0, 0.0)), max(float(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) : _GLF_FUZZED(-3.4))), 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false))), mix(float(_GLF_FUZZED(-251.840)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false)))), bool(true))) : _GLF_FUZZED(-3.4))), 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0)), max(normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, max((1.0) + 0.0, _GLF_IDENTITY((1.0), ((1.0)) - 0.0) + 0.0))))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0)), clamp((false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0)), mix(float((false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), float(_GLF_FUZZED(24.95)), bool(false))), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0)), ((false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))) * 1.0)))))), 1.0)), normalize(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0))))))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), 1.0, 0.0, 0.0)))).x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.2)), bool(false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x) ^ 0u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(126563u, 120652u, 4072u))), ((_GLF_IDENTITY(true, (true) || false) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(126563u, 120652u, 4072u)))) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), ((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false), (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))))), true, true, false))), ((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false)) || false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(vec2(1.0), _GLF_struct_0(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), bvec3(true), vec3(1.0), 1, mat3(1.0), uvec2(1u)), _GLF_struct_1(mat2x3(1.0))), mat3(1.0), mat2x3(1.0), _GLF_struct_5(_GLF_struct_3(mat4(1.0), mat2x3(1.0), ivec4(_GLF_IDENTITY(1, 0 ^ (1))), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(mat2x3(21.14, 323.466, -107.855, -938.095, 90.54, 815.741))))), 1u), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_4(mat3(1.0), mat2x4(1.0), ivec4(1), 1, ivec2(1), 1, ivec3(1)), bvec2(true), true), _GLF_struct_7(uvec2(1u), _GLF_struct_6(mat4(1.0), ivec3(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec4(~ (1), 0, 1, 0)), (true ? int(ivec4(~ (1), 0, 1, 0)) : _GLF_FUZZED(-77637)))))))))), ivec4(1), mat4x2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-9355.0065 + (false ? 3.9 : -8.6)))), bool(false)))), vec2(vec2(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((-9355.0065 + (false ? 3.9 : -8.6))), _GLF_IDENTITY(mix(float(_GLF_FUZZED((-9355.0065 + (_GLF_IDENTITY(false ? 3.9 : -8.6, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(84.41) : false ? 3.9 : -8.6)))))), float(_GLF_FUZZED(-3.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, sqrt(0.0))), (vec2(mat2(injectionSwitch, 0.0, sqrt(0.0)))) * mat2(1.0))).y)))))))))), max(mix(float(_GLF_FUZZED((-9355.0065 + (_GLF_IDENTITY(false ? 3.9 : -8.6, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(84.41) : false ? 3.9 : -8.6)))))), float(_GLF_FUZZED(-3.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, sqrt(0.0))), (vec2(mat2(injectionSwitch, 0.0, sqrt(0.0)))) * mat2(1.0))).y)))))))))), mix(float(_GLF_FUZZED((-9355.0065 + (_GLF_IDENTITY(false ? 3.9 : -8.6, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(84.41) : false ? 3.9 : -8.6)))))), float(_GLF_FUZZED(-3.3)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, sqrt(0.0))), (vec2(mat2(injectionSwitch, 0.0, sqrt(0.0)))) * mat2(1.0))).y)))))))))))))), bool(false))))))), mat4x2(1.0), mat4(1.0))), _GLF_struct_11(mat4x3(1.0), 1, _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(true), true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(true), true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(true), true))))), false))), false)))))), true)))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch))), log(1.0), 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0, 1.0)))).x > injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(true, (true) && true))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(true, (true) && true))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(true, (true) && true))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(true, (true) && true))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_struct_8(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ uvec3(0u, 0u, 0u)), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(-52.37, 840.958, 321.457).p) : 1.0)))), _GLF_struct_9(1.0, uvec3(1u), mat3x2(1.0)), _GLF_struct_10(vec3(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_12._f3.next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(ivec4(1), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0))))))), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0))))))), mat3(mat3(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))))))))))))))), transpose(transpose((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0))))))), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5214.4661)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), mat3(mat3(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(mat4(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))))), mat3(mat3(mat3(mat4(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))))))))))))))))))))), mat3(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0))))))), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0))))))), mat3(mat3(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, abs(0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.5)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0) + (mat4(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0))))))), mat3(mat3(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(mat4(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(85.00) : 0.0)), 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(85.00) : 0.0)), 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(85.00) : 0.0)), 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat3(1.0)) + (mat3(1.0)))))))))))))))) * mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_struct_15(1.0, _GLF_struct_13(mat4x2(1.0), 1.0, mat2x3(1.0), mat2(1.0), bvec3(true), mat4x2(1.0), mat2x4(1.0)), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), ~ (~ (0 | (1))))) >> 0)), (false ? _GLF_FUZZED(-29314) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(72183) : 0)) | (1))))), _GLF_struct_14(ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)), (1) - 0), 1))), vec3(1.0), 1u, mat4x2(1.0))), _GLF_struct_16(uvec4(1u), atomicLoad(buf[virtual_gid], 4, 64, 0)), _GLF_struct_18(_GLF_struct_17(1.0), mat3x2(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), false))))))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid))))], _GLF_struct_replacement_19._f3.read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(388.286, reflect(5.6, -8157.6534))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_19._f3.read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
