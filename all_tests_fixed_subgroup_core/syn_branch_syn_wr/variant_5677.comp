#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uvec3 _f0;
 uint _f1;
 mat2x4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 mat3 _f1;
 float _f2;
 float _f3;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 int _f1;
 mat4x3 _f2;
 uvec2 _f3;
 mat4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 ivec2 _f2;
 uint read;
 _GLF_struct_8 _f3;
 mat2x4 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 vec2 _f1;
 ivec2 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 vec3 _f1;
 ivec4 _f2;
 ivec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 int _f1;
 mat4 _f2;
 ivec3 _f3;
 bvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat3x2 _f1;
 bool _f2;
 mat3x4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bool _f2;
 mat2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 mat4x2 _f2;
 uint _f3;
 uvec2 _f4;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y = subgroup_id;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * workgroup_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_2(_GLF_struct_0(mat4x2(1.0), mat3x2(1.0), true, mat3x4(1.0), bvec3(true)), _GLF_struct_1(mat2x3(1.0), 1, mat4(1.0), ivec3(1), bvec3(true), mat4(1.0)), true, mat2(1.0), uvec3(1u)), _GLF_struct_5(_GLF_struct_3(mat3(1.0), vec3(1.0), ivec4(1), ivec2(1), 1u), _GLF_struct_4(mat4(1.0), vec2(1.0), ivec2(1), 1u, mat4x3(1.0))), mat4x2(1.0), 1u, uvec2(1u), _GLF_struct_10(_GLF_struct_6(mat2x4(1.0), 1, mat4x3(1.0), uvec2(1u), mat4(1.0), bvec3(true)), _GLF_struct_7(ivec4(1), mat3(1.0), 1.0, 1.0), ivec2(1), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_8(mat4x3(1.0)), mat2x4(1.0), _GLF_struct_9(uvec3(1u), 1u, mat2x4(1.0), uvec2(1u))));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(checker[virtual_gid], _GLF_struct_replacement_11._f5.read, 4, 64, 4);
      }
     else
      {
      }
    }
  }
 else
  {
   do
    {
     atomicStore(checker[virtual_gid], _GLF_struct_replacement_11._f5.read, 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
