#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y))) || false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(7600.4433)), vec2((vec2(mat2(injectionSwitch, 0.0, 0.0)))[0], (vec2(mat2(injectionSwitch, 0.0, 0.0)))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), true && (bool(bvec3(_GLF_DEAD(false), true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) * 1u, ((_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) * 1u) | ((_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) * 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - length(0.0)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, true)), false || (bool(bvec4(false, false, false, true)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))))))))), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false)))))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), ((gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)) ^ uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (~ ((gl_WorkGroupSize.x))) + 0u))))))) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(1.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(1.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat2x4(1.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atanh(-2.5)) : 0.0))))))) / 1.0)) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0), (mat2x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0)), injectionSwitch.y))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))) : _GLF_FUZZED(subgroup_size))), 0u + (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))))))) * 1u) : _GLF_FUZZED(subgroup_size))))), 1u, 1u), (uvec3(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x)))) ^ 0u)))) : _GLF_FUZZED(subgroup_size)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x)))) ^ 0u)))) : _GLF_FUZZED(subgroup_size))) * 1u)), 1u, 1u)) | (uvec3(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 0u)))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (gl_WorkGroupSize.x))) : _GLF_FUZZED(subgroup_size))), 1u, 1u)))))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)).x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ (gl_WorkGroupSize.x))), ~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x))) : _GLF_FUZZED(subgroup_size))), 1u, 1u))))) ^ 0u))), max(1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (0u | 0u) ^ (~ (gl_WorkGroupSize.x))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))), (! (injectionSwitch.x < injectionSwitch.y)) || false))))) ? _GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) ^ 0u)), ~ (gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)))))))).x))) : _GLF_FUZZED(subgroup_size))), 1u, 1u)))))), 1u * (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x))), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(((gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x))))))))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) >> 0u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) + uvec3(0u, 0u, 0u)).x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), max(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(~ (gl_WorkGroupSize.x), 1u * (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x), ~ (gl_WorkGroupSize.x))) : _GLF_FUZZED(subgroup_size))), 1u, 1u))))))))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 1u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 1u)), (uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (uvec4(gl_WorkGroupSize, 1u)) | uvec4(0u, 0u, 0u, 0u)))) / uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((0u | 0u), uint(uint((0u | 0u)))) | (1u)), 1u, 1u))).x))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), min(float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))), false, false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false))))), true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), true, false))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -790.468)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-9.8) : (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((-18.86 + -614.442))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 0.0 + (_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, float(mat3x2(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))))))), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))) : _GLF_FUZZED(-6470.1671)))), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(_GLF_IDENTITY(70.68, float(vec3(_GLF_IDENTITY(70.68, (true ? 70.68 : _GLF_FUZZED(3.2))), 0.0, 0.0))), -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1))], mix(float(_GLF_FUZZED(211.545)), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[0], ((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(98.99)), bvec2(false, false)))) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(144.745), float(mat3x4(_GLF_FUZZED(144.745), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 1.0)))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))))), bvec2(true, false))).x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 0.0 + (_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, float(mat3x2(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))))))), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))) : _GLF_FUZZED(-6470.1671)))), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(_GLF_IDENTITY(70.68, float(vec3(_GLF_IDENTITY(70.68, (true ? 70.68 : _GLF_FUZZED(3.2))), 0.0, 0.0))), -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1))], mix(float(_GLF_FUZZED(211.545)), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[0], ((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(98.99)), bvec2(false, false)))) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(144.745), float(mat3x4(_GLF_FUZZED(144.745), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 1.0)))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))))), bvec2(true, false))).x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 0.0 + (_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, float(mat3x2(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))))))), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))) : _GLF_FUZZED(-6470.1671)))), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(_GLF_IDENTITY(70.68, float(vec3(_GLF_IDENTITY(70.68, (true ? 70.68 : _GLF_FUZZED(3.2))), 0.0, 0.0))), -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1))], mix(float(_GLF_FUZZED(211.545)), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[0], ((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(98.99)), bvec2(false, false)))) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(144.745), float(mat3x4(_GLF_FUZZED(144.745), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 1.0)))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))))), bvec2(true, false))).x, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 0.0 + (_GLF_IDENTITY(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, float(mat3x2(vec3(70.68, _GLF_IDENTITY(-8124.2738, min(-8124.2738, -8124.2738)), 3463.5023).t, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))))))), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t))) : _GLF_FUZZED(-6470.1671)))), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t), max(_GLF_FUZZED(vec3(_GLF_IDENTITY(70.68, float(vec3(_GLF_IDENTITY(70.68, (true ? 70.68 : _GLF_FUZZED(3.2))), 0.0, 0.0))), -8124.2738, 3463.5023).t), _GLF_FUZZED(vec3(70.68, -8124.2738, 3463.5023).t)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1))], mix(float(_GLF_FUZZED(211.545)), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)))) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[0], ((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(98.99)), bvec2(false, false)))) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(144.745), float(mat3x4(_GLF_FUZZED(144.745), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 1.0)))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), vec2(mat2x3(vec2((injectionSwitch)[0], _GLF_FUZZED(144.745)), 1.0, 1.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))))), bvec2(true, false))).x, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0))) > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) + (0u << _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(float(40684))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))).y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) ^ 0u), (subgroup_size) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u), ((2u)) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 0u)), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) + 0u))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) ^ 0u), (subgroup_size) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u), ((2u)) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 0u)), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) + 0u))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) ^ 0u), (subgroup_size) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u), ((2u)) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 0u)), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) + 0u))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) ^ 0u), (subgroup_size) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u), ((2u)) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + 0u)), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) + 0u))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))))) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), 0u ^ (subgroup_id)) * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id))), (true ? _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id))), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))), uint(uvec2(~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))), 0u))))) : _GLF_FUZZED(num_workgroup))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3(false, false, true), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true, true, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), (vec2(vec4(injectionSwitch, 1.0, 0.0))) + vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) && true)) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) && true)))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-6481.4675 + 4.3)), _GLF_FUZZED(86.97)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))))), bvec2(_GLF_IDENTITY(true, (true) && true), true))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, (0u | 0u)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))) && true), false, _GLF_IDENTITY(false, ! (! (false))), true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5357.0793), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-70.84))), _GLF_FUZZED((-3452.5462 / -3833.3950))), bvec2(true, false))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))), false || (_GLF_DEAD(false))))), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(612.749))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)))))))))
    barrier();
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((1 | 0), (_GLF_IDENTITY((1 | 0), max((1 | 0), (1 | 0)))) | 0) * (64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (false ? _GLF_FUZZED(-80297) : 4)), 4)), max(_GLF_IDENTITY(4, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))) | (4), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), 0 ^ (_GLF_IDENTITY(int(8), int(8))))) << 0)) | (4)) - 0)), 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.0), _GLF_FUZZED(-6599.1907)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1989.0785))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1989.0785))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1989.0785))), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1989.0785)))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), ! (! (((false))))))) && true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((false), ((false)) && true)) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))))), false)), true))))))))))))))
  barrier();
}
