#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.y = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))
            break;
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z, (workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z) >> 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true)))))))))
  {
  }
 else
  {
   GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    break;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) && true))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false))))))))))), _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false))))))))))), _GLF_IDENTITY(true, false || (true)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8121.3175)), bool(false)))))))))))))), false))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))))) || false)))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(94.66), _GLF_FUZZED(-52.61)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, true), true))), false, true))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))))) || false))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))))) || false))), false), bvec2(bvec4(bvec2(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), false, true))))))))) || false))), false), false, false)))))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))));
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0), vec4(vec4(vec4(injectionSwitch.x, 1.0, sqrt(1.0), 0.0)))))))) > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0)), (_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))))), abs(0.0))), length(0.0)), max(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0)), vec4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0))))) - tan(vec4(0.0, 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0)), max(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0)), vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0)))), (_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0)), max(vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(_GLF_IDENTITY(0.0, 0.0 + (0.0))), length(0.0)), vec4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), length(0.0))))) + vec4(0.0, 0.0, 0.0, 0.0))) - tan(vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(8.1))))))))
      break;
     break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, max(GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)), max(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y) << (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)))))) + subgroup_local_id;
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, clamp(GLF_merged2_0_1_4_1_1_13readsubgroup_size, GLF_merged2_0_1_4_1_1_13readsubgroup_size, GLF_merged2_0_1_4_1_1_13readsubgroup_size)), GLF_merged2_0_1_4_1_1_13readsubgroup_size)).y, min(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(189327u) : subgroup_id)) * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, 1u * (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size.y, (GLF_merged2_0_1_4_1_1_13readsubgroup_size.y) ^ 0u))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1))) % _GLF_IDENTITY(GLF_merged2_0_1_4_1_1_13readsubgroup_size, (GLF_merged2_0_1_4_1_1_13readsubgroup_size) - uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7230.9714, -2.0)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(6683.1552, -6.5, -8564.4094, 7.9, -7.6, -4.8, 7.1, -2.6)) : mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7230.9714, -2.0)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x))).y);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(843.599, -9822.2832) / injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.4)), bool(false))), 0.0, 0.0), vec4(0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (true ? mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3(0.9, 5.6, 0.7, -2.7, 4400.9544, 451.897, 7.3, -9.8, 5.7))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) / 1u)], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) << 0))) << 0))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) * 1) + 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) + 0) ^ (0)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_1_4_1_1_13readsubgroup_size.x = read;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(false, bool(bool(false))), true, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))), true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), false))))), bool(bool(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))));
      }
    }
  }
 else
  {
  }
 do
  {
   if(subgroup_local_id + 1 < GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(vec2(-526.944, 115.142)))).x)) >> _GLF_IDENTITY(int(6), int(6))) | (_injected_loop_counter --)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(18510))), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-88.93))), injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6))) | (_injected_loop_counter --))) << (92986 & 0)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false)))))) || false), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false)), false)), (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) || false, true && ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), false, false), true)))))))))), false))) && true)))) || false)))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
                {
                }
               else
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     int i = 0;
     atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, max(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, max(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id))) | uvec3(0u, 0u, 0u)), GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id)).x], GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(checker[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), false))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) || false))) && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))))))))))))))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), false))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) || false))) && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))))))))))))))) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), false))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) || false))) && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))))))))))))))) && true))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), false))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) || false))) && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))))))))))))))) && true))))))))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), false))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) || false))) && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))))))))))))))) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), false))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) || false))) && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))))))))))))))) && true))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), false))), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))))))))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) || false))) && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), false || ((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true, false))), false), false)), false, true)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(2.6, min(_GLF_IDENTITY(2.6, min(2.6, _GLF_IDENTITY(2.6, float(mat4x3(2.6, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(2.6, (true ? _GLF_IDENTITY(2.6, clamp(2.6, 2.6, 2.6)) : _GLF_FUZZED(1.7))))))), bool(false))) + sqrt(0.0)))))))))))))))))))) && true))))))))), true, false, false)), false, false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)) < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
}
