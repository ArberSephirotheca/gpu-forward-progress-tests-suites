#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) - 0.0)) * (injectionSwitch)))).x > injectionSwitch.y))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))) || false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), false)))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.1) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)), min(uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (1u))) + 0u)))), 1u))))))), (_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)), min(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)), uint(uvec4(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(35200u) : 0u)))))), 1u)))))))) << 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true)), bool(bvec4(bool(bvec2(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true)), false, false, true)))))), false || _GLF_IDENTITY(((! (false))), (((! (false)))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))) + (injectionSwitch)))))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-82.64) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.3))))))))), (false ? _GLF_FUZZED(918.600) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(918.600) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4205.5562), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], injectionSwitch[0]))), float(_GLF_FUZZED(61.01)), bool(false))), injectionSwitch[1]), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), _GLF_IDENTITY(float(_GLF_FUZZED(61.01)), float(vec4(float(_GLF_FUZZED(61.01)), 1.0, tan(0.0), 1.0))), bool(false))), injectionSwitch[1])))).y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) << 0u)), workgroup_base)), 1u, 0u), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) << 0u)), workgroup_base)), 1u, 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(74566u, (74566u) / 1u), 120011u, _GLF_IDENTITY(99634u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(99634u, uint(uvec4(99634u, 0u, 1u, 1u)))), ~ (~ (~ (_GLF_IDENTITY(99634u, uint(uvec4(99634u, 0u, 1u, 1u)))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(74566u, (74566u) / 1u), 120011u, _GLF_IDENTITY(99634u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(99634u, uint(uvec4(99634u, 0u, 1u, 1u)))), ~ (~ (~ (_GLF_IDENTITY(99634u, uint(uvec4(99634u, 0u, 1u, 1u)))))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(74566u, (74566u) / 1u), 120011u, _GLF_IDENTITY(99634u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(99634u, uint(uvec4(99634u, 0u, 1u, 1u)))), ~ (~ (~ (_GLF_IDENTITY(99634u, uint(uvec4(99634u, 0u, 1u, 1u)))))))))), 1u)))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))), (~ (workgroup_base)) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))) | 0u)), min(workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) | ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))), (~ (workgroup_base)) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) - 0u)), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u)))), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))) | 0u)), min(workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_size))), workgroup_base)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) | 0u, max(_GLF_IDENTITY((~ (1u)) | 0u, clamp((~ (1u)) | 0u, (~ (1u)) | 0u, (_GLF_IDENTITY(~ (1u), (~ (1u)) - 0u)) | 0u)), (~ (1u)) | 0u))))), 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))), workgroup_base)), 1u, 0u))))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), 1u, 0u), (false ? _GLF_FUZZED(uvec3(74566u, 120011u, 99634u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), (~ (workgroup_base)))) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)) / 1u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)) / 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(subgroup_local_id)))) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), 0u | ((_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)))) / 1u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u), (~ (workgroup_base)) - 0u)) / 1u)))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) | (workgroup_base)), workgroup_base)))) - 0u)) / 1u)))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((0u ^ 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)) / 1u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))) / 1u))), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), max(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)) / 1u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))) / 1u))), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), max(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)) / 1u)))))) / 1u), uint(uvec4((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u), (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) - 0u)) / 1u))))), 0u, 0u, 0u))))) | 0u)), min(workgroup_base, workgroup_base)), workgroup_base)), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (~ (1u)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))), ((_GLF_IDENTITY(~ (1u), (~ (1u)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), max(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))))), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) * 1u)))), 0u, 0u))))))) * 1u)), 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), 1u, 0u)))))))) ^ 0u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(43238u) : subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))))))) * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))), ((subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) << 0u))) | ((subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) << 0u))))))) * subgroup_size : _GLF_FUZZED(25152u))), 0u | (workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), true, false, false)))), bool(bool((! (bool(bvec4(_GLF_DEAD(false), true, false, false))))))))))), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) && true))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (72964u & 0u) ^ (0u)), ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))))], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) / (0 ^ 1)) ^ 0), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0]))) - 0.0), injectionSwitch[1])).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))))), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-847.777, -9.5)) : mat2(1.0) * (injectionSwitch)))).y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(vec3(-2.4, 26.16, 25.98).y))) > injectionSwitch.y)))))), false || (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(vec3(-2.4, 26.16, 25.98).y))) > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).x > injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true), ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(1, max(1, 1)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(bitCount(next_virtual_gid)) : int(ivec4(1, _GLF_IDENTITY(1, max(1, 1)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   int i = 0;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(injectionSwitch)) : injectionSwitch)).y : _GLF_FUZZED(min(8934.5512, -88.53)))))) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, max(_GLF_IDENTITY(read, max(read, read)), read)))))), _GLF_IDENTITY(read, max(read, read))))) | (read)), (true ? _GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(min(8934.5512, -88.53)), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(min(8934.5512, -88.53)), (true ? injectionSwitch.y : _GLF_FUZZED(min(8934.5512, -88.53))) / 1.0)) + sqrt(0.0)))))) ? _GLF_FUZZED(next_virtual_gid) : read)), read))) | (read)) : _GLF_FUZZED(workgroup_id))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))), true && ((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))) && true), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))) && true))), (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), ! (! (bool(bvec3(false, false, true))))))))), false)))))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6760.4082, -5.1)) : injectionSwitch)), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6760.4082, -5.1)) : injectionSwitch)), injectionSwitch)).x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6173.4901), _GLF_FUZZED(-92.66)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(-7.7)), bvec2(true, false))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))) : injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)))).y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(! (! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) - 0.0)))), vec2(0.0, 0.0) + (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) - 0.0))))))).y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))))) || false)) || false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(exp(vec2(1294.5674, _GLF_IDENTITY(7280.2491, 0.0 + (7280.2491))))))).y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(! (! (bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (! (bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(! (! (bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (! (bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)))))))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(exp(vec2(1294.5674, _GLF_IDENTITY(7280.2491, 0.0 + (7280.2491))))))).y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! _GLF_IDENTITY((bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))), ! (! ((bool(bvec4(true && ((injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))))))))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true, true)))) || false)) && true))))))), bool(bvec3((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), clamp(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), min(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), mix(vec2((true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))[0], _GLF_FUZZED(-7.3)), vec2(_GLF_FUZZED(7959.1450), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))[1], (false ? _GLF_FUZZED(74.66) : (true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))[1]))), bvec2(false, true))))), clamp(true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(exp(vec2(1294.5674, _GLF_IDENTITY(7280.2491, min(7280.2491, _GLF_IDENTITY(7280.2491, float(_GLF_IDENTITY(mat4x2(7280.2491, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x2(6958.2234, 95.19, 681.239, -646.358, -22.38, -9.8, -9.3, 945.804)) : mat4x2(7280.2491, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))))), mix(vec2(_GLF_FUZZED(8.9), (_GLF_FUZZED(exp(vec2(1294.5674, _GLF_IDENTITY(7280.2491, min(7280.2491, _GLF_IDENTITY(7280.2491, float(_GLF_IDENTITY(mat4x2(7280.2491, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x2(6958.2234, 95.19, 681.239, -646.358, -22.38, -9.8, -9.3, 945.804)) : mat4x2(7280.2491, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))))))[1]), vec2((_GLF_FUZZED(exp(vec2(1294.5674, _GLF_IDENTITY(7280.2491, min(7280.2491, _GLF_IDENTITY(7280.2491, float(_GLF_IDENTITY(mat4x2(7280.2491, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4x2(6958.2234, 95.19, 681.239, -646.358, -22.38, -9.8, -9.3, 945.804)) : mat4x2(7280.2491, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))))))[0], _GLF_FUZZED(-7327.8140)), bvec2(true, false))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))))).y), true && (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), clamp(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, _GLF_IDENTITY(7280.2491, min(7280.2491, 7280.2491))))), true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(1294.5674, (_GLF_IDENTITY(1294.5674, mix(float(_GLF_FUZZED(683.203)), float(_GLF_IDENTITY(1294.5674, (1294.5674) - 0.0)), bool(true)))) / 1.0), 7280.2491)), mat2(1.0) * (exp(vec2(_GLF_IDENTITY(1294.5674, (_GLF_IDENTITY(1294.5674, mix(float(_GLF_FUZZED(683.203)), float(_GLF_IDENTITY(1294.5674, _GLF_IDENTITY((1294.5674) - 0.0, mix(float((1294.5674) - 0.0), float(_GLF_FUZZED(-698.415)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(true)))) / 1.0), 7280.2491))))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))))).y), ! (! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), clamp(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(1294.5674, 7280.2491))))))).y))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), false, false))), false, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)))))), true, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)))))), true, false))))), ! (! (_GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)))))), true, false)))))))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)))))), true, false))))), ! (! (_GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true)))) || false), false, false, true)))))), true, false)))))))), true, true)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(true && (false), false, true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), ((~ (64))) >> 0))))), _GLF_IDENTITY(4, max(4, 4)));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
}
