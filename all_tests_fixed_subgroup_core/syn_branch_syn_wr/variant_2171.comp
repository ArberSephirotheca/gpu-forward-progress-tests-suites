#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uint workgroup_base;
 vec2 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 vec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 uint _f1;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 mat3x2 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 mat4x2 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_17 {
 mat3x2 _f0;
 mat4x3 _f1;
 _GLF_struct_16 _f2;
 mat3x4 _f3;
 mat2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 uvec4 _f1;
 uint workgroup_size;
 mat4x2 _f2;
 mat4x3 _f3;
 uint _f4;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_9 {
 uint subgroup_id;
 bool _f0;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 bvec2 _f1;
 ivec2 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_6 {
 float _f0;
 float _f1;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 _GLF_struct_6 _f1;
 mat2 _f2;
 uvec4 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_11 {
 int _f0;
 _GLF_struct_8 _f1;
 float _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 mat3 _f3;
 bool _f4;
 mat3x2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uint _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 mat2 _f4;
 int _f5;
 int _f6;
} ;

struct _GLF_struct_5 {
 uint subgroup_local_id;
 _GLF_struct_4 _f0;
 bvec4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true, false))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1, _GLF_struct_8(uvec3(1u), _GLF_struct_6(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.7) : 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.7) : 1.0)), clamp(1.0, 1.0, 1.0))))), mat2(1.0), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), ~ (~ (_GLF_IDENTITY(1u, (1u) * 1u))))), _GLF_struct_7(vec2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), ivec2(1), uvec3(1u), 1u)), 1.0, _GLF_struct_9(gl_SubgroupID, true), _GLF_struct_10(uvec2(1u), vec2(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.4)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupInvocationID, _GLF_struct_4(_GLF_struct_0(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), _GLF_IDENTITY(0u | (uint(uvec4(1u, 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_size))), 0u + _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), 1u * ((~ (0u)))), (_GLF_IDENTITY(~ (0u), uint(_GLF_IDENTITY(uint(~ (0u)), max(uint(~ (0u)), _GLF_IDENTITY(uint(~ (0u)), clamp(uint(~ (0u)), uint(~ (0u)), uint(~ (0u))))))))))))))))))), (_GLF_IDENTITY(0u | (uint(uvec4(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u + _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), 1u * ((~ (0u)))), (~ (0u)))))))))))), 0u | _GLF_IDENTITY((0u | (uint(uvec4(1u, 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u + _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size)))), 1u * ((~ (0u)))), (~ (0u))))))))))))), (false ? _GLF_FUZZED(subgroup_size) : (0u | (uint(uvec4(1u, 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u + _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size)))), 1u * ((~ (0u)))), (~ (0u))))))))))))))))) | (0u | (uint(uvec4(1u, 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u + _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), 1u * ((_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size))), 0u)), uint(uvec2(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))))), 0u)), 1u))))) >> 0u)))), (~ (0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), 1u * ((_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size))), 0u)), uint(uvec2(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))))), 0u)), 1u))))) >> 0u)))), (~ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), 1u * ((_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size))), 0u)), uint(uvec2(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))))), 0u)), 1u))))) >> 0u)))), (~ (0u)))), (_GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), 1u * ((_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size))), 0u)), uint(uvec2(uint(uvec2(_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))))), 0u)), 1u))))) >> 0u)))), (~ (0u))))) - 0u)) * 1u)))))))))))))))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), 0u | (uint(uvec4(1u, 1u, 0u, 0u)))))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), 0u | _GLF_IDENTITY((uint(uvec4(1u, 1u, 0u, 0u))), ~ (~ ((uint(uvec4(1u, 1u, 0u, 0u)))))))))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 0u), min(uvec4(1u, 1u, 0u, 0u), uvec4(1u, 1u, 0u, 0u)))), 0u | (uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))), 0u)))))))), 1u, ivec4(1)), _GLF_struct_1(ivec2(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(7), int(7))) + _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), 0 ^ ((1))), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(64487)))))))), _GLF_struct_2(vec3(1.0), mat2x4(1.0), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), clamp(_GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (1u) - 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(subgroup_size), ~ (~ (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(subgroup_size)))))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), uint(uvec3(_GLF_IDENTITY(1u, (1u) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))) - 0u))), mat3(1.0), true, mat3x2(1.0), mat3x2(1.0)), _GLF_struct_3(mat3(1.0)), mat2(1.0), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), int(ivec3(int(ivec2(1, 1)), 1, 0)))), 1), bvec4(true));
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(0.6)), bvec2(false, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))) / 1.0), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(5.5) : injectionSwitch.y), ((false ? _GLF_FUZZED(5.5) : injectionSwitch.y)) - 0.0))), min((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.5) : injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(5.5, min(_GLF_IDENTITY(5.5, float(mat3x2(5.5, 0.0, 1.0, 0.0, 1.0, 1.0))), 5.5))) : injectionSwitch.y))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9023.7296)), float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-9023.7296)), (float(_GLF_FUZZED(-9023.7296))) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), float(-8.5), bool(true))))), float((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.5) : injectionSwitch.y)))), bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4(1.0), uvec4(1u), gl_WorkGroupSize.x, mat4x2(1.0), mat4x3(1.0), 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(mat3x2(1.0), mat4x3(1.0), _GLF_struct_16(_GLF_struct_13(bvec2(true), mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(0.4), (true ? _GLF_IDENTITY(_GLF_FUZZED(0.4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(0.4) : _GLF_FUZZED(-47.22))) : _GLF_FUZZED(-5.5))), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (false || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))))))), mat4x3(1.0), mat2x3(1.0)), _GLF_struct_14(vec4(1.0), 1u), mat4x2(1.0), _GLF_struct_15(_GLF_struct_replacement_12.workgroup_size * workgroup_id, vec2(1.0), mat3x4(1.0), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(1.0, (1.0) - length(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))))))), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0), (true ? mat3x4((1.0), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x4(-254.526, 9249.1037, -90.13, -4.8, -8.5, -7.5, -11.17, -332.575, 9.3, 62.12, 5.6, -718.677)))))) / exp(0.0))), _GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(8762.3730), _GLF_FUZZED(-3211.5901)), vec3(_GLF_FUZZED((false ? -695.959 : -55.31)), (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), ivec4(1))), mat3x4(1.0), mat2(1.0), uvec3(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(sin(vec2(0.0, 0.0))) + (injectionSwitch), max(_GLF_IDENTITY(abs(sin(vec2(0.0, 0.0))) + (injectionSwitch), vec2(0.0, 0.0) + (abs(sin(vec2(0.0, 0.0))) + (injectionSwitch))), abs(sin(vec2(0.0, 0.0))) + (injectionSwitch)))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.x)) : _GLF_FUZZED(2.6))) < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))) * 1.0))), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! ((! (injectionSwitch.x < injectionSwitch.y))), bool(bool(! ((! (injectionSwitch.x < injectionSwitch.y))))))) && true))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         return;
        }
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_struct_replacement_17._f2._f3.workgroup_base + _GLF_struct_replacement_11._f3.subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, (_GLF_struct_replacement_5.subgroup_local_id) + 0u))), (uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, (_GLF_struct_replacement_5.subgroup_local_id) + 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_struct_replacement_5.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, (_GLF_struct_replacement_5.subgroup_local_id) / 1u), _GLF_struct_replacement_5.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, (_GLF_struct_replacement_5.subgroup_local_id) << (0u & _GLF_IDENTITY(154252u, (154252u) / 1u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_17._f2._f3.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_17._f2._f3.workgroup_base, max(_GLF_struct_replacement_17._f2._f3.workgroup_base, _GLF_struct_replacement_17._f2._f3.workgroup_base)), _GLF_IDENTITY(_GLF_struct_replacement_17._f2._f3.workgroup_base, (_GLF_struct_replacement_17._f2._f3.workgroup_base) / 1u))) + _GLF_IDENTITY(_GLF_struct_replacement_11._f3.subgroup_id, (_GLF_struct_replacement_11._f3.subgroup_id) ^ 0u) * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, max(_GLF_struct_replacement_5.subgroup_local_id, _GLF_struct_replacement_5.subgroup_local_id)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(exp(-0.1)) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(544.206), _GLF_FUZZED(433.121)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(true, (true) || false))), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), _GLF_IDENTITY(bool(bvec3(! (bool(bvec4(false, true, true, true))), false, false)), (bool(bvec3(! (bool(bvec4(false, true, true, true))), false, false))) && true)))))), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) || false)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), false, false)), false || (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), false, false))))), ! (! (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false))))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)) || false)), true)), ! (! (bool(bvec4(false, true, true, true))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ((false)) || false))), ((! (! _GLF_IDENTITY((false), ((false)) || false)))) && true), (_GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ((false)) || false))), ((! (! _GLF_IDENTITY((false), ((false)) || false)))) && true), (! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ((false)) || false))), ((! (! _GLF_IDENTITY((false), ((false)) || false)))) && true)) || false)) && true))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))))))), true && ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), bool(bool(bool(bool(_GLF_IDENTITY(true, (true) || false)))))))), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))) && true)), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false, (((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false) || false))))))))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), ! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false || (((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))) || false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), ! (! (bool(bvec4(false, true, true, true))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true, false)))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true, false)))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true, false)))))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true, false)))))), true)))))))))))))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false || (((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))) || false))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! _GLF_IDENTITY((! (! (true))), false || (_GLF_IDENTITY((! (! (true))), ((! (! (true)))) && true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), ! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_IDENTITY(false || (((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true && (false || (((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))) || false)))))) || false)))))), _GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false || (bool((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))) || false))))) && true))))))), true, false, true)), bool(bvec2(bool(bvec4(! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), ! (! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))))))), _GLF_IDENTITY(true, ! (! (true))), false, true)), false)))))))))))), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true))), false)))))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true)))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), bool(bvec2(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), false, true)))) && true)))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (_GLF_IDENTITY(! (true && (true)), ! (! (! (true && (true))))))), false, true)))) && true)))), _GLF_IDENTITY(true, ! (! (true))), true))), ((bool(bvec4(false, true, true, true)))) && true), bool(bvec2(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true && (true)), false || ((true && (true)))), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true), false))))))))) && true)))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), false))))), true)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((false)) || false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true)))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))))))))), ! (! (bool(bvec4(false, true, true, true))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true)))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), false))), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true))), bool(bvec2(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true))), false)))))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true)))) && true)))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), bool(bvec2(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), false, true)))) && true)))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (_GLF_IDENTITY(! (true && (true)), ! (! (! (true && (true))))))), false, true)))) && true)))), _GLF_IDENTITY(true, ! (! (true))), true))), ((bool(bvec4(false, true, true, true)))) && true), bool(bvec2(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true && (true)), false || ((true && (true)))), bool(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true))), (_GLF_IDENTITY(! (true && (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (true && (true)), false || (! (true && (true)))), false, true), false))))))))) && true)))), true, true))), ((bool(bvec4(false, true, true, true)))) && true), false))))), true)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((false)) || false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true)))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true))))))))), ! (! (bool(bvec4(false, true, true, true))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true)))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true)), ! (! (bool(bvec4(false, true, true, true))))))), false))), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(1.0, 0.0, 1.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))), 0.0)), vec2(1.0, 1.0) * (vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.0)), bool(false)))), bool(true))), 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))), 0.0))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_struct_replacement_5.subgroup_local_id + 1 < subgroup_size)))), false || (! (_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_struct_replacement_5.subgroup_local_id + 1 < subgroup_size)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), true, true))))
    return;
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), min(~ ((64)), ~ ((64)))))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(~ (~ ((4))), (~ (~ ((4)))) | (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((++ i))))))), ~ (~ (~ (~ ((4))))))))) | (4)));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat2(injectionSwitch.x, cos(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)) > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
