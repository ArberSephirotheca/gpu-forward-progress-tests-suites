#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), bool(_GLF_IDENTITY(bvec3((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true), bvec3(bvec3(bvec3((false) && true, false, true))))))))))) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))) && true, false, false, true)), true && (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, (true) || false)) || false)))))) && true, false, false, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(65.36)), float((injectionSwitch.x)), bool(_GLF_IDENTITY(true, bool(bool(true)))))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          break;
         break;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true))))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true)))))))) && true))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, false))))));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
          return;
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((0 & 11981) | 0), ! (! (_injected_loop_counter != ((0 & 11981) | 0))))); _injected_loop_counter --)
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true)))))) && true)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) && true), false, true))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(38622) : 0)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     do
                      {
                       for(int _injected_loop_counter = (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
                          return;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(50.90), _GLF_FUZZED(-7.3), _GLF_FUZZED((-746.991 * -53.22))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(1793.9433) : dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(mat4x2(vec4(1.0, 0.0, 0.0, 0.0), 0.0, tan(0.0), 0.0, 1.0)))) + vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0, 0.0, 1.0, determinant(mat4(abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), (float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, determinant(mat4(abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1510.7374))), 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1243.2140) : 0.0)), 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? vec3(1.0, 1.0, 1.0) : _GLF_FUZZED(vec3(-9.4, -3.5, -4843.6723)))), vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_IDENTITY((vec3(1.0, 1.0, 1.0))[1], (true ? _GLF_IDENTITY((vec3(1.0, 1.0, 1.0))[1], clamp((vec3(1.0, 1.0, 1.0))[1], _GLF_IDENTITY((vec3(1.0, 1.0, 1.0))[1], (false ? _GLF_FUZZED(875.176) : (vec3(1.0, 1.0, 1.0))[1])), (vec3(1.0, 1.0, 1.0))[1])) : _GLF_FUZZED(160.313))), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(6.7), ((vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-31.78)), vec3(((vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED((false ? 36.22 : -44.19)), ((vec3(1.0, 1.0, 1.0)))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true)))))[2]), vec3(_GLF_FUZZED(50.90), _GLF_FUZZED(-7.3), _GLF_FUZZED((-746.991 * -53.22))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0))))), 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mix(vec4((vec4(1.0, 0.0, 0.0, 0.0))[0], (vec4(1.0, 0.0, 0.0, 0.0))[1], (vec4(1.0, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(614.407)), vec4(_GLF_FUZZED(1.9), _GLF_FUZZED(9333.7413), _GLF_FUZZED((-2.4 * -243.149)), (vec4(1.0, 0.0, 0.0, 0.0))[3]), bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, exp(0.0), round(length(normalize(1.0))), 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.x, exp(0.0), round(length(normalize(1.0))), 1.0), min(vec4(injectionSwitch.x, exp(0.0), round(length(normalize(1.0))), 1.0), vec4(injectionSwitch.x, exp(0.0), round(length(normalize(1.0))), 1.0))), vec4(injectionSwitch.x, exp(0.0), round(length(normalize(1.0))), 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0, 0.0, 1.0, determinant(mat4(abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), (float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, determinant(mat4(abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1510.7374))), 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))) - 0.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(50.90), _GLF_FUZZED(-7.3), _GLF_FUZZED((-746.991 * -53.22))), bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, false))))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 1.0, 1.0, 1.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) + vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(2.3))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0, 0.0, 1.0, determinant(mat4(abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), (float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-68.43) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), clamp(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, determinant(mat4(abs(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-909.210), _GLF_FUZZED(-3027.5083)), min(vec2(_GLF_FUZZED(-909.210), _GLF_FUZZED(-3027.5083)), vec2(_GLF_FUZZED(-909.210), _GLF_FUZZED(-3027.5083)))), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), abs(1.0), 1.0, 0.0)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(733.721), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2140.2583) : _GLF_FUZZED(733.721))), _GLF_FUZZED(-501.846)), vec2((vec2(mat4x3(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-909.210), _GLF_IDENTITY(_GLF_FUZZED(-3027.5083), min(_GLF_FUZZED(-3027.5083), _GLF_FUZZED(-3027.5083)))), vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], mix(float((vec2(1.0, 0.0))[0]), float(_GLF_FUZZED(vec2(-283.258, 2.7).g)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (vec2(1.0, 0.0))[1]), bvec2(true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), abs(1.0), 1.0, 0.0)))[0], (_GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-909.210), _GLF_FUZZED(-3027.5083)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), abs(1.0), 1.0, 0.0)), vec2(mat3x4(vec2(mat4x3(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-909.210), _GLF_FUZZED(-3027.5083)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), abs(1.0), 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(true, true)))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1510.7374))), 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(78.32) : 0.0))))))) - 0.0))) || false)) || false))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))) || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           continue;
                          }
                         return;
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED((-2.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0), clamp(vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0), vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0), vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0), clamp(vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0), vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0), vec4(_GLF_FUZZED((-2.1)), 0.0, 0.0, 0.0))))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, abs(0.0)))), (injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]), clamp(max((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(212.383, -3.9, 85.68, -5.4, 69.01, 859.114, -5.0, -9.6, 11.49, 3.7, 460.713, -5.2)) : mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))))[1], (injectionSwitch)[1]), min(max((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], (injectionSwitch)[1]), max((injectionSwitch)[1], (injectionSwitch)[1]))), max((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED((-2.1)), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, abs(0.0)))), (injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]), clamp(max((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(212.383, -3.9, 85.68, -5.4, _GLF_IDENTITY(69.01, (false ? _GLF_FUZZED(length(-56.91)) : 69.01)), 859.114, -5.0, -9.6, 11.49, 3.7, 460.713, -5.2)) : mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))))[1], (injectionSwitch)[1]), min(max((injectionSwitch)[1], (injectionSwitch)[1]), max((injectionSwitch)[1], (injectionSwitch)[1]))), max((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED((-2.1)), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, abs(0.0)))), (injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]), clamp(max((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-82.09)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(-2.5, 6.4, -81.33).t)), float(0.0), bool(true)))), bool(true))), 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(212.383, -3.9, 85.68, -5.4, 69.01, 859.114, -5.0, -9.6, 11.49, 3.7, 460.713, -5.2)) : mat4x3((injectionSwitch), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))))[1], (injectionSwitch)[1]), min(max((injectionSwitch)[1], (injectionSwitch)[1]), max((injectionSwitch)[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1], (injectionSwitch)[1]))))), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_FUZZED(_GLF_IDENTITY((-2.1), (false ? _GLF_FUZZED(tanh(6.6)) : _GLF_IDENTITY((-2.1), (true ? _GLF_IDENTITY((-2.1), (true ? (-2.1) : _GLF_FUZZED(-81.81))) : _GLF_FUZZED(-1.7)))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, abs(0.0)))), (injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]), clamp(max((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(mat4x3(212.383, -3.9, 85.68, -5.4, _GLF_IDENTITY(69.01, (false ? _GLF_FUZZED(length(fract(vec4(922.239, 7017.1821, -0.6, 7162.4209)))) : 69.01)), 859.114, -5.0, -9.6, 11.49, 3.7, 460.713, -5.2)) : mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(mat4x3(212.383, -3.9, 85.68, -5.4, _GLF_IDENTITY(_GLF_IDENTITY(69.01, (false ? _GLF_FUZZED(length(fract(vec4(922.239, 7017.1821, -0.6, 7162.4209)))) : 69.01)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(69.01, (false ? _GLF_FUZZED(length(fract(vec4(922.239, 7017.1821, -0.6, 7162.4209)))) : 69.01)), (_GLF_IDENTITY(69.01, (false ? _GLF_FUZZED(length(fract(vec4(922.239, 7017.1821, -0.6, 7162.4209)))) : 69.01))) / 1.0), 0.0, round(length(normalize(1.0))), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 859.114, -5.0, -9.6, 11.49, 3.7, 460.713, -5.2)) : mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))))[1], (injectionSwitch)[1]), min(max((injectionSwitch)[1], (injectionSwitch)[1]), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], (injectionSwitch)[1]))), max(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch))))[1], (injectionSwitch)[1]))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(vec3(-292.010, -760.908, 41.50).b), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(-1.1) : -7.5)))), vec2(_GLF_FUZZED((-2.1)), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, abs(0.0)))), (injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]), clamp(max((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(212.383, -3.9, 85.68, -5.4, 69.01, 859.114, -5.0, -9.6, 11.49, 3.7, 460.713, _GLF_IDENTITY(-5.2, clamp(-5.2, _GLF_IDENTITY(-5.2, mix(float(-5.2), float(_GLF_FUZZED(23.13)), bool(false))), -5.2)))) : mat4x3((injectionSwitch), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(300.680)), float(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), bool(true)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))))[1], (injectionSwitch)[1]), min(max((injectionSwitch)[1], (injectionSwitch)[1]), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))) + vec2(0.0, 0.0))))[1], (injectionSwitch)[1]))), max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], (injectionSwitch)[1]))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[1]), bvec2(false, true))).y))) && true))))))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
                      {
                       return;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               return;
                              }
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(false))
                            continue;
                          }
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(false))
                          continue;
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true), false, true))))))))
                        break;
                       if(_GLF_DEAD(false))
                        break;
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.8)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        break;
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.7, 0.9)) : injectionSwitch)).y)))))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
              return;
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(faceforward(1.8, 3.2, -70.92)) : injectionSwitch[0])), injectionSwitch[1])).y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) && true)))) || false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (injectionSwitch.x < injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) * 1)) + 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), false))))))
            return;
           return;
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))) && true)) || false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > (1 ^ int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(1.0, 1.0, 1.0)), injectionSwitch.y)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(98.57), (true ? _GLF_FUZZED(98.57) : _GLF_FUZZED(round(-6.7))))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), false || ((_GLF_IDENTITY(true, (true) || false)))))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, 0u, 0u))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.7)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0)))))))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(359.183), _GLF_FUZZED(vec3(0.0, -5.3, 8.5).t)), vec2((vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))[0], (vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))), ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))) - vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(-26.42, -8.4)))), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0))), mix(vec2((min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(-26.42, -8.4)))), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0))))[0], _GLF_FUZZED((37.26 * -2.4))), vec2(_GLF_FUZZED((-13.82 + -0.1)), (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(-26.42, -8.4)))), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0))))[1]), bvec2(false, true)))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)))) / vec2(1.0, 1.0)))).y) / 1.0)))))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) >> 0)) - _GLF_IDENTITY(0, ~ (~ (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(758.707)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), min(float(float(1.0)), float(float(1.0))))))), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.2, 8341.3055)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) + abs(abs(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(0.0), float(_GLF_FUZZED(9543.5599)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, mix(float(_GLF_FUZZED(3127.1127)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
            }
          }
        }
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), 1u, 0u), (uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), 1u, 0u)) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), uint(1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) << 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) << 0u))) | 0u) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(90499u)))) | 0u)) << 0u), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (uint(1)) << _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uint(0u))) : _GLF_FUZZED(subgroup_local_id))))))) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) << 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | 0u))))) : _GLF_FUZZED(subgroup_local_id))), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) >> 0u), 1u * (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_IDENTITY(1, 0 | (1)))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, 0 | (1)))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, 0 | (1)))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 + (1)))))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) / 1u)) * 1u), 1u * (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))))), uint(uvec3(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, 0 | (1)))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-18572))))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), max(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))))))), 1u, 0u)))))), 1u)) | uvec2(0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), clamp(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(0u, (0u) >> 0u)))), uvec3(uint(1), 1u, 0u), uvec3(uint(1), 1u, 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) - 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), min((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)))) : _GLF_FUZZED(bitfieldReverse(uvec3(139867u, 42882u, 36728u))))))))) >> uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u)))))))))), min(uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), uint(1))), 1u, 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))))), uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)))))))))), 1u), _GLF_IDENTITY(uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u))))), (false ? _GLF_FUZZED(uvec2(84211u, 55178u)) : _GLF_IDENTITY(uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u))))), (uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)))))) << uvec2(0u, 0u)))))))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec2((0.0), 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(_GLF_IDENTITY((0.0), max((0.0), (0.0))), 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3x4(mat3x4(mat3x4(vec2((0.0), 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) - abs(0.0)), injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u), _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u), uvec3(uvec3(uvec3(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(subgroup_id))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u, 1u)))), 0u))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)))))), (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), uint(uvec3((uint(1)), 0u, 0u))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)) : _GLF_FUZZED(subgroup_id)))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), min(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), 0u ^ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1))))))))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u + (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) / 1u), 0u), min(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u), uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 1u))), _GLF_IDENTITY(uint(1), (uint(1)) / 1u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), 0u | (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), (uvec3(uint(1), 1u, 0u)) | (_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), (uvec3(uint(1), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, max(0u, 0u)))) + (1u)))))) | (1u)), 0u)))), max(~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), ~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))))))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)) * _GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), 0u ^ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)))) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))), uint(_GLF_IDENTITY(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u), (true ? uvec3(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u) : _GLF_FUZZED(uvec3(101698u, 175618u, 105422u)))))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))), (_GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))))) << 0u), (1u * _GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) | (uint(uint(1)))))))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))))) ^ 0u))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 0u ^ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))))), (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), int(ivec3((1), 0, 1))))), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), max(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (true ? (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), min((true ? 1u : _GLF_FUZZED(subgroup_id)), (true ? 1u : _GLF_FUZZED(subgroup_id))))), 0u)), 0u ^ (uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))) / 1u, ((uint(_GLF_IDENTITY(1, min(1, 1)))) / 1u) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(((uint(1))) / 1u, (_GLF_IDENTITY(((uint(1))) / 1u, 1u * (((uint(1))) / 1u))) | 0u)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(atomicAdd(workgroup_size, virtual_gid)) : _GLF_IDENTITY(1u, (1u) | 0u)))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, max((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, max((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))) ^ 0u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(uint(uvec4((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)), max(uint(uvec4((true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)), uint(uvec4((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)))))), 0u)))))))), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> _GLF_IDENTITY(0, min(0, 0))) >> 0))) << 0)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u))))) | (uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))) >> uvec3(0u, 0u, 0u))))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / _GLF_IDENTITY(1u, (1u) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u), (uvec3(_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), clamp((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)))), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u))))), 0u | ((_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))), 1u, 0u)))))))), 1u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), clamp(~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))))))), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? _GLF_IDENTITY((uint(1)) / 1u, ~ (~ ((uint(1)) / 1u))) : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), max((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(1, max(1, 1))), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), (uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), clamp(_GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), min(uint(uvec4(1u, 1u, 0u, 0u)), uint(uvec4(1u, 1u, 0u, 0u)))), uint(uvec4(1u, 1u, 0u, 0u)), uint(uvec4(1u, 1u, 0u, 0u))))), 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)))), (uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) / 1u, clamp((uint(1)) / 1u, (uint(1)) / _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u))), (clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, (0u) / 1u))), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), 1u)))) | uvec2(0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), clamp(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(0u, (0u) >> 0u)))), uvec3(uint(1), 1u, 0u), uvec3(uint(1), 1u, 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) - 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), min((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)))) : _GLF_FUZZED(bitfieldReverse(uvec3(139867u, 42882u, 36728u))))))))) >> uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u)))))))))), min(uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), uint(1))), 1u, 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))))), uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)))))))))), 1u), _GLF_IDENTITY(uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u))))), (false ? _GLF_FUZZED(uvec2(84211u, 55178u)) : _GLF_IDENTITY(uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u))))), (uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)))))) << uvec2(0u, 0u)))))))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec2((0.0), 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(_GLF_IDENTITY((0.0), max((0.0), (0.0))), 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3x4(mat3x4(mat3x4(vec2((0.0), 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) - abs(0.0)), injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u), _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u), uvec3(uvec3(uvec3(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(subgroup_id))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u, 1u)))), 0u))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)))))), (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), uint(uvec3((uint(1)), 0u, 0u))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)) : _GLF_FUZZED(subgroup_id)))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), min(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), 0u ^ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1))))))))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u + (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) / 1u), 0u), min(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u), uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 1u))), _GLF_IDENTITY(uint(1), (uint(1)) / 1u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), 0u | (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), (uvec3(uint(1), 1u, 0u)) | (_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), (uvec3(uint(1), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, max(0u, 0u)))) + (1u)))))) | (1u)), 0u)))), max(~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), ~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))))))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)) * _GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), 0u ^ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)))) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))), uint(_GLF_IDENTITY(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u), (true ? uvec3(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u) : _GLF_FUZZED(uvec3(101698u, 175618u, 105422u)))))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))), (_GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))))) << 0u), (1u * _GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) | (uint(uint(1)))))))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))))) ^ 0u))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 0u ^ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))))), (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), int(ivec3((1), 0, 1))))), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), max(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (true ? (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), min((true ? 1u : _GLF_FUZZED(subgroup_id)), (true ? 1u : _GLF_FUZZED(subgroup_id))))), 0u)), 0u ^ (uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))) / 1u, ((uint(_GLF_IDENTITY(1, min(1, 1)))) / 1u) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(((uint(1))) / 1u, (_GLF_IDENTITY(((uint(1))) / 1u, 1u * (((uint(1))) / 1u))) | 0u)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(atomicAdd(workgroup_size, virtual_gid)) : _GLF_IDENTITY(1u, (1u) | 0u)))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, max((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, max((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))) ^ 0u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(uint(uvec4((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)), max(uint(uvec4((true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)), uint(uvec4((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)))))), 0u)))))))), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> _GLF_IDENTITY(0, min(0, 0))) >> 0))) << 0)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u))))) | (uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))) >> uvec3(0u, 0u, 0u))))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / _GLF_IDENTITY(1u, (1u) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u), (uvec3(_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), clamp((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)))), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u))))), 0u | ((_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))), 1u, 0u)))))))), 1u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), clamp(~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))))))), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? _GLF_IDENTITY((uint(1)) / 1u, ~ (~ ((uint(1)) / 1u))) : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), max((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(1, max(1, 1))), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), (uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), clamp(_GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), min(uint(uvec4(1u, 1u, 0u, 0u)), uint(uvec4(1u, 1u, 0u, 0u)))), uint(uvec4(1u, 1u, 0u, 0u)), uint(uvec4(1u, 1u, 0u, 0u))))), 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)))), (uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) / 1u, clamp((uint(1)) / 1u, (uint(1)) / _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u))), (clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, (0u) / 1u))), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), 1u)))) | uvec2(0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), clamp(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(0u, (0u) >> 0u)))), uvec3(uint(1), 1u, 0u), uvec3(uint(1), 1u, 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) - 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), min((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (true ? _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp((uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)))) : _GLF_FUZZED(bitfieldReverse(uvec3(139867u, 42882u, 36728u))))))))) >> uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), _GLF_IDENTITY(1u, (1u) >> 0u), 0u)))))))))), min(uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), uint(1))), 1u, 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uint(uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u))))), uint(uvec3(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 1u, 0u)))))))))), 1u), _GLF_IDENTITY(uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u))))), (false ? _GLF_FUZZED(uvec2(84211u, 55178u)) : _GLF_IDENTITY(uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u))))), (uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 1u)))))) << uvec2(0u, 0u)))))))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec2((0.0), 0.0), vec2(_GLF_IDENTITY(mat3x4(vec2(_GLF_IDENTITY((0.0), max((0.0), (0.0))), 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3x4(mat3x4(mat3x4(vec2((0.0), 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) - abs(0.0)), injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u), _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u), uvec3(uvec3(uvec3(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))))), uint(uvec4(uint(uvec3(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(subgroup_id))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u, 1u)))), 0u))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u)))))), (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), uint(uvec3((uint(1)), 0u, 0u))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)) : _GLF_FUZZED(subgroup_id)))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), min(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1)))), 0u ^ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) / 1))))))))) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u + (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) / 1u), 0u), min(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u), uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), 1u))), _GLF_IDENTITY(uint(1), (uint(1)) / 1u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), 0u | (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), (uvec3(uint(1), 1u, 0u)) | (_GLF_IDENTITY(uvec3(uint(1), 1u, 0u), (uvec3(uint(1), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, max(0u, 0u)))) + (1u)))))) | (1u)), 0u)))), max(~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))), ~ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))))))), (min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)) * _GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u), 0u ^ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)))) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))), uint(_GLF_IDENTITY(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u), (true ? uvec3(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u) : _GLF_FUZZED(uvec3(101698u, 175618u, 105422u)))))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))), (_GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))))) << 0u), (1u * _GLF_IDENTITY((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))), 0u | ((min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), ((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) | (uint(uint(1)))))))) / 1u) >> 0u)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u)))))))) ^ 0u))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))), 0u ^ (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u)))))), (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), int(ivec3((1), 0, 1))))), (uint(1)) / 1u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), max(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (true ? (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), min((true ? 1u : _GLF_FUZZED(subgroup_id)), (true ? 1u : _GLF_FUZZED(subgroup_id))))), 0u)), 0u ^ (uint(uvec3(uint(1), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(1, 1)))) / 1u, ((uint(_GLF_IDENTITY(1, min(1, 1)))) / 1u) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), uint(uvec3(uint(1), 1u, 0u)))), (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(((uint(1))) / 1u, (_GLF_IDENTITY(((uint(1))) / 1u, 1u * (((uint(1))) / 1u))) | 0u)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(atomicAdd(workgroup_size, virtual_gid)) : _GLF_IDENTITY(1u, (1u) | 0u)))), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, max((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u))) | ((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, clamp((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, max((_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u, (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) / 1u)))) ^ 0u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(uint(uvec4((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)), max(uint(uvec4((true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)), uint(uvec4((true ? 1u : _GLF_FUZZED(subgroup_id)), 0u, 0u, 0u)))))), 0u)))))))), 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> _GLF_IDENTITY(0, min(0, 0))) >> 0))) << 0)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u))))) | (uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))) >> uvec3(0u, 0u, 0u))))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / _GLF_IDENTITY(1u, (1u) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u), (uvec3(_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), clamp((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)))), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u))))), 0u | ((_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))), 1u, 0u)))))))), 1u)), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), clamp(~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(uint(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(1) : _GLF_FUZZED(virtual_gid)))))))), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? _GLF_IDENTITY((uint(1)) / 1u, ~ (~ ((uint(1)) / 1u))) : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), max((uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(_GLF_IDENTITY(1, max(1, 1))), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)), (uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), clamp(_GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), min(uint(uvec4(1u, 1u, 0u, 0u)), uint(uvec4(1u, 1u, 0u, 0u)))), uint(uvec4(1u, 1u, 0u, 0u)), uint(uvec4(1u, 1u, 0u, 0u))))), 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, clamp((uint(1)) / 1u, (uint(1)) / 1u, _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))))))), 1u)))), (uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY((uint(1)), uint(uvec2((uint(1)), 1u))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) >> 0))) << 0)), uint(uvec3(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 1u, 0u)))), 1u * (min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) / 1u, clamp(_GLF_IDENTITY((uint(1)) / _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 0u ^ ((uint(1)) / 1u)), _GLF_IDENTITY((uint(1)) / 1u, 0u + ((uint(1)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) / 1u, clamp((uint(1)) / 1u, (uint(1)) / _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY((uint(1)) / 1u, (true ? (uint(1)) / 1u : _GLF_FUZZED(virtual_gid)))))))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u))), (clamp(_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec3(uint(1), 1u, 0u)), 0u ^ (uint(uvec3(uint(1), 1u, 0u)))))), _GLF_IDENTITY(uint(uvec3(uint(1), 1u, _GLF_IDENTITY(0u, (0u) / 1u))), clamp(uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)), uint(uvec3(uint(1), 1u, 0u)))), uint(uvec3(uint(1), 1u, 0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), 1u)))) | uvec2(0u, 0u))) : _GLF_FUZZED(packSnorm4x8(vec4(814.959, 8.8, -4242.5579, -9686.6989)))))) - 0u)) * 1u))), 4, 64, 4);
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           return;
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    break;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, 1, 1))), ~ (~ (0)))) | (0), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, 1, 1))), (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, 1, 1)))) / 1), ~ (~ (0)))) | (0), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, 1, _GLF_IDENTITY(1, 0 + (1))))), ~ (~ (0)))) | (0)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))) || false)) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1 < subgroup_size)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), false || (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (0 >> _GLF_IDENTITY(int(7), int(7))) | (_injected_loop_counter ++)))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          return;
                        }
                      }
                     else
                      {
                      }
                     break;
                    }
                   return;
                  }
                }
              }
            }
           int i = 0;
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (true ? read : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) ^ (0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), uint(0u))))))), 4, 64, 4);
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              continue;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))))))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
}
