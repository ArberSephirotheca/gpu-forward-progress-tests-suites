#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_52 {
 bvec4 _f0;
 mat2 _f1;
 ivec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_50 {
 ivec4 _f0;
 bool _f1;
} ;

struct _GLF_struct_49 {
 mat3x4 _f0;
 mat3 _f1;
 bvec3 _f2;
 vec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_51 {
 _GLF_struct_49 _f0;
 _GLF_struct_50 _f1;
} ;

struct _GLF_struct_48 {
 uvec4 _f0;
} ;

struct _GLF_struct_46 {
 vec3 _f0;
 vec2 _f1;
 float _f2;
} ;

struct _GLF_struct_47 {
 mat2x4 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 _GLF_struct_46 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_53 {
 float _f0;
 mat4x2 _f1;
 _GLF_struct_47 _f2;
 _GLF_struct_48 _f3;
 uint _f4;
 _GLF_struct_51 _f5;
 int i;
 _GLF_struct_52 _f6;
} ;

struct _GLF_struct_43 {
 int _f0;
 float _f1;
 mat3x2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_42 {
 uvec3 _f0;
 bvec2 _f1;
 mat2x3 _f2;
 vec3 _f3;
 mat3x4 _f4;
 vec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_41 {
 mat4x2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_44 {
 _GLF_struct_41 _f0;
 mat2x4 _f1;
 _GLF_struct_42 _f2;
 _GLF_struct_43 _f3;
} ;

struct _GLF_struct_40 {
 vec4 _f0;
} ;

struct _GLF_struct_45 {
 mat4x3 _f0;
 _GLF_struct_40 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 uint workgroup_size;
 _GLF_struct_44 _f4;
} ;

struct _GLF_struct_37 {
 mat3x4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_36 {
 ivec3 _f0;
 mat3 _f1;
 uint _f2;
 uvec4 _f3;
 bvec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_38 {
 _GLF_struct_36 _f0;
 ivec3 _f1;
 _GLF_struct_37 _f2;
} ;

struct _GLF_struct_39 {
 ivec3 _f0;
 _GLF_struct_38 _f1;
} ;

struct _GLF_struct_33 {
 ivec2 _f0;
 mat2x3 _f1;
 float _f2;
 mat4x2 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_32 {
 mat4x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_31 {
 ivec2 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 uvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_34 {
 vec3 _f0;
 _GLF_struct_31 _f1;
 mat4 _f2;
 _GLF_struct_32 _f3;
 _GLF_struct_33 _f4;
} ;

struct _GLF_struct_29 {
 mat3x2 _f0;
 mat3x4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 uvec2 _f1;
 vec3 _f2;
 mat4x3 _f3;
 bool _f4;
 float _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_30 {
 mat4x3 _f0;
 vec3 _f1;
 float _f2;
 _GLF_struct_28 _f3;
 uvec2 _f4;
 _GLF_struct_29 _f5;
} ;

struct _GLF_struct_26 {
 ivec2 _f0;
 mat4x2 _f1;
 uint _f2;
 mat3x4 _f3;
 bvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_27 {
 mat4x2 _f0;
 _GLF_struct_26 _f1;
 mat3x2 _f2;
 ivec4 _f3;
 mat3x4 _f4;
 float _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 bool _f1;
 mat2x4 _f2;
 int _f3;
 mat3x4 _f4;
 mat4x3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
 mat4 _f1;
 int _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_25 {
 int _f0;
 _GLF_struct_23 _f1;
 uint _f2;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_35 {
 vec3 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_27 _f2;
 _GLF_struct_30 _f3;
 _GLF_struct_34 _f4;
 uint subgroup_id;
 ivec3 _f5;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 vec2 _f1;
 uvec2 _f2;
 mat3 _f3;
 mat2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 vec2 _f1;
 bvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_21 {
 mat2x4 _f0;
 vec3 _f1;
 _GLF_struct_19 _f2;
 uvec2 _f3;
 _GLF_struct_20 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 vec2 _f1;
 uvec3 _f2;
 uvec4 _f3;
 uvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
} ;

struct _GLF_struct_15 {
 uint num_workgroup;
 mat2 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_13 {
 uint _f0;
 vec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 float _f3;
 mat2x3 _f4;
 float _f5;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 bvec4 _f1;
 uvec3 _f2;
 uvec2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 uvec2 _f1;
 mat4 _f2;
 mat2x4 _f3;
 ivec2 _f4;
 float _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_14 _f0;
 mat2x3 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_18 _f3;
 mat4x3 _f4;
 _GLF_struct_21 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 vec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 uint _f1;
 _GLF_struct_5 _f2;
 bvec2 _f3;
 ivec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_3 {
 int _f0;
} ;

struct _GLF_struct_1 {
 uint subgroup_local_id;
 ivec3 _f0;
 vec3 _f1;
 mat3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat2x3 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
 _GLF_struct_1 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_6 _f2;
 mat2 _f3;
 mat3x2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_35 _GLF_struct_replacement_35 = _GLF_struct_35(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_25(1, _GLF_struct_23(vec4(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(199097u))), float(0.0), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, abs(1.0), 0.0, abs(0.0), 0.0, sin(0.0), 1.0, 1.0, 1.0, sin(0.0), 1.0))))), 1, uvec4(1u)), 1u, _GLF_struct_24(ivec3(1), true, mat2x4(1.0), 1, mat3x4(1.0), mat4x3(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0 + (1.0))))), _GLF_struct_27(mat4x2(1.0), _GLF_struct_26(ivec2(1), mat4x2(1.0), 1u, mat3x4(1.0), bvec2(true), vec3(1.0)), mat3x2(1.0), ivec4(1), mat3x4(1.0), 1.0, mat3x2(1.0)), _GLF_struct_30(mat4x3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), 1.0, _GLF_struct_28(mat2x3(1.0), uvec2(1u), vec3(1.0), mat4x3(1.0), true, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat2x4(1.0)), uvec2(1u), _GLF_struct_29(mat3x2(1.0), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(1.0))), _GLF_struct_34(vec3(1.0), _GLF_struct_31(ivec2(1), mat3x4(1.0), mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec4(1u), mat2x3(1.0)), mat4(1.0), _GLF_struct_32(mat4x2(1.0), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED((-42.84 / -0.2))), bool(false))), 0.0, 0.0, 0.0, 0.0))), _GLF_struct_33(ivec2(1), mat2x3(1.0), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))), mat4x2(1.0), true, mat4x2(1.0))), gl_SubgroupID, _GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), (1) ^ 0))) >> ivec3(0, 0, 0)));
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(ivec3(1), _GLF_struct_38(_GLF_struct_36(ivec3(1), mat3(1.0), 1u, _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), bvec2(true), mat3x2(1.0)), ivec3(1), _GLF_struct_37(mat3x4(1.0), gl_SubgroupSize)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || false, true)))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(_GLF_struct_0(bvec3(true), mat2x3(1.0), mat3x2(1.0), mat3x4(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) - 0.0)), mat3x2(1.0)), bvec4(true), _GLF_struct_1(gl_SubgroupInvocationID, ivec3(1), vec3(1.0), mat3(1.0), mat3x4(1.0)), bvec4(true)), _GLF_struct_3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), ~ (~ (int(1))))))) | (1))), _GLF_struct_6(_GLF_struct_4(mat3(1.0), mat3(1.0)), 1u, _GLF_struct_5(bvec3(true), vec3(1.0), mat4x2(1.0)), bvec2(true), ivec2(1), mat4(1.0)), mat2(1.0), mat3x2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_14(mat2x4(1.0), _GLF_struct_8(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec2(1u), mat4(1.0), mat2x4(1.0), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(1))), 1.0, mat2x4(1.0)), _GLF_struct_9(uvec4(1u), bvec4(true), uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(172194u) : (1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))), (uvec2(1u)) - _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u)))), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5392.5167)), float(1.0), bool(true))))), _GLF_struct_10(mat4x2(1.0), mat2x3(1.0)), _GLF_struct_11(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_12(mat3x2(1.0), mat2x3(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(3.9) : 1.0), ((false ? _GLF_FUZZED(3.9) : 1.0)) / 1.0)), 1.0, 1.0)))), bvec2(true), 1.0, mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), _GLF_struct_13(1u, vec2(1.0), uvec3(1u))), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-373.645) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_struct_16(_GLF_struct_15(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))) << uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))).x, mat2(1.0))), _GLF_struct_18(_GLF_struct_17(mat4x3(1.0), vec2(1.0), uvec3(1u), uvec4(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) | (1u))), mat4(1.0))), mat4x3(1.0), _GLF_struct_21(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(1.0), _GLF_struct_19(mat3x2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), bvec4(true), mat3x2(1.0)), uvec2(1u), _GLF_struct_20(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0)), (_GLF_IDENTITY(mat2(1.0) * (vec2(1.0)), max(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (vec2(1.0)), mat2(1.0) * (vec2(1.0))))) - vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(vec2(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7151.6655)), bool(false)))), (true ? max(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-141.227) : float(0.0))), float(_GLF_FUZZED(7151.6655)), bool(false)))) : _GLF_FUZZED(9.1)))), 1.0, 0.0, 1.0, sqrt(1.0)), mat3x4(_GLF_IDENTITY(mat4(mat3x4(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(vec3(vec2(1.0), 1.0)), vec2(1.0, 1.0) * (vec2(vec3(vec2(1.0), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-263.782))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, sqrt(1.0))), mat4(1.0) * (_GLF_IDENTITY(mat4(mat3x4(vec2(1.0), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 1.0, sqrt(1.0))), transpose(transpose(mat4(mat3x4(vec2(1.0), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 1.0, sqrt(1.0))))))))))), min(vec2(_GLF_IDENTITY(mat3x4(vec2(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : 1.0)), 0.0, 1.0, sqrt(1.0)), mat3x4(_GLF_IDENTITY(mat4(mat3x4(vec2(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0))), mat4(1.0) * (mat4(mat3x4(vec2(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0)))))))), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), mix(float(_GLF_FUZZED(-5843.2157)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) / 1.0)), bool(true))), 0.0, 1.0)), 1.0 * (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), mix(float(_GLF_FUZZED(-5843.2157)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)), bool(_GLF_IDENTITY(true, bool(bool(true)))))), 0.0, 1.0))))), (false ? _GLF_FUZZED(dot(vec3(4969.3918, 9.4, -46.10), vec3(6136.6412, -8.2, 8.4))) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, sqrt(1.0)), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat4(mat3x4(vec2(1.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(184.928)), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(184.928)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(184.928)), float(1.0), bool(true))))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), sqrt(1.0), sqrt(1.0)), (clamp(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), sqrt(1.0), sqrt(1.0))) + 0.0)))), mat4(1.0) * (mat4(mat3x4(vec2(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0))))), (false ? _GLF_FUZZED(mat4(-0.0, 5.4, -7.0, 7624.1576, 1.1, 1634.0739, -96.82, -6.2, -344.863, 760.544, -55.65, -5.4, 8.3, -22.17, 7.6, -3.5)) : _GLF_IDENTITY(mat4(mat3x4(vec2(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0)))), (true ? float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(sqrt(999.333))))), mix(float(_GLF_FUZZED(900.405)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(mat3(sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))))), mat4(1.0) * (mat4(mat3x4(vec2(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0))))))))))))), uvec2(1u), mat3(1.0), mat2(1.0), uvec3(1u)), bvec2(true)), mat3(1.0));
 _GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (clamp(1.0, 1.0, 1.0))))))), _GLF_struct_40(vec4(1.0)), mat3x2(1.0), mat4x2(1.0), gl_WorkGroupSize.x, _GLF_struct_44(_GLF_struct_41(mat4x2(1.0), mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-901.573)), float(1.0), bool(true))), 1.0)))), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED((false ? (-9.7 / -5.7) : -0.4)), min(_GLF_IDENTITY(_GLF_FUZZED((false ? (-9.7 / -5.7) : -0.4)), (true ? _GLF_FUZZED((false ? (-9.7 / -5.7) : -0.4)) : _GLF_FUZZED(-1.4))), _GLF_FUZZED((false ? (-9.7 / -5.7) : -0.4))))), bool(false)))), _GLF_struct_42(uvec3(1u), bvec2(true), mat2x3(1.0), vec3(1.0), mat3x4(1.0), vec2(1.0), mat3(1.0)), _GLF_struct_43(1, 1.0, mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (max(1u, 1u)))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0))))), injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true, false))) || false, bool(bvec3(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true, false))) || false, false || (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), determinant(mat4(exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), max(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), determinant(mat4(exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), determinant(mat4(exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))) && true), true, true, false))) || false, ! (! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true, false))))) || false))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_45.workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z, _GLF_IDENTITY((_GLF_struct_replacement_45.workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z), max((_GLF_IDENTITY(_GLF_struct_replacement_45.workgroup_size, (_GLF_struct_replacement_45.workgroup_size) | 0u) * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z), (_GLF_struct_replacement_45.workgroup_size * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z))) | 0u);
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_struct_replacement_35.subgroup_id * _GLF_struct_replacement_39._f1._f2.subgroup_size + _GLF_struct_replacement_7._f0._f2.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, true))))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, true))))))), true, true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true))))))))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))), true, true))))))))), false, false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, max(_GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat3((injectionSwitch.y) * 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0))), (injectionSwitch.y) * 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false))))), true, true))))))))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true))) || false))) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, ! (! (false))) || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, true))))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true))) || false))) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, ! (! (false))) || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, true))))))))), false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true))) || false))) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, ! (! (false))) || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, true))))))))), false, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false), false, true, true))) || false))) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, ! (! (false))) || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, true))))))))), false, false), true))), false)))))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(false || (! ((injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0)), bool(true)))))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4098.9933) : injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))))), true, true))))))))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(atan(385.259, -2.0)) : float(mat3(injectionSwitch.x, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(atan(385.259, -2.0)) : float(mat3(injectionSwitch.x, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0)))), _GLF_IDENTITY(false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))), (false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)))))))), true, true))))))))), false, false), false)))), false)))))))
  barrier();
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(_GLF_struct_replacement_35.subgroup_id * _GLF_struct_replacement_39._f1._f2.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_35.subgroup_id * _GLF_struct_replacement_39._f1._f2.subgroup_size, max(_GLF_struct_replacement_35.subgroup_id * _GLF_struct_replacement_39._f1._f2.subgroup_size, _GLF_struct_replacement_35.subgroup_id * _GLF_struct_replacement_39._f1._f2.subgroup_size))) - 0u) + ((_GLF_struct_replacement_7._f0._f2.subgroup_local_id + 1) % _GLF_struct_replacement_39._f1._f2.subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(true ? uint(1) : _GLF_FUZZED(workgroup_id), (true ? uint(1) : _GLF_FUZZED(workgroup_id)) * 1u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(-11.63)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_struct_replacement_7._f0._f2.subgroup_local_id + 1 < _GLF_struct_replacement_39._f1._f2.subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_struct_53 _GLF_struct_replacement_53 = _GLF_struct_53(1.0, mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), _GLF_struct_47(mat2x4(1.0), mat4x3(1.0), bvec2(true), _GLF_struct_46(vec3(1.0), vec2(1.0), 1.0), mat3(1.0)), _GLF_struct_48(uvec4(1u)), 1u, _GLF_struct_51(_GLF_struct_49(mat3x4(1.0), mat3(1.0), bvec3(true), vec4(1.0), mat2x3(1.0)), _GLF_struct_50(ivec4(1), true)), 0, _GLF_struct_52(bvec4(true), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.5))), 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-6505.0957, -5730.6019, 7595.8458, 1.5))))) * mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), ivec2(1), uvec3(1u)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-745.792), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(83.75)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], read, 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(checker[GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), false))))
  barrier();
}
