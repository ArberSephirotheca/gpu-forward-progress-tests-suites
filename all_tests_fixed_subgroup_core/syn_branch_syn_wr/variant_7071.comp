#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uint next_virtual_gid;
 uvec2 _f0;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 bvec3 _f1;
 bvec2 _f2;
 _GLF_struct_10 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 ivec4 _f1;
 mat4x3 _f2;
 vec2 _f3;
 uvec2 _f4;
 bool _f5;
 bool _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_5 {
 float _f0;
 mat4 _f1;
 uint _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 vec2 _f1;
 mat3x4 _f2;
 vec2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 mat2x4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_8 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat3 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint _f1;
 ivec2 _f2;
 float _f3;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4x2 _f1;
 bool _f2;
 int _injected_loop_counter;
 mat3x4 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
 mat4x2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), max((0 >> _GLF_IDENTITY(int(1), int(1))), (0 >> _GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.5))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-4.5), (true ? injectionSwitch.y : _GLF_FUZZED(-4.5)) * 1.0)))) - 0.0)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), true)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, false || (true))), bool(bvec4(false || (_GLF_IDENTITY(true, false || (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true))))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) * 1.0)), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), float(mat2x3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), sqrt(0.0), 1.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (ivec2(0, 1))))), (true ? int(_GLF_IDENTITY(ivec2(0, 1), ~ (~ (ivec2(0, 1))))) : _GLF_FUZZED(-20232)))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), gl_WorkGroupSize.x))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, false))))))))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), (vec2(vec3(injectionSwitch, 0.0))) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), (vec2(vec3(injectionSwitch, 0.0))) / vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), (vec2(vec3(injectionSwitch, 0.0))) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0))))))), 1.0))))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0)))).y) - 0.0)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_6(_GLF_struct_4(bvec4(true), vec2(1.0), mat3x4(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-7.6, (false ? _GLF_FUZZED(7448.2535) : -7.6)), 7.1, -961.161, _GLF_IDENTITY(4922.3400, (4922.3400) + 0.0)), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(-7.6, (false ? _GLF_FUZZED(7448.2535) : -7.6)), 7.1, -961.161, _GLF_IDENTITY(4922.3400, (4922.3400) + 0.0)))).gg) : vec2(1.0))))), vec4(1.0)), mat2x4(1.0), _GLF_struct_5(1.0, mat4(1.0), 1u, uvec2(1u))), _GLF_struct_8(_GLF_struct_7(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), ivec4(1), mat4x3(1.0), vec2(1.0), uvec2(1u), _GLF_IDENTITY(true, (true) || false), true)), workgroup_size * workgroup_id);
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bool(bool(_GLF_IDENTITY(false, true && (false))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))))), 0.0, cos(0.0)), (true ? vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))), float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat3(22.52, 7849.8582, 3195.7041, 8203.2647, 7842.5137, 720.982, -9.4, 286.958, 4.2)))))))))), 0.0, cos(0.0)) : _GLF_FUZZED(vec3(-8847.3690, 4884.6860, 294.380))))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0), (_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)) && true)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]))) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) ^ (26968 & 0)))), 1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(4.1)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))))) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))) * subgroup_size), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))) * subgroup_size), (~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))) * subgroup_size)) ^ 0u), ~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))) * subgroup_size))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(1u, (0u ^ 0u) | (1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, min(5u, _GLF_IDENTITY(5u, min(5u, _GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) + 0u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) + 0u)), 0u ^ (~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) + 0u)))), ~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) + 0u)), ~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) + 0u)))))), max(5u, 5u))))))), uint(5u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(num_workgroup))), ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))), 1u)))))), 0u | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(num_workgroup))), ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))), 1u)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(num_workgroup))), ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))), 1u)))))), 0u | ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(num_workgroup))), ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))), 1u)))))))), 1u), (uvec2(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(num_workgroup))), ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))), 1u)))))), 0u | ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec3(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(num_workgroup))), ((((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))), 1u)))))))), 1u)) >> uvec2(0u, 0u)))))))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (subgroup_id * subgroup_size)))), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (subgroup_id * subgroup_size)))), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (subgroup_id * subgroup_size)))), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))), uint(uint((_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (subgroup_id * subgroup_size)))), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))))))))), (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (subgroup_id * subgroup_size)))), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) * subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size))))))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(5u, 1u, 1u)))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(5u, 1u, 1u))))))), ~ (~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(5u, 1u, 1u))))))), ~ (~ (~ (uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(5u, 1u, 1u))))))))))))))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (subgroup_id * subgroup_size)))), ~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))), (max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u ^ (~ (subgroup_id * subgroup_size))), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))) - 0u), _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))), _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))))))) + 0u))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) + 0u), _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) * subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), min((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(5u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ (subgroup_id * subgroup_size), 0u), (uvec2(~ (subgroup_id * subgroup_size), 0u)) + uvec2(0u, 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))), max((_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))), (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))))), _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ((~ (subgroup_id * subgroup_size))) / 1u), max(~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) * subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size))))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(5u, 1u, 1u)))))), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) | (uint(5u))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (~ (subgroup_id * subgroup_size)))), max(~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ((~ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size))))) | ((~ (subgroup_id * subgroup_size))))))))))))) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))) ^ 0u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u))), 0u | ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) * subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY((~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)))), ((~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ((~ (subgroup_id * subgroup_size))) * 1u)) / 1u))), (~ (subgroup_id * subgroup_size))))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(5u, 1u, 1u)))))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) - 0u)))))))) + subgroup_local_id, min(_GLF_struct_replacement_9.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))) * subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u)))), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (~ (~ (subgroup_id * subgroup_size))) - 0u))))))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) | ((1u << _GLF_IDENTITY(uint(5u), uint(5u))))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(88509u) : subgroup_id))) - 0u) * subgroup_size), _GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id * subgroup_size)))) - ((165420u & 0u) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(0u, (0u) | (0u)))), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), 0u))))))))), _GLF_IDENTITY(~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (0u ^ 0u) | (subgroup_size)))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 1u * (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) * 1u))))), ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 1u * (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) * 1u)))))) | ((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 1u * (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) * 1u))))))), ~ (~ (subgroup_id * subgroup_size))))))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, uint(uint(0u))), 0u)), 0u | (uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, uint(uint(0u))), 0u)))))), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) << 0u), clamp((subgroup_id), (subgroup_id), (subgroup_id)))), uint(uvec4((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))) << 0u), clamp((subgroup_id), (subgroup_id), (subgroup_id)))), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) * subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ _GLF_IDENTITY((subgroup_id * subgroup_size), (24349u & 0u) | (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))))), (~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u ^ (~ (subgroup_id * subgroup_size)))))), ~ (subgroup_id * subgroup_size)))))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size))))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(uvec3(5u, 1u, 1u), uvec3(_GLF_IDENTITY(5u, (5u) | 0u), 1u, 1u)))))), uint(_GLF_IDENTITY(5u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u) ^ (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))) + subgroup_local_id, _GLF_struct_replacement_9.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), uint(uvec3(subgroup_id, 0u, 0u))) * subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size))))), (~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))))) | (~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * subgroup_size)))))))) ^ 0u))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))), ~ (5u))))))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u)))) - 0u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u | (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) * (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) | uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), min(uint(uvec2(~ (subgroup_id * subgroup_size), 0u)), uint(uvec2(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(0u, (0u) << 0u)))))))))), _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), min(~ (~ (subgroup_id * subgroup_size)), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) | 0u)))))))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), uint(uvec2(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), min(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), 0u ^ (~ (subgroup_id * subgroup_size))), ~ (subgroup_id * subgroup_size)))) | (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(0u, (0u) ^ 0u)))), ~ (_GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), max(~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id)))))))) * subgroup_size)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (~ ((subgroup_id * subgroup_size))))) | 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size))), (min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))) | 0u)) | 0u)) | (min(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), clamp((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size)))), (~ (subgroup_id * subgroup_size))))))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 1u, 1u), min(_GLF_IDENTITY(uvec3(5u, 1u, 1u), max(_GLF_IDENTITY(uvec3(5u, 1u, 1u), (true ? uvec3(5u, 1u, 1u) : _GLF_FUZZED(uvec3(39988u, 131295u, 116447u)))), _GLF_IDENTITY(uvec3(5u, 1u, 1u), max(uvec3(5u, 1u, 1u), uvec3(5u, 1u, 1u))))), uvec3(5u, 1u, 1u)))))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))) + subgroup_local_id));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat3x2(1.0), bvec3(true), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), true), false))))))))), _GLF_struct_10(_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base, 0u | (_GLF_struct_replacement_9.workgroup_base)))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), min(~ ((subgroup_local_id + 1) % subgroup_size), ~ ((subgroup_local_id + 1) % subgroup_size)))))))), uvec2(1u)), mat3x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), (true ? vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), min(int(5), int(5)))) >> 0), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(25852))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = ((0 ^ 0) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(5, 5))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) + (0 | 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) + (0 | 0)), (_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) + (0 | 0))) - 0))))) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), false, false, true))), ! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
    }
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter -- : _GLF_FUZZED(-73169)))) << 0))
      {
       atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_11._f3.next_virtual_gid, min(_GLF_struct_replacement_11._f3.next_virtual_gid, _GLF_struct_replacement_11._f3.next_virtual_gid))], uint(_GLF_IDENTITY(1, (1) - 0)), 4, 64, 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 | (0)))));
 for(_GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(1.0, mat4x2(1.0), true, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec3(0, 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), max(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))), ~ (_GLF_IDENTITY(0, (0) | 0)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec3(0, 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))), clamp(~ (_GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), max(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))), ~ (_GLF_IDENTITY(0, (0) | 0))))))) << 0))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (0))), int(0))), mat3x4(1.0), _GLF_struct_1(_GLF_struct_0(mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((mat3(-6.0, -4.4, 0.4, 0.2, 691.262, -7.8, 2.7, 2.7, -2.9) , 8.8)))), 1.0, 1.0)), 1.0)) + _GLF_IDENTITY(0.0, min(0.0, 0.0))))), float(_GLF_FUZZED(-1.5)), bool(false)))), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8082.4220)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(min(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8082.4220)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8082.4220)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), (true ? min(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(vec3(0.0, log(1.0), cos(0.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8082.4220)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8082.4220)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8082.4220)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0)))), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8082.4220)), float(0.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))) / 1.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0))), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) : _GLF_FUZZED(-0.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-62.32)), float(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) * mat3(1.0))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), bool(_GLF_IDENTITY(true, (true) && true))), 0.0 + (mix(float(_GLF_FUZZED(-62.32)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(vec3(1.0, -9528.0050, 7646.6792)) : vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0)))))), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), clamp(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)) + vec3(0.0, 0.0, 0.0)), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0))), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0), max(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0), mat3(1.0) * (_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)))))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.6))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(543.374)), bool(false)))))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-9.2, 898.871, 98.81, 6.2).y)), bool(false)))), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), clamp(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347))))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))) * vec3(1.0, 1.0, 1.0))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-139.605)), float(0.0), bool(true)))) / 1.0), 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), vec3(mat2x3(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0)))))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, cos(0.0), abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, cos(0.0), abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0))))))))))), 0.0, 0.0), transpose(transpose(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-139.605)), float(0.0), bool(true)))) / 1.0), 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), vec3(mat2x3(vec3(mat4x3(_GLF_IDENTITY(((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-8.6), _GLF_FUZZED(8036.8513), _GLF_FUZZED(620.876)), vec3(_GLF_IDENTITY((((vec3(0.0, 1.0, 0.0))))[0], (true ? (((vec3(0.0, 1.0, 0.0))))[0] : _GLF_FUZZED(-5.8))), (((vec3(0.0, 1.0, 0.0))))[1], (((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, true, true))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0)))))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, cos(0.0), abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, cos(0.0), abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0))))))))))), 0.0, 0.0)))))))), max(float(_GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), min(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) * mat3(1.0)), (vec3(0.0, 1.0, 0.0)))) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4043.0875)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), clamp(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))) && true)))))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.6)), float(1.0), bool(true))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat4(vec3(0.0, 1.0, 0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (vec3(0.0, 1.0, 0.0)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, _GLF_IDENTITY(-72.21, mix(float(_GLF_FUZZED(498.653)), float(-72.21), bool(true))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(8.0)), bool(false))) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(1.0), 0.0, 0.0))), 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(((vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(146639u))), float(1.0), bool(true)))) / 1.0), 0.0))), (((vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(146639u))), float(1.0), bool(true)))) / 1.0), 0.0)))) * mat3(1.0)) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), abs(vec3(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), (false ? _GLF_FUZZED(vec3(-86.06, 501.771, 22.09)) : vec3(-9.2, 395.886, -72.21)))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), abs(vec3(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), (false ? _GLF_FUZZED(vec3(-86.06, 501.771, 22.09)) : vec3(-9.2, 395.886, -72.21)))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), max(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), abs(vec3(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), (false ? _GLF_FUZZED(vec3(-86.06, 501.771, 22.09)) : vec3(-9.2, 395.886, -72.21)))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), abs(vec3(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), (false ? _GLF_FUZZED(vec3(-86.06, 501.771, 22.09)) : vec3(-9.2, 395.886, -72.21)))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)))), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), abs(vec3(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), (false ? _GLF_FUZZED(vec3(-86.06, 501.771, 22.09)) : vec3(-9.2, 395.886, -72.21)))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), abs(vec3(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(vec3(-9.2, 395.886, -72.21), (false ? _GLF_FUZZED(vec3(-86.06, 501.771, 22.09)) : vec3(-9.2, 395.886, -72.21)))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)))), clamp(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(28.68) : 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))), vec3(mat2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))), 1.0)))) * exp(vec3(0.0, 0.0, 0.0))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0)), float(mat2(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec3(-9.2, 395.886, -72.21)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), (vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) - vec3(0.0, 0.0, 0.0)) - vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / 1.0), 0.0)) : _GLF_FUZZED(vec3(1834.8258, 6.1, -249.347)))))), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))))))) : _GLF_FUZZED(asin(63.54)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, true && (true)))), false || (bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), true, _GLF_IDENTITY(true, true && (true))))))))))))), mat3x4(1.0)), 1u, ivec2(1), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1, mat2x4(1.0)), _GLF_struct_2(ivec2(1)), mat4x2(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_3._injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _GLF_struct_replacement_3._injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))))), bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), max(0, 0))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(_injected_loop_counter, _injected_loop_counter))))), max(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(uintBitsToFloat(virtual_gid)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 1)), (int(ivec3(0, 0, 1))) << (0 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       int i = 0;
       atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))));
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1) | 0, 0 ^ (_GLF_IDENTITY(0, (0) / 1) | 0))), (true ? _GLF_IDENTITY((0 | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) ^ (_GLF_IDENTITY(1, (1) / 1) ^ 1)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-73471), _GLF_IDENTITY(clamp(true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-73471), clamp(_GLF_FUZZED(-73471), _GLF_FUZZED(-73471), _GLF_IDENTITY(_GLF_FUZZED(-73471), int(int(_GLF_FUZZED(-73471)))))), true ? 0 : _GLF_FUZZED(-73471), true ? 0 : _GLF_FUZZED(-73471)), max(_GLF_IDENTITY(clamp(true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-73471), clamp(_GLF_FUZZED(-73471), _GLF_FUZZED(-73471), _GLF_IDENTITY(_GLF_FUZZED(-73471), int(int(_GLF_FUZZED(-73471)))))), true ? 0 : _GLF_FUZZED(-73471), true ? 0 : _GLF_FUZZED(-73471)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(65513) : clamp(true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-73471), clamp(_GLF_FUZZED(-73471), _GLF_FUZZED(-73471), _GLF_IDENTITY(_GLF_FUZZED(-73471), int(int(_GLF_FUZZED(-73471)))))), true ? 0 : _GLF_FUZZED(-73471), true ? 0 : _GLF_FUZZED(-73471)))), _GLF_IDENTITY(clamp(true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-73471), clamp(_GLF_FUZZED(-73471), _GLF_FUZZED(-73471), _GLF_IDENTITY(_GLF_FUZZED(-73471), int(int(_GLF_FUZZED(-73471)))))), true ? 0 : _GLF_FUZZED(-73471), true ? 0 : _GLF_FUZZED(-73471)), 0 + (_GLF_IDENTITY(clamp(true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-73471), clamp(_GLF_FUZZED(-73471), _GLF_FUZZED(-73471), _GLF_IDENTITY(_GLF_FUZZED(-73471), int(int(_GLF_FUZZED(-73471)))))), true ? 0 : _GLF_FUZZED(-73471), true ? 0 : _GLF_FUZZED(-73471)), (clamp(true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-73471), clamp(_GLF_FUZZED(-73471), _GLF_FUZZED(-73471), _GLF_IDENTITY(_GLF_FUZZED(-73471), int(int(_GLF_FUZZED(-73471)))))), true ? 0 : _GLF_FUZZED(-73471), true ? 0 : _GLF_FUZZED(-73471))) << 0))))))))) | (_GLF_IDENTITY(0, max(0, 0))))), 1 * ((0 | 0))) : _GLF_FUZZED(59309))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), false || _GLF_IDENTITY((_injected_loop_counter != (0 ^ 1)), ! (_GLF_IDENTITY(! ((_injected_loop_counter != (0 ^ 1))), ! (! (! ((_injected_loop_counter != (0 ^ 1)))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), true, false, true)))))))))) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 ^ 1))), false || (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != (0 ^ 1)))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), false || (_injected_loop_counter != (0 ^ 1))))), false || (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), false || (_injected_loop_counter != (_GLF_IDENTITY(0 ^ 1, (false ? _GLF_FUZZED(ivec4(85044, -41595, 82707, 34055)[1]) : 0 ^ 1))))))), false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), false || (_injected_loop_counter != (0 ^ 1))))))))) || false))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.8)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) * (injectionSwitch)).x < injectionSwitch.y)) && (false))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(41.63) : injectionSwitch.x), (false ? _GLF_FUZZED(5.6) : (false ? _GLF_FUZZED(41.63) : injectionSwitch.x))))), mix(float((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(41.63) : injectionSwitch.x), (false ? _GLF_FUZZED(5.6) : (false ? _GLF_FUZZED(41.63) : injectionSwitch.x)))))), float(_GLF_FUZZED(-10.13)), bool(false))) + 0.0))) > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         do
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0), ! (! (! (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0)))), false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0)))), (! (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0), ((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0)) || false))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0)))), (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) >> 0), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != _GLF_IDENTITY(0, (0) ^ 0)), ((_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _injected_loop_counter)) != 0)) || false))))) || false))) && true))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, _GLF_IDENTITY(false, true && (false)))))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                        barrier();
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (true)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-92909)), _GLF_FUZZED(-5782.5754)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))
        barrier();
      }
    }
   else
    {
    }
  }
}
