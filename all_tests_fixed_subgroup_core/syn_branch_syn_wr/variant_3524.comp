#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 7:
     (mat3(mat4x2(8838.6434, 65.06, 3.7, 9.9, 9817.4392, -437.205, 790.601, -0.8)) + 762.600);
     case 0:
     case 83:
     switch(_GLF_SWITCH(0))
      {
       case 56:
       do
        {
         mat2x4(-3.1, -240.453, 6.3, -2.5, 293.582, -32.32, -2.4, 115.413);
         ;
        }
       while(false);
       case 91:
       uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       case 0:
       case 42:
       case 65:
       case 32:
       case 7:
       case 58:
       int i = 0;
       case 24:
       case 97:
       case 52:
       case 41:
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       break;
       case 89:
       for(       lessThan(_GLF_SWITCH_0_1v, uvec4(105019u, 197145u, 128575u, 187249u));
 false; vec3(-48.27, 307.771, 69.70))
        {
         uvec4 _GLF_SWITCH_0_3v[5], _GLF_SWITCH_0_4v[15], _GLF_SWITCH_0_5v[91];
         (vec2(-20.88, 3862.7267) - 0.8);
         while(true)
          {
           if((3728.2142 > -291.845))
            {
             greaterThanEqual(vec4(1121.8791, -953.171, 0.2, -9449.1563), vec4(2.8, -1420.4520, 6.4, -6902.3448));
             bvec2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[86], _GLF_SWITCH_0_8v[28];
             mat3x4 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
            }
           do
            {
             bvec3(true, true, false);
             bvec2 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
            }
           while(bvec4(true, bvec2(false, true), (mat3x4(152.862, 1.9, 297.621, -2006.3512, -474.533, -9491.3955, -973.159, 65.81, 9816.7082, 996.743, 578.834, -544.416) == mat3x4(93.54, 8.8, -3077.0886, -1.6, 8.0, 3.8, -5565.1534, -637.120, 9511.9358, -1733.3507, 8.1, -9456.0325)))[3]);
           ivec4 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[83];
           {
            uvec3 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
            mat3x2 _GLF_SWITCH_0_19v[77];
            ivec2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[16], _GLF_SWITCH_0_22v[48];
            mat4x2(-915.479, 4827.9170, -7.4, 4594.3650, 7409.4150, 92.67, -4816.9649, 15.12);
            usubBorrow(_GLF_SWITCH_0_17v.rgbr, _GLF_SWITCH_0_0v, _GLF_SWITCH_0_2v);
           }
          }
         ivec4(23869, 29430, -20553, -16473).xz;
         mat3x2 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
        }
       default:
       1;
      }
     break;
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 65:
     if(false)
      {
       {
        findLSB(ivec3(66706, 41673, -58642).z);
        ;
        while((mat3(2.2, -2268.6428, 545.478, 3.8, -15.27, -8790.6591, 44.82, -5.1, -25.13) != mat3(6533.2835, 7.6, 179.546, -1210.5000, 1.3, 6.0, 8969.2238, -1.3, 5.9)))
         {
          mat4x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
          (findMSB(ivec3(-18048, -53795, 8992)) + -46556);
          bool _GLF_SWITCH_2_2v;
          vec4 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
          uvec2 _GLF_SWITCH_2_5v[5], _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
          bvec2 _GLF_SWITCH_2_8v[79], _GLF_SWITCH_2_9v;
         }
        if(all(bvec3(true, false, true)))
         {
          mat3x4 _GLF_SWITCH_2_10v[8], _GLF_SWITCH_2_11v[74];
          ;
          (read % uvec4(184197u, 131512u, 26228u, 90237u));
          max(uvec4(8948u, 88548u, 181851u, 6971u), uvec4(95095u, 25103u, 89483u, 104961u));
         }
        else
         {
          switch(_GLF_SWITCH(0))
           {
            case 8:
            mat2x3 _GLF_SWITCH_1_0v;
            case 47:
            mat4 _GLF_SWITCH_1_1v;
            case 0:
            ivec4(-25766, -79174, 97221, -41876);
            case 66:
            mat3x2 _GLF_SWITCH_2_12v;
            ;
            ;
            bool _GLF_SWITCH_2_13v[91], _GLF_SWITCH_2_14v;
            case 85:
            case 43:
            ((_GLF_SWITCH_2_12v));
            case 60:
            notEqual(vec3(-34.26, 3.7, -6.0), vec3(639.300, -823.868, 628.291));
            break;
            case 63:
            vec2 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
            default:
            1;
           }
         }
        mat3x4 _GLF_SWITCH_2_15v[33], _GLF_SWITCH_2_16v;
        mat3x2(138.378, -7.8, -5.5, 24.39, -3961.3493, -2.7);
        if(true)
         {
          (mat3(1311.6587, 209.715, 8.4, -8.7, 2.0, 6.5, -99.83, 842.784, 9.3) / 0.7);
          outerProduct(vec3(-14.66, -7.2, 5.1), injectionSwitch);
          ivec2(-11137, 72995);
          mat4(8.8, -9.0, 54.44, -44.02, 1.1, 2.6, 4388.0140, -5853.5310, 161.354, -4478.7860, 5.1, 4.7, -587.124, 7094.0084, 90.84, 409.708);
         }
        next_virtual_gid;
       }
      }
     case 0:
     case 71:
     case 6:
     case 29:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     break;
     default:
     1;
    }
  }
}
