#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6783.4352)), vec2(_GLF_FUZZED(vec4(-9457.1199, 3503.9320, -93.15, 2.5).z), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6783.4352)), vec2(_GLF_FUZZED(vec4(-9457.1199, 3503.9320, -93.15, 2.5).z), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6783.4352)), vec2(_GLF_FUZZED(vec4(-9457.1199, 3503.9320, -93.15, 2.5).z), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))), true, false, true)))))))
  return;
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(160331u, (160331u) | (160331u)), 152636u, 89258u)) : gl_NumWorkGroups)).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(0u, 1u, 1u))), ((uint(uvec3(0u, 1u, 1u)))) / 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), (! ((true) && true)) && true)))))), false, true, false)), (bool(bvec4((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), false, true, false))) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), (! (_GLF_IDENTITY((true) && true, ! (! ((true) && true))))) && true)))))), false, true, false)), (bool(bvec4((_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), false, true, false))) || false))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, false), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, false)))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, false), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, false)))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) * 1.0, float(mat4((injectionSwitch.y) * 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(float(799))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))))))
  return;
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.5))), (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 uint next_virtual_gid = GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y) | 0u) * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, 0u ^ _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y) | (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y)) * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, (true ? GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z : _GLF_FUZZED(subgroup_size))), 1u))), max(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, max(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, 0u ^ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z)), _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z) | 0u))), _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z), (_GLF_IDENTITY((GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z), (true ? (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z) : _GLF_FUZZED(workgroup_size)))) | 0u) | (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z))))), ((GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z)) | ((GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.y * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, uint(uvec4(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, 1u, 0u, 0u))), GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z, GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z)))))) * 1u)) + ((subgroup_local_id + 1) % GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, greaterThan(ivec2(-88508, 73852), ivec2(50880, 45218)))) : injectionSwitch)).y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, _GLF_IDENTITY(greaterThan(ivec2(-88508, 73852), ivec2(50880, 45218)), bvec2(bvec4(greaterThan(ivec2(-88508, 73852), ivec2(50880, 45218)), false, true))))) : injectionSwitch)).y))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, greaterThan(ivec2(-88508, 73852), ivec2(50880, 45218)))) : injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, greaterThan(ivec2(-88508, 73852), ivec2(50880, 45218)))) : injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, greaterThan(ivec2(-88508, 73852), ivec2(50880, 45218)))) : injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  return;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), min(0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5))))) ^ (0 ^ 0))) | (64)), (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(27603) : 64))) >> 0), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.x = read, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.x = read, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.x = read) ^ 0u)) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-54.61), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-54.61), clamp(_GLF_FUZZED(-54.61), _GLF_FUZZED(-54.61), _GLF_FUZZED(-54.61))), 0.0, 0.0, 0.0, 1.0, 0.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((1.0 / 6.8), max((1.0 / 6.8), (1.0 / 6.8))))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), cos(0.0))))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(6651.3649)), float(cos(0.0)), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))), false))), false))).y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0), injectionSwitch.y)))))))), false, true)))))) && _GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -83565))]), clamp(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -83565))]), vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -83565))]), vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 & -83565))]))), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((7.9))), bool(false))), injectionSwitch.y))), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7177.2472)), float(0.0), bool(true))), 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x3((injectionSwitch), 0.0, 0.0, 0.0, 1.0)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0)))), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0)))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0)))), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0)))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0)))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0 / 6.8))), bvec2(true, false))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * cos(0.0))))), 0.0, 1.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, tan(0.0)))), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0)))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false, true), false)), false))))))))) && _GLF_IDENTITY(true, true && (true)))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(72.19), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.0)), bvec2(true, false))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))) < GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.z)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))) && true), bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.x, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (4) >> 0)), 0 + (0 ^ (_GLF_IDENTITY(4, (4) >> 0))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.x, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.x, 0u + (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_14readsubgroup_idsubgroup_sizeworkgroup_base.x)), 1u, 1u, 0u))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) - 0))))), 64, 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, false)), ! (! _GLF_IDENTITY((bool(bvec3(! (true), true, false))), ((bool(bvec3(! (true), true, false)))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
