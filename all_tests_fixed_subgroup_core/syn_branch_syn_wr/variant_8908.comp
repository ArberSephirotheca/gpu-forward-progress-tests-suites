#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 uvec2 _f0;
 bool _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat4 _f1;
 mat4x3 _f2;
 float _f3;
 float _f4;
 mat4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat3 _f1;
 mat3 _f2;
 uvec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bvec2 _f3;
 int _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_4 {
 uint next_virtual_gid;
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bool(false)))))), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bool(false)))))), false || (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(112793u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(112793u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), true, _GLF_IDENTITY(false, bool(bool(false)))))), false || (_GLF_DEAD(false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, mix(float(_GLF_FUZZED(float(112793u))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, mix(float(_GLF_FUZZED(float(112793u))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) < injectionSwitch.y), true, true, false))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(112793u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false || (false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(112793u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), false, true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), bool(bvec4(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), false, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bool(false)))))), false || (_GLF_DEAD(false)))))) && true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), true)), false)))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), true)), false))))))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), false))))))), false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_DEAD(false))))))) && true)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)))), true))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5539.0262, 9996.8555)) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), (uvec4(gl_NumWorkGroups, 0u)) ^ (uvec4(89433u, 35906u, 109669u, _GLF_IDENTITY(55389u, ~ (_GLF_IDENTITY(~ (55389u), (~ (55389u)) << 0u)))) & uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, (1u & 1u))), uint(_GLF_IDENTITY(uvec3(uint(uvec2(_GLF_IDENTITY(0u, (0u) | 0u), (1u & 1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), max((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 0u), (uvec3(uint(uvec2(0u, (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, ~ (~ (1u & 1u)))) ^ 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(subgroup_local_id)))))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), max((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((1u << _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u + ((1u << _GLF_IDENTITY(uint(0u), uint(0u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_size) : uint(0u))))), uint(0u))))), 0u)) << uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))))), 0u, 0u, 0u))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-56.84))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true))))) && true)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && ((injectionSwitch.x > injectionSwitch.y) && true)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-81.65), _GLF_FUZZED(7466.1030)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(922.792), _GLF_FUZZED(2.7)), bvec2(false, false))), injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-81.65), _GLF_FUZZED(7466.1030)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(922.792), _GLF_FUZZED(2.7)), bvec2(false, false))), injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-81.65), _GLF_FUZZED(7466.1030)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(922.792), _GLF_FUZZED(2.7)), bvec2(false, false))), injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-81.65), _GLF_FUZZED(7466.1030)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(922.792), _GLF_FUZZED(2.7)), bvec2(false, false))), injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) ^ uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6704.9359)), bool(false))), float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0, 1.0, 1.0)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6704.9359)), bool(false))), float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0))))), 0.0)), 0.0, 1.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6704.9359)), bool(false))), float(mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0))))), 0.0)), 0.0, 1.0, 1.0))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY((bool(bvec3(false, false, false))), ! (! ((bool(bvec3(false, false, false))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (! (bool(bvec3(false, false, false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))) >> 0u) | (workgroup_id)), (true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 1u)))) - uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), float(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))) >> 0u) | (workgroup_id)) : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(true, (true) && true), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0 + (float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), true)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true))))), true))))))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0 + (float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), true)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true))))), true))))))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0 + (float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), true)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), false))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), false)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))), false || (true)), true)), false))), true)), false))))), false)))))))))))))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true))))), true))))))))))))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, log(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), (! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0)), (true ? float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0)) : _GLF_FUZZED(5.7)))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))) && true))))))) && true), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0)), mix(vec2(_GLF_FUZZED(-0.1), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0))), (false ? _GLF_FUZZED(cosh(vec2(1.4, -9979.4218))) : (vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0)))))[1]), vec2((vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0)))[0], _GLF_FUZZED((false ? -9.3 : -280.486))), _GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(bvec3(bvec2(true, false), true))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(bvec3(bvec2(true, false), true))))))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(bvec3(bvec2(true, false), true))))))), true)), true))))))))).y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, true, true)))))) && true), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y) && true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false))) && true))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY((1u & _GLF_IDENTITY(1u, max(1u, 1u))), ((1u & 1u)) - 0u), 0u))), workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))), max(~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))), ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))), (~ (subgroup_size))))))))))) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), subgroup_size))))), (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))))), max((~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))))), (~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))))))) * (0u ^ 1u))))), 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size), (subgroup_size))), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) : _GLF_FUZZED(num_workgroup))), ~ (~ (~ (subgroup_size)))))))) : _GLF_FUZZED(subgroup_id))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))), max(~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))), ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), ~ (~ ((~ (subgroup_size))))), (~ (subgroup_size))))))))))) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), subgroup_size))))), (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))))), max((~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size))))), (~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))))))) * (0u ^ 1u))))), 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size), (subgroup_size))), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) : _GLF_FUZZED(num_workgroup))), ~ (~ (~ (subgroup_size)))))))) : _GLF_FUZZED(subgroup_id)))) << 0u) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) + 0)))) % subgroup_size), _GLF_struct_3(_GLF_struct_0(mat2x3(1.0), mat3(1.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(mat3(_GLF_IDENTITY(200.090, _GLF_IDENTITY(min(_GLF_IDENTITY(200.090, (200.090) - 0.0), 200.090), clamp(min(_GLF_IDENTITY(200.090, (200.090) - 0.0), 200.090), min(_GLF_IDENTITY(200.090, (200.090) - 0.0), 200.090), min(_GLF_IDENTITY(200.090, (200.090) - 0.0), 200.090)))), -75.65, -8.3, 81.83, _GLF_IDENTITY(_GLF_IDENTITY(-28.52, mix(float(_GLF_IDENTITY(-28.52, float(mat2(-28.52, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED(-5495.7838)), bool(false))), (_GLF_IDENTITY(-28.52, mix(float(-28.52), float(_GLF_FUZZED(-5495.7838)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false))))), true && (bool(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))))))))))) - 0.0), -7271.9886, 235.129, 5435.4377, 8.6)) : mat3(1.0)))))), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))))) ^ 0u, max((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))))) ^ 0u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))))) ^ 0u)))), mat3(1.0)), _GLF_struct_1(uvec4(1u), mat4(1.0), mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.3)), bool(false))), 1.0))), 1.0, 1.0, mat4(1.0), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) + uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u) | ((uvec4(1u)) + uvec4(0u, 0u, 0u, 0u))))), _GLF_struct_2(uvec2(_GLF_IDENTITY(1u, (1u) | 0u)), true, ivec2(1)), bvec2(true), 1, mat2x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))) || (! (! (false)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false, (_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false, false || ((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ! (! (false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ! (! (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ! (! (false)))))))))), false))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((false))))), (_GLF_IDENTITY((false), false || ((false)))) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false), bool(bvec4(bool((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false), true, false, false)))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false), bool(bvec4(bool((_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false), true, false, false))))))))))) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false)), false || (bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false)), false || (bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false))))))))), ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false)), false || (bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false)))))))))) && true)))))) || false))) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), uint(1)), _GLF_IDENTITY(_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(min(uint(1), uint(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(15943) : _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY((min(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) - 0u))) - 0u, ((min(uint(1), uint(1))) - 0u) << 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) - 0u)))), ((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) - 0u))))) ^ 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(min(uint(1), uint(1)), _GLF_IDENTITY((min(uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1))) - 0u, ((min(uint(1), uint(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | 0))))))) - 0u) << 0u))))), (true ? _GLF_IDENTITY(((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(min(uint(1), uint(1)), _GLF_IDENTITY((_GLF_IDENTITY(min(uint(1), uint(1)), (min(uint(1), uint(1))) << 0u)) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(((min(uint(1), uint(1))) - 0u), (_GLF_IDENTITY(((min(uint(1), uint(1))) - 0u), (((min(uint(1), uint(1))) - 0u)) << 0u)) | (((min(uint(1), uint(1))) - 0u))), ~ (~ (((min(uint(1), uint(1))) - 0u)))) << 0u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x)) | (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(min(uint(1), uint(1)), _GLF_IDENTITY((min(uint(1), uint(1))) - 0u, ((min(uint(_GLF_IDENTITY(1, int(int(1)))), uint(_GLF_IDENTITY(1, int(ivec2(1, 0)))))) - 0u) << 0u))))) : _GLF_FUZZED(num_workgroup))))), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false), true && (! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false)))), ((! (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))) || false))) || false)) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false), true && (! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false)))), ((! (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))) || false))) || false)) && true), bool(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false), true && (! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false)))), ((! (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))) || false))) || false)) && true), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-926.326)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid]))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0)))))))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0)))))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0)))))))))).x)) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))), 0.0, 1.0, tan(0.0))), (_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0))), 0.0, 1.0, tan(0.0))), float(mat3x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))), 0.0, 1.0, tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0)))) - abs(0.0))) > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0) : _GLF_FUZZED(-89961), clamp(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0) : _GLF_FUZZED(-89961), int(ivec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0) : _GLF_FUZZED(-89961), 0, 0))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0) : _GLF_FUZZED(-89961), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0) : _GLF_FUZZED(-89961)) >> 0), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), vec2(vec2(injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY((1) | (1), ((1) | (1)) - 0) : _GLF_FUZZED(-89961))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(3290.3320), (min(injectionSwitch, injectionSwitch))[1]), vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(2.9)), bvec2(true, false)))).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961)), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y)))), false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961), 0 | (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y)))), false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961))))), ~ (~ (int((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), _GLF_IDENTITY((_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0, ((_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) | (0 ^ 0))) : _GLF_FUZZED(-89961)))))))), (true ? (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))).y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961)) : _GLF_FUZZED(-91554))), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(3290.3320), (min(injectionSwitch, injectionSwitch))[1]), vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(2.9)), bvec2(true, false)))).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961)), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y)))), false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961), 0 | (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y)))), false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961))))), ~ (~ (int((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY((1) | (1), _GLF_IDENTITY((_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0, ((_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) | (0 ^ 0))) : _GLF_FUZZED(-89961)))))))), (true ? (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))).y))))) ? _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) - 0)) - 0) : _GLF_FUZZED(-89961)) : _GLF_FUZZED(-91554))))) + 0)))) | ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, max(_GLF_IDENTITY((1) * 1, min((1) * 1, (1) * 1)), (1) * _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(4106))))))) | (1)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicAnd(i, ivec2(-23259, -80440)[1])) : 0)) << _GLF_IDENTITY(int(1), int(1))) | _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), ((~ (4))) ^ 0), _GLF_IDENTITY(int(int((~ (4)))), min(_GLF_IDENTITY(int(int((~ _GLF_IDENTITY((4), ((4)) | 0)))), int(int(int(int((~ (4))))))), int(_GLF_IDENTITY(int((~ (4))), clamp(int((~ (4))), int((~ (4))), int((~ (4)))))))))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ceil(89.59)) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-6924.5308))), vec2(_GLF_FUZZED(-820.934), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)) | (4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (virtual_gid) | (virtual_gid))], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
