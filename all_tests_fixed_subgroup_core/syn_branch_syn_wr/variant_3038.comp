#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED((-808.013 - 2013.0165))), max(vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED((-808.013 - 2013.0165))), vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED((-808.013 - 2013.0165))))), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), true && (! (bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(3655.4492))), (injectionSwitch.x), (injectionSwitch.x)))), min((_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(3655.4492))), (injectionSwitch.x), (injectionSwitch.x)))), (_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(3655.4492))), (injectionSwitch.x), (injectionSwitch.x)))))) + 0.0) * 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, false, true)), bool(bvec3(bool(bvec3((false) || false, false, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))) && true))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4826.6142)), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, abs(1.0), 1.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, abs(1.0), 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, abs(1.0), 1.0))))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-112.025, -8.4, -4.1, 74.38), mat2(mat3x2(mat2(-112.025, -8.4, -4.1, 74.38))))) : mat2(injectionSwitch.y, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, sin(abs(0.0)), 1.0, abs(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * vec2(1.0, 1.0)).y, sin(abs(0.0)), 1.0, abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))))), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-165.596)), vec2(_GLF_FUZZED(1083.5590), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))).x) << 0u)) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_size * workgroup_id))))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && true))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? (-66.44 * 7.4) : -29.75))), vec2(_GLF_FUZZED(8907.1819), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(14525u, (_GLF_IDENTITY(14525u, (14525u) | (_GLF_IDENTITY(14525u, max(14525u, 14525u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), float(injectionSwitch.y), bool(true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y))))) && true)))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, false)))), ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)).x)) < injectionSwitch.y))))) && true)))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | 0)), 4, 64, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) ^ 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))).x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, mix(float(_GLF_FUZZED(6597.8375)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x), bool(true))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), max((4), (4)))), 64, 0);
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bool(! (_GLF_IDENTITY(false, false || (false))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3063.3464)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (false) && true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (false) && true))), false, false), false)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) || false))) || false)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(-885.137), _GLF_FUZZED(vec3(-248.523, 9.8, 177.250).z)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).x < injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / sqrt(1.0)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, (false) && true))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))) && true)))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), false)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), true))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) * 1u)))))) | 0u)) * 1u)) * 1u)))))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-458.091)), _GLF_IDENTITY(vec2(_GLF_FUZZED(79.51), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(26696) : 1))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))]), max(vec2(_GLF_FUZZED(79.51), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(26696) : 1))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))]), vec2(_GLF_FUZZED(79.51), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(26696) : 1))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))]))), bvec2(false, true))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-458.091)), vec2(_GLF_FUZZED(79.51), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(26696) : 1))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))]), bvec2(false, true))))).y)))))))), ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 94:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.6) : injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(705.409)), bool(false))), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(705.409)), bool(false))), injectionSwitch.x)) > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(705.409)), bool(false))), injectionSwitch.x)) > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(705.409)), bool(false))), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(705.409)), bool(false))), injectionSwitch.x)) > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(705.409)), bool(false))), injectionSwitch.x)) > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))).y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))) && true), true, false, false))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)), bool(bool(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)), bool(bool(! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     {
      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
       {
        if(_GLF_DEAD(false))
         barrier();
        barrier();
       }
      if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
       barrier();
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       equal(_GLF_IDENTITY(uvec2(54661u, _GLF_IDENTITY(85934u, _GLF_IDENTITY((85934u), max((85934u), (85934u))) * 1u)), max(uvec2(54661u, _GLF_IDENTITY(85934u, _GLF_IDENTITY((85934u), max((85934u), (85934u))) * 1u)), uvec2(54661u, _GLF_IDENTITY(85934u, _GLF_IDENTITY((_GLF_IDENTITY(85934u, (85934u) - 0u)), max((85934u), (85934u))) * 1u)))), _GLF_IDENTITY(uvec2(138877u, 43225u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(138877u, 43225u), (uvec2(138877u, 43225u)) | (uvec2(0u, 0u) | uvec2(0u, 0u))), _GLF_IDENTITY((uvec2(138877u, 43225u)) | _GLF_IDENTITY((uvec2(138877u, 43225u)), (true ? (_GLF_IDENTITY(uvec2(138877u, 43225u), _GLF_IDENTITY(clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(138877u, (false ? _GLF_FUZZED((~ 193158u)) : 138877u)), 43225u), (true ? uvec2(138877u, 43225u) : _GLF_IDENTITY(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), min(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))))), uvec2(138877u, 43225u)), (_GLF_IDENTITY(clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(138877u, (false ? _GLF_FUZZED((~ 193158u)) : 138877u)), 43225u), (true ? uvec2(138877u, 43225u) : _GLF_IDENTITY(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), min(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))))), uvec2(138877u, 43225u)), (_GLF_IDENTITY(clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(138877u, (false ? _GLF_FUZZED((~ 193158u)) : 138877u)), 43225u), (true ? uvec2(138877u, 43225u) : _GLF_IDENTITY(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), min(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))))), uvec2(138877u, 43225u)), max(clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(138877u, (false ? _GLF_FUZZED((~ 193158u)) : 138877u)), 43225u), (true ? uvec2(138877u, 43225u) : _GLF_IDENTITY(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), min(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))))), uvec2(138877u, 43225u)), clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(138877u, (false ? _GLF_FUZZED((~ 193158u)) : 138877u)), 43225u), (true ? uvec2(138877u, 43225u) : _GLF_IDENTITY(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), min(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))))), uvec2(138877u, 43225u))))) ^ uvec2(0u, 0u))) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(4u), uvec2(4u)))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid | uvec2(50421u, 67404u)), ((virtual_gid | uvec2(50421u, 67404u))) << uvec2(0u, 0u)), max((_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), (_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), clamp(virtual_gid | uvec2(50421u, 67404u), _GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), uvec2(0u, 0u) ^ (virtual_gid | uvec2(50421u, 67404u))), virtual_gid | uvec2(50421u, 67404u)))) / uvec2(1u, 1u))), (_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), (virtual_gid | uvec2(50421u, 67404u)) | (virtual_gid | uvec2(50421u, 67404u))))))))), uvec2(0u, 0u) ^ ((uvec2(138877u, 43225u)) | _GLF_IDENTITY((uvec2(138877u, 43225u)), (true ? (_GLF_IDENTITY(uvec2(138877u, 43225u), clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(138877u, (false ? _GLF_FUZZED((~ 193158u)) : 138877u)), 43225u), (true ? uvec2(138877u, 43225u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), (false ? _GLF_FUZZED(uvec2(14661u, 92645u)) : _GLF_IDENTITY(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), (_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id))) | (_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))))), min(_GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)), _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))))), uvec2(138877u, 43225u)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid | uvec2(50421u, 67404u)), ((virtual_gid | uvec2(50421u, 67404u))) << uvec2(0u, 0u)), max((_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), (_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), clamp(virtual_gid | uvec2(50421u, 67404u), _GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), uvec2(0u, 0u) ^ (virtual_gid | uvec2(50421u, 67404u))), virtual_gid | uvec2(50421u, 67404u)))) / uvec2(1u, 1u))), (_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), (virtual_gid | uvec2(50421u, 67404u)) | (virtual_gid | uvec2(50421u, _GLF_IDENTITY(67404u, 1u * (67404u))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(138877u, 43225u), (uvec2(138877u, 43225u)) | (uvec2(0u, 0u) | uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) / 1u))))), (uvec2(138877u, 43225u)) | _GLF_IDENTITY((uvec2(138877u, 43225u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(138877u, 43225u), clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(138877u, 43225u), (true ? uvec2(138877u, 43225u) : _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))), uvec2(138877u, 43225u))), (_GLF_IDENTITY(uvec2(138877u, 43225u), clamp(uvec2(138877u, 43225u), _GLF_IDENTITY(uvec2(138877u, 43225u), (true ? uvec2(138877u, 43225u) : _GLF_FUZZED((uvec2(23477u, 126256u) << subgroup_id)))), uvec2(138877u, 43225u)))) | uvec2(0u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY((virtual_gid | _GLF_IDENTITY(uvec2(50421u, 67404u), uvec2(_GLF_IDENTITY(uvec3(uvec2(50421u, 67404u), 0u), min(uvec3(uvec2(50421u, 67404u), 0u), _GLF_IDENTITY(uvec3(uvec2(50421u, 67404u), 0u), (uvec3(uvec2(50421u, 67404u), 0u)) << uvec3(0u, 0u, 0u))))))), max((_GLF_IDENTITY(virtual_gid | _GLF_IDENTITY(uvec2(50421u, 67404u), (_GLF_IDENTITY(uvec2(50421u, 67404u), (uvec2(_GLF_IDENTITY(50421u, min(50421u, 50421u)), 67404u)) + uvec2(0u, 0u))) / uvec2(1u, 1u)), (_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), clamp(virtual_gid | uvec2(50421u, 67404u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(virtual_gid, virtual_gid), (min(virtual_gid, virtual_gid)) | 0u), (_GLF_IDENTITY(min(virtual_gid, virtual_gid), (min(virtual_gid, virtual_gid)) | 0u)) ^ 0u)) | uvec2(50421u, 67404u), uvec2(0u, 0u) ^ (virtual_gid | uvec2(50421u, 67404u))), virtual_gid | uvec2(50421u, 67404u)))) / uvec2(1u, 1u))), (_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), (virtual_gid | uvec2(50421u, 67404u)) | (_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), min(_GLF_IDENTITY(virtual_gid | uvec2(50421u, 67404u), max(virtual_gid | uvec2(50421u, 67404u), virtual_gid | uvec2(50421u, 67404u))), virtual_gid | uvec2(50421u, 67404u)))))))))))))) >> uvec2(0u, 0u)) - (uvec2(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) << _GLF_IDENTITY(uvec2(1u), uvec2(1u)))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) * mat2(1.0)))) - sqrt(abs(vec2(0.0, 0.0)))).x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       vec2 _GLF_SWITCH_0_0v[38], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! (false)))) && true)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(       mat2x3(693.814, 190.613, -224.348, 1.3, _GLF_IDENTITY(-696.542, mix(float(_GLF_FUZZED(float(66260u))), float(-696.542), bool(true))), -53.60);
 (false || ((mat3x2(7519.8197, -9684.5696, 555.895, 24.55, -5.2, _GLF_IDENTITY(86.06, min(86.06, _GLF_IDENTITY(86.06, min(86.06, 86.06))))) * mat4x3(_GLF_IDENTITY(29.40, clamp(29.40, 29.40, 29.40)), 5.0, -3201.4589, 8.3, _GLF_IDENTITY(-0.4, _GLF_IDENTITY((_GLF_IDENTITY(-0.4, mix(float(_GLF_IDENTITY(-0.4, clamp(-0.4, _GLF_IDENTITY(-0.4, (-0.4) - 0.0), _GLF_IDENTITY(-0.4, (-0.4) - 0.0)))), float(_GLF_FUZZED(-1.2)), bool(false)))) / 1.0, _GLF_IDENTITY(((_GLF_IDENTITY(-0.4, min(_GLF_IDENTITY(-0.4, (-0.4) - 0.0), _GLF_IDENTITY(-0.4, 0.0 + (-0.4))))) / 1.0) + _GLF_IDENTITY(0.0, min(0.0, 0.0)), (((_GLF_IDENTITY(-0.4, min(_GLF_IDENTITY(-0.4, (-0.4) - 0.0), _GLF_IDENTITY(-0.4, 0.0 + (-0.4))))) / 1.0) + _GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0))), 3.4, _GLF_IDENTITY(-8446.3915, sqrt(0.0) + (-8446.3915)), -6525.6563, -774.362, -92.81, -2964.0255, 9197.1769)) != mat4x2(_GLF_IDENTITY(-5.9, float(mat4x2(-5.9, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0))), 9.5, -4379.5604, 523.891, _GLF_IDENTITY(-73.05, float(_GLF_IDENTITY(mat2x3(-73.05, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(-73.05, _GLF_IDENTITY(1.0, float(mat3x4(1.0, tan(0.0), determinant(mat2(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))).x), 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8.6)), bool(false))), 0.0), min(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4(1.0) * (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(750.101) : 0.0))))))), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))), sin(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))) * (-73.05)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(-2.1, (-2.1) / 1.0), 8388.7489, -567.654))); mat2x4(1.5, 7.3, -180.140, -91.00, 961.700, _GLF_IDENTITY(-8.3, (-8.3) * 1.0), -83.69, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.4, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(-9632.3663)), max(_GLF_FUZZED(radians(-9632.3663)), _GLF_FUZZED(radians(-9632.3663)))) : _GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-4.4, _GLF_IDENTITY((-4.4), clamp(_GLF_IDENTITY((-4.4), float(mat4x2((-4.4), 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0))), _GLF_IDENTITY((-4.4), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(13.94)), min(float(_GLF_FUZZED(13.94)), float(_GLF_FUZZED(13.94)))), float((-4.4)), bool(true)), mix(float(_GLF_FUZZED(-8945.1421)), float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(13.94)), min(float(_GLF_FUZZED(13.94)), float(_GLF_FUZZED(13.94)))), float((-4.4)), bool(true))), bool(true)))), _GLF_IDENTITY((-4.4), (true ? (-4.4) : _GLF_FUZZED(-2398.2103))))) / 1.0), (_GLF_IDENTITY(-4.4, _GLF_IDENTITY((-4.4), clamp(_GLF_IDENTITY((-4.4), float(mat4x2((-4.4), 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0))), _GLF_IDENTITY((-4.4), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(13.94)), min(float(_GLF_FUZZED(13.94)), float(_GLF_FUZZED(13.94)))), float((-4.4)), bool(true)), mix(float(_GLF_FUZZED(-8945.1421)), float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(13.94)), min(float(_GLF_FUZZED(13.94)), float(_GLF_FUZZED(13.94)))), float((-4.4)), bool(true))), bool(true)))), _GLF_IDENTITY((-4.4), (true ? (-4.4) : _GLF_FUZZED(-2398.2103))))) / 1.0)) - determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(40.25)), float(_GLF_IDENTITY(-4.4, min(-4.4, -4.4))), bool(true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         vec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
         if(_GLF_DEAD(false))
          barrier();
         ivec3 _GLF_SWITCH_0_5v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-37.03) : injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) || false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_SWITCH_0_3v) : injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(true, (true) || false) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         44145;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_SWITCH_0_2v) : injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_SWITCH_0_2v) : injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_SWITCH_0_2v) : injectionSwitch)), 0.0, sqrt(0.0), 0.0, 0.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         (7652.0117 + mat4x2(mat3x2(-13.54, 2.9, 63.24, _GLF_IDENTITY(430.181, (true ? _GLF_IDENTITY(430.181, (430.181) - sqrt(0.0)) : _GLF_FUZZED(-36.54))), _GLF_IDENTITY(-7983.1187, _GLF_IDENTITY((-7983.1187) / exp(0.0), min(_GLF_IDENTITY((-7983.1187) / exp(0.0), ((-7983.1187) / exp(0.0)) + 0.0), _GLF_IDENTITY((-7983.1187) / exp(0.0), _GLF_IDENTITY(((-7983.1187) / exp(0.0)) / 1.0, min(((-7983.1187) / exp(0.0)) / 1.0, ((-7983.1187) / exp(0.0)) / 1.0)))))), 5.7)));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         matrixCompMult(mat3x2(-750.191, 16.55, -7279.8707, -5252.6217, 6298.8659, 167.575), mat3x2(mat4(_GLF_IDENTITY(0.4, clamp(0.4, 0.4, 0.4)), -953.054, 855.242, -9.9, -980.096, _GLF_IDENTITY(366.673, mix(_GLF_IDENTITY(float(366.673), (float(366.673)) - length(vec2(0.0, 0.0))), float(_GLF_FUZZED(6.0)), bool(false))), -6.5, -24.69, -3518.5631, 79.29, 6836.3725, 8.4, _GLF_IDENTITY(-1.4, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), (true ? _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)) : _GLF_FUZZED(_GLF_IDENTITY(degrees(mix(5.4, 6.1, -24.97)), float(mat2(degrees(mix(5.4, 6.1, -24.97)), 0.0, sqrt(1.0), 0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-1.4, clamp(_GLF_IDENTITY(-1.4, mix(float(-1.4), float(_GLF_FUZZED(38.87)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -1.4, -1.4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)))), _GLF_IDENTITY(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), float(mat4x3(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)))), _GLF_IDENTITY(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4))), clamp(max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4))), _GLF_IDENTITY(max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4))), 0.0 + (max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4))))), _GLF_IDENTITY(max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4))), clamp(max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4))), max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4))), max(_GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)), _GLF_IDENTITY(-1.4, clamp(-1.4, -1.4, -1.4)))))))))), max(-1.4, -1.4)), 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.7)), bool(false))), round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(1.0))), (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(1.0))), float(mat3x4(float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) + 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) / 1.0), 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))), log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3((injectionSwitch)[0], 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(8.4)), bvec2(false, false))).y)))), -4342.9834, 7.7, _GLF_IDENTITY(-1.3, _GLF_IDENTITY(float(mat3(-1.3, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (float(mat3(-1.3, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))) - 0.0)))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         vec4 _GLF_SWITCH_0_6v[38], _GLF_SWITCH_0_7v[11];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6591.4804)), bvec2(true, false))))), injectionSwitch)).y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         ivec3 _GLF_SWITCH_0_8v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.8)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.8)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, false, true)), bool(bvec3(bool(bvec4((! (false)), true, false, true)), false, false))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))))))) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(true && (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))), bool(bvec4(true && (bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), true))), false, true, true))), false)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((160.688 / -1.2))), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((160.688 / -1.2))), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))), 0.0, 0.0, abs(1.0), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(5.6)), bool(false)))), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          barrier();
         bvec3 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
         mat2x3(8345.1960, -9615.7385, 41.73, _GLF_IDENTITY(0.1, clamp(0.1, 0.1, _GLF_IDENTITY(0.1, mix(float(_GLF_IDENTITY(0.1, max(0.1, 0.1))), float(_GLF_FUZZED(0.3)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, 7.7)), max(7.7, 7.7)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, 7.7)), max(7.7, 7.7)) : _GLF_FUZZED(9153.9807))), -4659.0217);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (false))), _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), false || ((false)))))))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false, true))))))))))
        barrier();
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_SWITCH_0_2v) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))) || false)))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          barrier();
         }
        if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) || false)) || false)))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        ivec2 _GLF_SWITCH_0_12v[73], _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[77];
        if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), true && (true && (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED((+ -60.46))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(9.1)))), bvec2(true, true))).x > injectionSwitch.y)))))))))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id & workgroup_base, clamp(subgroup_id & workgroup_base, subgroup_id & workgroup_base, subgroup_id & workgroup_base)), clamp(_GLF_IDENTITY(subgroup_id & workgroup_base, _GLF_IDENTITY(~ (~ (subgroup_id & workgroup_base)), max(~ (~ (subgroup_id & workgroup_base)), ~ (~ (subgroup_id & workgroup_base))))), subgroup_id & workgroup_base, subgroup_id & workgroup_base))));
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        lessThan(_GLF_IDENTITY(uvec3(56072u, 144363u, 191753u), (uvec3(56072u, 144363u, 191753u)) / uvec3(1u, 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(53721u, max(53721u, _GLF_IDENTITY(53721u, ~ (~ (_GLF_IDENTITY(53721u, clamp(53721u, 53721u, 53721u))))))), (_GLF_IDENTITY(53721u, uint(uvec3(53721u, 1u, 0u)))) | (_GLF_IDENTITY(53721u, (_GLF_IDENTITY(53721u, (53721u) | (53721u))) / 1u))), 113887u, 69818u) - uvec3(132839u, 78923u, 74718u)));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))) && true))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), false || (! (! (false)))))))))) || false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) + vec3(0.0, 0.0, 0.0)), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0))))).y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
         barrier();
        vec3 _GLF_SWITCH_0_15v;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
       }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
            barrier();
           barrier();
          }
         barrier();
        }
       mat4(7262.4639, 5.9, 112.348, 198.038, -3.9, -8938.1706, -2646.1789, _GLF_IDENTITY(-572.816, float(mat2x4(-572.816, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(9.6, (true ? _GLF_IDENTITY(9.6, (9.6) / 1.0) : _GLF_FUZZED(975.475))), 3.8, -989.025, _GLF_IDENTITY(4017.1458, mix(float(_GLF_IDENTITY(4017.1458, (4017.1458) * 1.0)), float(_GLF_FUZZED(-7.7)), bool(false))), _GLF_IDENTITY(-0.5, max(-0.5, -0.5)), -8933.5448, 4.9, -0.0);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       ivec3(-71910, -89405, -49261);
       if(_GLF_DEAD(false))
        barrier();
       mat2x4 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[82];
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_1v))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_1v))).x, 0.0), min(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_1v))).x, 0.0), vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_1v))).x, 0.0)))), mix(float(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_1v))).x, 0.0), min(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_1v))).x, 0.0), vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_SWITCH_0_1v))).x, 0.0))))), float(_GLF_FUZZED((true ? -839.255 : 5.4))), bool(false)))) > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(_GLF_SWITCH_0_2v)))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))))))))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(_GLF_SWITCH_0_2v)))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0)))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 1.0, 1.0)), 0.0 + (float(vec3(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), 1.0, 1.0)))))), float(_GLF_FUZZED(-719.739)), _GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec4((bool(bool(_GLF_DEAD(false)))), true, false, true)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       ;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(float _GLF_SWITCH_0_19v; true; _GLF_IDENTITY(mat2(2.9, 6466.9843, 65.65, 483.015), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(2.9, 6466.9843, 65.65, 483.015) : _GLF_FUZZED(mat2(mat3x2(7.4, -5564.1360, -3.1, -48.84, -3911.5595, 6.0))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true)), false))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false)))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))))))))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         outerProduct(step((+ vec4(3930.4921, 7.5, 45.33, 6872.5186)), vec4(-57.22, -69.79, -80.49, -5.2)), vec3(-2.0, 8778.7904, 8.9));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), cos(abs(0.0)), 1.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), cos(abs(0.0)), 1.0, 0.0) : _GLF_FUZZED(mat4x3(-531.658, -39.74, 8681.6399, -30.93, 7.9, -31.99, 5972.0779, 54.53, 2.9, -9.1, -585.335, 1980.6275)))))))).y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           barrier();
          }
         uvec3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec3(305.034, 269.781, 847.130).y))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(913.263))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec3(305.034, 269.781, 847.130).y))) > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         uvec4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[29];
         if(_GLF_DEAD(false))
          barrier();
         mat2x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         ;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
      if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
       barrier();
      if(_GLF_DEAD(false))
       barrier();
      if(_GLF_DEAD(false))
       barrier();
     }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))))
      barrier();
     case 36:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))).y))))
      barrier();
     case 17:
     case 86:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(57.30) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, max(64, 64)), 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, abs(0.0), 1.0), (mat2(injectionSwitch, abs(0.0), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-772.664, 56.83))))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(83.35)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)))))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-772.664, 56.83))))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(83.35)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)))))))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-5167.1493 * -119.267, _GLF_IDENTITY(clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267))), (clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267)))) * 1.0))), max((_GLF_IDENTITY(-5167.1493 * -119.267, _GLF_IDENTITY(clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267))), (clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267)))) * 1.0))), (_GLF_IDENTITY(-5167.1493 * -119.267, _GLF_IDENTITY(clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267))), (clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267)))) * 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(-65.06), max(_GLF_IDENTITY(_GLF_FUZZED(-65.06), min(_GLF_FUZZED(-65.06), _GLF_FUZZED(-65.06))), _GLF_IDENTITY(_GLF_FUZZED(-65.06), (_GLF_IDENTITY(_GLF_FUZZED(-65.06), (_GLF_FUZZED(-65.06)) + 0.0)) / 1.0)))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(5.2, -97.83))) : injectionSwitch))), vec2(mat3x4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.9) : 1.0)), 0.0, 0.0)))[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_IDENTITY(_GLF_FUZZED(-65.06), abs(1.0) * (_GLF_FUZZED(-65.06)))), _GLF_IDENTITY(vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(_GLF_IDENTITY((-5167.1493 * -119.267), mix(float((-5167.1493 * -119.267)), float(_GLF_FUZZED(float(50081))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(-65.06))), mix(vec2((vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06))))[0], (vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06))))[1]), vec2(_GLF_FUZZED(-46.55), _GLF_FUZZED(796.566)), bvec2(false, false)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 0.0, 1.0)))), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(0.7, -8.4)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))) / vec2(1.0, 1.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) || false)))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-5167.1493 * -119.267, _GLF_IDENTITY(clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267))), (clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267)))) * 1.0))), max((_GLF_IDENTITY(-5167.1493 * -119.267, _GLF_IDENTITY(clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267))), (clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267)))) * 1.0))), (_GLF_IDENTITY(-5167.1493 * -119.267, _GLF_IDENTITY(clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267))), (clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, clamp(-5167.1493 * -119.267, _GLF_IDENTITY(-5167.1493 * -119.267, max(-5167.1493 * -119.267, -5167.1493 * -119.267)), -5167.1493 * -119.267)), _GLF_IDENTITY(-5167.1493 * -119.267, min(-5167.1493 * -119.267, -5167.1493 * -119.267)))) * 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(-65.06), max(_GLF_IDENTITY(_GLF_FUZZED(-65.06), min(_GLF_FUZZED(-65.06), _GLF_FUZZED(-65.06))), _GLF_IDENTITY(_GLF_FUZZED(-65.06), (_GLF_IDENTITY(_GLF_FUZZED(-65.06), (_GLF_FUZZED(-65.06)) + 0.0)) / 1.0)))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(vec2(5.2, -97.83))) : injectionSwitch))), vec2(mat3x4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.9) : 1.0)), 0.0, 0.0)))[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_IDENTITY(_GLF_FUZZED(-65.06), abs(1.0) * (_GLF_FUZZED(-65.06)))), _GLF_IDENTITY(vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(_GLF_IDENTITY((-5167.1493 * -119.267), mix(float((-5167.1493 * -119.267)), float(_GLF_FUZZED(float(50081))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(-65.06))), mix(vec2((vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06))))[0], (vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06))))[1]), vec2(_GLF_FUZZED(-46.55), _GLF_FUZZED(796.566)), bvec2(false, false)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 0.0, 1.0)))), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED((-5167.1493 * -119.267)), _GLF_FUZZED(-65.06)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(0.7, -8.4)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))) / vec2(1.0, 1.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) || false)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), false))) && true)), _GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) && true), (bool((false) && _GLF_IDENTITY(true, ! (! (true))))) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true)))), bool(bvec2(_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true)))), false)))) || false, false || ((_GLF_IDENTITY(bool((false) && true), ! (! (bool((false) && true))))) || false))), (bool(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ((false) && true) && true)))))) && true))) || false, ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2((false) && true, false)), ! (! (bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, (true) || false))), false))))))), ! (! (bool((false) && true))))) || false, false || ((_GLF_IDENTITY(bool((false) && true), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false) && true, true && ((false) && true))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true)))))), true && ((false) && true))))), false || (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec4(bool(_GLF_IDENTITY((false) && true, true && ((false) && true))), false, true, true)))))))))))) || false))), (bool((false) && true)) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2((false) && true, false)), ! (! (bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, (true) || false))), false))))))), ! (! (bool((false) && true))))) || false, false || ((_GLF_IDENTITY(bool((false) && true), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false) && true, true && ((false) && true))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true)))))), true && ((false) && true))))), false || (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec4(bool(_GLF_IDENTITY((false) && true, true && ((false) && true))), false, true, true)))))))))))) || false))), (bool((false) && true)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2((false) && true, false)), ! (! (bool(bvec2(_GLF_IDENTITY((false) && true, false || ((false) && _GLF_IDENTITY(true, (true) || false))), false))))))), ! (! (bool((false) && true))))) || false, false || ((_GLF_IDENTITY(bool((false) && true), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((false) && true, true && ((false) && true))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), ! (! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true)))))), true && ((false) && true))))), false || (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bvec4(bool(_GLF_IDENTITY((false) && true, true && ((false) && true))), false, true, true)))))))))))) || false))), (bool((false) && true)) && true)))))) || false)) || false)))), (bool(_GLF_IDENTITY(bool((false) && true), (bool((false) && true)) && true))) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true))), bool(bvec4((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bool(((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true, false, true))) && true)))), _GLF_IDENTITY(true, ! (! (true))), true))), false, false, false))) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     _GLF_IDENTITY(1, min(1, 1));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
}
