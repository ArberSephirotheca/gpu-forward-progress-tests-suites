#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat2x3 _f0;
 mat4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 uvec4 _f1;
 uvec3 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 float _f1;
 vec4 _f2;
 bvec3 _f3;
 ivec2 _f4;
 bvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 int _f1;
 _GLF_struct_1 _f2;
 bool _f3;
 _GLF_struct_2 _f4;
 uint _f5;
} ;

struct _GLF_struct_4 {
 uint subgroup_id;
 _GLF_struct_3 _f0;
 vec2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(313.439) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_SubgroupID, _GLF_struct_3(_GLF_struct_0(mat2x4(1.0), 1.0, vec4(1.0), bvec3(true), ivec2(1), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), mat2(1.0)), 1, _GLF_struct_1(vec2(1.0), uvec4(1u), uvec3(1u), bvec4(true), vec4(1.0)), true, _GLF_struct_2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))))), (1.0) / 1.0)), mat4(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true)))))), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), false || ((true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, false)))))), false || ((true)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (true))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), (! (true)) || false))), false || (! (! (! (true)))))))), (bool(_GLF_IDENTITY(! (! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), (! (true)) && true))), false || (! (! (! (true))))))))) || false)))))))))))))), 1u), _GLF_IDENTITY(vec2(1.0), vec2(_GLF_IDENTITY(mat4(vec2(1.0), 1.0, sqrt(1.0), exp(0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4(-74.48, 3.0, 10.13, -6182.7999, 871.359, 1.3, -5142.9493, 7.1, -7599.7532, 651.669, 8841.3331, 6.0, 1464.1054, -862.221, -5.5, -45.10)) : mat4(vec2(1.0), 1.0, sqrt(1.0), exp(0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3171.1393, 2831.3004)) : injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.8) : injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(tanh(-1619.6799), max(tanh(-1619.6799), tanh(-1619.6799)))) : injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(171757u, 132642u, 107657u)) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, (1u) - 0u))), 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(171757u, 132642u, 107657u)) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) / uvec3(1u, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(171757u, 132642u, 107657u)) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(1u, (1u) - 0u))), 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), (false ? _GLF_FUZZED(uvec3(171757u, 132642u, 107657u)) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) - uvec3(0u, 0u, 0u)), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) / uvec3(1u, 1u, 1u)))), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec3(171757u, 132642u, 107657u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))))))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), (clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), ((gl_WorkGroupID) / uvec3(1u, 1u, 1u)) | ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (true ? (gl_WorkGroupID) / uvec3(1u, 1u, 1u) : _GLF_FUZZED((uvec3(97849u, 153774u, 196167u))))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), ((gl_WorkGroupID) / uvec3(1u, 1u, 1u)) | ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))), max(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u)), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u)), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))))) * uvec3(1u, 1u, 1u)), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), min(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED(bitfieldExtract(uvec3(13088u, 47650u, 120401u), -18735, 96279)))))))), uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID))) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(124109u, 139674u, 63868u)))) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (true ? _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))) : _GLF_FUZZED(uvec3(125691u, 142405u, 197743u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u)))))) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) / uvec3(1u, 1u, 1u)))))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec3(171757u, 132642u, 107657u)) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u))), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u)))), 1u), uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(101584u, 127971u, 97422u)) : _GLF_IDENTITY((gl_WorkGroupID), clamp((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))))), (gl_WorkGroupID), (gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 1u))) : _GLF_FUZZED(subgroup_size))), max(1u, 1u)), 1u, 1u), ((gl_WorkGroupID) / uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(157978u, 38557u, 148022u)) : gl_WorkGroupID))))) / uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(1u, max(1u, 1u))) | 0u))), 1u, 1u)) >> uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(171757u, 132642u, 107657u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))))))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x : _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY((vec2(-8.9, -5.0) * mat2(-6.2, -219.428, -6354.1546, 6409.6644)), (false ? _GLF_FUZZED(injectionSwitch) : (vec2(-8.9, -5.0) * mat2(-6.2, -219.428, -6354.1546, 6409.6644))))))));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), workgroup_size)), (workgroup_size) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), (0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), workgroup_size)), (workgroup_size) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), (0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) | 0u))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), workgroup_size)), (workgroup_size) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), (0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) | 0u))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.8))), _GLF_IDENTITY(1.0, (1.0) - length(0.0))))) / 1.0), injectionSwitch.y))), 0u ^ (workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), (workgroup_base) / 1u), ~ (~ (workgroup_base))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (workgroup_base))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))))))) / 1u))), 1u, 1u, 0u))), workgroup_base)) + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, max(_GLF_struct_replacement_4.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id * subgroup_size, (true ? _GLF_struct_replacement_4.subgroup_id * subgroup_size : _GLF_FUZZED(60444u))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), (_GLF_IDENTITY(1u, (1u) | (1u))) | (1u))))), ((96519u | 144632u) & 0u), 1u, (141733u & 0u))))), _GLF_IDENTITY(clamp(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), _GLF_IDENTITY(1u, 0u + (1u)), (141733u & 0u))))), workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (141733u & 0u))))), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY((96519u | 144632u), clamp((96519u | 144632u), _GLF_IDENTITY((96519u | 144632u), ((96519u | 144632u)) - 0u), _GLF_IDENTITY((96519u | 144632u), ((96519u | 144632u)) | 0u))) & 0u), 1u, _GLF_IDENTITY((141733u & 0u), (_GLF_IDENTITY((141733u & 0u), ~ (~ ((141733u & 0u))))) >> 0u))))), min(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (_GLF_IDENTITY(141733u, max(_GLF_IDENTITY(141733u, ~ (~ (141733u))), 141733u)) & 0u))))), workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), ~ (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), max(uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))))))))), 0u + (uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))))), 1u, (141733u & 0u)))))))), min(clamp(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (141733u & 0u))))), workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (141733u & 0u))))), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY((96519u | 144632u), clamp((96519u | 144632u), _GLF_IDENTITY((96519u | 144632u), ((96519u | 144632u)) - 0u), _GLF_IDENTITY((96519u | 144632u), ((96519u | 144632u)) | 0u))) & 0u), 1u, (141733u & 0u))))), min(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (_GLF_IDENTITY(141733u, max(_GLF_IDENTITY(141733u, ~ (~ (141733u))), 141733u)) & 0u))))), workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), 0u + (uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))))), 1u, (141733u & 0u)))))))), clamp(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (141733u & 0u))))), workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (141733u & 0u))))), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY((96519u | 144632u), clamp((96519u | 144632u), _GLF_IDENTITY((96519u | 144632u), ((96519u | 144632u)) - 0u), _GLF_IDENTITY((96519u | 144632u), ((96519u | 144632u)) | 0u))) & 0u), 1u, (141733u & 0u))))), min(workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & 0u), 1u, (_GLF_IDENTITY(141733u, max(_GLF_IDENTITY(141733u, ~ (~ (141733u))), 141733u)) & 0u))))), workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), ((96519u | 144632u) & _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), 0u + (uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))))), 1u, (141733u & 0u)))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4816.9107), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.0)), bvec2(true, false)))))) * mat2(1.0)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-327.156), _GLF_FUZZED(970.248)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0))) : _GLF_FUZZED((-2.3 / -53.99))))), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(4816.9107, _GLF_IDENTITY(min(4816.9107, 4816.9107), mix(float(min(4816.9107, 4816.9107)), float(_GLF_FUZZED(-3.9)), bool(false))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.0)), bvec2(true, false)))))) * mat2(1.0)))).x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5377.7245)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-5377.7245)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), clamp(mix(float(_GLF_FUZZED(-5377.7245)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-2.7) : (injectionSwitch.x))) - 0.0)), bool(true)), mix(float(_GLF_FUZZED(-5377.7245)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), mix(float(_GLF_FUZZED(-5377.7245)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5377.7245)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), (false ? _GLF_FUZZED(-6218.7155) : mix(float(_GLF_FUZZED(-5377.7245)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))))))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)), ! (! (bool(bvec3(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))))))), true, false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8380.1420)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), bool(bvec2((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), true && (bool(bvec2(false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), true && (bool(bvec2(false, false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), true && (bool(bvec2(false, false)))))) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), false))))))), false)))))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))))))))))), false))) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)) || (_GLF_IDENTITY(bool(bvec4((! (false)), false, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4((! (false)), false, true, false)), false, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4((! (false)), false, true, false)), false, _GLF_IDENTITY(true, true && (true)))), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec4((! (false)), false, true, false)), false || (bool(bvec4((! (false)), false, true, false)))), false, true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(bool(bvec4((! (false)), false, true, false)), false, _GLF_IDENTITY(true, true && (true)))), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec4((! (false)), false, true, false)), false || (bool(bvec4((! (false)), false, true, false)))), false, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))))), _GLF_IDENTITY(false, false || (false)) || (true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))))), false || ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))) && true, bool(bool((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true)))), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))))) && true, bool(bool((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true))))) || false)))), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (false)))) && true), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (injectionSwitch.x)) > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true), true), false))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (! ((false) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) | ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) | ivec3(0, 0, 0)))) / (0 ^ 1))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.3))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))) || false)))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), bool(bvec3((false), true, true))), false || (true && _GLF_IDENTITY((false), bool(bvec3((false), true, true))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 0 ^ (64)), 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), bool(bool(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))) && true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, true, false)))))))), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))) && true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, true, false)))))))), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), true))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))) && true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, true, false)))))))), _GLF_IDENTITY(true, true && (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), max(vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, 1.0, 1.0))))).y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)))))) && true))) || false))) && _GLF_IDENTITY(true, ! (! (true))))))), true)))))))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), true && (((injectionSwitch.x < injectionSwitch.y)))) && true)))), bool(bool(bool(bvec3(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) && true, bool(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (((injectionSwitch.x < injectionSwitch.y)) && true)))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, bool(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (((injectionSwitch.x < injectionSwitch.y)) && true)))))), false, false, false))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, false))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true))))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) + 0))))))), 64, _GLF_IDENTITY(4, 0 ^ (4)));
  }
}
