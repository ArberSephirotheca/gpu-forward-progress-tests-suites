#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 for(int _injected_loop_counter = (97850 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED((++ (_injected_loop_counter))))) / ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(-92220))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) ^ 0), 1))), (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0))) | (int(1)))), 0 ^ (1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(-92220))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) ^ 0), 1))), (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0))) | (int(1)))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(-92220))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) ^ 0), 1))), (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0))) | (int(1)))), 0 ^ (1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(-92220))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) ^ 0), 1))), (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0))) | (int(1))))))) ^ 0)) >> _GLF_IDENTITY(int(1), int(1)))) | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | (0)) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter != 1), true && (! (_injected_loop_counter != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1))))))), bool(bool(_GLF_IDENTITY(! (_injected_loop_counter != 1), true && (! (_injected_loop_counter != 1))))))), true && ((_GLF_IDENTITY(! (_injected_loop_counter != 1), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) + 0) >> 0) != 1), ((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) + 0) >> 0) != 1)) || false)), _GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) + 0) >> 0) != 1)))), ! (! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) + 0) >> 0) != 1))), (! ((! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) + 0) >> 0) != 1)))) && _GLF_IDENTITY(true, false || (true)))))))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))))), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (! ((false)))), (! ((false))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (true) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), true, true))) && true)))))), false || ((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (! ((false)))), (! ((false))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (true) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))), true, true))))))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false, ! (! (_GLF_IDENTITY((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false, true && ((bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(44.90), _GLF_FUZZED(float(11305u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))).x > injectionSwitch.y)), false, false))) || false)))))), bool(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false, _GLF_IDENTITY(bool(bool((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false)), (bool(bool((bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))) && true))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(79.27) : injectionSwitch.y))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (gl_NumWorkGroups.x)), uint(uvec3(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u | (1u), max(0u | (1u), 0u | (1u)))) / (1u ^ 0u))), clamp(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u)))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), (_GLF_IDENTITY(0u | (1u), max(0u | (1u), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(137864u))))))) / (1u ^ 0u))), clamp(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) | (1u)), _GLF_IDENTITY(1u, 0u | (1u)))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), _GLF_IDENTITY((_GLF_IDENTITY(0u | (1u), max(0u | (1u), _GLF_IDENTITY(0u | (1u), ~ (~ (0u | (1u))))))) / (1u ^ 0u), ((_GLF_IDENTITY(0u | (1u), max(0u | (1u), _GLF_IDENTITY(0u | (1u), ~ (~ (0u | (1u))))))) / (1u ^ 0u)) * 1u))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) | (1u)), _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u)))), 0u, 1u, 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u | (1u), max(0u | (1u), 0u | (1u)))) / (1u ^ 0u))), clamp(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u)))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u)))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), (_GLF_IDENTITY(0u | (1u), max(0u | (1u), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u)))) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(137864u))))))) / (1u ^ 0u))), clamp(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ 0u)) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) | (1u)), _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), _GLF_IDENTITY(uint(uvec2((1u), 0u)), min(uint(uvec2((1u), 0u)), uint(uvec2((1u), 0u)))))))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), _GLF_IDENTITY((_GLF_IDENTITY(0u | (1u), max(0u | (1u), _GLF_IDENTITY(0u | (1u), ~ (~ (0u | (1u))))))) / (1u ^ 0u), ((_GLF_IDENTITY(0u | (1u), max(0u | (1u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (1u), ~ (~ (0u | (1u)))), (_GLF_IDENTITY(0u | (1u), ~ (~ (0u | (1u))))) << 0u)))) / (1u ^ 0u)) * 1u))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))) | (1u)), _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u)), 0u | (1u)))), 0u, 1u, 0u))) : _GLF_FUZZED((35019u ^ uvec4(105950u, 23535u, 55528u, 119068u))))), clamp(uvec4(_GLF_IDENTITY(1u, 0u | (1u)), 0u, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) >> 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (1u))) >> 0u)) >> 0u))), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-89025))))), clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u)))), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u)))))))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((_GLF_IDENTITY(1u, min(1u, 1u))))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), 0u ^ (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((_GLF_IDENTITY(1u, (1u) << 0u)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(106956u, 72231u, 21051u), (uvec3(106956u, 72231u, 21051u)) << uvec3(0u, 0u, 0u))[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u)))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), 0u ^ (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(106956u, 72231u, 21051u)[1], min(uvec3(106956u, 72231u, 21051u)[1], uvec3(106956u, 72231u, 21051u)[1]))) : 0u | (1u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))), ~ (~ ((_GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, _GLF_IDENTITY(21051u, clamp(21051u, 21051u, 21051u)))[1]) : 0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), 0u ^ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, _GLF_IDENTITY(72231u, max(72231u, 72231u)), _GLF_IDENTITY(21051u, (21051u) ^ 0u))[1]) : 0u | (_GLF_IDENTITY(1u, (1u) * (0u ^ 1u)))))) << 0u))))))) - 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(((1u)) | ((1u)), max(((1u)) | ((1u)), ((1u)) | ((1u))))))), min(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(106956u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 106956u : _GLF_FUZZED(subgroup_size))), 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), 1))))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) | 0u), _GLF_FUZZED(subgroup_size))) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), 0u ^ (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) >> 0u), ((1u)) | ((1u))))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) - 0u)), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) | ((1u)))) << 0u)) | _GLF_IDENTITY(((1u)), (((1u))) - 0u)))))), 0u ^ (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(106956u, 72231u, 21051u)[1], 0u + (uvec3(106956u, 72231u, 21051u)[1]))) : 0u | (1u)))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))), 0u + (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3269.2493)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), 0u ^ (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))), ~ (~ ((_GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(106956u, 72231u, _GLF_IDENTITY(21051u, clamp(21051u, 21051u, 21051u)))[1], (uvec3(106956u, 72231u, _GLF_IDENTITY(21051u, clamp(21051u, 21051u, 21051u)))[1]) | (_GLF_IDENTITY(uvec3(106956u, 72231u, _GLF_IDENTITY(21051u, clamp(21051u, 21051u, 21051u)))[1], (uvec3(106956u, 72231u, _GLF_IDENTITY(21051u, clamp(21051u, 21051u, 21051u)))[1]) | 0u)))) : 0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), 0u ^ (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), 1u * (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u)) - 0u), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u)))))) << 0u))))))) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))]) : _GLF_IDENTITY(0u | (1u), max(0u | (1u), 0u | (1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, _GLF_IDENTITY(72231u, min(72231u, 72231u)), 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), (_GLF_IDENTITY((1u), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) - 0u) : _GLF_FUZZED(subgroup_size))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY(_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) : _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) * 1u), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), _GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ((1u)) - 0u), (1u))), (1u)))) | ((1u))), max(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ((1u)) - 0u), (1u))), (1u)))) | ((1u))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ((1u)) - 0u), (1u))), (1u)))) | ((1u))), min(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ((1u)) - 0u), (1u))), (1u)))) | ((1u))), false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ((1u)) - 0u), (1u))), (1u)))) | ((1u))))))))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec2(_GLF_FUZZED(subgroup_size), 1u))) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))))), 0u ^ (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u)))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), ~ (~ (_GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]))))))) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), ((1u)) | ((1u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[_GLF_IDENTITY(1, clamp(1, 1, 1))]) : 0u | _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)), (_GLF_IDENTITY(((1u)), max(((1u)), ((1u))))) / ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) | ((1u))))))), _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) ^ (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), 0u ^ (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))), ~ (~ ((_GLF_IDENTITY(0u | (_GLF_IDENTITY(1u, (1u) ^ 0u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, _GLF_IDENTITY(21051u, clamp(21051u, 21051u, 21051u)))[1]) : 0u | (1u), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]) : 0u | (1u), 0u ^ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]), 1u, 1u), (uvec3(_GLF_FUZZED(uvec3(106956u, 72231u, 21051u)[1]), 1u, 1u)) - uvec3(0u, 0u, 0u)))) : 0u | (1u)))) << 0u))))))) - 0u)))), _GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u)) << _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0)), mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * _GLF_IDENTITY((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-81.36)), vec2(_GLF_FUZZED(-3833.8629), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0))), ((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-81.36)), vec2(_GLF_FUZZED(-3833.8629), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0)))) / vec2(1.0, 1.0)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), (uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-3.3) : length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(vec2(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 1.0)))))))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0)), mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (vec2(mat3x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0))))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) - 0.0)) * sqrt(exp(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))) / uvec4(1u, 1u, 1u, 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), clamp(0u | (1u), 0u | (1u), 0u | (1u)))), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 1u, 1u)), 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u | (1u)), 0u, 1u, 0u)) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u, 1u)))))), _GLF_IDENTITY(0u, max(0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))), 0u + ((_GLF_IDENTITY(1u, (1u) | (1u)))))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_local_id)), 0u ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)) : _GLF_FUZZED(subgroup_local_id)), uint(uvec3((true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u ^ (8u))) + 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) ^ 0u)))))))), 1u)), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) ^ 0u), 0u))))))), 1u)));
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) | 0 : _GLF_FUZZED(_injected_loop_counter)))))) << 0))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && (false)))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), true && (false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(min(gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x)), gl_WorkGroupID.x), 0u + (min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)).x, gl_WorkGroupID.x)))) * 1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0 : _GLF_FUZZED(-2.9)))), float(_GLF_FUZZED(vec4(58.68, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(0.9) : -2.8)), vec2(20.05, -6.8)).g)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0 : _GLF_FUZZED(-2.9)))), float(_GLF_FUZZED(vec4(58.68, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(0.9) : -2.8)), vec2(20.05, -6.8)).g)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0 : _GLF_FUZZED(-2.9)))), float(_GLF_FUZZED(vec4(58.68, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(0.9) : -2.8)), vec2(20.05, -6.8)).g)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0 : _GLF_FUZZED(-2.9)))), float(_GLF_FUZZED(vec4(58.68, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(0.9) : -2.8)), vec2(20.05, -6.8)).g)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0 : _GLF_FUZZED(-2.9)))), float(_GLF_FUZZED(vec4(58.68, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(0.9) : -2.8)), vec2(20.05, -6.8)).g)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0 : _GLF_FUZZED(-2.9)))), float(_GLF_FUZZED(vec4(58.68, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(0.9) : -2.8)), vec2(20.05, -6.8)).g)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0 : _GLF_FUZZED(-2.9)))), float(_GLF_FUZZED(vec4(58.68, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(0.9) : -2.8)), vec2(20.05, -6.8)).g)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false)))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(122118u, 77733u), uvec2(_GLF_IDENTITY(uvec2(uvec2(122118u, 77733u)), min(uvec2(uvec2(122118u, 77733u)), uvec2(uvec2(122118u, 77733u)))))).x), (_GLF_FUZZED(_GLF_IDENTITY(uvec2(122118u, 77733u), uvec2(_GLF_IDENTITY(uvec2(uvec2(122118u, 77733u)), min(uvec2(uvec2(122118u, 77733u)), uvec2(uvec2(122118u, 77733u)))))).x)) << 0u))), (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(uvec2(122118u, 77733u), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(122118u, 77733u), uvec2(uvec3(uvec2(122118u, 77733u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(min(uvec2(uvec2(122118u, 77733u)), uvec2(uvec2(122118u, 77733u))), ~ (~ (min(uvec2(uvec2(122118u, 77733u)), uvec2(uvec2(122118u, 77733u))))))))).x)))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(false, ! (! (false))), true))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), clamp(int(_GLF_IDENTITY(6, (6) - 0)), int(_GLF_IDENTITY(6, (6) - 0)), int(_GLF_IDENTITY(6, (6) - 0)))), min(int(_GLF_IDENTITY(6, (6) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) - 0), min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, (6) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) - 0), min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, (6) - 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) - 0), min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, (6) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(6, (6) - 0), min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, (6) - 0)))))) >> 0)))))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), min(int(_GLF_IDENTITY(6, (6) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, (6) | (6)))), (6) - 0))))))))), 0 ^ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), min(int(_GLF_IDENTITY(6, (6) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, (6) | (6)))), (6) - 0))))))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, clamp(2, 2, 2)))), 2))), _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), min((int(2)), (int(2))))) | _GLF_IDENTITY(0, max(0, 0))) >> 0), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) | (_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(_injected_loop_counter) : int(2))))))) ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, false || (true))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true))))))))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((- roundEven(-99.50))) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))), false || (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), 0u, 1u)), ((uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), 0u, 1u))) | ((uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))), 0u, 1u)))) | uvec3(0u, 0u, 0u))))) | (subgroup_local_id))) / _GLF_IDENTITY(1u, (1u) - 0u));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), false))))) || false))) && true), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))) || false)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u), (_GLF_IDENTITY((subgroup_size) * 1u, max((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) * _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u))))))), (subgroup_size) * 1u))) | (1u ^ 1u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) * 1u, max((subgroup_size) * 1u, (subgroup_size) * 1u))) | _GLF_IDENTITY((1u ^ 1u), ~ (~ ((1u ^ 1u))))), (_GLF_IDENTITY((subgroup_size) * 1u, (_GLF_IDENTITY((subgroup_size) * 1u, max((subgroup_size) * 1u, (subgroup_size) * 1u))) | (1u ^ 1u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), (true ? _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) * 1u, (_GLF_IDENTITY((subgroup_size) * 1u, max((subgroup_size) * 1u, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec3((subgroup_size), 0u, 0u), (uvec3((subgroup_size), 0u, 0u)) << uvec3(0u, 0u, 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec3((subgroup_size), 0u, 0u), (uvec3((subgroup_size), 0u, 0u)) << uvec3(0u, 0u, 0u)))))), (subgroup_size))) * 1u))) | (1u ^ 1u)), (_GLF_IDENTITY((subgroup_size) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) * 1u, max((subgroup_size) * 1u, (subgroup_size) * 1u))) | (1u ^ 1u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) * 1u, (_GLF_IDENTITY((subgroup_size) * 1u, max((subgroup_size) * 1u, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(max((subgroup_size), (subgroup_size)), ~ (~ (_GLF_IDENTITY(max((subgroup_size), (subgroup_size)), ~ (~ (max((subgroup_size), (subgroup_size))))))))), _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec3((subgroup_size), 0u, 0u), (uvec3((subgroup_size), 0u, 0u)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) * 1u))) | (1u ^ 1u)), (_GLF_IDENTITY((subgroup_size) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) * 1u, max((subgroup_size) * 1u, (subgroup_size) * 1u))) | (1u ^ 1u))) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED((subgroup_size / subgroup_size)) : uint(1u))), uint(1u))), uint(1u))))))))))) : _GLF_FUZZED(virtual_gid))), uint(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) * 1u, max((subgroup_size) * 1u, (subgroup_size) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u) * 1u, max((subgroup_size) * 1u, _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((subgroup_size))) * 1u))) | (1u ^ 1u)))))), 1u, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) / 1u), _GLF_FUZZED(workgroup_id))))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(96056))), 1))) % subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY((0u | 1u), min(_GLF_IDENTITY((0u | 1u), ~ (~ ((0u | 1u)))), (0u | 1u))) * _GLF_IDENTITY((~ (next_virtual_gid)), (_GLF_IDENTITY((~ (next_virtual_gid)), uint(uvec4(_GLF_IDENTITY((~ (next_virtual_gid)), 0u + ((~ (next_virtual_gid)))), 0u, 0u, 0u)))) | 0u)), ~ (next_virtual_gid)))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), min(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), (true ? _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | 0u) : _GLF_FUZZED(subgroup_size))), (next_virtual_gid))), ((next_virtual_gid)) << 0u), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))), min(~ (next_virtual_gid), ~ (next_virtual_gid)))))))))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), min(~ (next_virtual_gid), ~ _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) >> 0u)))), ~ (~ ((_GLF_IDENTITY(~ (next_virtual_gid), min(_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid))), ~ (next_virtual_gid))))))))))) * 1u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && _GLF_IDENTITY(true, (true) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) | (_GLF_IDENTITY(0, (0) | (0))))) ^ 0)))));
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) && true)), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) && true)), bool(bool(true && (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) && true))))))))), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true))) && true)))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(47958)))) | (0))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
