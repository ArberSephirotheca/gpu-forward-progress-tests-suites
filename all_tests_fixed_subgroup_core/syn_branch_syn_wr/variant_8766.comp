#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (_GLF_IDENTITY(ivec4(1, 1, 0, 0), min(ivec4(1, 1, 0, 0), _GLF_IDENTITY(ivec4(1, 1, 0, 0), (true ? ivec4(1, 1, 0, 0) : _GLF_FUZZED(ivec4(-91144, -99974, 52832, -61908))))))) - ((ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(6), ivec4(6))) | ivec4(0, 0, 0, 0)))))) ^ 0)], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_FUZZED(-7.1)), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[1], clamp((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) ^ 0)], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-28.65, min(-28.65, -28.65)), (_GLF_IDENTITY(-28.65, min(-28.65, -28.65))) / abs(1.0))), _GLF_FUZZED(-7.1)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) ^ 0)], (injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_IDENTITY(_GLF_FUZZED(-7.1), clamp(_GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1), _GLF_FUZZED(-7.1)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]))), min(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) ^ 0)], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_FUZZED(-7.1)), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_FUZZED(-7.1)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_FUZZED(-7.1)))), vec2(_GLF_IDENTITY(((injectionSwitch))[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(52260) : 0))], (true ? _GLF_IDENTITY(((injectionSwitch))[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(52260) : 0))], float(vec2(((injectionSwitch))[_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(52260) : 0))], 1.0))) : _GLF_FUZZED(2.3))), _GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(clamp((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) ^ 0)], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_FUZZED(-7.1)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]), mix(float(_GLF_FUZZED((-21.56 - -64.50))), float(clamp((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) ^ 0)], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-28.65, (-28.65) / abs(1.0))), _GLF_FUZZED(-7.1)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1])), bool(true))))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.8), max(_GLF_FUZZED(-4.8), _GLF_FUZZED(-4.8))), _GLF_FUZZED(-9.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4632.6790, min(-4632.6790, -4632.6790)))), float(injectionSwitch.y), bool(true))))), false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-7679.4086), (true ? injectionSwitch.y : _GLF_FUZZED(-7679.4086)) - 0.0)))) - _GLF_IDENTITY(log(1.0), (log(1.0)) - _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.3) : 0.0))) / 1.0), injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y, abs(0.0) + (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) - sin(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) - sin(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(981.505)), vec2(_GLF_FUZZED(-79.66), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - sin(vec2(0.0, 0.0))), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) - sin(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)))[1]), bvec2(false, true)))).y)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bvec2((true), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || (_GLF_IDENTITY(! (true), true && (! (true))))))) && (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)) : _GLF_FUZZED(5.2))))))))))))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), _GLF_IDENTITY(((int(4))) - 0, max(((int(4))) - 0, ((int(4))) - 0))) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))) || ((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false)))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))) || ((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false)))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))) || ((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false)))) || false))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))) || ((! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) || false)))) || false))), true, false, false))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false)))), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false), false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false), false))))), true, true))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       barrier();
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.7, -6.5)) : injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-4.7, -6.5)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-4.7, -6.5)) : injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.1))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.1))) > injectionSwitch.y)) || false), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-0.1)), clamp((true ? injectionSwitch.x : _GLF_FUZZED(-0.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-0.1)), (true ? injectionSwitch.x : _GLF_FUZZED(-0.1))))) > injectionSwitch.y))))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (gl_NumWorkGroups))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (gl_NumWorkGroups))))))).x;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.1) : 1.0)), abs(1.0)), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0)))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0)), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))), (false ? _GLF_FUZZED((mat3x4(-5664.2435, 2.5, -5365.9565, -2.5, -7299.1488, 7.6, -21.55, -4.1, 4.5, 5.4, 8666.3588, 4418.4575) - mat3x4(-8.8, -3515.8911, -591.351, 4.8, -241.602, 6.5, -42.95, 91.97, 7.5, 869.233, -585.345, -386.099))) : mat3x4(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))) * (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0)))))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.y = _GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(num_workgroup)));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.1) : 1.0)), 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2797.3953)), bool(false))))).x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x) / 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x))) - (0u | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x))) - (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x))) - (0u | 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x))) - (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, (false) && true), true))) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(62377u, 169561u, _GLF_IDENTITY(62263u, 0u | (62263u)))))).x))) - (0u | 0u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true)))))), (bool(_GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false)))))))))))) && true), false || (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), (! (_GLF_IDENTITY((false), false || ((false))))) && true))), false, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false, bool(bool((bool(_GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false))))))))))))))) && true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, false || (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id, (workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_size) : workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), (~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) | 0u)))) | _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), (0u | 1u) * (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) + 0u)) / 1u)))) * subgroup_size + subgroup_local_id)), (workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id) ^ 0u) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id, (workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_size) : workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), (~ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) | 0u)))) | _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), (0u | 1u) * (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w), ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w)) + 0u)) / 1u)))) * subgroup_size + subgroup_local_id)), (workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + subgroup_local_id) ^ 0u) : _GLF_FUZZED(workgroup_base)))) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.w * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))) | 0u)))) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)))))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.x = next_virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * 1), int(3))), true && (_injected_loop_counter != (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(int(3), int(3)))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)).x], uint(1), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-11035) : _GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, ~ (~ (64))), 64), (max(_GLF_IDENTITY(64, ~ (~ (64))), 64)) | (max(_GLF_IDENTITY(64, ~ (~ (64))), 64)))))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 | 0), bool(bvec2(_injected_loop_counter > (0 | 0), true)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z = read;
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) | 0))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))))))), true, false), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))))))), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))))))), true, false), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))), true && (! ((_GLF_IDENTITY((false), bool(bvec2((false), true))))))))), true, false))))), true))))) || false))) && true)))
    {
     for(int _injected_loop_counter = (1 | (94019 & 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))), clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1))))))) + 0)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), clamp((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))))) >> 0)), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), clamp((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))))) >> 0)), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), clamp((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))))) >> 0)), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), clamp((_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))))) >> 0))))), _GLF_IDENTITY(((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ _GLF_IDENTITY((int(6)), (0 | 0) + ((int(6)))))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))) >> 0)))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ _GLF_IDENTITY((int(6)), (0 | 0) + ((int(6)))))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))) >> 0)))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), int(int(((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ _GLF_IDENTITY((int(6)), (0 | 0) + ((int(6)))))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))) >> 0)))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))) | (((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), (_GLF_IDENTITY(int(6), ~ (~ (int(6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ _GLF_IDENTITY((int(6)), (0 | 0) + ((int(6)))))), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_injected_loop_counter)))))) >> 0)))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) | 0))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7509.0866)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))), bool(bool(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(0) : _GLF_IDENTITY(_GLF_FUZZED(-34907), (_GLF_FUZZED(-34907)) << 0))), _GLF_IDENTITY(int(0), (int(0)) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) >> 0), 4)))))); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))) || false)))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & _GLF_IDENTITY((1 ^ 0), (true ? (1 ^ 0) : _GLF_FUZZED(_injected_loop_counter))), min(1 & (1 ^ 0), _GLF_IDENTITY(1, ~ (~ (1))) & (_GLF_IDENTITY(1, (1) | (1)) ^ 0))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(uint(uint(max(subgroup_local_id, subgroup_local_id))), (uint(uint(max(subgroup_local_id, subgroup_local_id)))) ^ 0u))) + 1 < subgroup_size)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))), false)))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))), false)))))))) ? _GLF_FUZZED(vec2(-69.61, 7875.7277)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], 0.0 + ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]))), bvec2(false, true)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-69.61, 7875.7277)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-3251.2904), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(float(-96524))), bvec2(true, false))) + ((injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))))))], _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.9) : 0.0)), (0.0) / 1.0))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.5))), 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))])) * 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), sqrt(1.0), sqrt(1.0), 0.0, 0.0), (mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), sqrt(1.0), sqrt(1.0), 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1))))]))))), bvec2(false, true)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-69.61, 7875.7277)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-3251.2904), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(float(-96524))), bvec2(true, false))) + ((injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))))))], _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.9) : 0.0)), (0.0) / 1.0))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.5))), 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))])) * 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), sqrt(1.0), sqrt(1.0), 0.0, 0.0), (mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), sqrt(1.0), sqrt(1.0), 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1))))]))))), bvec2(false, true)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-69.61, 7875.7277)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-99.24), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-3251.2904), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(float(-96524))), bvec2(true, false))) + ((injectionSwitch)))[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))))))], _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.9) : 0.0)), (0.0) / 1.0))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.5))), 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))])) * 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))))[_GLF_IDENTITY(1, (1) | (1))]), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), sqrt(1.0), sqrt(1.0), 0.0, 0.0), (mat3(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), sqrt(1.0), sqrt(1.0), 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1))))]))))), bvec2(false, true)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))) || false)), false))))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)))) && true))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(bool(bvec2(! (true), true)), true && (_GLF_IDENTITY(bool(bvec2(! (true), true)), true && (bool(bvec2(! (true), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))), true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))), (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) && true)))) && _GLF_IDENTITY(true, false || (true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) || false)))))))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bvec4((true), false, true, false)))), bool(bool((! (true))))))))))))))))))), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))))))))))), false))), false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true))))))), ((! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), false || ((true)))))))) || false), bool(bool((! (true)))))))))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))), (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bool(true))))), bool(bool((! (true)))))))) && true))))))))))))) && true))))), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((_GLF_IDENTITY(! (true), (! (true)) || false)))))))))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))))))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           int i = 0;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))))
                {
                 barrier();
                }
               else
                {
                }
              }
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (false ? _GLF_FUZZED(i) : (1) | (1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))))))))))) - 0))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))))))))))) - 0)))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))))))))))) - 0))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), clamp(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), ~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))) | (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1)))))))))))) - 0))))))))))))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), min(int(_GLF_IDENTITY(5, (5) | _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0))))) / 1.0), injectionSwitch.x)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0))))) / 1.0), injectionSwitch.x))) / 1))), int(5)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))), ! (! (_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(5.2)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))), ! (! (_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(5.2)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, (1 & 1), 0))), _injected_loop_counter)) < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(5.2)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) / 1.0))))), ! (! (_GLF_IDENTITY((_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(5.2)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) / 1.0))))), false || ((_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(5.2)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) / 1.0))))))))))))) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < int(_GLF_ONE(1.0, injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) | 0), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(41266, 36631), (true ? ivec2(41266, 36631) : _GLF_FUZZED(ivec2(findLSB(subgroup_id), _injected_loop_counter)))).g))) < int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))); _injected_loop_counter ++)
                {
                 atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id), (uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)) | (uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)) ? _GLF_FUZZED(uvec4(uvec3(133216u, 191342u, 60881u), read)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id)))))).z) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         else
          {
           atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[0], uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[0], (_GLF_IDENTITY(1u & 1u, (1u & 1u) << 0u)), 0u))), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id) | uvec4(0u, 0u, 0u, 0u))[2], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadsubgroup_id[3]))) - uvec4(0u, 0u, 0u, 0u)).z, 4, 64, 4);
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, log(exp(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 1.0, cos(0.0), 1.0, 0.0)))))) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true, ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) && true))) && true) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(1179.8393))), injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
