#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_43 {
 uvec4 _f0;
 mat2 _f1;
 bvec2 _f2;
 bvec3 _f3;
 int _f4;
 mat4x2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_44 {
 _GLF_struct_43 _f0;
 bvec4 _f1;
 uint next_virtual_gid;
} ;

struct _GLF_struct_41 {
 mat4x2 _f0;
 mat2 _f1;
 int _f2;
 ivec2 _f3;
 mat2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_40 {
 vec2 _f0;
 mat3 _f1;
 bvec4 _f2;
 int _f3;
 mat3x4 _f4;
 uvec3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_42 {
 _GLF_struct_40 _f0;
 _GLF_struct_41 _f1;
} ;

struct _GLF_struct_45 {
 mat4x2 _f0;
 _GLF_struct_42 _f1;
 mat3 _f2;
 _GLF_struct_44 _f3;
} ;

struct _GLF_struct_37 {
 mat3x2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_38 {
 _GLF_struct_37 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_35 {
 mat4x2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_34 {
 mat3x4 _f0;
 bvec3 _f1;
 bool _f2;
} ;

struct _GLF_struct_33 {
 bvec2 _f0;
 uvec4 _f1;
 ivec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_32 {
 uvec2 _f0;
 mat3 _f1;
 ivec3 _f2;
 bvec2 _f3;
 bool _f4;
 vec3 _f5;
 float _f6;
} ;

struct _GLF_struct_36 {
 _GLF_struct_32 _f0;
 _GLF_struct_33 _f1;
 uvec2 _f2;
 _GLF_struct_34 _f3;
 mat2x4 _f4;
 _GLF_struct_35 _f5;
} ;

struct _GLF_struct_30 {
 uvec3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_29 {
 bool _f0;
} ;

struct _GLF_struct_28 {
 uint _f0;
 bool _f1;
 float _f2;
} ;

struct _GLF_struct_31 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 ivec3 _f2;
 _GLF_struct_30 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_26 {
 uvec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 bvec3 _f3;
 ivec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_27 {
 _GLF_struct_24 _f0;
 mat3x4 _f1;
 mat2 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_22 {
 ivec4 _f0;
 bvec3 _f1;
 uvec2 _f2;
 bool _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_21 {
 bvec4 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 ivec4 _f1;
 _GLF_struct_22 _f2;
 uint num_workgroup;
 mat3 _f3;
} ;

struct _GLF_struct_39 {
 _GLF_struct_23 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_36 _f3;
 _GLF_struct_38 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_18 {
 uint _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 vec2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 uvec3 _f1;
 ivec3 _f2;
 uvec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_19 {
 mat3x4 _f0;
 _GLF_struct_16 _f1;
 mat3x2 _f2;
 int _f3;
 _GLF_struct_17 _f4;
 bvec3 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 bvec2 _f1;
 ivec3 _f2;
 float _f3;
 ivec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 mat3x4 _f1;
 vec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 uvec4 _f1;
 float _f2;
 uvec4 _f3;
 mat2 _f4;
 int _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 uvec3 _f1;
 _GLF_struct_11 _f2;
 int _f3;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 bool _f1;
 mat3x2 _f2;
 mat4 _f3;
 bvec2 _f4;
 mat2x4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_10 {
 uint _f0;
 ivec4 _f1;
 bvec4 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 _GLF_struct_6 _f1;
 mat2x4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_7 _f0;
 _GLF_struct_10 _f1;
 uint read;
 _GLF_struct_12 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3 _f1;
 vec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 vec2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 _GLF_struct_1 _f1;
 ivec4 _f2;
 _GLF_struct_3 _f3;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec3(1), _GLF_struct_1(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_0(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(190936u) : _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))) | (1u)), uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))), 1u)))), vec2(1.0), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(4487.7936)), bool(false)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (1u) >> 0u))), max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec4(_GLF_IDENTITY(1, (1) | 0)), _GLF_struct_3(_GLF_struct_2(uvec3(1u)), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec3(1.0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0)))), 0 ^ (1)))), gl_SubgroupID);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true)), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) / 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + (0 | 0)))
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) && true)) && true)))))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))))))
                  break;
                 continue;
                }
               continue;
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_23(_GLF_struct_21(bvec4(true)), ivec4(1), _GLF_struct_22(ivec4(1), bvec3(true), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ~ (~ ((1u))))) ^ 0u) | (1u))), true, ivec2(1)), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))))))) ^ 0u))))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))))))) ^ 0u))))), 1u), max(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))))))) ^ 0u))))), 1u), (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))))))) ^ 0u))))), 1u)) << uvec2(0u, 0u)), uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(0u + (gl_NumWorkGroups.x), 0u ^ (0u + (gl_NumWorkGroups.x)))))))), 0u, 0u, _GLF_IDENTITY((0u ^ 1u), uint(uvec2((0u ^ 1u), 0u)))))))) ^ 0u))))), 1u))))) ^ 0u), mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, abs(1.0), 1.0), (mat2(1.0, 1.0, abs(1.0), 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), float(_GLF_FUZZED(7.5)), bool(false))))), _GLF_struct_27(_GLF_struct_24(mat2(1.0), mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fract(-4016.8241))))), ivec2(1), bvec3(true), ivec2(1), vec4(1.0)), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))))), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), _GLF_struct_25(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), (true ? _GLF_IDENTITY(float(1.0), clamp(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-4566))), bool(false)))), float(1.0), float(1.0))) : _GLF_FUZZED(-9.1))))))), _GLF_struct_26(uvec2(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(1u)), uvec2(1u)), _GLF_struct_31(_GLF_struct_28(1u, true, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_29(true), ivec3(1), _GLF_struct_30(uvec3(1u), ivec2(1)), bvec2(true)), _GLF_struct_36(_GLF_struct_32(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * uvec2(1u, 1u)))), (false ? _GLF_FUZZED(uvec2(141112u, 37756u)) : uvec2(0u, 0u)))), mat3(1.0), ivec3(1), bvec2(_GLF_IDENTITY(true, false || (true))), true, vec3(1.0), 1.0), _GLF_struct_33(bvec2(true), uvec4(1u), ivec4(_GLF_IDENTITY(1, (1) | (1))), mat3x4(1.0)), uvec2(1u), _GLF_struct_34(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bvec3(true), true), mat2x4(1.0), _GLF_struct_35(mat4x2(1.0), bvec4(true))), _GLF_struct_38(_GLF_struct_37(mat3x2(1.0), bvec4(true)), bvec3(true)), bvec4(true));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) || false))), true, false, false)), bool(bvec4(bool(bvec4((false) && true, true, false, false)), false, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), ! (! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) || false))), true, false, false)), bool(bvec4(bool(bvec4((false) && true, true, false, false)), false, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (0)), 0, 0))) | (0)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
                continue;
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))), 0, 0)), 0, 0, 0)), workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, (_GLF_struct_replacement_5.workgroup_base) - 0u) + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, max(_GLF_struct_replacement_4.subgroup_id, _GLF_struct_replacement_4.subgroup_id)) * subgroup_size + subgroup_local_id;
 _GLF_struct_45 _GLF_struct_replacement_45 = _GLF_struct_45(mat4x2(1.0), _GLF_struct_42(_GLF_struct_40(vec2(1.0), mat3(1.0), bvec4(true), 1, mat3x4(1.0), uvec3(_GLF_IDENTITY(1u, (1u) | 0u)), mat3x2(1.0)), _GLF_struct_41(mat4x2(1.0), mat2(1.0), 1, ivec2(1), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7703.3372) : 1.0))) * abs(1.0))), vec2(1.0))), mat3(1.0), _GLF_struct_44(_GLF_struct_43(uvec4(1u), mat2(1.0), bvec2(true), bvec3(true), 1, mat4x2(1.0), mat3(1.0)), bvec4(true), _GLF_struct_replacement_5.workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), 0u, 0u, 0u), (true ? uvec4(subgroup_local_id, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(66366u, 128554u, 30151u, 66954u))))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (false ? _GLF_FUZZED(subgroup_size) : (0u) << 0u))))))), (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u), 0u), (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))) + uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) | 0u), 0u)) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((1.2 * -2.6))), float(injectionSwitch.y), bool(true)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(true ? uvec4(subgroup_local_id, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(66366u, 128554u, 30151u, 66954u)), (true ? uvec4(subgroup_local_id, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(66366u, 128554u, 30151u, 66954u))) | (true ? uvec4(subgroup_local_id, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(66366u, 128554u, 30151u, 66954u))))))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | ((0u))) | (_GLF_IDENTITY(0u, (0u) << 0u))))), (_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u, (true ? (_GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(0u, (0u ^ 0u) + (0u)) >> _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u : _GLF_FUZZED(142790u)))), 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))) + uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, 0u, 0u)))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max(_GLF_IDENTITY((0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((0u))) - 0u, (0u) - 0u)), (0u) - 0u))), 0u)))), _GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), ~ (~ ((0u)))))) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max((0u) - 0u, (0u) - 0u)), (0u) - 0u))), 0u)))))), 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)), _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max((_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u, (0u) - 0u)), (0u) - 0u))), 0u)))), 0u ^ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max((0u) - 0u, (0u) - 0u)), (0u) - 0u))), 0u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max((0u) - 0u, (0u) - 0u)), (0u) - 0u))), 0u))), (uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max((0u) - 0u, (0u) - 0u)), (0u) - 0u))), 0u)))) << 0u))))))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), 0u | ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), 0u | ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))))))) - 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), 0u | ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), 0u | ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))))))))) - 0u), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max((0u) - 0u, (0u) - 0u)), (0u) - 0u)), (_GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY((0u) - 0u, max(_GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), max((0u), (0u))))) - 0u, (0u) - 0u)), (0u) - 0u))) - 0u)), 0u)))), 0u ^ ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, clamp((0u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | (0u | 0u)) - 0u, max((0u) - _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY((0u), ((0u)) | 0u) - 0u)), (0u) - 0u))), 0u)))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), (uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), _GLF_IDENTITY((uvec4(subgroup_local_id, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(subgroup_local_id, 0u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u)))), 0u | ((uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u), _GLF_IDENTITY((uvec4(subgroup_local_id, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u), ((uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))))) - 0u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))) ^ 0u) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-71228) : 1)), 1))) % subgroup_size)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 | (4)) : _GLF_FUZZED((++ _injected_loop_counter)))), 4))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) | 0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((int(4)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((int(4)), clamp((_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(25701)))), (int(4)), (int(4)))), (1 | 0)), (ivec2(_GLF_IDENTITY((int(4)), clamp((int(4)), (int(4)), (int(4)))), (_GLF_IDENTITY(1, (1) << 0) | _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> (0 & -4432)) : _GLF_FUZZED(-54411)))))) | (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4))))), max(int(4), int(4)))), clamp((int(4)), (int(4)), _GLF_IDENTITY((int(4)), clamp((int(4)), (int(4)), (int(4)))))), (1 | 0)))))) : _GLF_FUZZED(78275), (true ? _GLF_IDENTITY((int(4)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((int(4)), clamp((int(4)), (int(4)), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)))) ^ 0))))), (1 | 0)), (ivec2(_GLF_IDENTITY((int(4)), clamp((int(4)), (int(4)), (int(4)))), (_GLF_IDENTITY(1, (1) << 0) | 0))) | (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(4), max(int(4), int(4)))), clamp((int(4)), (int(4)), (int(4)))), (1 | 0)))))) : _GLF_FUZZED(78275)) >> 0))) / 1))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((((1 & 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))), ((((1 & 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7)))))) | 0)); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) >> 0))), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))) < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                continue;
               continue;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = ((_GLF_IDENTITY(0 ^ 0, (0 ^ 0) | (0 ^ 0))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 return;
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   atomicStore(buf[_GLF_struct_replacement_45._f3.next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)))), max(~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)))), (~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4))))) - 0), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)))))))))) ^ 0));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true, false)), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    break;
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_7(vec4(1.0), _GLF_struct_6(uvec3(1u)), mat2x4(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0))) << ivec3(0, 0, 0))), _GLF_struct_10(1u, ivec4(1), bvec4(true), _GLF_struct_8(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (_GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0))))) | (ivec4(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1)), 1)))), _GLF_IDENTITY((int(ivec4(1, 1, 1, 1))), (false ? _GLF_FUZZED(-84356) : (int(ivec4(1, 1, 1, 1))))) - 0))))), bvec4(true)), _GLF_struct_9(mat2x3(1.0), true, mat3x2(1.0), mat4(1.0), bvec2(true), mat2x4(1.0), mat4x2(1.0)), uvec4(1u)), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), ((virtual_gid) | (virtual_gid)) >> 0u))], 4, 64, 0), _GLF_struct_12(vec4(1.0), uvec3(1u), _GLF_struct_11(vec3(1.0), uvec4(1u), 1.0, uvec4(1u), mat2(1.0), 1, _GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(1)) << ivec3(0, 0, 0))), max(~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(1)) << ivec3(0, 0, 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(1)) << ivec3(0, 0, 0))), (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(1)) << ivec3(0, 0, 0)))) | (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(1)) << ivec3(0, 0, 0)))))))))), 1), _GLF_struct_15(_GLF_struct_13(uvec2(1u), mat3x4(1.0), vec4(1.0), mat3(1.0)), _GLF_struct_14(vec2(1.0), bvec2(true), ivec3(1), 1.0, ivec2(1), vec2(1.0)), ivec2(1)), _GLF_struct_19(mat3x4(1.0), _GLF_struct_16(uvec4(1u), uvec3(1u), ivec3(1), uvec2(1u), bvec2(true)), mat3x2(1.0), 1, _GLF_struct_17(uvec3(1u), uvec3(1u), mat2x4(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(638.077)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, (1.0) * 1.0))), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-1.6)))), vec2(1.0)), bvec3(true), _GLF_struct_18(1u, bvec2(true))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), _GLF_IDENTITY(((0 | 0)) | ((_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(-86953) : 0), ((false ? _GLF_FUZZED(-86953) : 0)) | ((false ? _GLF_FUZZED(-86953) : 0)))) | 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(((0 | 0)) | ((0 | 0)), ~ (~ (((0 | 0)) | ((0 | 0))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(((0 | 0)) | ((0 | 0)), ~ (~ (((0 | 0)) | ((0 | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(((0 | 0)) | ((0 | 0)), ~ (~ (((0 | 0)) | ((0 | 0))))), min(_GLF_IDENTITY(((0 | 0)) | ((0 | 0)), ~ (~ (((0 | 0)) | ((0 | 0))))), _GLF_IDENTITY(((0 | 0)) | ((0 | 0)), ~ (~ (((0 | 0)) | ((0 | 0)))))))) ^ 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(1, 0 ^ (1)))), int(_GLF_IDENTITY(ivec4(int(ivec2(1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec4(75271, -77590, 68340, -23270)) : ivec4(int(ivec2(1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))), 1)), 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size)
      {
       int i = 0;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         atomicStore(checker[virtual_gid], _GLF_struct_replacement_20.read, 4, 64, 4);
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, sqrt(sin(0.0)) + (0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1)))))))), 1, 1, 0), (ivec4(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1, 0)) - ivec4(0, 0, 0, 0)))), 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((~ -11492))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))[0], _GLF_FUZZED(-2.3)), vec2(_GLF_FUZZED((- -26.69)), (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))[1]), bvec2(false, true)))).y)))))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                continue;
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           atomicStore(checker[virtual_gid], _GLF_struct_replacement_20.read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) >> 0), 4, 4))) * 1), 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)) | 0))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 ^ 0) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), true))))))))))) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))) && true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))) && true))))))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      return;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                return;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true, true, false))))))
                    return;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
}
