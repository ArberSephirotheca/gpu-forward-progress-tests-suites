#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_22 {
 mat4x3 _f0;
 bvec3 _f1;
 uvec4 _f2;
 vec3 _f3;
 vec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_21 {
 int _f0;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
} ;

struct _GLF_struct_19 {
 mat4x3 _f0;
 mat3 _f1;
 bool _f2;
 vec4 _f3;
 mat3x4 _f4;
 ivec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 _GLF_struct_19 _f1;
 vec3 _f2;
 mat4x3 _f3;
 _GLF_struct_20 _f4;
 _GLF_struct_21 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 uvec3 _f1;
 bool _f2;
} ;

struct _GLF_struct_16 {
 mat2x4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 uvec2 _f1;
 ivec3 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 uvec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
 mat2x4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_24 {
 _GLF_struct_12 _f0;
 mat2 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_23 _f3;
 ivec2 _f4;
 uint workgroup_size;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 mat2 _f1;
 mat2x3 _f2;
 vec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 bvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 ivec2 _f1;
 int _f2;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 _GLF_struct_5 _f1;
 mat3x4 _f2;
 uvec2 _f3;
 int _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 ivec3 _f1;
 mat3 _f2;
 int _f3;
 mat2x3 _f4;
 vec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 float _f1;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 vec2 _f1;
 mat3 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uint subgroup_id;
 float _f2;
 bool _f3;
 mat4 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 _GLF_struct_4 _f2;
 mat2x4 _f3;
 _GLF_struct_8 _f4;
 bvec2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_0(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), mat3x4(1.0), _GLF_struct_4(_GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(81.49))), 0.0))) / 1.0), mix(float(0.0), float(_GLF_FUZZED(-7.0)), bool(false))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0) + (mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.0)), bool(false))), 0.0, 0.0, 0.0) + (mat2(1.0)))))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(1.0, 1.0 * (1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)), vec2(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.2)), float(1.0), bool(true)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1361.7941) : mix(float(_GLF_FUZZED(1.2)), float(1.0), bool(true))))), 1.0)), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), float(mat4x2(float(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((3802.8725)), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_FUZZED((3802.8725))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))), 1.0)))))))), mat4x3(1.0)), _GLF_struct_2(uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) >> 0u), 1u))), 1.0), gl_SubgroupID, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))))))), true, mat4(1.0), _GLF_struct_3(ivec2(1), ivec3(_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))))) : _GLF_FUZZED(mat3(_GLF_IDENTITY(4.9, (4.9) - 0.0), -9.8, -4.5, -725.740, -8.2, _GLF_IDENTITY(_GLF_IDENTITY(9538.7059, (9538.7059) / determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))), min(_GLF_IDENTITY(9538.7059, _GLF_IDENTITY((9538.7059) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0))), max((9538.7059) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0))), (9538.7059) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))))), _GLF_IDENTITY(9538.7059, (9538.7059) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(170.292)), float(sqrt(1.0)), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), false, true, false))), true, true, true)))))))))))), 4.0, 84.47, -9.5))), transpose(transpose((true ? _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + _GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + _GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + _GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))), transpose(transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + _GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))))))))))))) : _GLF_FUZZED(mat3(_GLF_IDENTITY(4.9, (4.9) - 0.0), -9.8, -4.5, -725.740, -8.2, _GLF_IDENTITY(_GLF_IDENTITY(9538.7059, (9538.7059) / _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0, sqrt(1.0))), 0.0 + (determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(9538.7059, (true ? 9538.7059 : _GLF_FUZZED(401.029))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((9538.7059), 0.0 + ((9538.7059))), (_GLF_IDENTITY((9538.7059), mix(float((9538.7059)), float(_GLF_FUZZED(_GLF_IDENTITY(-9390.8783, (_GLF_IDENTITY(-9390.8783, max(_GLF_IDENTITY(-9390.8783, max(-9390.8783, -9390.8783)), -9390.8783))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > injectionSwitch.y)))))) / 1.0) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(582.819) : 0.0, (false ? _GLF_FUZZED(582.819) : 0.0) / 1.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(1.0))), max((9538.7059) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3816.1283))), 1.0, 0.0, sqrt(1.0))), (9538.7059) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(175.579))), 0.0, 0.0)), sqrt(1.0)))))), _GLF_IDENTITY(9538.7059, (9538.7059) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0)) + (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))))), 4.0, 84.47, -9.5))))))), 1, mat2x3(1.0), vec4(1.0), bvec2(_GLF_IDENTITY(true, false || (true))))), mat2x4(1.0), _GLF_struct_8(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(-73.45, 9.9, 3.2, -1.6, 0.4, -0.9, -7.1, -25.93, 9232.3693)), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat3(-73.45, 9.9, 3.2, -1.6, 0.4, -0.9, -7.1, -25.93, 9232.3693))), transpose(transpose(transpose(_GLF_FUZZED(mat3(-73.45, 9.9, 3.2, -1.6, 0.4, -0.9, -7.1, -25.93, 9232.3693)))))))) : mat3(1.0))), _GLF_struct_5(mat4x2(1.0), ivec2(1), 1), mat3x4(1.0), uvec2(1u), 1, _GLF_struct_6(vec3(1.0), bvec2(true), mat3x4(1.0)), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)), (false ? _GLF_FUZZED(mat3(-7.3, -7.6, -724.335, 933.663, -1.6, -22.10, -0.1, -8.8, 3.7)) : _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)), (false ? _GLF_FUZZED(mat3(-7.3, -7.6, -724.335, 933.663, -1.6, -22.10, -0.1, -8.8, 3.7)) : _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)))))))))), mat2(1.0), mat2x3(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 1.0, 1.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), log(vec2(1.0, 1.0)) + (max(injectionSwitch, injectionSwitch)))), injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x)) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec4(-8.4, -34.02, -2.3, -6.6), (true ? _GLF_IDENTITY(vec4(-8.4, -34.02, -2.3, -6.6), min(vec4(-8.4, -34.02, -2.3, -6.6), _GLF_IDENTITY(vec4(-8.4, -34.02, -2.3, -6.6), mat4(1.0) * (vec4(-8.4, -34.02, -2.3, -6.6))))) : _GLF_FUZZED(vec4(-401.249, 1584.5715, 32.94, -738.384))))) : vec4(1.0))), mat4x2(1.0))), bvec2(true));
 for(int _injected_loop_counter = _GLF_IDENTITY((0 | 1), 1 * ((0 | 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), min(~ (_injected_loop_counter), ~ (_injected_loop_counter))))), ~ (~ (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))))) != _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) >> 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_12(_GLF_struct_10(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u)), mat4x3(1.0), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7644.4111)), float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))) : _GLF_FUZZED(-3643.2547))), 1.0, 1.0))) - 0.0))), _GLF_struct_11(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)))), mat2(1.0), _GLF_struct_18(_GLF_struct_13(mat2x4(1.0)), _GLF_struct_14(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(1.0), bool(true)))), mat3x2(1.0), mat3x2(1.0), uvec2(1u), uvec4(1u)), _GLF_struct_15(mat3x2(1.0), uvec2(1u), ivec3(1), bvec3(true), bvec2(true)), _GLF_struct_16(mat2x4(1.0), vec2(1.0)), _GLF_struct_17(mat3x4(1.0), uvec3(1u), true), mat2x4(1.0), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(degrees(injectionSwitch))) : 1.0)))), _GLF_struct_23(bvec3(true), _GLF_struct_19(mat4x3(1.0), mat3(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(469.655), mix(_GLF_IDENTITY(float(_GLF_FUZZED((- 7.9))), min(_GLF_IDENTITY(float(_GLF_FUZZED((- 7.9))), float(_GLF_IDENTITY(mat3x4(float(_GLF_FUZZED((- 7.9))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat3x4(float(_GLF_FUZZED((- 7.9))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED((- 7.9))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED((- 7.9)))), mix(float(_GLF_FUZZED(490.034)), float(float(float(_GLF_FUZZED((- 7.9))))), bool(true))))))), float(_GLF_FUZZED(469.655)), bool(true)))), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))))) / _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0)))), mix(float(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (tan(0.0)) / determinant(mat2(1.0, 0.0, 1.0, 1.0))), (tan(0.0)) - 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, log(1.0), 0.0, 1.0)), mix(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0))), float(_GLF_FUZZED(869.459)), bool(false)))), float(_GLF_FUZZED(-31.55)), _GLF_IDENTITY(bool(false), false || (bool(false)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(469.655), (_GLF_IDENTITY(_GLF_FUZZED(469.655), _GLF_IDENTITY(1.0 * (_GLF_FUZZED(469.655)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), min(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec4(-2.8, -2.0, 1.7, 8.1)) : vec4(1.0 * _GLF_IDENTITY((_GLF_FUZZED(469.655)), min((_GLF_FUZZED(469.655)), (_GLF_FUZZED(469.655)))), sqrt(0.0), 0.0, 0.0))), vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-2.8, -2.0, 1.7, 8.1)) : vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(-2.0, clamp(_GLF_IDENTITY(-2.0, clamp(-2.0, -2.0, -2.0)), -2.0, -2.0)), 1.7, 8.1)) : vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0))))), vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), min(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-2.8, -2.0, 1.7, 8.1)) : vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0))), vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 0.0)))), float(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0), min(_GLF_IDENTITY(vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-2.8, -2.0, 1.7, 8.1)) : vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0))), vec4(1.0 * (_GLF_FUZZED(469.655)), sqrt(0.0), 0.0, 0.0))))))))) / 1.0)), float(1.0), bool(true)), min(mix(float(_GLF_IDENTITY(_GLF_FUZZED(469.655), (_GLF_FUZZED(469.655)) / 1.0)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(469.655, (true ? 469.655 : _GLF_FUZZED(-5439.1548))), max(469.655, _GLF_IDENTITY(469.655, (true ? 469.655 : _GLF_FUZZED(38.10))))))), _GLF_IDENTITY(float(1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (float(1.0)) - length(vec3(0.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(float(1.0), (float(1.0)) - length(vec3(0.0, 0.0, 0.0))) : _GLF_FUZZED(-872.703))))), bool(true))))) / _GLF_IDENTITY(determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log2(-5.8)) : 0.0)), 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0)), mix(float(determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(3.7)), bool(false))))), 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0))), float(_GLF_FUZZED(float(false))), bool(false)))))), min((_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))))) / determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0)), min((_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))))) / determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))))) / determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0)))), ((_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))))) / determinant(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-511.551)), bool(false))), 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0))) + _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(6.1)), float(tan(0.0)), bool(true))))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(469.655)), (float(_GLF_FUZZED(469.655))) - 0.0), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))), max(_GLF_IDENTITY(min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false))) || false)))), clamp(min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(469.655, (_GLF_IDENTITY(469.655, 1.0 * (469.655))) * 1.0))), float(1.0), bool(true))))), (_GLF_IDENTITY(min(mix(_GLF_IDENTITY(float(_GLF_FUZZED(469.655)), min(float(_GLF_FUZZED(469.655)), float(_GLF_FUZZED(469.655)))), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false))) || false))), max(mix(float(_GLF_FUZZED(469.655)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false))) || false))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false))) || false))), float(_GLF_IDENTITY(mat4(mix(float(_GLF_FUZZED(469.655)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false))) || false))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0), (true ? mat4(mix(float(_GLF_FUZZED(469.655)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))), true, false, false))) || false))), 0.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0) : _GLF_FUZZED(mat4(-72.84, 64.58, 0.5, -7.1, -9.3, -32.77, -6928.0995, 7227.6700, 169.763, -973.080, 8534.2641, -9442.4035, -1.0, -2414.1465, 441.094, 133.828))))))))), clamp(min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(469.655, (_GLF_IDENTITY(469.655, 1.0 * (469.655))) * 1.0))), float(1.0), bool(true)))))) * 1.0), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), 1.0 * (_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)))))), mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true))))))), min(mix(float(_GLF_IDENTITY(_GLF_FUZZED(469.655), max(_GLF_FUZZED(469.655), _GLF_FUZZED(469.655)))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.7)), bool(false))), 1.0))), bool(true))))))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0))))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -525.058 : 5.4))), bool(false))), 1.0))), min((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -525.058 : 5.4))), bool(false))), 1.0))), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? -525.058 : 5.4))), bool(false))), 1.0))))) / 1.0)), bool(true)), _GLF_IDENTITY((_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(469.655, min(469.655, 469.655)))), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || ((true))) || false))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(469.655), mix(float(_GLF_IDENTITY(_GLF_FUZZED(469.655), clamp(_GLF_FUZZED(469.655), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(469.655), 1.0 * (_GLF_FUZZED(469.655))), clamp(_GLF_FUZZED(469.655), _GLF_FUZZED(469.655), _GLF_FUZZED(469.655))), _GLF_FUZZED(469.655)))), float(_GLF_FUZZED(57.16)), bool(false)))), float(1.0), bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), true)))))), ! (! (! (true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), true)))))), ! (! (! (true)))), false, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), true)))))), ! (! (! (true)))), false, false)))), false || (bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), true)))))), ! (! (! (true)))), false, false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false))), bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), true)))))), ! (! (! (true))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), true), true)))))), ! (! ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), true), true))))))))), ! (! (! (true))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ((_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true))))))), bool(bool(bool(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true))))))), bool(bool(bool(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true))))))))))))))) || false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(469.655, (469.655) * 1.0))), float(1.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ((! (! (true)))) || false)))))))))) + 0.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-8.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 1.0))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(469.655)), _GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(200.547)), bool(false))), bool(true)), min(mix(_GLF_IDENTITY(float(_GLF_FUZZED(469.655)), float(mat4(float(_GLF_FUZZED(469.655)), 1.0, 1.0, 0.0, tan(0.0), length(vec2(0.0, 0.0)), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), float(1.0), bool(true)), mix(float(_GLF_FUZZED(469.655)), float(_GLF_IDENTITY(1.0, float(mat4x3(1.0, cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)))))), float(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1272.9209) : 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-2.8, 8442.7389))))) - vec2(0.0, 0.0)))))))), sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, log(cos(0.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0)), (float(mat4x2(0.0, log(cos(0.0)), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0))) - 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), max(1.0, 1.0)), 1.0)), 0.0)))), bool(true))))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (1.0)), 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.7)), float(1.0), bool(true)))), 0.0, 1.0))))))))), true, _GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(vec4(1.0), vec4(mat4x2(vec4(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))), log(1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sqrt(0.1)) : 1.0)), (1.0) - 0.0), (1.0) + _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, sqrt(1.0))), (float(mat2x4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, sqrt(1.0)))) - 0.0)))), 1.0))), mat2x3(_GLF_IDENTITY(mat3x4(mat2x3(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat4x2(vec4(1.0), 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(mat4x2(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), 0.0, 1.0, 1.0, 1.0)), min(vec4(mat4x2(vec4(1.0), 0.0, 1.0, 1.0, 1.0)), vec4(mat4x2(vec4(1.0), 0.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(vec4(-9.4, -28.19, 4.7, 6.3)) : _GLF_IDENTITY(vec4(mat4x2(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), 0.0, 1.0, 1.0, 1.0)), min(vec4(mat4x2(vec4(1.0), 0.0, 1.0, 1.0, 1.0)), vec4(mat4x2(vec4(1.0), 0.0, 1.0, 1.0, 1.0))))))) - vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-935.111)), bool(false))), 0.0, 0.0))), log(_GLF_IDENTITY(1.0, tan(0.0) + (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.8) : 1.0)), 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(acosh(1.9)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.84)), float(1.0), bool(true)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(acosh(1.9)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.84)), float(1.0), bool(true)))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(acosh(1.9)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.84)), float(1.0), bool(true)))), float(mat3x4((false ? _GLF_FUZZED(acosh(1.9)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.84)), float(1.0), bool(true)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(acosh(1.9)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.84)), float(1.0), bool(true)))), 0.0 + ((false ? _GLF_FUZZED(acosh(1.9)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.84)), float(1.0), bool(true))))))))) / 1.0)))), transpose(transpose(mat3x4(mat2x3(_GLF_IDENTITY(vec4(1.0), vec4(mat4x2(vec4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, abs(0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-26.56)))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0)))), float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0))))), 1.0)), 0.0)), float(mat4x2(float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)))))))), 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(log(1.0), (true ? _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9164.4320)), float(log(1.0)), bool(true))) : _GLF_FUZZED(-4.5))), 1.0))))))))), mat3x4(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 0.0, exp(0.0), 0.0)))), ivec4(1), true), vec3(1.0), mat4x3(1.0), _GLF_struct_20(uvec2(1u)), _GLF_struct_21(1), _GLF_struct_22(mat4x3(1.0), bvec3(true), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u)))))) << (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec4(0u, 0u, 0u, 0u)), ((_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u)))))) << (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9566.1885)), _GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))) : _GLF_FUZZED(atanh(21.06)))), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(vec3(4.1, 1788.9264, 4952.2429))) : vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(vec3(-5.5, -20.46, -64.76)) : vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0))))), ((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), (false ? _GLF_FUZZED(vec3(-5.5, -20.46, -64.76)) : vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0)))))) * vec3(1.0, 1.0, 1.0)) * mat3(1.0)), _GLF_IDENTITY(ivec2(1), clamp(ivec2(1), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(7.2)), bool(false)))), ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(7.2)), bool(false)))), 1, (0 >> _GLF_IDENTITY(int(2), int(2)))), ~ (~ (ivec4(ivec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(7.2)), bool(false)))), 1, (0 >> _GLF_IDENTITY(int(2), int(2))))))))) + (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), (true ? ivec2(0, 0) : _GLF_FUZZED((9038 + ivec2(26769, 49038))))) >> _GLF_IDENTITY(ivec2(3), ivec2(3))), ((_GLF_IDENTITY(ivec2(0, 0), (true ? ivec2(0, 0) : _GLF_FUZZED((9038 + ivec2(26769, 49038))))) >> _GLF_IDENTITY(ivec2(3), ivec2(3)))) << ivec2(0, 0)) << _GLF_IDENTITY(ivec2(5), ivec2(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | 0)) | (5))))) ^ (ivec2(1))))), (ivec2(1)) >> ivec2(0, _GLF_IDENTITY(0, (0) * 1))))))), ivec2(1), _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) - uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)), uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize)), (~ ((gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)) + (gl_WorkGroupSize))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) / 1u))), gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)).x)) : _GLF_FUZZED(_GLF_struct_replacement_9._f2.subgroup_id))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_24.workgroup_size * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bool(false))), true, false)))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y))), true))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true)))))))))), false, true, false)))))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / (0 | 1)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-208.638) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-208.638), mix(float(_GLF_FUZZED(-208.638)), float(_GLF_FUZZED(57.27)), bool(false))) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))) && true)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
              }
             for(int _injected_loop_counter = (-62166 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, _GLF_IDENTITY(1, clamp(1, 1, 1)), (0 << _GLF_IDENTITY(int(3), int(3)))))) < ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)), ((int(6))) | (0 << _GLF_IDENTITY(int(2), int(2)))) - 0))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0)))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8408.5974), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.2)), bvec2(true, false))).x) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-9148.8062), _GLF_FUZZED(9.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), vec2(vec2(mix(vec2(_GLF_FUZZED(-9148.8062), _GLF_FUZZED(9.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))))[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), false)))))
            break;
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))), true)))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           break;
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(4.0)), bool(false)))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_9._f2.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_9._f2.subgroup_id * subgroup_size, min(workgroup_base + _GLF_struct_replacement_9._f2.subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), min((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - 0u, ((workgroup_base) - 0u) << 0u))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))) + _GLF_IDENTITY(_GLF_struct_replacement_9._f2.subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_9._f2.subgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_struct_replacement_9._f2.subgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) >> _GLF_IDENTITY(0u, (0u) | (0u)))) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) || false)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9256.6443))))))) && true)) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)) || false, ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0), (mat2x4(injectionSwitch.x, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(817.962))), _GLF_ONE(1.0, injectionSwitch.y)))))))) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, exp(0.0) * (1.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-28.34) : 1.0)))))), 1.0, 0.0, 1.0, 0.0), (mat2x4(injectionSwitch.x, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0.0) > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(10.60) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) && true), true), false))))))))) && _GLF_IDENTITY(true, ! (! (true))))) && true)), (true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) * cos(0.0))) > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float((injectionSwitch.x) - 0.0), float(_GLF_FUZZED(2315.6933)), bool(false)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(true))))))) && true)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))) << 0)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) - 0));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) - 0));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) + 1, subgroup_local_id + 1)) < subgroup_size)
  {
   int i = 0;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (82357 & 0)); _injected_loop_counter --)
        {
         atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), ~ (~ (_GLF_IDENTITY(max(64, 64), (false ? _GLF_FUZZED(-50696) : max(64, 64))))))), 4);
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec2((_GLF_IDENTITY(false, (false) && true)), true)))))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
            {
             return;
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
          {
           return;
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(-7.8)), bvec2(false, false))), determinant(mat2(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), abs(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, tan(0.0), 1.0, 0.0))).x : _GLF_FUZZED(-695.182))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], (_GLF_IDENTITY(true ? injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))] : _GLF_FUZZED(-6.9), clamp(true ? injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))] : _GLF_FUZZED(-6.9), true ? injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))] : _GLF_FUZZED(-6.9), _GLF_IDENTITY(true ? injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))] : _GLF_FUZZED(-6.9), 1.0 * (true ? injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))] : _GLF_FUZZED(-6.9))))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) + 0.0)))))), abs(0.0))), 0.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), min(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))))), 0.0)) * mat3(1.0), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), _GLF_IDENTITY(clamp(abs(0.0), abs(0.0), abs(0.0)), _GLF_IDENTITY(float(mat3x2(clamp(abs(0.0), abs(0.0), abs(0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat3x2(clamp(abs(0.0), abs(0.0), abs(0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat3x2(clamp(abs(0.0), abs(0.0), abs(0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0))), 0.0)) * mat3(1.0), mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), max(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))))), 0.0)) * mat3(1.0)))) - vec3(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 0.0))), mix(vec3((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(5286.4402) : abs(0.0)))), float(_GLF_FUZZED(506.035)), bool(false))))), 0.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.0) : abs(0.0))), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), _GLF_IDENTITY(vec3(mat3x4(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, log(1.0), sqrt(0.0), 0.0, 0.0, 0.0)), mix(vec3((vec3(mat3x4(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, log(1.0), sqrt(0.0), 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(156.036), _GLF_FUZZED(8501.7337)), vec3(_GLF_FUZZED(10.22), (vec3(mat3x4(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, log(1.0), sqrt(0.0), 0.0, 0.0, 0.0)))[1], (vec3(mat3x4(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, log(1.0), sqrt(0.0), 0.0, 0.0, 0.0)))[2]), bvec3(false, true, true))))) * mat3(1.0), mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)))) - vec3(0.0, 0.0, 0.0))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) * 1.0)), _GLF_IDENTITY(abs(0.0), min(abs(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))))), abs(0.0))), 0.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(clamp(abs(0.0), abs(0.0), abs(0.0)), clamp(clamp(abs(0.0), abs(0.0), abs(0.0)), clamp(abs(0.0), abs(0.0), abs(0.0)), clamp(abs(0.0), abs(0.0), abs(0.0))))), abs(0.0))), 0.0)) * mat3(1.0), _GLF_IDENTITY((_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)))) - vec3(0.0, 0.0, 0.0), ((_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), mat3(1.0) * _GLF_IDENTITY(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)))))) - vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)))))[1], max((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), abs(0.0), abs(0.0))), abs(0.0))), 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), max((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-848.688, 5.1, -1.1)) : (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)))))), (vec3(_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), max((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-848.688, 5.1, -1.1)) : (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))))))) * mat3(1.0)))), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), mat3(1.0) * (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)), ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0))) + vec3(0.0, 0.0, 0.0)) * mat3(1.0)))) - vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0))), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)))) - vec3(0.0, 0.0, 0.0))))[1])), (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), min(_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), clamp((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), max((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(48.59, -7.5, 75.07, 3810.6369).s)), float(0.0), bool(true)))), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-0.8)))) * abs(1.0)), abs(0.0))), abs(0.0))), 0.0)), (false ? _GLF_FUZZED(vec3(97.53, -19.43, -8.5)) : (vec3(1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(48.59, -7.5, 75.07, 3810.6369).s)), float(0.0), bool(true)))), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-0.8)))) * abs(1.0)), abs(0.0))), abs(0.0))), 0.0)))) * mat3(1.0), mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))), abs(0.0))), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)))) - vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED((9.3 + -2.3)), _GLF_FUZZED(8.8), _GLF_FUZZED(4470.5421)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), dot(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(0.6))), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(272.006) : 1.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), sin(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY((true ? injectionSwitch[1] : _GLF_FUZZED(-6.9)), mix(float(_GLF_FUZZED(37.52)), float(_GLF_IDENTITY((true ? injectionSwitch[1] : _GLF_FUZZED(-6.9)), 1.0 * (_GLF_IDENTITY((true ? injectionSwitch[1] : _GLF_FUZZED(-6.9)), mix(float(_GLF_FUZZED(8812.1177)), float((true ? injectionSwitch[1] : _GLF_FUZZED(-6.9))), bool(true)))))), bool(true)))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0), abs(0.0), abs(0.0))), abs(0.0), abs(0.0))), abs(0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(110.126) : 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), (false ? _GLF_FUZZED(vec3(803.227, -680.150, -344.207)) : mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)))))) - vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0)), max(_GLF_IDENTITY(clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0)), max(_GLF_IDENTITY(clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0)), max(clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0)), clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0)))), clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0)))), clamp(abs(0.0), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), abs(0.0))))), abs(0.0))), 0.0)) * mat3(1.0), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, log(1.0), exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(1.0, log(1.0), exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (false ? _GLF_FUZZED(vec3(803.227, -680.150, -344.207)) : mat3(1.0) * ((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), float(mat3x2(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec3(5.1, -8028.6682, -32.53)) : vec3(1.0, 1.0, 1.0))) * (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), float(mat3x2(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0), mat3(1.0) * (vec3(1.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), float(mat3x2(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), 1.0, tan(0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0)))))) * mat3(1.0)))))) - vec3(0.0, 0.0, 0.0))) + vec3(0.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.5)), bool(false))), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, sin(0.0))), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)), (true ? mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec4(324.346, -459.502, -661.216, -8.0))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8673.4004) : 0.0)), 0.0, 1.0, 0.0))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) + _GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(mat2(2389.8729, -4667.3087, 7487.6338, -0.8)) : transpose(mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(injectionSwitch[1], 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(-6.9))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), _GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))) : _GLF_FUZZED(distance(vec4(9376.1000, -77.21, -2.7, -7.1), vec4(0.3, -406.638, -98.43, -0.7))))), 0.0)) * mat3(1.0), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, 0.0 + (0.0))), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0), _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-544.539)), bool(false)))), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec3(-0.4, 538.450, 238.089)) : _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), clamp((mat3(1.0) * _GLF_IDENTITY(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), vec3(_GLF_IDENTITY(mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), abs(0.0) + (abs(0.0))), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat4x2(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))))), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), float(mat3(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec3(-0.4, 538.450, 238.089)) : _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), clamp((mat3(1.0) * _GLF_IDENTITY(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), vec3(_GLF_IDENTITY(mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), abs(0.0) + (abs(0.0))), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat4x2(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))))), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), float(mat3(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(vec3(39.90, -2.0, -7.2)) : (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec3(-0.4, 538.450, 238.089)) : _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), clamp((mat3(1.0) * _GLF_IDENTITY(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), vec3(_GLF_IDENTITY(mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), abs(0.0) + (abs(0.0))), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat4x2(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))))), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), float(mat3(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec3(-0.4, 538.450, 238.089)) : _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), clamp((mat3(1.0) * _GLF_IDENTITY(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), vec3(_GLF_IDENTITY(mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), abs(0.0) + (abs(0.0))), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat4x2(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))))), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), float(mat3(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))), mat3(1.0) * ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec3(-0.4, 538.450, 238.089)) : _GLF_IDENTITY(mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), _GLF_IDENTITY((mat3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), clamp((mat3(1.0) * _GLF_IDENTITY(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), vec3(_GLF_IDENTITY(mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x4(((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), abs(0.0) + (abs(0.0))), abs(0.0), abs(0.0))), abs(0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat4x2(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0))))), (mat3(1.0) * ((vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), float(mat3(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0))), 0.0)) * mat3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) - vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat3(1.0) * (mat2x3(0.0, 1.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(abs(0.0), float(mat4(_GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0), 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(339.303) : 1.0)), 0.0, 0.0, 0.0)))) / 1.0), 1.0, 1.0, 1.0, 0.0))), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, sin(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0))), (false ? _GLF_FUZZED(-2.1) : dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)), min(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)), max(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)))))))))), 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(true ? injectionSwitch[1] : _GLF_FUZZED(-6.9), mix(float(_GLF_FUZZED(-2.4)), float(true ? injectionSwitch[1] : _GLF_FUZZED(-6.9)), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0))), abs(0.0))), abs(0.0))), 0.0), (true ? vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0))), abs(0.0))), abs(0.0))), 0.0) : _GLF_FUZZED(vec3(77.55, -6.5, -11.51))))) * mat3(1.0), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), mix(float(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), float(_GLF_FUZZED(-7434.4633)), bool(false)))), 0.0)) * mat3(1.0), mat3(1.0) * (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)), max((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)), (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) - vec3(0.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)), clamp(float(mat4x2(0.0, 0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)), float(mat4x2(0.0, 0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)), float(mat4x2(0.0, 0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)))))), vec3(1.0, abs(0.0), 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(87.80) : _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(52.64)), float(0.0), bool(true))), 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0))), abs(0.0))), abs(0.0))), 0.0), (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0))), abs(0.0))), abs(0.0))), 0.0)) - sqrt(vec3(0.0, 0.0, 0.0))), (true ? vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (abs(0.0))), abs(0.0))), abs(0.0))), 0.0) : _GLF_FUZZED(vec3(77.55, -6.5, -11.51))))) * mat3(1.0), (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0)), mix(float(min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), float(_GLF_FUZZED(-7434.4633)), bool(false)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))) * mat3(1.0), mat3(1.0) * (_GLF_IDENTITY((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)), max((vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)), (vec3(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0)))) / 1.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0)))) * _GLF_IDENTITY(mat3(1.0), (mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) / mat3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) - vec3(0.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)), clamp(float(mat4x2(0.0, 0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)), float(mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)), float(mat4x2(0.0, 0.0, 0.0, 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, log(1.0), 0.0)))))), vec3(1.0, abs(0.0), 0.0))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(mat2(vec4(0.0, 0.0, 1.0, 0.0))), mix(vec4((vec4(mat2(vec4(0.0, 0.0, 1.0, 0.0))))[0], _GLF_FUZZED(5.8), _GLF_FUZZED(-5.2), _GLF_FUZZED(-1242.1325)), vec4(_GLF_FUZZED(-6.7), (vec4(mat2(vec4(0.0, 0.0, 1.0, 0.0))))[1], (vec4(mat2(vec4(0.0, 0.0, 1.0, 0.0))))[2], (vec4(mat2(vec4(0.0, 0.0, 1.0, 0.0))))[3]), bvec4(false, true, true, true)))))))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(sin(0.0), float(mat2x4(sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))))).y))))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.8))) : _GLF_FUZZED(-19.23)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true), false || ((injectionSwitch.x > injectionSwitch.y) && true))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) || false))), false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-5327.4252, 6.7)))), injectionSwitch)).y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(24350) : 1))); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), (ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)) << ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), (ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)) << ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1))))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), (ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)) << ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), (ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)) << ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), (ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)) << ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1))))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1), (ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)) << ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(0, (0) >> 0), 0, 1)))))))) | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false || ((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))))))))))))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, (_GLF_IDENTITY((0) ^ 0, (_GLF_IDENTITY((0) ^ 0, ((0) ^ 0) >> 0)) | (_GLF_IDENTITY((0) ^ 0, clamp((0) ^ 0, (0) ^ 0, (0) ^ 0))))) | ((0) ^ 0)))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), _GLF_IDENTITY(min(int(1), int(1)), (_GLF_IDENTITY(min(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), (min(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))) | (_GLF_IDENTITY(min(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), clamp(min(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), min(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), min(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))))) - 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) >> _GLF_IDENTITY(int(5), int(5)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, abs(0.0), 1.0, exp(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(ceil(-575.305)) : length(vec2(0.0, 0.0)))), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(423.204, inversesqrt(660.569), -3712.3599)) : _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))))) && true); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                     barrier();
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)) / 1), (_injected_loop_counter) * 1) != 0); _injected_loop_counter --)
                          {
                           return;
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-8300.5191) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false)))))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
                          {
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              break;
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
                            {
                             if(_GLF_DEAD(false))
                              return;
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               return;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         barrier();
                        }
                       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                           else
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
                            }
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)))).y)) || false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) && true))));
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log2(injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y) || false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               barrier();
              }
             for(int _injected_loop_counter = (-97426 & int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        continue;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
}
