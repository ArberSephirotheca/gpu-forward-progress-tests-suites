#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uvec3 _f0;
 uint subgroup_size;
 mat3x4 _f1;
 mat2x4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), ! (! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))) || false), false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.y), bool(true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? 8.8 : -3.2))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.9)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.9)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.9)), bool(false)))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((6.6 * 436.898))), float(injectionSwitch.y), bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5924.1434)))) - 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5924.1434)))) - 0.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5924.1434)))) - 0.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5924.1434)))) - 0.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((false))))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))), (! ((! (false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))), (! ((! (false)))) || false), bool(bvec2(_GLF_IDENTITY(! ((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))), (! ((! (false)))) || false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(5924.1434), 0.0 + (_GLF_FUZZED(5924.1434)))))) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, determinant(mat4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (! ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (! ((! (false)))) || false)))), true, _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))), _GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))), _GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))), _GLF_IDENTITY(false, ! (! (false))), true)), true), true))))))), (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec3(1u), gl_SubgroupSize, mat3x4(1.0), mat2x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))), true && ((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) ? workgroup_size : _GLF_FUZZED(workgroup_id))), (workgroup_size) * 1u)) | 0u, (1u & 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) ? workgroup_size : _GLF_FUZZED(workgroup_id))), (workgroup_size) * 1u)) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) ? workgroup_size : _GLF_FUZZED(workgroup_id))), (workgroup_size) * 1u)) | 0u, uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) ? workgroup_size : _GLF_FUZZED(workgroup_id))), (workgroup_size) * 1u)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) ? workgroup_size : _GLF_FUZZED(workgroup_id))), (workgroup_size) * 1u)) | 0u))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-38.72) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), log(1.0)), vec3(0.0, 1.0, 0.0))))), (true ? float(mat3x2(injectionSwitch.x, 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), log(1.0)), vec3(0.0, 1.0, 0.0))))) : _GLF_FUZZED(-66.79)))), (true ? injectionSwitch.x : _GLF_FUZZED(34.65))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true))))), false, false, false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) * 1u), clamp(_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) * 1u), _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) * 1u), _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) * 1u)))), (subgroup_id) - 0u) * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, 0u ^ (_GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y)) ? subgroup_id : _GLF_FUZZED(44983u))) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)), max(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), clamp(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (0u | 0u) + (_GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)) | (1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))))), _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)) + 0u)))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id))) - 0u) * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) + 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (_GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), min(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), 1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) >> 0u)))))))) ^ 0u)))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))) - _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u)))), max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) ^ 0u), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_id))) * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY(clamp(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), (max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))) | 0u), max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), (clamp(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), (max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))) | 0u), max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))))) | 0u))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u)) | 0u)) / 1u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))) : (subgroup_id))) - 0u) * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (_GLF_IDENTITY(1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))), (_GLF_IDENTITY(1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))), min(_GLF_IDENTITY(1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))), max(1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))), 1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))))), 1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)))))) >> 0u)) ^ 0u)))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))) - 0u), max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) ^ 0u), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))) - 0u), max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) ^ 0u), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u, ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u) >> 0u)) | ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u))), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), clamp(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_0.subgroup_size)), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), (max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))) | 0u), max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(1u, (1u) / 1u) * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) << 0u), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) : (subgroup_id))) - 0u) * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)))) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), max(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) * 1u))), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, uint(uvec3(_GLF_struct_replacement_0.subgroup_size, 1u, 0u)))) ^ 0u), 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), min(_GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)) | (1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))))))), clamp(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u)))), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u + (subgroup_id * _GLF_struct_replacement_0.subgroup_size))))), (max(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) << 0u), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))) | 0u), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), clamp(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size))), (max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, 1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size)))) - 0u)))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ~ (~ (_GLF_IDENTITY((0u) | (0u), 0u ^ ((0u) | (0u))))))))))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) - 0u)), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), clamp((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), clamp((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))))), 0u | (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), clamp((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))))))))) ^ 0u)))) ^ 0u), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))))))) ^ 0u))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (subgroup_id))) >> _GLF_IDENTITY(0u, (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)), min((subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)), (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))))) ^ 0u), 0u | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) | (0u))))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | (0u)))))) ^ 0u))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) : (subgroup_id))) - 0u) * _GLF_struct_replacement_0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * _GLF_struct_replacement_0.subgroup_size), (1u * (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)))) ^ 0u))))))) * 1u))) + subgroup_local_id) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))))) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false)))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size, ~ (~ ((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size))), max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size, ~ (~ ((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size, ~ (~ ((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), (min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) ^ 0u)) | (min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))))))) % _GLF_struct_replacement_0.subgroup_size, ~ (~ ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_0.subgroup_size), min(_GLF_IDENTITY(~ (_GLF_struct_replacement_0.subgroup_size), uint(uint(~ _GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_size), min((_GLF_struct_replacement_0.subgroup_size), (_GLF_struct_replacement_0.subgroup_size)))))), ~ (_GLF_struct_replacement_0.subgroup_size))))), _GLF_struct_replacement_0.subgroup_size))) / _GLF_IDENTITY(1u, 0u ^ (1u))), (true ? _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_struct_replacement_0.subgroup_size))), _GLF_struct_replacement_0.subgroup_size))) / 1u, (true ? (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_0.subgroup_size)), ((~ (_GLF_struct_replacement_0.subgroup_size))) << 0u)), _GLF_struct_replacement_0.subgroup_size))) / 1u : _GLF_FUZZED(virtual_gid)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (~ (_GLF_FUZZED(workgroup_base))))))))))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(810.327)), float(injectionSwitch.y), bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(810.327)), float(injectionSwitch.y), bool(true)))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 + (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-10561) : clamp(64, 64, 64)))))))))) | 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 1u, 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (virtual_gid)))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(66453u, workgroup_id, true)) : _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / (0u ^ 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))))), false || (bool(bool(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))))))))) && true))) ? virtual_gid : _GLF_FUZZED(workgroup_size))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), (_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ _GLF_IDENTITY(0u, (0u) - 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / (0u ^ 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))))), false || (bool(bool(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))))))))) && true))) ? virtual_gid : _GLF_FUZZED(workgroup_size))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), (_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ _GLF_IDENTITY(0u, (0u) - 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / (0u ^ 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))))), false || (bool(bool(_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true), true))), true, true, false)))))))))))))) && true))) ? virtual_gid : _GLF_FUZZED(workgroup_size))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), (_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ _GLF_IDENTITY(0u, (0u) - 0u))))))))))) | 0u)) - 0u))) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 1u, 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (virtual_gid)))), clamp(virtual_gid, virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))))), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), true && (bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && _GLF_IDENTITY(true, (true) || false)), true))), true, true, false)))))))))) ? virtual_gid : _GLF_FUZZED(workgroup_size))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), _GLF_IDENTITY((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u, (0u | 0u) ^ ((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u))))))))))))) * 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (virtual_gid)))), clamp(virtual_gid, virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))))), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), true && (bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && _GLF_IDENTITY(true, (true) || false)), true))), true, true, false)))))))))) ? virtual_gid : _GLF_FUZZED(workgroup_size))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), _GLF_IDENTITY((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u, (0u | 0u) ^ ((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u))))))))))))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (virtual_gid)))), clamp(virtual_gid, virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))))), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), true && (bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && _GLF_IDENTITY(true, (true) || false)), true))), true, true, false)))))))))) ? virtual_gid : _GLF_FUZZED(workgroup_size))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), _GLF_IDENTITY((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u, (0u | 0u) ^ ((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u))))))))))))) * 1u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (virtual_gid)))), clamp(virtual_gid, virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))))), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))), true, true, false))), false || (_GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true))), true, true, false))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), true && (bool(bvec4(_GLF_IDENTITY((true), bool(bvec3((true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && _GLF_IDENTITY(true, (true) || false)), true))), true, true, false)))))))))) ? virtual_gid : _GLF_FUZZED(workgroup_size))), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), _GLF_IDENTITY((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u, (0u | 0u) ^ ((_GLF_IDENTITY(~ (7u), min(~ (7u), ~ (7u)))) ^ 0u))))))))))))) * 1u))))))))) >> 0u)], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))))
  return;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_0.subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec2((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) || false))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   int i = _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1978), (_GLF_IDENTITY(_GLF_FUZZED(-1978), min(_GLF_FUZZED(-1978), _GLF_FUZZED(-1978)))) + 0) : 0))));
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)), true)))))))) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), ((! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) || false)))))))), false, false, false))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(3791.1706)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) > injectionSwitch.y))))), ((bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(3791.1706)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(3791.1706)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), (max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(3791.1706)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)))), mix(float(_GLF_FUZZED(-639.024)), float(float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(3791.1706)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), (max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(3791.1706)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0))))), bool(true))))) > injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(bool(true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4114.3199), _GLF_FUZZED((- -6990.3211))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1])))) - 0.0)) / 1.0)), bvec2(true, true))).y, _GLF_IDENTITY(false, false || (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) : _GLF_FUZZED(distance(vec3(-5.9, 6907.2608, 2.9), vec3(-3203.1133, -292.427, 577.472))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) : _GLF_FUZZED(distance(vec3(-5.9, 6907.2608, 2.9), vec3(-3203.1133, -292.427, 577.472))))), max(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) : _GLF_FUZZED(distance(vec3(-5.9, 6907.2608, 2.9), vec3(-3203.1133, -292.427, 577.472))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) : _GLF_FUZZED(distance(vec3(-5.9, 6907.2608, 2.9), vec3(-3203.1133, -292.427, 577.472))))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) : _GLF_FUZZED(distance(vec3(-5.9, 6907.2608, 2.9), vec3(-3203.1133, -292.427, 577.472))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) : _GLF_FUZZED(distance(vec3(-5.9, 6907.2608, 2.9), vec3(-3203.1133, -292.427, 577.472)))))))), max(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))) / sqrt(vec2(1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0), max(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))) / sqrt(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), max(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), mix(vec2((vec2(injectionSwitch.y, 1.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.y, 1.0))[1], ((vec2(injectionSwitch.y, 1.0))[1]) / 1.0)), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-9.1)), bvec2(false, false)))))) / sqrt(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(89.86)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), max(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, 1.0), vec2(injectionSwitch.y, 1.0)))) / sqrt(vec2(1.0, 1.0)), min(_GLF_IDENTITY((_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), max(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), max(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))) / sqrt(vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(354.761)), bool(false)))) + abs(0.0)), 1.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3((_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), max(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))) / sqrt(vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), max(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))) / sqrt(vec2(1.0, 1.0)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(true, ! (! (true))) && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))))) || false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))))).x > injectionSwitch.y), false, false, true))), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)), (false ? _GLF_IDENTITY(_GLF_FUZZED(float(true)), (true ? _GLF_FUZZED(_GLF_IDENTITY(float(true), (float(true)) - sqrt(0.0))) : _GLF_FUZZED(-199.973))) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, sin(0.0), exp(0.0), 1.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
