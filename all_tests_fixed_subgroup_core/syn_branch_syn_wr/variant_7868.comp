#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))), ! (! (bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), true, false, false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), true, false, false))))))) && true)))))), (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), true, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), true, false, false)))))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4x2(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0)))).y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.4)), bool(false))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), false || (true && (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-15.84, -67.44)))))).y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))).x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-15.84, -67.44)))))).y)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-15.84, -67.44)))))).y)))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-85.42))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))) || false), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))))) + vec2(0.0, 0.0)).y))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) | (subgroup_id * subgroup_size)), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), max(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u | ((subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))))), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))) * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), 0u ^ ((_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 0u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(min(((subgroup_size)), ((subgroup_size))), (min(((subgroup_size)), ((subgroup_size)))) | (_GLF_IDENTITY(min(((subgroup_size)), ((subgroup_size))), ~ (_GLF_IDENTITY(~ (min(((subgroup_size)), ((subgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : ~ (min(((subgroup_size)), ((subgroup_size))))))))))) : _GLF_FUZZED(packSnorm4x8(vec4(6.2, -6.2, -3.0, -992.980))))))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) * 1u) | ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))))))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), (subgroup_size), _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))), (((subgroup_size))) * 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) | ((subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), 0u | (((subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), ((subgroup_size)) | ((subgroup_size)))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), uint(uvec3(_GLF_IDENTITY(((subgroup_size)), uint(uvec3(((subgroup_size)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size)) | ((subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), (true ? ~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size)) | ((subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), (true ? ~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size)) | ((subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), (true ? ~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) ^ 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size)) | ((subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), (true ? ~ ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))))))))) >> 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) >> (0u | 0u)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) >> (0u | 0u)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) >> (0u | 0u)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) >> (0u | 0u)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) >> (0u | 0u)))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), max((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size)))))) >> 0u))), (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))))))))) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))) | ((subgroup_size))), ~ (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size)))) | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size)))) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size)))) | ((subgroup_size)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size)))) | ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size)))) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size)))) | ((subgroup_size)))))) | (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size, subgroup_size)))) | ((subgroup_size)))))))) ^ 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), _GLF_IDENTITY((((subgroup_size))) | (((subgroup_size))), ((_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) ^ 0u)) | (((subgroup_size)))) * 1u)) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u))))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) | ((subgroup_size))), max(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) | ((subgroup_size)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((subgroup_size)) | ((subgroup_size)), (((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))))) / 1u)))), ~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), max(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ((subgroup_size)))) | ((subgroup_size)))))) - _GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (1u ^ 1u) | ((subgroup_size))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (subgroup_size)))) | ((subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ((subgroup_size)) | ((subgroup_size))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u | (~ (subgroup_size))))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 1u, 1u, 0u)), (uint(uvec4((subgroup_size), 1u, 1u, 0u))) >> 0u))), ((_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 1u, 1u, 0u)), (uint(uvec4((subgroup_size), 1u, 1u, 0u))) >> 0u)))) * 1u))), (uint(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))))))) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))) << 0u)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) << 0u), uint(uvec4(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) << 0u), 0u, 0u, 1u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) << 0u), uint(uvec4(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) << _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u, 0u, 1u))))) | 0u))), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))), 1u))))) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714), max(_GLF_IDENTITY(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714), uint(uvec4(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714), 0u, 0u, 1u))), bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714)))))))), _GLF_IDENTITY(((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714)), (true ? _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714)) : _GLF_FUZZED(117600u)))))))), _GLF_IDENTITY(uint(uvec2(((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714)), (true ? _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714)) : _GLF_FUZZED(117600u)))))))), 0u)), uint(uvec2(uint(uvec2(((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714)), (true ? _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))) : _GLF_FUZZED(bitfieldInsert(subgroup_id, workgroup_size, -91280, -63714)) : _GLF_FUZZED(117600u)))))))), 0u)), 1u)))) - 0u)), min(_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | ((subgroup_size))), max(_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)) ^ (subgroup_size)))) | ((subgroup_size)), uint(uvec3(((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)) ^ (subgroup_size)))) | ((subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (1u | 1u), 1u), clamp(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (1u | 1u), 1u), uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (1u | 1u), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (1u | 1u), 1u), clamp(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (1u | 1u), 1u), uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (1u | 1u), 1u), uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (1u | 1u), 1u))))))), max(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), ~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))) | _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ((subgroup_size))))) - 0u), clamp(_GLF_IDENTITY(((subgroup_size)), ~ (_GLF_IDENTITY(~ (((subgroup_size))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (((subgroup_size))), (~ (((subgroup_size)))) ^ 0u))), max(~ (~ (_GLF_IDENTITY(~ (((subgroup_size))), (~ (((subgroup_size)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(~ (((subgroup_size))), (~ (((subgroup_size)))) ^ 0u)))))))) | _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), 0u | (((subgroup_size)))), (((subgroup_size))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - _GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec4(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), 1u, 0u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), clamp(uvec2(0u, 1u), _GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) | (uvec2(0u, 1u))), uvec2(0u, 1u))))), _GLF_IDENTITY((0u) | (0u), (0u | 0u) + ((0u) | (0u))))), uint(uvec4(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), 1u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - _GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec4(_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(~ (~ (((subgroup_size)))), _GLF_IDENTITY(uint(uint(~ (~ (((subgroup_size)))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(uint(~ (~ (((subgroup_size)))))), (uint(uint(~ (~ (((subgroup_size))))))) - 0u))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), 1u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - _GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec4(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), 1u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - _GLF_IDENTITY(0u, (0u) | (0u))), uint(uvec4(_GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), 1u, 0u, 1u)))) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY(((subgroup_size)), ~ (~ ((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))) | _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((((subgroup_size))) - 0u, clamp((((subgroup_size))) - 0u, (((subgroup_size))) - 0u, (((subgroup_size))) - 0u))))))), _GLF_IDENTITY((true ? (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), uint(uint(((subgroup_size))))), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size)))), (((subgroup_size))) - 0u))) : _GLF_FUZZED(subgroup_local_id)), ((true ? (~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), ~ (~ (((subgroup_size))))) | _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)) | (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), subgroup_local_id))))) << 0u))), 0u | (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))))) / 1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(uvec3(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, (0u) | 0u))) | 0u), 1u, 1u))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(66891) : 4)), 4)), _GLF_IDENTITY(4, (4) / 1))), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(76904, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(76904, (76904) * 1), 0, (0 & -63990)), min(ivec3(_GLF_IDENTITY(76904, (76904) * 1), 0, (0 & -63990)), ivec3(_GLF_IDENTITY(76904, (76904) * 1), 0, (0 & -63990))))))))), max(4, 4))) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-32.22)), bool(false))))) || false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))]) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9105.1706) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))), injectionSwitch[1])).x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) * 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) * 1.0) + (injectionSwitch.x)), (false ? _GLF_FUZZED(445.829) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch.x)), min(float((injectionSwitch.x)), float((injectionSwitch.x)))), float(_GLF_FUZZED(-5502.0759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-5502.0759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * 1.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))), false || ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))))))), bool(bvec4(false, true, false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false, true)))) && true), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + log(1.0))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false, true)))) && true), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + log(1.0))))))))), true)), false || (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false, true)))) && true), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + log(1.0))))))))), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), true, false))))))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), false, true)))) && true), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0)))) + 0.0))))))))))), bool(bool(! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true, false))))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, false || (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true)))), (bool(bool((_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))) && true))))), false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) && true))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false, true)))) && true), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + log(1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + log(1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + log(1.0))))), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 0.0))))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) + log(1.0)))))) && true)))))))))))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(max(-0.7, 4.4)) : 0.0)))), 0.0), vec3(0.0, 1.0, 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))) / 1.0))), 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), float(mat4x3(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, tan(0.0), 0.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0))))), vec4(1.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))) && true)))) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), false)), true && (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) * 1), clamp(~ (0), ~ (0), ~ (0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) * 1), clamp(~ (0), ~ (0), ~ (0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1), clamp(ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) * 1), clamp(~ (0), ~ (0), ~ (0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1), ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) * 1), clamp(~ (0), ~ (0), ~ (0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1), ivec3(_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0)) * 1), clamp(~ (0), ~ (0), ~ (0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1))))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97710))), 0)), 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), true, true, true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), true, true, true)))))), ! (! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), true, true, true)))))))))))), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))) || false)))), true))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bool(true))), false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))) || false)))), true))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))))))), (false) || false), false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), true, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true, false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0, _GLF_IDENTITY(0, (0) / 1)));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || _GLF_IDENTITY((bool(bvec4(false, true, true, true))), bool(_GLF_IDENTITY(bvec3((bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3((bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3((bool(bvec4(false, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)))))), false || (! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true)))))))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)))))))))))))), false, false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))))).x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), length(0.0) + (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2353.0729) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-288.587), _GLF_FUZZED(_GLF_IDENTITY(0.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-2767.3598, 54.92, 1.9)[0]) : 0.2)))), bvec2(false, false))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, exp(0.0), 1.0))), (injectionSwitch.y) / 1.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-288.587), _GLF_FUZZED(0.2)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0)))))).y, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, exp(0.0), 1.0))), (injectionSwitch.y) / 1.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-288.587, float(vec3(-288.587, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0)))), _GLF_FUZZED(0.2)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0))), _GLF_IDENTITY(max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0)))), max(max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0)))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat2(1.0)))))))).y, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, exp(0.0), 1.0))), (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 9119.0809 : -666.070))), bool(false)))), float(_GLF_FUZZED(-794.438)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(vec4(-9856.9897, -2158.5004, 39.89, 2.4).b)), bool(false))) / 1.0))))))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true)), true, false))))))), true)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) || false)), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false)))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-7.0, 7.5, 25.90).s) : injectionSwitch.y)))) || ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, false))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, false))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), true, true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), true, true, true))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), false, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), false, true))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), false, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), false, true))), false))))))))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.1, -2.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(true && (bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(true && (bool(bvec4(true, false, true, false))), ! (! (true && (bool(bvec4(true, false, true, false))))))) && true)), false, true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)) && true), false, true, false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(true && (bool(bvec4(true, false, true, false))), _GLF_IDENTITY(bool(bvec2(true && (bool(bvec4(true, false, true, false))), true)), (bool(bvec2(true && (bool(bvec4(true, false, true, false))), true))) || false))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(true, (true) && true), false)), true && (bool(bvec4(true, false, true, false)))), false, true))))), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), false, true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))), false, true))))), true, false))))))))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))), false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) | 0u)], _GLF_IDENTITY(read, 0u ^ (read)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-648.433) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-8.6)), vec2(_GLF_FUZZED(6958.6502), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(2.5, 4.1, -9264.6719, -6.6, -42.56, -13.21, 1.3, 7.5)) : mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), min(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), 1.0 * ((true ? 1.0 : _GLF_FUZZED(0.2)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), (false ? _GLF_FUZZED(-8.6) : (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(0.2)))))), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), min(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), 1.0 * ((true ? 1.0 : _GLF_FUZZED(0.2)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(0.2, mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY(0.2, (0.2) * 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false ? _GLF_FUZZED(-8.6) : (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(0.2))))))) + 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-8.6)), vec2(_GLF_FUZZED(6958.6502), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), mix(float(_GLF_FUZZED(-5.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))), bool(true))), 1.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0)), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0))), 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(2.5, 4.1, -9264.6719, -6.6, -42.56, -13.21, 1.3, 7.5)) : mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), min(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), 1.0 * ((true ? 1.0 : _GLF_FUZZED(0.2)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), (false ? _GLF_FUZZED(-8.6) : (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(0.2)))))), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), min(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(0.2)), 1.0 * ((true ? 1.0 : _GLF_FUZZED(0.2)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(0.2, mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY(0.2, (0.2) * 1.0)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-8.6), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(-8.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 0.0 + (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0)), max(float(vec4(_GLF_FUZZED(-8.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 0.0 + (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0)), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(-8.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 0.0 + (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0)), float(mat3(float(vec4(_GLF_FUZZED(-8.6), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 0.0 + (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) : (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(0.2))))))) + 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))))).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3x4(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  barrier();
}
