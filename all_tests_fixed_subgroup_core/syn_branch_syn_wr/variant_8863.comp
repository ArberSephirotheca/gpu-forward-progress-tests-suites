#version 460
struct _GLF_struct_11 {
 uint workgroup_id;
 vec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_7 {
 uint _f0;
 uvec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 mat3x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat3x4 _f1;
 _GLF_struct_3 _f2;
 int _f3;
 vec3 _f4;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 uvec4 _f1;
 mat2x4 _f2;
 ivec2 _f3;
 bvec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 bvec4 _f1;
 vec2 _f2;
 _GLF_struct_0 _f3;
 int _f4;
 bvec2 _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 vec2 _f1;
 _GLF_struct_2 _f2;
 uint subgroup_local_id;
 _GLF_struct_4 _f3;
 mat4 _f4;
 vec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_size;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(vec4(1.0), vec2(1.0), _GLF_struct_2(mat4(1.0), bvec4(true), vec2(1.0), _GLF_struct_0(mat3x4(1.0), mat3x4(1.0), bvec4(true), mat4x3(1.0), uvec2(1u)), 1, bvec2(true), _GLF_struct_1(mat2x4(1.0), uvec4(1u), mat2x4(1.0), ivec2(1), bvec2(true), mat2x4(1.0))), gl_SubgroupInvocationID, _GLF_struct_4(vec4(1.0), mat3x4(1.0), _GLF_struct_3(ivec2(1), 1u), 1, vec3(1.0)), mat4(1.0), vec4(1.0));
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x = _GLF_struct_replacement_5.subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_8(_GLF_struct_6(ivec4(1), mat3x2(1.0), uvec3(1u)), _GLF_struct_7(1u, uvec4(1u), mat4x3(1.0))), _GLF_struct_10(_GLF_struct_9(ivec2(1)), uvec2(1u)), _GLF_struct_11(gl_WorkGroupID.x, vec2(1.0), mat4x3(1.0)));
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.z = _GLF_struct_replacement_12._f2.workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.z;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y + GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y + ((GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x + 1) % GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y);
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
 atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x + 1 < GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y)
  {
   int i = 0;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
}
