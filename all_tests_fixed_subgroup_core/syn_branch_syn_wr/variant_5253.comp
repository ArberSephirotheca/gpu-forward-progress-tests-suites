#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))), ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).x, (false ? _GLF_FUZZED(-482.898) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))), float(_GLF_FUZZED(-81.07)), bool(false))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(-93.60)))), max(vec4(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(0.0, 0.0))), clamp(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), min(0.0, 0.0))))), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(float((true ? 0.0 : _GLF_FUZZED(-6.4))), _GLF_ONE(1.0, injectionSwitch.y) * (float((true ? 0.0 : _GLF_FUZZED(-6.4)))))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(0.0, 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-225.351))))), min(0.0, 0.0))), max(clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)), min(0.0, 0.0))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.4)), float(0.0), bool(true))))), 0.0), 1.0 * _GLF_IDENTITY((clamp(0.0, 0.0, 0.0)), 1.0 * (_GLF_IDENTITY((clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY((clamp(0.0, 0.0, 0.0)), min((clamp(0.0, 0.0, 0.0)), (clamp(0.0, 0.0, 0.0)))), (clamp(0.0, 0.0, 0.0)), (clamp(0.0, 0.0, 0.0)))))))), min(0.0, 0.0)))))))), 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-482.898) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))), float(_GLF_IDENTITY(_GLF_FUZZED(-81.07), _GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-81.07), log(1.0), abs(0.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0)), (_GLF_IDENTITY(float(mat3x4(_GLF_FUZZED(-81.07), log(1.0), abs(0.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0)), (float(mat3x4(_GLF_FUZZED(-81.07), log(1.0), abs(0.0), 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0))) - 0.0)) / sqrt(1.0)))), bool(false))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), max(vec4(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-6.4)), ((true ? 0.0 : _GLF_FUZZED(-6.4))) - 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))), min(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 0.0))))), 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(191.356), _GLF_FUZZED(-52.88)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-247.502) : injectionSwitch.y))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, sin(0.0), 1.0, 1.0, 0.0)), max(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(0.0), 1.0, 1.0, 0.0)), float(mat3x2(injectionSwitch.x, 1.0, sin(0.0), 1.0, 1.0, 0.0))))), abs(1.0), 1.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(787.267), _GLF_FUZZED((-8186.5301 + -846.292))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, sin(0.0), 1.0, 1.0, 0.0)), max(float(mat3x2(injectionSwitch.x, 1.0, sin(0.0), 1.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, sin(0.0), 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, sin(0.0), 1.0, 1.0, 0.0)), max(float(mat3x2(injectionSwitch.x, 1.0, sin(0.0), 1.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, sin(0.0), 1.0, 1.0, 0.0))))) - 0.0)), abs(1.0), 1.0)) - vec3(0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)), (_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))), min(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))))))) + vec2(0.0, 0.0))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))])), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))) + vec2(0.0, 0.0))).y, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)), (_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))), min(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))))))) + vec2(0.0, 0.0))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))])), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))) + vec2(0.0, 0.0))).y, true)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0)), float(_GLF_FUZZED(68.78)), bool(false))), log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, float(mat2x3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0)))), float(_GLF_FUZZED(68.78)), bool(false))))), (true ? injectionSwitch.x : _GLF_FUZZED(1167.9650))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0)), float(_GLF_FUZZED(68.78)), bool(false))), log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, float(mat2x3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0)))), float(_GLF_FUZZED(68.78)), bool(false))))), (true ? injectionSwitch.x : _GLF_FUZZED(1167.9650))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0)), float(_GLF_FUZZED(68.78)), bool(false))), log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, injectionSwitch.x))))) - 0.0, float(mat2x3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat4x2(0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(4.3)), bool(false)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - 0.0)))), float(_GLF_FUZZED(68.78)), bool(false))))), (true ? injectionSwitch.x : _GLF_FUZZED(1167.9650))) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false || (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))), true))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(min(subgroup_local_id, subgroup_size)))), 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(min(subgroup_local_id, subgroup_size))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), true, true))))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))).x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) && true))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 1u, 0u)));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(~ (~ ((workgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ ((workgroup_base))), (~ (~ ((workgroup_base)))) | (~ (~ ((workgroup_base)))))))) | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) | (workgroup_base))))) | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), max(clamp(subgroup_id, subgroup_id, subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), 0u ^ (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id)))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (true ? clamp(subgroup_id, subgroup_id, subgroup_id) : _GLF_FUZZED(virtual_gid))))), max((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), ((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) << 0u))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id, subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id))), max((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) | (clamp(subgroup_id, subgroup_id, subgroup_id)))))) << 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id, subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id))), max((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) | (clamp(subgroup_id, subgroup_id, subgroup_id)))))) << 0u)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id, subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id))), max((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) | (clamp(subgroup_id, subgroup_id, subgroup_id)))))) << 0u))))))) << 0u) << 0u)) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) << 0u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))))), 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) + 0u))))), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) + 0u))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) + 0u)))))))) ^ 0u), subgroup_id))))) << 0u) * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)) + 0), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)) + 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)) + 0)))) >> 0)), _GLF_IDENTITY(4, _GLF_IDENTITY(1, (1) >> 0) * _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-23991)))), clamp((4), (4), (4)))) | ((4)))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, max(4, 4))), min(clamp(4, 4, _GLF_IDENTITY(4, max(4, 4))), clamp(4, 4, _GLF_IDENTITY(4, max(4, 4)))))) ^ 0)), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))), true, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))), true, false)), false), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), true, false)), false), false)))))), false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))), false || ((! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false))) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0))))).y))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(23.18) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5.7))), injectionSwitch[1])).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-936.574)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-178.710, -2.3, 14.76).z) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, clamp((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0, _GLF_IDENTITY((injectionSwitch.x) * 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) * 1.0, 1.0 * ((injectionSwitch.x) * 1.0))), float(_GLF_FUZZED(-750.366)), bool(false)))))))))) > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-178.710, -2.3, 14.76).z) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, clamp((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0, _GLF_IDENTITY((injectionSwitch.x) * 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) * 1.0, 1.0 * ((injectionSwitch.x) * 1.0))), float(_GLF_FUZZED(-750.366)), bool(false)))))))))) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.6)), vec2(_GLF_FUZZED(72.68), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0)), min(vec3(injectionSwitch.x, 0.0, sin(0.0)), vec3(injectionSwitch.x, 0.0, sin(0.0)))))) > injectionSwitch.y)), true))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).x) - 0.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-178.710, -2.3, 14.76).z) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, clamp((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0, _GLF_IDENTITY((injectionSwitch.x) * 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) * 1.0, 1.0 * ((injectionSwitch.x) * 1.0))), float(_GLF_FUZZED(-750.366)), bool(false)))))))))) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.6)), vec2(_GLF_FUZZED(72.68), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) ^ (57985 & 0))]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, sin(0.0)), min(vec3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, sin(0.0)), vec3(injectionSwitch.x, 0.0, sin(0.0)))))) > injectionSwitch.y)), true))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-9.1, 1.0 * (_GLF_IDENTITY(-9.1, min(-9.1, -9.1)))), 3366.3890), vec2(_GLF_IDENTITY(mat3(vec2(_GLF_IDENTITY(-9.1, 1.0 * (_GLF_IDENTITY(-9.1, min(-9.1, -9.1)))), 3366.3890), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), tan(0.0), 0.0, 0.0), (true ? mat3(vec2(_GLF_IDENTITY(-9.1, 1.0 * (_GLF_IDENTITY(-9.1, min(-9.1, -9.1)))), 3366.3890), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), tan(0.0), 0.0, 0.0) : _GLF_FUZZED(mat3(-7655.4804, -5.7, 0.9, 6.3, -7106.9671, 3.6, 74.90, 8537.6155, -45.04))))))))), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(82.52)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), false))).x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(distance(vec4(1.9, 97.06, 154.337, -3.8), vec4(7.0, -7836.1064, -5.1, -52.26))))), 0.0) + (injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))))[0], ((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(-6.1, (true ? -6.1 : _GLF_FUZZED(-8.3))))), vec2(_GLF_FUZZED(-790.240), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true)))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))))[0], ((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(-6.1, (true ? -6.1 : _GLF_FUZZED(-8.3))))), vec2(_GLF_FUZZED(-790.240), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true)))).x), bool(true)), (true ? mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))))[0], ((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(-6.1, (true ? -6.1 : _GLF_FUZZED(-8.3))))), vec2(_GLF_FUZZED(-790.240), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-100.192)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))[0], _GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), max(_GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), min(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), _GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), (((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0])) - 0.0))), ((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]))) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(-6.1, (_GLF_IDENTITY(true ? -6.1 : _GLF_FUZZED(-8.3), min(true ? -6.1 : _GLF_FUZZED(-8.3), _GLF_IDENTITY(true ? -6.1 : _GLF_FUZZED(-8.3), mix(float(_GLF_FUZZED(-6.0)), float(true ? -6.1 : _GLF_FUZZED(-8.3)), bool(true))))))))), vec2(_GLF_FUZZED(-790.240), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(16.34, -712.858))))).x, (false ? _GLF_FUZZED(5198.7107) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))))[0], ((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(-6.1, (true ? -6.1 : _GLF_FUZZED(-8.3))))), vec2(_GLF_FUZZED(-790.240), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-100.192)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))[0], _GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), max(_GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), min(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), _GLF_IDENTITY(((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]), (((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0])) - 0.0))), ((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y))), (mat2x3(injectionSwitch, log(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(_GLF_ONE(1.0, injectionSwitch.y)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0]))) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(-6.1, (_GLF_IDENTITY(true ? -6.1 : _GLF_FUZZED(-8.3), min(true ? -6.1 : _GLF_FUZZED(-8.3), _GLF_IDENTITY(true ? -6.1 : _GLF_FUZZED(-8.3), mix(float(_GLF_FUZZED(-6.0)), float(true ? -6.1 : _GLF_FUZZED(-8.3)), bool(true))))))))), vec2(_GLF_FUZZED(-790.240), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y)))))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(16.34, -712.858))))).x))), bool(true)) : _GLF_FUZZED(-69.94)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false, false, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false, false, false))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false, false, false))) && true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
}
