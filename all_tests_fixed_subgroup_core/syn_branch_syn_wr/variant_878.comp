#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 mat3 _f0;
 bvec2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 uvec2 _f1;
 bool _f2;
 mat4x2 _f3;
 uvec4 _f4;
 bool _f5;
} ;

struct _GLF_struct_9 {
 uint _f0;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 vec3 _f1;
 uint _f2;
 vec4 _f3;
 vec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 _GLF_struct_8 _f1;
 mat2x3 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 mat4x2 _f1;
 vec2 _f2;
 mat4x2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 vec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat4x3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
 bool _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_0 {
 int _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_14 {
 uint virtual_gid;
 _GLF_struct_1 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 _GLF_struct_7 _f3;
 uvec2 _f4;
 mat2x4 _f5;
 _GLF_struct_13 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y = subgroup_id;
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x = GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w;
 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_base;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y + subgroup_local_id, _GLF_struct_1(_GLF_struct_0(1)), mat2x3(1.0), mat2x4(1.0), _GLF_struct_7(uvec2(1u), _GLF_struct_2(vec2(1.0), true), true, _GLF_struct_3(mat4(1.0), mat4x3(1.0), vec3(1.0)), _GLF_struct_4(vec4(1.0), vec4(1.0)), _GLF_struct_5(mat2x4(1.0), vec3(1.0), bvec2(true)), _GLF_struct_6(mat3x4(1.0), mat4x2(1.0), vec2(1.0), mat4x2(1.0), ivec2(1))), uvec2(1u), mat2x4(1.0), _GLF_struct_13(bvec2(true), _GLF_struct_8(mat3(1.0), vec3(1.0), 1u, vec4(1.0), vec4(1.0), ivec4(1)), mat2x3(1.0), _GLF_struct_9(1u), _GLF_struct_10(mat4x2(1.0), uvec2(1u), true, mat4x2(1.0), uvec4(1u), true), _GLF_struct_11(uvec2(1u)), _GLF_struct_12(mat3(1.0), bvec2(true), bvec3(true))));
 uint next_virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x * GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y + ((subgroup_local_id + 1) % GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_14.virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y)
  {
   int i = 0;
   atomicStore(checker[_GLF_struct_replacement_14.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_14.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
}
