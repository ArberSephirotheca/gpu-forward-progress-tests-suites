#version 460
struct _GLF_struct_7 {
 uvec2 _f0;
 uvec3 _f1;
 mat2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 bvec2 _f1;
 uvec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 uint subgroup_local_id;
 _GLF_struct_8 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_4 {
 float _f0;
 bvec2 _f1;
 ivec2 _f2;
 vec3 _f3;
 bvec3 _f4;
 bvec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_5 {
 int _f0;
 _GLF_struct_4 _f1;
 uvec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat3x4 _f1;
 mat3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uvec4 _f1;
 int _f2;
 int _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 float _f1;
 bvec2 _f2;
 mat3x2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 _GLF_struct_1 _f3;
 uint subgroup_id;
 _GLF_struct_3 _f4;
 _GLF_struct_5 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(uvec4(1u), mat4x3(1.0), uvec4(1u), _GLF_struct_1(_GLF_struct_0(bvec3(true), 1.0, bvec2(true), mat3x2(1.0), uvec4(1u)), ivec3(1), ivec4(1)), gl_SubgroupID, _GLF_struct_3(_GLF_struct_2(mat2x4(1.0), mat3x4(1.0), mat3(1.0), vec2(1.0)), uvec4(1u), 1, 1), _GLF_struct_5(1, _GLF_struct_4(1.0, bvec2(true), ivec2(1), vec3(1.0), bvec3(true), bvec2(true), mat2x4(1.0)), uvec4(1u), mat2(1.0)));
uint subgroup_size = 16;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat3x4(1.0), gl_SubgroupInvocationID, _GLF_struct_8(_GLF_struct_7(uvec2(1u), uvec3(1u), mat2(1.0), mat2(1.0)), bvec2(true), uvec4(1u), mat3(1.0)), mat2x4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_6.subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_6.subgroup_id * subgroup_size + ((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
}
