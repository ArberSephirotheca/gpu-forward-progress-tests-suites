#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), false, false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), false, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), false, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) || false)), false, false)), false, false))))) || false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false, false))), false, false)), false, false)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(abs(vec2(1.0, 1.0)))).x > injectionSwitch.y)), false, false)), false || (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), false, false)), false, false)))), (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, tan(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(1461.6971, -369.660, -4.0, -8.9)) : mat2(injectionSwitch.y, tan(0.0), 0.0, 1.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), false || (bool(bvec4(_GLF_DEAD(false), true, true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) || false)))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! ((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))))) || false)) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, (false) || false), true), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY(true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id), max(true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id), true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))))), uint(uint((gl_WorkGroupID.x)))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u)), (false ? _GLF_FUZZED(166996u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (true ? _GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u))) : _GLF_FUZZED(subgroup_id))), uint(uint((gl_WorkGroupID.x)))) | 0u)))))) : _GLF_FUZZED(98962u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), uint(uint((gl_WorkGroupID.x)))) | 0u, (_GLF_IDENTITY((gl_WorkGroupID.x), uint(uint((gl_WorkGroupID.x)))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID.x), uint(uint((gl_WorkGroupID.x)))) | 0u), 0u ^ ((_GLF_IDENTITY((gl_WorkGroupID.x), uint(uint((gl_WorkGroupID.x)))) | 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), uint(uint((gl_WorkGroupID.x)))) | 0u, (_GLF_IDENTITY((gl_WorkGroupID.x), uint(uint(_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | (_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x)))) >> 0u)))) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))).x), uint(uint((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) >> uvec4(0u, 0u, 0u, 0u))), max(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) >> uvec4(0u, 0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) >> uvec4(0u, 0u, 0u, 0u))))))[2])).x)))) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), false), false, false)), true, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)))), false))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), false), false, false)), true, false)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.9)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-278.017)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-278.017)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-278.017)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, true && (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false))) || false)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false))), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-98.94)), vec2(_GLF_FUZZED(1.3), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true) && true, true && (((injectionSwitch.x > injectionSwitch.y) && true) && true))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u)) + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (1) ^ 0), 1))) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size))), 1u), max(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), 1u), uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7310.0469))))), injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), 1u))))) : _GLF_FUZZED(workgroup_size))), uint(uvec4(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-60.67)), float(injectionSwitch.y), bool(true)))) - 0.0)))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((149064u & 0u), ((149064u & 0u)) | 0u), 0u, 0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(atomicExchange(subgroup_size, workgroup_id))))), 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))) + ((subgroup_local_id + 1) % subgroup_size))))), ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u * (workgroup_base), max(_GLF_IDENTITY(1u * (workgroup_base), (true ? 1u * (workgroup_base) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(1u * (workgroup_base), _GLF_IDENTITY((1u * (workgroup_base)), ((1u * (workgroup_base))) ^ 0u) | (1u * (workgroup_base)))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(false, false || (false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), ~ (_GLF_IDENTITY(~ (max(buf[virtual_gid], buf[virtual_gid])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (max(buf[virtual_gid], buf[virtual_gid])) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), min(max(buf[virtual_gid], buf[virtual_gid]), max(buf[virtual_gid], buf[virtual_gid])))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : next_virtual_gid))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(114802u))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (_GLF_IDENTITY(~ (read_1), (~ (read_1)) ^ 0u)) | 0u))), read_1), (max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : uint(0u)))), uint(uvec4(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(0u)))), uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), bool(false))), injectionSwitch.y), (true ? _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y)), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((-1.5)), max(_GLF_FUZZED((-1.5)), _GLF_FUZZED((-1.5))))), bool(false))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), bool(false))), 0.0)), clamp(float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), bool(false))), 0.0)), float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((_GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, -1.5))))), bool(false))), 0.0)), float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY((-1.5), mix(float((-1.5)), float(_GLF_FUZZED(-38.20)), bool(false))))), bool(false))), 0.0))))), injectionSwitch.y) : _GLF_FUZZED(-1.9)))))), 1u, (1u | 1u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : max(_GLF_IDENTITY(read_1, ~ _GLF_IDENTITY((~ (read_1)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((~ (read_1))), (((~ (read_1)))) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), max((~ ((~ (read_1)))), _GLF_IDENTITY((~ _GLF_IDENTITY(((~ (read_1))), (((~ (read_1)))) >> (29062u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ _GLF_IDENTITY(((~ (read_1))), (((~ (read_1)))) >> (29062u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u))))), read_1)), uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u + (_GLF_FUZZED(virtual_gid))) : max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), clamp(_GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), ~ (~ (_GLF_IDENTITY(~ (~ (read_1)), 0u ^ (~ (~ (read_1)))))))) / 1u), ~ (~ (read_1)), ~ (~ (read_1))))) | (~ (~ (read_1)))), max(_GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), clamp(_GLF_IDENTITY(~ (~ (read_1)), (~ (~ (read_1))) / 1u), ~ _GLF_IDENTITY((~ (read_1)), ~ (~ ((~ (read_1))))), ~ (~ (read_1))))) | (~ (~ (read_1)))), _GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), clamp(_GLF_IDENTITY(~ (~ (read_1)), _GLF_IDENTITY((~ (~ (read_1))) / 1u, ((~ (~ (read_1))) / 1u) + 0u)), ~ (_GLF_IDENTITY(~ (read_1), clamp(~ (read_1), ~ (read_1), ~ (read_1)))), ~ (~ (read_1))))) | (~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(atomicMin(workgroup_size, virtual_gid))))))))))), read_1)), 0u, (1u & 1u), 1u))))) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) - 0)), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) - 0, clamp((~ (1)) - 0, (~ (1)) - 0, (~ (1)) - 0))), clamp(_GLF_IDENTITY(~ (1), (~ (1)) - 0), _GLF_IDENTITY(~ (1), (~ (1)) - 0), _GLF_IDENTITY(~ (1), (~ (1)) - 0)))))))), (true ? uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (_GLF_IDENTITY(~ (read_1), (~ (read_1)) ^ 0u)) | 0u))), read_1), (max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : uint(0u)))), uint(uvec4(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(0u)))), uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), bool(false))), injectionSwitch.y), (true ? _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y)), mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((-1.5)), max(_GLF_FUZZED((-1.5)), _GLF_FUZZED((-1.5))))), bool(false))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), bool(false))), 0.0)), clamp(float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-1.5))), bool(false))), 0.0)), float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((_GLF_IDENTITY(-1.5, clamp(-1.5, -1.5, -1.5))))), bool(false))), 0.0)), float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY((-1.5), mix(float((-1.5)), float(_GLF_FUZZED(-38.20)), bool(false))))), bool(false))), 0.0))))), injectionSwitch.y) : _GLF_FUZZED(-1.9)))))), 1u, (1u | 1u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : max(_GLF_IDENTITY(read_1, ~ _GLF_IDENTITY((~ (read_1)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((~ (read_1))), (((~ (read_1)))) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), max((~ ((~ (read_1)))), _GLF_IDENTITY((~ _GLF_IDENTITY(((~ (read_1))), (((~ (read_1)))) >> (29062u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ _GLF_IDENTITY(((~ (read_1))), (((~ (read_1)))) >> (29062u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u))))), read_1)), uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u + (_GLF_FUZZED(virtual_gid))) : max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), clamp(_GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), ~ (~ (_GLF_IDENTITY(~ (~ (read_1)), 0u ^ (~ (~ (read_1)))))))) / 1u), ~ (~ (read_1)), ~ (~ (read_1))))) | (~ (~ (read_1)))), max(_GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), clamp(_GLF_IDENTITY(~ (~ (read_1)), (~ (~ (read_1))) / 1u), ~ _GLF_IDENTITY((~ (read_1)), ~ (~ ((~ (read_1))))), ~ (~ (read_1))))) | (~ (~ (read_1)))), _GLF_IDENTITY(~ (~ (read_1)), (_GLF_IDENTITY(~ (~ (read_1)), clamp(_GLF_IDENTITY(~ (~ (read_1)), _GLF_IDENTITY((~ (~ (read_1))) / 1u, ((~ (~ (read_1))) / 1u) + 0u)), ~ (_GLF_IDENTITY(~ (read_1), clamp(~ (read_1), ~ (read_1), ~ (read_1)))), ~ (~ (read_1))))) | (~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(atomicMin(workgroup_size, virtual_gid))))))))))), read_1)), 0u, (1u & 1u), 1u))))) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) - 0)), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) - 0, clamp((~ (1)) - 0, (~ (1)) - 0, (~ (1)) - 0))), clamp(_GLF_IDENTITY(~ (1), (~ (1)) - 0), _GLF_IDENTITY(~ (1), (~ (1)) - 0), _GLF_IDENTITY(~ (1), (~ (1)) - 0)))))))) : _GLF_FUZZED(workgroup_id))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false))))) && true), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), false, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)))), true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((vec4(8.2, -6.8, -2.7, 9.0) + vec4(-2515.7920, -0.8, 99.85, -5149.7585)).t)), bool(false))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED((true ? 354.589 : 5.7)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(-4.9)), bvec2(true, false))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-2.0)), (false ? _GLF_FUZZED(faceforward(-5.2, -970.222, -7.4)) : float(_GLF_FUZZED(-2.0)))), bool(false))))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.0)), bool(false)))))))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(20.92), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(3.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bvec2(bool(bvec2((! (false)), false)), false))))), true, true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))), (false) && true), false))), false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), log(1.0), 1.0, 1.0, 1.0, exp(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y))), true, false, true))), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0, (false ? _GLF_FUZZED(-1277.0324) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0, (_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0) - 0.0)))), float(_GLF_FUZZED((2.9 - float(true)))), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(-0.1) : injectionSwitch.x)) > injectionSwitch.y))), false, true)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))) * (injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), 1.0)), vec2(_GLF_IDENTITY(vec2(vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), 1.0))), min(vec2(vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), 1.0))), vec2(vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), 1.0)))))))).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], clamp(injectionSwitch[_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) ^ 0))], injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))])), injectionSwitch[1])))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(932.113)), float(injectionSwitch[1]), bool(true))))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((-27.98 * 98.07))), vec2(_GLF_FUZZED(1062.9912), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 1.0, 1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(5.0)), bool(false))))), 1.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, log(1.0), sin(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), vec2(mat4x2(vec2(mat3x4(injectionSwitch, 0.0, 1.0, log(1.0), sin(0.0), 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(read_2, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec4(read_2, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(read_2, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec4(read_2, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (uint(read_1 + 1 == read_2)) << 0u) + 1, _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3327.3995), _GLF_FUZZED(-1084.7078)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.90) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.90) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.90) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-71.90) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && (false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))))), bool(bvec4(! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false)))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false)))))))))), ((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, false, true))))))))), true, false))))))))))) && true)) || false), false, false, false))))))), ((! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))))))) && true))))), true, true)))), bool(bvec3((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((false))))))), false || (! (! (false)))))))), true, _GLF_IDENTITY(true, (true) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true)))))), false))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, sqrt(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0), (true ? mat4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, sin(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, sqrt(0.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), min(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0) : _GLF_FUZZED(mat4(-754.267, -4.7, -5755.4013, -1.2, 8.0, 76.93, 582.178, -275.534, 794.853, -56.00, -0.6, 6.4, 4325.3278, 4089.7909, -55.98, 4800.8403)))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))), false, true, true))), true, false, true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true && (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false))))), true, true))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8876.0060), _GLF_FUZZED(float(191496u))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true)))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)), ! (! ((_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)))))))), true, true))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4414.3488)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))) > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5187.8441)), float(injectionSwitch.y), bool(true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false)))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)), false))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.5) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.5) : 0.0))) * 1.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-2.8, 1.5, _GLF_IDENTITY(3.6, max(3.6, _GLF_IDENTITY(_GLF_IDENTITY(3.6, (false ? _GLF_FUZZED(-20.64) : 3.6)), (_GLF_IDENTITY(3.6, (false ? _GLF_FUZZED(-20.64) : 3.6))) / 1.0))))) : 0.0)), 1.0, cos(0.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0)), 0.0, 0.0))), min(min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4084.4538) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 0.0, 0.0))), min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0)), 0.0, 0.0)))))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-854.366)), clamp((true ? 0.0 : _GLF_FUZZED(-854.366)), _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-854.366)), float(mat2((true ? 0.0 : _GLF_FUZZED(-854.366)), 0.0, 0.0, exp(0.0)))), (true ? 0.0 : _GLF_FUZZED(-854.366)))))), 0.0))))) * ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(float(false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(81.92) : float(_GLF_FUZZED(float(false))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(81.92) : float(_GLF_FUZZED(float(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(81.92) : float(_GLF_FUZZED(float(false))))))), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))))).y)), _GLF_IDENTITY(true, ! (! (true))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), ((false)) || false)))) || false), true)), true, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), true && (((false)))) || false) || false, ! (! ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))))))), _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, _GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false), true))) && true), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))) && true), false))))), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false, ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false) || false), true), true)))), true, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! (_GLF_IDENTITY((false), ! (! ((false)))) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) || false), true)), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, _GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false), true))) && true), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))) && true), false))))), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false, ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false) || false), true), true)))), true, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! (_GLF_IDENTITY((false), ! (! ((false)))) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) || false), true)), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, _GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false), true))) && true), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))) && true), false))))), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false, ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false) || false), true), true)))), true, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! (_GLF_IDENTITY((false), ! (! ((false)))) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) || false), true)), true, true, true)))), false || ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ! (! ((false) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), true, true, true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))), bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true, false))), true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false))), true && (false))))), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, abs(1.0), 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0)), mix(float(_GLF_FUZZED(-5.0)), float(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0))), bool(true))))) / 1.0))), mix(vec4((vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0)), mix(float(_GLF_FUZZED(-5.0)), float(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0))), bool(true))))) / 1.0))))[0], (vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0)), mix(float(_GLF_FUZZED(-5.0)), float(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0))), bool(true))))) / 1.0))))[1], (vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0)), mix(float(_GLF_FUZZED(-5.0)), float(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0))), bool(true))))) / 1.0))))[2], _GLF_FUZZED(15.96)), vec4(_GLF_FUZZED(3.9), _GLF_FUZZED(303.212), _GLF_FUZZED(534.201), (vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0)), mix(float(_GLF_FUZZED(-5.0)), float(float(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0)), ((false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, (0.0) + 0.0))) / 1.0), 0.0))), bool(true))))) / 1.0))))[3]), bvec4(false, false, false, true))), vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), min(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))))))), 0.0)), 0.0)), mix(float(_GLF_FUZZED(4.5)), float(float(mat3x2(injectionSwitch.y, abs(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.4))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0)), 0.0))), bool(true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(10.58) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(43.36) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(416.595) : injectionSwitch.y)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(43.36) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(416.595) : injectionSwitch.y)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2563.1998), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-847.584)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), true, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), true, false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), float(mat4((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), cos(0.0), 0.0, 1.0, 0.0))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
}
