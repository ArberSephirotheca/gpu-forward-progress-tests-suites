#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)), true && (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))))), bool(bvec2(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)), true && (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(0, 1, 0)))], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true))))) || false)) || false)), _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(bool(bvec4(false, false, true, true)), true, false, true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) + 0.0)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), 0.0, 1.0, 1.0)))))) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)) && true)))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || _GLF_IDENTITY((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec4(_GLF_IDENTITY(bool((false)), bool(bool(bool((false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(bvec2((_GLF_IDENTITY((false), bool(bool((false))))), true))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), false, false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(bool((_GLF_IDENTITY(false, ! (! (false))))), true, false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), true && (! (bool(bool(false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.7) : injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uint(num_workgroup)), 0u ^ (_GLF_IDENTITY(uint(uint(num_workgroup)), (uint(uint(num_workgroup))) | (uint(uint(num_workgroup))))))), ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = num_workgroup), (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = num_workgroup)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = _GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))), ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = num_workgroup))), (false ? _GLF_FUZZED(30866u) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = _GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))), ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = num_workgroup))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = _GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))), ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = num_workgroup))), (false ? _GLF_FUZZED(30866u) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = _GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))), ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.y = num_workgroup))))) : _GLF_FUZZED(num_workgroup)))) + _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)), min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x, min(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-0.8), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(5.7)), bvec2(true, false)))).x > injectionSwitch.y)) || (false)))) ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x, false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.z = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), min(clamp(workgroup_size, workgroup_size, workgroup_size), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), max(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(workgroup_size, workgroup_size, workgroup_size))))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), min(clamp(workgroup_size, workgroup_size, workgroup_size), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) | (workgroup_size))), max(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), workgroup_size), clamp(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (_GLF_IDENTITY(~ (clamp(workgroup_size, workgroup_size, workgroup_size)), 0u ^ (~ (clamp(workgroup_size, workgroup_size, workgroup_size))))))))))) << (1u ^ (1u & 1u)))), 0u | (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), min(clamp(workgroup_size, workgroup_size, workgroup_size), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), max(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(workgroup_size, workgroup_size, workgroup_size))))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), min(clamp(workgroup_size, workgroup_size, workgroup_size), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) | (workgroup_size))), max(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(_GLF_IDENTITY(clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), workgroup_size), clamp(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size))), _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), ~ (_GLF_IDENTITY(~ (clamp(workgroup_size, workgroup_size, workgroup_size)), 0u ^ (~ (clamp(workgroup_size, workgroup_size, workgroup_size))))))))))) << (1u ^ (1u & 1u)))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), uvec3(uvec4(_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size))), 1u))), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size)), (clamp(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size))) | (clamp(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size)))))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size)), (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), _GLF_IDENTITY(clamp(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size)), (clamp(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size))) | (clamp(~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size), ~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size)))))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u), 0u))) << uvec3(0u, 0u, 0u)).z * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base), uvec4(0u, 0u, 0u, 0u) + (_GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base))) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).w + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))) | 0u) * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))) ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base) | uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))))))) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base)).w + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, min((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (subgroup_id))) | 0u, ~ (~ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)))))) * subgroup_size) / 1u) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[3], (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[3])))).z;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z) >> 0u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z) >> 0u) + 1, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z) >> 0u) + 1)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z)))))) >> 0u) + 1, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, min(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base)).z) >> _GLF_IDENTITY(0u, (0u) + 0u)) + 1))) % subgroup_size), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))) | (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base)), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u)).z + 1) % subgroup_size)) / 1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | 0u)) - 0u)) | (137801u))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size), (clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size)) >> 0u)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + _GLF_IDENTITY(0u, (0u) + 0u)) * subgroup_size))) | 0u) + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (137801u))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % subgroup_size)) / 1u, (false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (137801u))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (false ? _GLF_FUZZED(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size[1]) : _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)) + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)))) % subgroup_size)) / 1u) << (129803u & 0u))) >> 0u, ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (_GLF_IDENTITY(137801u, uint(_GLF_IDENTITY(uvec2(137801u, (uint(-19763) & 0u)), clamp(uvec2(137801u, (uint(-19763) & 0u)), uvec2(137801u, (uint(-19763) & 0u)), uvec2(137801u, (uint(-19763) & 0u))))))))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[3]))) | uvec4(0u, 0u, 0u, 0u)).z + _GLF_IDENTITY(1, min(1, 1))), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % subgroup_size)) / 1u, (false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (137801u))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) / 1u) << (_GLF_IDENTITY(129803u, (129803u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) & 0u))) >> 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (_GLF_IDENTITY(137801u, uint(_GLF_IDENTITY(uvec2(137801u, (uint(-19763) & 0u)), clamp(uvec2(137801u, (uint(-19763) & 0u)), uvec2(137801u, (uint(-19763) & 0u)), uvec2(137801u, (uint(-19763) & 0u))))))))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[3]))) | uvec4(0u, 0u, 0u, 0u)).z + _GLF_IDENTITY(1, min(1, 1))), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % subgroup_size)) / 1u, (false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (137801u))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) / 1u) << (_GLF_IDENTITY(129803u, (129803u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) & 0u))) >> 0u), (false ? _GLF_FUZZED(workgroup_size) : ((_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (_GLF_IDENTITY(137801u, uint(_GLF_IDENTITY(uvec2(137801u, (uint(-19763) & 0u)), clamp(uvec2(137801u, (uint(-19763) & 0u)), uvec2(137801u, (uint(-19763) & 0u)), uvec2(137801u, (uint(-19763) & 0u))))))))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base[3]))) | uvec4(0u, 0u, 0u, 0u)).z + _GLF_IDENTITY(1, min(1, 1))), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % subgroup_size)) / 1u, (false ? _GLF_FUZZED(atomicExchange(workgroup_size, _GLF_IDENTITY(137801u, (_GLF_IDENTITY(137801u, (137801u) | (137801u))) * 1u))) : (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), max((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.z + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) / 1u) << (_GLF_IDENTITY(129803u, (129803u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) & 0u))) >> 0u)))) - 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.x = next_virtual_gid;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.x = read_1;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size, (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size) ^ uvec3(0u, 0u, 0u)).x + 1), (uint(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size, (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size) ^ uvec3(0u, 0u, 0u)).x + 1)) / 1u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(455.137)), vec2(_GLF_FUZZED(-1.7), (injectionSwitch)[1]), bvec2(false, true))), log(_GLF_IDENTITY(1.0, (1.0) - 0.0)), log(1.0), 0.0, 0.0, log(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0))), mix(vec2(_GLF_FUZZED(2730.8499), _GLF_FUZZED(-29.33)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 1.0, 0.0, 1.0))).y, float(mat4x2(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0))))) || false)) ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.6)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) : _GLF_FUZZED(round(21.62))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(round(21.62))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(round(21.62)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), injectionSwitch.y)) * 1.0))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ((false)) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ((false)) && true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)))), true, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)))), true, false)), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)))), true, false)), true), false)))))))).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) >> 0)) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), _GLF_IDENTITY(min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x)), 0.0 + (_GLF_IDENTITY(min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x)), float(_GLF_IDENTITY(mat4x2(min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x2(3636.8975, -1841.8700, -631.535, -6.1, 7.9, -4486.1946, 60.72, -74.91)) : mat4x2(min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))), 1.0), vec2(mat2x3(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(3.3), clamp(_GLF_FUZZED(3.3), _GLF_FUZZED(3.3), _GLF_IDENTITY(_GLF_FUZZED(3.3), (_GLF_FUZZED(3.3)) - 0.0)))), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x))), 1.0), 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), bvec2(true, false))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.y = read_2, ~ (~ (GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.y = read_2)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_14next_virtual_gidnum_workgroupsubgroup_local_idworkgroup_base.x], _GLF_IDENTITY(uint(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) - 0) == GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.y), (_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) - 0) == GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.y), (true ? uint(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) - 0) == GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.y) : _GLF_FUZZED(virtual_gid))), max(uint(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) - 0) == GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.y), uint(GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1)))))) - 0) == GLF_merged3_0_1_6_1_1_6_2_1_14read_1read_2workgroup_size.y)))) << 0u) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
