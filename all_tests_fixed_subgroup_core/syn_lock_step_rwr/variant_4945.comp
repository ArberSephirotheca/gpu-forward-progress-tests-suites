#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true))))))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), false || ((false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)) : _GLF_FUZZED(-5626.4226))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)) : _GLF_FUZZED(-5626.4226)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6691.7094)), bool(false))), injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), false, false)))))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).y)) && true)))), false, false)))))) && true))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))), float(_GLF_FUZZED(-50.25)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, false, true, false))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, false, true, false))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))))))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, false, true, false))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false))))))))) || false)))), false))), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp(_GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_FUZZED(-7.6))), (injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0), clamp(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0))) - tan(0.0))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, length(vec2(0.0, 0.0))), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))) > injectionSwitch.y))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(tanh(vec4(611.071, -1.2, 65.42, 5.8).s)) : injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(39.82)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-953.008)), bool(false))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8237.8970)))), mat3(mat3(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0)), 1.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat3(mat3(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0))))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), mat3(mat3(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat4(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 0.0))), mat3(mat3x4(mat3(mat4(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 0.0))))))), mat3(mat3(mat3(injectionSwitch.y, 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))))), true))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)) || false)), true, true, false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(169.816)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true && (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, ! (! (true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), ! (! (bool(bvec4((! (false)), false, true, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), true, false, false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), true, false, false)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false)))))))), false, true, true)))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))))))), ! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))), _GLF_IDENTITY(bool(bvec2(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), false)), false || (bool(bvec2(! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false))))))))))))), true && (_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))) || false), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false))))))))))))), ! (! ((! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false)))))))))))))))))), false))))))))), bool(bvec4(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true && ((_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(! (false), true)), false, false, true)), ! (! (bool(bvec4(bool(bvec2(! (false), true)), false, false, true)))))))), ((! (false))) || false))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))) || false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))))))))))), true, true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat4((injectionSwitch.y) - 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sqrt(injectionSwitch)) : injectionSwitch)).y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), 1.0 * (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), float(_GLF_IDENTITY(mat4x3(1.0 * (injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(-7098.9526, -34.10, 6.9, -8.8, 7726.8724, 1.4, 199.684, -26.64, 3.5, -9.4, 75.80, 1297.9538)) : mat4x3(1.0 * (injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), 1.0, 1.0)))))))))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_FUZZED(-83.13)))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8989.2727), _GLF_FUZZED(-705.130)), bvec2(false, false))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8989.2727), _GLF_FUZZED(-705.130)), bvec2(false, false))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true, true, false))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true, true, false))))))))), ! (! (injectionSwitch.x < injectionSwitch.y))), false))))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false) && true), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(32.27)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(0.8, 3710.5984)) : injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true)))))))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)), bool(bool(bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))))), false, false, true)))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))) | (workgroup_size)), 0u ^ (workgroup_size))) << 0u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ (_GLF_IDENTITY(0u, ~ (~ (0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, min(4u, 4u)), 4u, _GLF_IDENTITY(_GLF_IDENTITY(4u, max(4u, 4u)), ~ (~ (_GLF_IDENTITY(4u, max(4u, 4u)))))))), (uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, min(4u, 4u)), 4u, _GLF_IDENTITY(4u, max(4u, 4u)))))) - 0u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(vec2(6005.6826, 0.4).x), _GLF_FUZZED(-7877.1833)), bvec2(false, false))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(packUnorm4x8(_GLF_IDENTITY(vec4(63.61, -4537.0575, 7.1, _GLF_IDENTITY(-0.6, _GLF_ZERO(0.0, injectionSwitch.x) + (-0.6))), (_GLF_IDENTITY(vec4(63.61, -4537.0575, 7.1, -0.6), clamp(vec4(63.61, -4537.0575, 7.1, -0.6), vec4(63.61, -4537.0575, 7.1, -0.6), vec4(63.61, -4537.0575, 7.1, -0.6)))) * vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(intBitsToFloat(65943)) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(1.0, 1.0, 1.0))) / 1.0))), 1.0)))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) - 0u) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (false ? _GLF_FUZZED(clamp(usubBorrow(subgroup_size, subgroup_id, workgroup_id), workgroup_size, atomicExchange(subgroup_local_id, workgroup_base))) : _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id), 0u | (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id), max((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id), uint(uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id), 1u))))))))) / 1u)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(50.38, 7091.1564, -8.9, -5584.3151))) : (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (false ? _GLF_FUZZED(clamp(usubBorrow(subgroup_size, subgroup_id, workgroup_id), workgroup_size, atomicExchange(subgroup_local_id, workgroup_base))) : (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id))) / 1u)))) ^ 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), int(ivec3(_GLF_IDENTITY(1, (1) * 1), 0, 1)))))) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(90524) : 64))), (_GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(90524) : 64))), ((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(90524) : 64)))) ^ 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(90524) : 64))), ~ (~ ((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(90524) : 64)))))))) << 0), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2895.0736)), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(vec4(injectionSwitch, 0.0, 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)))).y) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]), (((vec2(0.0, 0.0))[1])) / _GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(vec3(-935.901, 5.8, 17.98))) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(-42.45, -8678.8036)) : mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))))))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], _GLF_FUZZED(-8455.0411)), vec2(_GLF_FUZZED(8.7), _GLF_IDENTITY(((vec2(0.0, 0.0)))[1], mix(float(_GLF_FUZZED(2095.2905)), float(((vec2(0.0, 0.0)))[1]), bool(true)))), bvec2(false, true)))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(1.0))).y) / round(length(normalize(vec2(1.0, 1.0)))))) / 1.0) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(vec4(injectionSwitch, 0.0, 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)))).y) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]), (((vec2(0.0, 0.0))[1])) / _GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(vec3(-935.901, 5.8, 17.98))) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(-42.45, -8678.8036)) : mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))))))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], _GLF_FUZZED(-8455.0411)), vec2(_GLF_FUZZED(8.7), _GLF_IDENTITY(((vec2(0.0, 0.0)))[1], mix(float(_GLF_FUZZED(2095.2905)), float(((vec2(0.0, 0.0)))[1]), bool(true)))), bvec2(false, true)))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(1.0))).y) / round(length(normalize(vec2(1.0, 1.0)))))) / 1.0) / 1.0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(vec4(injectionSwitch, 0.0, 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)))).y) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch))), clamp(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch))))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]), (((vec2(0.0, 0.0))[1])) / _GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(vec3(-935.901, 5.8, 17.98))) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(-42.45, -8678.8036)) : mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], min((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[0])), _GLF_IDENTITY((vec2(0.0, 0.0))[1], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]) * 1.0, min(((vec2(0.0, 0.0))[1]) * 1.0, _GLF_IDENTITY(((vec2(0.0, 0.0))[1]) * 1.0, max(((vec2(0.0, 0.0))[1]) * 1.0, ((vec2(0.0, 0.0))[1]) * 1.0)))))), bvec2(true, true))))))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], _GLF_FUZZED(-8455.0411)), vec2(_GLF_FUZZED(8.7), _GLF_IDENTITY(((vec2(0.0, 0.0)))[1], mix(float(_GLF_FUZZED(2095.2905)), float(((vec2(0.0, 0.0)))[1]), bool(true)))), bvec2(false, true)))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))).y) / round(length(normalize(vec2(1.0, 1.0)))))) / 1.0) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)) : _GLF_FUZZED(-96.68))) : _GLF_FUZZED(8712.7019)))), min((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(vec4(injectionSwitch, 0.0, 1.0))))), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) / vec2(1.0, 1.0))))).y) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[_GLF_IDENTITY(1, max(1, 1))]) * 1.0)), bvec2(true, true))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]), (((vec2(0.0, 0.0))[1])) / _GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(vec3(-935.901, 5.8, 17.98))) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-68.73)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_FUZZED(vec2(-42.45, -8678.8036)) : mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))))))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-745.648, float(_GLF_IDENTITY(mat3(-745.648, 0.0, 0.0, 1.0, 0.0, log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0)), mat3(mat4(mat3(-745.648, 0.0, 0.0, 1.0, 0.0, log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0)))))))), _GLF_FUZZED(-8683.0211)), _GLF_IDENTITY(vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], _GLF_FUZZED(-8455.0411)), vec2(_GLF_FUZZED(8.7), _GLF_IDENTITY(((vec2(0.0, 0.0)))[1], mix(float(_GLF_FUZZED(2095.2905)), float(((vec2(0.0, 0.0)))[1]), bool(true)))), bvec2(false, true)))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], _GLF_FUZZED(-8455.0411)), vec2(_GLF_FUZZED(8.7), _GLF_IDENTITY(((vec2(0.0, 0.0)))[1], mix(float(_GLF_FUZZED(2095.2905)), float(((vec2(0.0, 0.0)))[1]), bool(true)))), bvec2(false, true)))[1], ((vec2(0.0, 0.0))[1]) * 1.0)))), bvec2(true, true))) + (injectionSwitch)))) * mat2(1.0))).y) / round(length(normalize(vec2(1.0, 1.0)))))) / 1.0) / 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(vec4(injectionSwitch, 0.0, 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)))).y) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), 0.0))[0], _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0))))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]), (((vec2(0.0, 0.0))[1])) / _GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]), (((vec2(0.0, 0.0))[1])) / _GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], _GLF_IDENTITY(((vec2(0.0, 0.0))[1]), (((vec2(0.0, 0.0))[1])) / _GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), bvec2(true, true))))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-935.901, 5.8, 17.98))), (_GLF_FUZZED(vec2(vec3(-935.901, 5.8, 17.98)))) - vec2(0.0, 0.0)) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0)))))))[1], ((vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))[1]) * 1.0)), bvec2(true, true)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-42.45, -8678.8036)), max(_GLF_FUZZED(vec2(-42.45, -8678.8036)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-42.45, -8678.8036)), (_GLF_FUZZED(vec2(-42.45, -8678.8036))) - vec2(0.0, 0.0)))) : mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))))))) + (injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-745.648), _GLF_FUZZED(-8683.0211)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], _GLF_FUZZED(-8455.0411)), vec2(_GLF_FUZZED(8.7), _GLF_IDENTITY(((vec2(0.0, 0.0)))[1], mix(float(_GLF_FUZZED(2095.2905)), float(((vec2(0.0, 0.0)))[1]), bool(true)))), bvec2(false, true)))[1], ((vec2(0.0, 0.0))[1]) * 1.0)), bvec2(true, true))) + (injectionSwitch)))) * mat2(1.0))).y) / round(length(normalize(vec2(1.0, 1.0)))))) / 1.0) / 1.0)))) + 0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(subgroup_size))) : read_1 + 1))), 4, 64, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) / 1), 4)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), mix(vec2((vec2(injectionSwitch.x, 0.0))[0], (vec2(injectionSwitch.x, 0.0))[1]), vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(459.424)), bvec2(false, false)))) + vec2(0.0, 0.0)))), (injectionSwitch.x) - 0.0))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(79.19))), min(_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-524.324, -7735.0892, 14.41, -26.29, 3.9, 6.6, -3041.5541, -2.9, -638.546, 1024.4356, 7219.0518, 44.32)) : _GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-1.3, -3.4, 34.02, -4953.9984, -3.8, 564.616, -1.2, -52.16, -1.6, -123.590, 37.38, -7.9)) : mat4x3(0.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))))) > injectionSwitch.y), false, false)), true && (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y), false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, log(1.0), 0.0), mix(vec3(_GLF_FUZZED(-91.46), (vec3(injectionSwitch.y, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752)), min(_GLF_IDENTITY(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752)), mix(float(_GLF_FUZZED(5593.4950)), float(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752))), bool(true))), _GLF_IDENTITY(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752)), (true ? log(1.0) : _GLF_FUZZED(floor(3041.4752))) - 0.0))))), 0.0))[1], (vec3(injectionSwitch.y, log(1.0), 0.0))[2]), vec3((vec3(injectionSwitch.y, log(1.0), 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-2.5, max(-2.5, -2.5))), _GLF_FUZZED(-469.626)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, true)))))))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, false))), (vec3(injectionSwitch.y, _GLF_IDENTITY(log(1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? log(1.0) : _GLF_FUZZED(-522.205))), 0.0)) * mat3(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / sqrt(vec2(1.0, 1.0))).y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, log(1.0), 0.0), mix(vec3(_GLF_FUZZED(-91.46), (vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))))))))).y, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))))) / 1.0) : _GLF_FUZZED(floor(3041.4752)), min(_GLF_IDENTITY(_GLF_IDENTITY(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752)), mix(float(_GLF_FUZZED(5593.4950)), float(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752))), bool(true))), mix(float(_GLF_FUZZED(vec2(2379.7209, -408.521).y)), float(_GLF_IDENTITY(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752)), mix(float(_GLF_FUZZED(5593.4950)), float(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752))), bool(true)))), bool(true))), _GLF_IDENTITY(true ? log(1.0) : _GLF_FUZZED(floor(3041.4752)), (true ? log(1.0) : _GLF_FUZZED(floor(3041.4752))) - 0.0))))), 0.0))[1], (vec3(injectionSwitch.y, log(1.0), 0.0))[2]), vec3((vec3(injectionSwitch.y, log(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))))[0], _GLF_FUZZED(_GLF_IDENTITY(-2.5, max(-2.5, _GLF_IDENTITY(-2.5, clamp(_GLF_IDENTITY(-2.5, (false ? _GLF_FUZZED(-42.41) : -2.5)), _GLF_IDENTITY(-2.5, mix(float(_GLF_FUZZED(77.37)), float(-2.5), bool(true))), -2.5))))), _GLF_FUZZED(-469.626)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false))), ! (! (! (bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false))))))))), true && (! (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false))), ! (! (! (bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, true)))))))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, false))), (vec3(injectionSwitch.y, _GLF_IDENTITY(log(1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? log(1.0) : _GLF_FUZZED(-522.205))), 0.0)) * mat3(1.0))))) * 1.0), float(vec3(injectionSwitch.y, 0.0, 0.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY(_GLF_IDENTITY((read_2), ((read_2)) - 0u), ((read_2)) ^ 0u), (read_2))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(num_workgroup) : read_2)), _GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, min(read_2, read_2)), 1u)))))), ((read_2)) - 0u), ((read_2)) ^ 0u), (read_2))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u) + 0u))) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(3.0, 3.0, 3.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, 3.0), mix(vec4(_GLF_FUZZED(378.685), (vec4(5.3, 1455.1771, 22.63, 3.0))[1], _GLF_FUZZED(80.19), (vec4(5.3, 1455.1771, 22.63, 3.0))[3]), vec4((vec4(5.3, 1455.1771, 22.63, 3.0))[0], _GLF_FUZZED(4829.4144), (vec4(5.3, 1455.1771, 22.63, 3.0))[2], _GLF_FUZZED(4938.1897)), bvec4(true, false, true, false))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0)))))))), mix(float(_GLF_FUZZED(4.5)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0)))))))), min(max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0)))))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y)), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(distance(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, (-695.617) * 1.0), -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(_GLF_IDENTITY(5.3, clamp(5.3, 5.3, 5.3)), 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), 0.0 + (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(distance(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, (-695.617) * 1.0), -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(_GLF_IDENTITY(5.3, clamp(5.3, 5.3, 5.3)), 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), 0.0 + (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(_GLF_IDENTITY(vec4(3.3, -496.060, -695.617, -4098.5816), mix(vec4(_GLF_FUZZED(-74.45), (vec4(3.3, -496.060, -695.617, -4098.5816))[1], _GLF_FUZZED((+ -8268.8660)), (vec4(3.3, _GLF_IDENTITY(-496.060, _GLF_ONE(1.0, injectionSwitch.y) * (-496.060)), -695.617, -4098.5816))[3]), vec4((vec4(3.3, -496.060, -695.617, -4098.5816))[0], _GLF_FUZZED(9.1), (vec4(3.3, -496.060, -695.617, -4098.5816))[2], _GLF_FUZZED(468.458)), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)), (float(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))) - 0.0)), injectionSwitch.x)) : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), min(_GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), (false ? _GLF_FUZZED(vec4(55.24, 44.74, -80.45, 6.3)) : vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))))))))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(distance(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, (-695.617) * 1.0), -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, 3.0), max(vec4(5.3, 1455.1771, 22.63, 3.0), vec4(5.3, 1455.1771, 22.63, 3.0))))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(_GLF_IDENTITY(5.3, clamp(5.3, 5.3, 5.3)), 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-674.940) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, max(_GLF_IDENTITY(-695.617, clamp(-695.617, -695.617, -695.617)), -695.617)), -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), 0.0 + (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(_GLF_IDENTITY(3.3, (3.3) * 1.0), -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, 3.0), min(vec4(5.3, 1455.1771, 22.63, 3.0), vec4(5.3, 1455.1771, 22.63, 3.0))))))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), mix(float(_GLF_FUZZED(-4894.3726)), float(_GLF_IDENTITY(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), (_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0)))) - 0.0)), bool(true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), determinant(mat4(sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0))))), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(_GLF_IDENTITY(vec4(3.3, -496.060, -695.617, -4098.5816), mix(vec4(_GLF_FUZZED(-74.45), (vec4(3.3, -496.060, -695.617, -4098.5816))[1], _GLF_FUZZED((+ -8268.8660)), (vec4(3.3, -496.060, -695.617, -4098.5816))[3]), vec4((vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, _GLF_IDENTITY(float(vec2(-695.617, 0.0)), min(float(vec2(-695.617, 0.0)), float(vec2(-695.617, 0.0))))), -4098.5816))[0], _GLF_FUZZED(_GLF_IDENTITY(9.1, (_GLF_IDENTITY(9.1, mix(float(9.1), float(_GLF_FUZZED(22.70)), bool(false)))) / abs(1.0))), (vec4(3.3, -496.060, -695.617, -4098.5816))[2], _GLF_FUZZED(468.458)), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)), (float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(3.0)), bool(false))) : _GLF_FUZZED(-2691.4006))), 1.0, 1.0, 1.0))) - 0.0)), injectionSwitch.x)) : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))) && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), min(_GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), (false ? _GLF_FUZZED(vec4(55.24, 44.74, -80.45, 6.3)) : vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (_GLF_IDENTITY(3.0, min(3.0, _GLF_IDENTITY(3.0, min(3.0, 3.0))))) + 0.0), 3.0, 3.0))))))))))))) > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(distance(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, (-695.617) * 1.0), -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(_GLF_IDENTITY(5.3, clamp(5.3, 5.3, 5.3)), 1455.1771, _GLF_IDENTITY(22.63, 0.0 + (22.63)), 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-539.937), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((7383.8989))), bvec2(true, false))).x, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))), (false ? _GLF_FUZZED(length(vec3(-1546.2166, 2.5, 1.8))) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), 0.0 + (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), (_GLF_IDENTITY(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), float(mat2x3(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), log(1.0), 0.0, 1.0, cos(0.0), 0.0)))) + 0.0))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, _GLF_IDENTITY(-496.060, max(-496.060, -496.060)), -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), mix(float(_GLF_FUZZED(float((bvec2(false, true) != bvec2(true, false))))), float(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, _GLF_IDENTITY(-496.060, max(-496.060, -496.060)), -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), mix(float(_GLF_FUZZED(-8.1)), float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, _GLF_IDENTITY(-496.060, max(-496.060, -496.060)), -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0)))), bool(true)))), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) ? injectionSwitch.x : _GLF_FUZZED(distance(_GLF_IDENTITY(vec4(3.3, -496.060, -695.617, -4098.5816), mix(vec4(_GLF_FUZZED(-74.45), (vec4(3.3, -496.060, -695.617, -4098.5816))[1], _GLF_FUZZED((+ -8268.8660)), (vec4(3.3, -496.060, -695.617, -4098.5816))[3]), vec4(_GLF_IDENTITY((vec4(3.3, -496.060, -695.617, -4098.5816))[0], mix(float(_GLF_FUZZED((- 7.0))), float(_GLF_IDENTITY((vec4(3.3, -496.060, -695.617, -4098.5816))[0], float(vec3((vec4(3.3, -496.060, -695.617, -4098.5816))[0], 0.0, 1.0)))), bool(true))), _GLF_FUZZED(9.1), (vec4(3.3, -496.060, -695.617, -4098.5816))[2], _GLF_FUZZED(468.458)), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)), (float(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))) - 0.0)), injectionSwitch.x)) : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), min(_GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), (false ? _GLF_FUZZED(vec4(55.24, 44.74, -80.45, 6.3)) : vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), (false ? _GLF_FUZZED(-6.7) : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), min(_GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), (false ? _GLF_FUZZED(vec4(55.24, 44.74, -80.45, 6.3)) : vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(_GLF_IDENTITY(3.0, float(mat4(_GLF_IDENTITY(3.0, min(3.0, 3.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, sin(0.0), 0.0)), 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0))), clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0)))))))))))))) / 1.0) > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(distance(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, (-695.617) * 1.0), -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(_GLF_IDENTITY(5.3, clamp(5.3, 5.3, 5.3)), 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, 3.0), clamp(vec4(5.3, 1455.1771, 22.63, 3.0), vec4(5.3, 1455.1771, 22.63, 3.0), vec4(5.3, 1455.1771, 22.63, 3.0))))), 0.0 + (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8702.0529)), bool(false))))) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), min(_GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))), _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), transpose(transpose(mat4x3(injectionSwitch, 1.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(_GLF_IDENTITY(vec4(3.3, -496.060, -695.617, -4098.5816), clamp(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(3.3, -496.060, -695.617, -4098.5816), (vec4(3.3, -496.060, -695.617, -4098.5816)) * mat4(1.0)), _GLF_IDENTITY(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(mat4(1.0) * (vec4(3.3, -496.060, -695.617, -4098.5816)), max(mat4(1.0) * (vec4(3.3, -496.060, -695.617, -4098.5816)), mat4(1.0) * (vec4(3.3, -496.060, -695.617, -4098.5816))))))), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, mix(float(_GLF_FUZZED(9.8)), float(-695.617), bool(true))), -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(_GLF_IDENTITY(vec4(3.3, -496.060, _GLF_IDENTITY(-695.617, mix(float(-695.617), float(_GLF_FUZZED(-2.8)), bool(false))), -4098.5816), mix(vec4(_GLF_FUZZED(-74.45), (vec4(3.3, -496.060, -695.617, -4098.5816))[1], _GLF_FUZZED((+ -8268.8660)), (vec4(3.3, -496.060, -695.617, -4098.5816))[3]), vec4((vec4(3.3, -496.060, -695.617, -4098.5816))[0], _GLF_FUZZED(9.1), (_GLF_IDENTITY(vec4(3.3, -496.060, -695.617, -4098.5816), mat4(1.0) * (vec4(3.3, -496.060, -695.617, -4098.5816))))[2], _GLF_FUZZED(468.458)), bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec4(5.3, 1455.1771, 22.63, 3.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-82.37)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(mat2x4(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0), mat2x4(mat3x4(mat2x4(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 1.0, 1.0, 1.0)), (float(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))) - 0.0)), injectionSwitch.x)) : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, _GLF_IDENTITY(22.63, (false ? _GLF_FUZZED(-6487.1162) : 22.63)), 3.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - tan(vec2(0.0, 0.0))).x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(_GLF_IDENTITY(3.3, float(vec3(3.3, 0.0, cos(0.0)))), -496.060, -695.617, -4098.5816), vec4(5.3, 1455.1771, 22.63, 3.0))))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), min(_GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), (false ? _GLF_FUZZED(vec4(55.24, 44.74, -80.45, 6.3)) : vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0)))))))))), (1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(3.3, -496.060, -695.617, -4098.5816), _GLF_IDENTITY(_GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), max(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))), min(_GLF_IDENTITY(vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))), (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(55.24, min(_GLF_IDENTITY(55.24, min(55.24, 55.24)), 55.24)), 44.74, -80.45, 6.3)) : vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3.0, min(3.0, 3.0)), (3.0) + 0.0), 3.0, 3.0))))), vec4(5.3, 1455.1771, 22.63, _GLF_IDENTITY(3.0, clamp(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0, 3.0))))))))))) * 1.0)))) > injectionSwitch.y))))))) || false), true, false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), (((false))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
