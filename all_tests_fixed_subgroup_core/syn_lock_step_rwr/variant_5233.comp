#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uvec4 _f0;
 vec2 _f1;
 mat2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 uvec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 int _f1;
 uvec3 _f2;
 mat3x2 _f3;
 int _f4;
 _GLF_struct_11 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_8 {
 int _f0;
 float _f1;
 bvec3 _f2;
 uvec4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_7 {
 bool _f0;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 mat3 _f1;
 uvec3 _f2;
 bvec4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 float _f3;
 mat2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 mat2 _f1;
 mat2x3 _f2;
 bvec2 _f3;
 bvec3 _f4;
 float _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 vec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 vec4 _f1;
 mat4 _f2;
 uvec4 _f3;
 mat2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 ivec4 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_9 _f4;
 uint num_workgroup;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(43609)))), (true ? ivec4(1) : _GLF_FUZZED(ivec4(-14241, -95275, _GLF_IDENTITY(19435, (_GLF_IDENTITY(19435, max(19435, 19435))) | 0), -25355)))), ivec4(0, 0, 0, 0) + (ivec4(1)))) / ivec4(1, 1, 1, 1)), _GLF_struct_2(_GLF_struct_0(mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-1.4) : 1.0, min(false ? _GLF_FUZZED(-1.4) : 1.0, false ? _GLF_FUZZED(-1.4) : 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-1.4) : 1.0), min((false ? _GLF_FUZZED(-1.4) : 1.0), (false ? _GLF_FUZZED(-1.4) : 1.0))) * 1.0)))), mat2(1.0)), _GLF_struct_1(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0), uvec4(1u), mat2(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0)))) + (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), ivec3(0, _GLF_IDENTITY(0, min(0, 0)), 0) | (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0)))) + (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))))), ivec3(1), ivec3(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | ((~ (1))))))), ivec3(ivec3(clamp(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0), min(_GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) | (ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) << ivec3(0, _GLF_IDENTITY(0, (0) | 0), 0)))), ~ (~ (ivec3(0, 0, 0)))) + (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))), ivec3(ivec4(_GLF_IDENTITY(ivec3(0, 0, 0), ~ (_GLF_IDENTITY(~ (ivec3(0, 0, 0)), (_GLF_IDENTITY(~ (ivec3(0, 0, 0)), (_GLF_IDENTITY(~ (ivec3(0, 0, 0)), (~ (ivec3(0, 0, 0))) ^ ivec3(0, 0, 0))) - ivec3(0, 0, 0))) | (~ (ivec3(0, 0, 0)))))) + (_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))) | (ivec3(1)))), 0)))), ivec3(1), ivec3(1))))))), ivec4(1), mat2x3(1.0)), _GLF_struct_4(_GLF_struct_3(vec4(1.0), mat2(1.0), mat2x3(1.0), bvec2(true), bvec3(true), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-14.89, (-14.89) + 0.0)), clamp(_GLF_FUZZED(_GLF_IDENTITY(-14.89, (-14.89) + 0.0)), _GLF_FUZZED(_GLF_IDENTITY(-14.89, (-14.89) + 0.0)), _GLF_FUZZED(_GLF_IDENTITY(-14.89, (-14.89) + 0.0)))) : 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))))), 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(1909.7158), _GLF_FUZZED(-3881.2500)), _GLF_IDENTITY(vec2((vec2(1.0))[0], (vec2(1.0))[1]), mat2(1.0) * (vec2((vec2(1.0))[0], (vec2(1.0))[1]))), bvec2(true, true))), mat4x3(1.0)), _GLF_struct_9(_GLF_struct_5(ivec3(1), mat4x2(1.0), uvec3(1u), 1.0, mat2(1.0), uvec4(1u)), _GLF_struct_6(uvec2(1u), mat3(1.0), uvec3(1u), bvec4(true), ivec4(1)), _GLF_struct_7(true), _GLF_struct_8(1, 1.0, bvec3(true), uvec4(1u), _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)))) >> ivec4(0, 0, 0, 0)))), ivec4(1))))), gl_NumWorkGroups.x, _GLF_struct_12(_GLF_struct_10(uvec4(1u), uvec3(1u), mat2x4(1.0)), 1, uvec3(1u), mat3x2(1.0), 1, _GLF_struct_11(uvec4(_GLF_IDENTITY(1u, (1u) - 0u)), vec2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(569.949) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(569.949) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(569.949) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(569.949) : 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.0) : 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(float(mat3x4(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat3x4(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat3x4(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), abs(0.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x4(clamp(1.0, 1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(_GLF_FUZZED((+ -897.477))), float(_GLF_IDENTITY(round(length(normalize(1.0))), float(mat2(round(length(normalize(1.0))), 0.0, 0.0, 1.0)))), bool(true))), round(length(normalize(1.0))))), 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-0.3, 9.0, -4014.1947, 5133.3149, 327.275, 5965.2018, 6.7, 1829.5188, 23.79, -1.2, 485.010, 734.661, 8.3, -3.0, 8.1, 8319.3665)) : mat4(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x4(clamp(1.0, 1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, length(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6435.5790)))))), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0))))))))))), 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)), mat2x4(1.0)), mat4x3(1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.27 * 2.7)), (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)))) >> 0), 1, 0))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)))) >> 0), 1, 0)))))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), bvec2(true, false))).y)))))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.27 * 2.7)), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)))) >> 0), 1, 0)))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), bvec2(true, false))).y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat3x2(-9.6, -5.1, _GLF_IDENTITY(-6.3, clamp(-6.3, -6.3, _GLF_IDENTITY(-6.3, (-6.3) / cos(0.0)))), 7803.7203, -650.431, _GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED((- -14.29))), float(-9.0), bool(true))))[1]))), min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.27 * 2.7)), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))) / 1)), (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)))) >> 0), 1, 0)))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), bvec2(true, false))).y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((-12.27 * 2.7)), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))) / 1)), (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)))) >> 0), 1, 0)))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), bvec2(true, false)), (true ? mix(vec2(_GLF_FUZZED((-12.27 * 2.7)), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1))) / 1)), (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (1)), 1)))) >> 0), 1, 0)))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), bvec2(true, false)) : _GLF_FUZZED(asinh(vec2(2542.3244, -5.3)))))).y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, false, true))), false), false, false))))), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, false, true))), false), false, false))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, false, true))), false), false, false))))), true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-6760.0234)), vec2(_GLF_FUZZED(-5.2), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false))))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false))))))), true, false)), false, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false))))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false))))))), true, false)), false, true))))))))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6732.1368))))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_IDENTITY(_GLF_FUZZED((9.3 / 6.3)), mix(float(_GLF_FUZZED((-3.2 * 2.9))), float(_GLF_FUZZED((9.3 / 6.3))), bool(true)))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), bool(false)))))))), false), true, false)), true, true))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch.y) / 1.0, 0.0 + ((injectionSwitch.y) / 1.0)), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-242.224)))) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) / 1.0), float(_GLF_FUZZED((9.3 / 6.3))), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(98.88)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))))))), false), true, false)))))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), false)), true && _GLF_IDENTITY((bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), false))), false || ((bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(false, ! (! (false))))))), (((_GLF_IDENTITY(false, ! (! (false)))))) || false)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (! ((! (false))))))) && true))) && true))))) || false)))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)), (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), ! (! (! ((! (false))))))) && true))) || false)) && true))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true))))) || false))))))), false || (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true)))), bool(bool(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true)))), (! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true))))) || false))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)), (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))))))), false || (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))))))))))), ! (! (! ((! (false))))))) && true))) || false)) && true))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true))))) || false))))))))))) || false), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))))))))))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (! ((! (false))))))) && true))) && true))))) || false)))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)), (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))), ! (! (! ((! (false))))))) && true))) || false)) && true))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true))))) || false))))))), false || (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true)))), bool(bool(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true)))), (! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true))))) || false))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)), (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))))))), false || (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))))))))))), ! (! (! ((! (false))))))) && true))) || false)) && true))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true))))) || false))))))))))) || false), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))))))))))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (! ((! (false))))))) && true))) && true))))) || false)))) || false)))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) || false))) || false)) && true), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) && true)), (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(bvec2((false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))))))))))), ! (! (! ((! (false))))))) && true))) || false)) && true))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), false, true)), false, true, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), false, true)), false, true, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))) && true))) && true))))) || false))))))), false || (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true)))), bool(bool(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true)))), (! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true), ! (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)))))) && true))))) || false))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))), false || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))) || false), _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true)), (! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))))))), false || (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))))))))))), ! (! (! ((! (false))))))) && true, true && ((_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))))))), false || (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))), ! (! ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))))))))))))))), ! (! (! (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))))))) && true))))) || false)) && true))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true), (bool(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)) && true)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true), (bool(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)) && true)), false, true)))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), bvec3(bvec4(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), bvec3(bvec4(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), false)))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), bvec3(bvec4(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), bvec3(bvec4(bvec3(! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))) && true))) && true)))), true, false), false)))))))), true, true), true)))))) || false))))))))))) || false), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))))))))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false))))))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))), bool(bool(! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), ! (! (_GLF_IDENTITY((! (! ((! (false))))), bool(bvec4(_GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))), true, false, false)))))))) && true)))))))))))) && true) && true))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! (! ((! (false))))))) && true))) && true))))) || false)))) || false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (! ((! (false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (! ((! (false))))))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), ! (! (! ((! (false))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), bool(bvec4((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), true, true, true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), true))), ! (! (! ((! (false))))))), bool(bvec4((_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! ((! (false))))), (! (! (! ((! (false)))))) || false))), true, true, true))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), bool(bvec4((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), true, true, true))), true))) || false)) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false, false)))) && true)))))))))) && true))) && true))))) || false)), true && ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (! ((! (false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (! ((! (false))))))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), ! (! (! ((! (false))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), bool(bvec4((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), true, true, true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), true))), ! (! (! ((! (false))))))), bool(bvec4((_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! ((! (false))))), (! (! (! ((! (false)))))) || false))), true, true, true))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), bool(bvec4((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), true, true, true))), true))) || false)) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(! ((! (false))), ! (! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false, false)))) && true)))))))))) && true))) && true))))) || false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))), ! (! (bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false))), ! (! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), bool(bvec4(((false)), true, true, false)))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false)))))), ! (! ((false)))))))))))) && true))) && true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), _GLF_IDENTITY(true, false || (true)), false)), (bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), true, false))) || false)))) && true))) && true))), ! (! (((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), _GLF_IDENTITY(true, false || (true)), false)), (bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), true, false))) || false)))) && true))) && true)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! ((! (false)))), true && ((! ((! (false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), _GLF_IDENTITY(true, false || (true)), false)), (bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), true, false))) || false)))) && true))) && true))), ! (! (((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), _GLF_IDENTITY(true, false || (true)), false)), (bool(bvec3(_GLF_IDENTITY((! (! ((! (false))))), ((! (! ((! (false)))))) && true), true, false))) || false)))) && true))) && true))))))) || false))) || false)))) || false)))), false))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true && ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))))))))) || false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, cos(log(1.0)), 1.0, 1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 1u * (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), (true ? (4) : _GLF_IDENTITY(_GLF_FUZZED(-97002), (_GLF_FUZZED(-97002)) >> (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))))))))))) + (0 | (0 << _GLF_IDENTITY(int(7), int(7))))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), false))))))))))) || false)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false))), false))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((! (_GLF_DEAD(false))))), (bool(bool((! (_GLF_DEAD(false)))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4198.9332)), vec2(_GLF_FUZZED((false ? -78.67 : -9394.6117)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))))))) || false) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), mat4(1.0) * (mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(96.24)), bool(false)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-60140), (_GLF_FUZZED(-60140)) >> 0)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : virtual_gid))], 4, 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
}
