#version 460
struct _GLF_struct_10 {
 uint _f0;
 bool _f1;
 vec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_9 {
 bool _f0;
 int _f1;
 bvec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 vec4 _f1;
 uvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 _GLF_struct_9 _f3;
 vec2 _f4;
 ivec4 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 uint virtual_gid;
 mat3 _f1;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 vec4 _f1;
 mat2x4 _f2;
 mat3x2 _f3;
 bvec4 _f4;
 bvec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat3x2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 int _f1;
 uvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 bvec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 mat4x2 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat4x3 _f1;
 mat2 _f2;
 int _f3;
 ivec3 _f4;
 mat2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 bool _f1;
 _GLF_struct_0 _f2;
 bool _f3;
 uint workgroup_base;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 int _f2;
 _GLF_struct_6 _f3;
 uvec4 _f4;
 bvec2 _f5;
 vec2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_1(mat2x4(1.0), true, _GLF_struct_0(mat2(1.0), mat4x3(1.0), mat2(1.0), 1, ivec3(1), mat2(1.0), uvec2(1u)), true, workgroup_size * workgroup_id), _GLF_struct_4(mat2x4(1.0), mat4x2(1.0), _GLF_struct_2(uvec2(1u), bvec2(true), vec3(1.0)), _GLF_struct_3(mat3x2(1.0), 1, uvec3(1u), vec2(1.0))), 1, _GLF_struct_6(_GLF_struct_5(vec3(1.0), vec4(1.0), mat2x4(1.0), mat3x2(1.0), bvec4(true), bvec2(true), mat2x4(1.0)), mat3x2(1.0), bvec2(true)), uvec4(1u), bvec2(true), vec2(1.0));
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_11(_GLF_struct_8(mat2x3(1.0), vec4(1.0), uvec3(1u), bvec4(true)), mat2x4(1.0), uvec2(1u), _GLF_struct_9(true, 1, bvec3(true), mat2(1.0)), vec2(1.0), ivec4(1), _GLF_struct_10(1u, true, vec4(1.0), true)), _GLF_struct_replacement_7._f0.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, mat3(1.0));
 uint next_virtual_gid = _GLF_struct_replacement_7._f0.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_12.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_12.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
}
