#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-50.18)), vec2(_GLF_FUZZED(6496.3821), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-7.8) : (injectionSwitch)[1]))), bvec2(false, true))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) && true))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))), (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.0)), vec2(_GLF_FUZZED(-2.2), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false))))))))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), _GLF_IDENTITY(true, (true) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), false, false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), ! (! (bool(bool((false) || false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), ! (! (bool(bool((false) || false)))))))))), true, true), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)))))) || false), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (true) && true))) || false))))))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))), true, true)))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.72), _GLF_FUZZED(vec4(-216.212, 8.4, -398.756, 174.646).w)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(585.602) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), false || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false, true))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false, true)))))) && true)), bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false))), false, _GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), ! (! (bool(bool((false) || false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), ! (! (bool(bool((false) || false)))))))))), true, true), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)))))) || false), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (true) && true))) || false))))))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))), true, true)))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.72), _GLF_FUZZED(vec4(-216.212, 8.4, -398.756, 174.646).w)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(585.602) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), false || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false, true))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false, true)))))) && true)), bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false))), false, _GLF_IDENTITY(false, ! (! (false)))))))))), false || (! ((_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), ! (! (bool(bool((false) || false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool((false) || false)), ! (! (bool(bool((false) || false)))))))))), true, true), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)))))) || false), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (true) && true))) || false))))))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false)))))), true, true)))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.72), _GLF_FUZZED(vec4(-216.212, 8.4, -398.756, 174.646).w)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(585.602) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), false || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false, true))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false, true)))))) && true)), bool(bool(injectionSwitch.x < injectionSwitch.y))))))), false))), false, _GLF_IDENTITY(false, ! (! (false)))))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(false || ((injectionSwitch.x > injectionSwitch.y)), true))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(false || ((injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(false || ((injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0))).y))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))), true && (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), ((! (false))) && true)), bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true, false)))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-0.4, -0.3))) : injectionSwitch)).y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), cos(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, abs(1.0))), (_GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), cos(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, abs(1.0))), clamp(float(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), cos(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, abs(1.0))), float(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), cos(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, abs(1.0))), float(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), cos(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, abs(1.0)))))) / sqrt(1.0))), 0.0))) > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(826.543, 9982.9929)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-6.7, -42.48, -7.0, _GLF_IDENTITY(454.060, mix(float(_GLF_FUZZED(50.56)), float(454.060), bool(true))), 0.8, 937.254, -8.9, -7.1)) : mat4x2(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), 1.0, 0.0))))).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y), _GLF_IDENTITY(! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9445.8403)), bool(false)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false), (! (false)) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))) && true)), ! (! (! (! (false)))))) || false)) || false))))), ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))) || false))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(700.227), _GLF_FUZZED(976.330)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec4(135870u, 19596u, 66081u, 83587u).zxx) : gl_WorkGroupID))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | 0u), 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), uvec3(uvec3((_GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u))), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))), (uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))))) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), clamp((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) | (~ (_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), max((gl_WorkGroupID) / uvec3(1u, 1u, 1u), (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false))), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) || false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) || false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false)))), false, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(80.72)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), false, true)), true && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), false, true))), true && ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), false, true))))))))), (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (true) || false) && (bool(false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))) && true)) || false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).x < _GLF_IDENTITY(injectionSwitch, sqrt(sqrt(vec2(1.0, 1.0))) * (injectionSwitch)).y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), ((_GLF_IDENTITY(1u, 1u * (1u)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) >> 0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).y)) ? (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) >> 0u : _GLF_FUZZED(subgroup_size)))) + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec4(_GLF_IDENTITY(uint(1u), 0u ^ (_GLF_IDENTITY(uint(1u), (uint(1u)) * 1u))), 1u, 1u, 1u))), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) >> 0u) + subgroup_local_id, 0u ^ (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))) - 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) >> 0u) + subgroup_local_id)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (workgroup_base)), workgroup_base), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)) << 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (workgroup_base)), workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 0u ^ ((subgroup_id * subgroup_size))) >> _GLF_IDENTITY(0u, min(0u, 0u))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, true && ((false) && true)))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec4(77291, -58685, 32830, 66608).g))), ~ (~ _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0)), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))) | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1)))))))), _GLF_IDENTITY(uint(uvec2((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1)))))))), 1u)), (uint(uvec2((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1)))))))), 1u))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0))), ((_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)))) - 0), (_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)))))), 1))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), max((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))) << 0u)) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, min(1u, 1u)) | 1u), 1u), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 0u)), max(uint(uvec2(subgroup_local_id, 0u)), uint(uvec2(subgroup_local_id, 0u))))), _GLF_IDENTITY((1u | 1u), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY((1u | 1u), ((1u | 1u)) << 0u) : _GLF_FUZZED(workgroup_base))), 1u), ~ (~ (uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 0u)), max(uint(uvec2(subgroup_local_id, 0u)), uint(uvec2(subgroup_local_id, 0u))))), _GLF_IDENTITY((1u | 1u), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY((1u | 1u), ((1u | 1u)) << 0u) : _GLF_FUZZED(workgroup_base))), 1u)))), ~ (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (1u | 1u), 1u)), (false ? _GLF_FUZZED(uvec3(38069u, 149560u, 144454u)) : (uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (1u | 1u), 1u))))))))))) + _GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1u)), ~ (~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u))))))))))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1))) / 1), 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u))))), ~ (~ (~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, _GLF_IDENTITY(1u, max(1u, 1u)))))))))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1u)), ~ (~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), ~ (~ ((uvec2(subgroup_local_id + 1, 1u)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-37937))))), (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1u)), ~ (~ (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))) | 0u), 1u)), _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u))), ((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))) >> uvec2(0u, 0u)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_local_id, subgroup_local_id, min(-47337, 68861), -66901)) : subgroup_local_id)) + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)))), 1u)), ~ (~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))), _GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))), _GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))))) : _GLF_FUZZED(uvec2(154523u, 95993u))))))))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))), _GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))), _GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))))) : _GLF_FUZZED(uvec2(154523u, 95993u))))))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1u)), ~ (~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u))))))))))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1u)), ~ (~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | ((uvec2(subgroup_local_id + 1, 1u)))))))))))))))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u, max(1u, 1u)) * (subgroup_id))) : (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), uvec2(0u, 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), ((uvec2(subgroup_local_id + 1, 1u))) | (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), ((uvec2(subgroup_local_id + 1, 1u))) - uvec2(0u, 0u)))), uvec2(uvec4(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), ((uvec2(subgroup_local_id + 1, 1u))) / uvec2(1u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u | (1u)))), ~ (~ ((uvec2(subgroup_local_id + 1, _GLF_IDENTITY(1u, 0u | (1u))))))), ((uvec2(subgroup_local_id + 1, 1u))) - uvec2(0u, 0u)))), 0u, 0u))), ~ (~ (_GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), 1u * (_GLF_IDENTITY(0u ^ (0u), max(_GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), 0u ^ (0u))), 0u ^ (0u)))))), 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)), (uvec2(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), 0u | ((0u)))), 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u))) | uvec2(0u, 0u)))))) | ((_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), uvec2(0u, 0u) ^ (uvec2(subgroup_local_id + 1, 1u)))))))))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), clamp((~ (subgroup_local_id + 1)), (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) + 1)), (~ (subgroup_local_id + 1)))))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), clamp((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)))), min(~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), clamp((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), clamp((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)))), (~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), clamp((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1))))) >> 0u))))), (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | 0)), 1u * (subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) | 0), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (_GLF_IDENTITY((~ (1)), ((~ (1))) | 0)))))), ~ (~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) / 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), max(~ (~ (subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_local_id + 1))) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | 0), 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(96729) : 1))))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) * 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 0, 1))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), subgroup_local_id + 1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id + 1))), uint(uvec2(~ (~ (~ (subgroup_local_id + 1))), 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) ^ (~ (~ (subgroup_local_id + 1)))))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) ^ (~ (~ (subgroup_local_id + 1)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1))), _GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1))))))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1))), _GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1))))))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), max(_GLF_IDENTITY((~ (subgroup_local_id + 1)), ((_GLF_IDENTITY(~ (subgroup_local_id + 1), (true ? ~ (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size))))) / 1u), (~ (subgroup_local_id + 1)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (1 ^ 0), 0), min(ivec4(1, 0, (1 ^ 0), 0), ivec4(1, 0, (1 ^ 0), 0))))), 0, 1), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (1 ^ 0), 0), min(ivec4(1, 0, (1 ^ 0), 0), ivec4(1, 0, (1 ^ 0), 0))))), 0, 1), (ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (1 ^ 0), 0), min(ivec4(1, 0, (1 ^ 0), 0), ivec4(1, 0, (1 ^ 0), 0))))), 0, 1)) ^ ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, (1 ^ 0), 0), min(ivec4(1, 0, (1 ^ 0), 0), ivec4(1, 0, (1 ^ 0), 0))))), 0, 1))))), ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), ~ (~ (~ (~ (subgroup_local_id + 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u))), _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) ^ (~ (~ (subgroup_local_id + 1)))))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) ^ (~ (~ (subgroup_local_id + 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (1u ^ 1u) ^ (~ (~ (subgroup_local_id + 1)))))))) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1)))), clamp(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(62756u) : ~ (subgroup_local_id + 1)))))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1))))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id + 1)), (_GLF_IDENTITY((~ (subgroup_local_id + 1)), min(_GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) / 1u), (~ (subgroup_local_id + 1))))) + 0u), max(_GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) / 1u), (~ (subgroup_local_id + 1)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, 1u, 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), 0u + (~ (subgroup_local_id + 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))), max(_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), 0u | (0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))) / 1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), clamp(0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id + 1)), max((~ (subgroup_local_id + 1)), _GLF_IDENTITY((~ (subgroup_local_id + 1)), max((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)))))), ((~ (subgroup_local_id + 1))) - 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) << 0u)))), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) - (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(165359u), clamp(_GLF_FUZZED(165359u), _GLF_FUZZED(165359u), _GLF_FUZZED(165359u))) : uint(1u))), uint(1u)))))), ~ (~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uvec2((subgroup_local_id), 0u))) - 0u)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u)) - 0u) + 1))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(696.531)), bool(false))), injectionSwitch.x))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), (uvec4(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), 0u | (~ (_GLF_IDENTITY(0u, max(0u, 0u))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), uint(subgroup_local_id), uint(subgroup_local_id))))) + 1, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), max(_GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) / 1u), (~ (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), max(_GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) / 1u), _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) | ((~ (subgroup_local_id + 1))))))), (true ? ~ (~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))), ((_GLF_IDENTITY(~ (subgroup_local_id + 1), (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / 1u)), uint(uint(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / 1u)))))))) | 0u))) / 1u), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) : _GLF_FUZZED(subgroup_local_id)))), ((~ (subgroup_local_id + 1))) << 0u)))) : _GLF_FUZZED(virtual_gid))))))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), ~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), min(~ (~ (subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))))), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1))), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)), (clamp(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << (42597u & 0u))), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1 ^ 1))))) - 0u))))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(2.7, -0.9, -8.7, 365.477).p)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), injectionSwitch.x))))), (true ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ~ _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), ~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), ~ (~ (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (true ? ~ (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1))) | 0)), 0u | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1))) | 0)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))), (~ _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))) >> 0u)) / 1u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((-88601 + -97275)))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((false ? _GLF_FUZZED(138207u) : _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(138207u) : _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), 1u * (~ (~ (subgroup_local_id + 1)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(((false ? _GLF_FUZZED(138207u) : _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? _GLF_IDENTITY(((false ? _GLF_FUZZED(138207u) : _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (((false ? _GLF_FUZZED(138207u) : _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u) : _GLF_FUZZED(subgroup_id))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u))))))))))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | (uint(uvec3((subgroup_local_id + 1) % subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), (uint(uint(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))))) - 0u))), (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (uint(0u))))) - 0u)) * _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) >> 0u)))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) ^ 0u, min((buf[virtual_gid]) ^ 0u, _GLF_IDENTITY((buf[virtual_gid]) ^ 0u, min((buf[virtual_gid]) ^ 0u, (buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (virtual_gid))]) ^ 0u))))), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, clamp(64, 64, 64))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), abs(1.0)))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))], uint(read_1 + 1 == read_2) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64)))))) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64)))))) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64)))))) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0)))))))))), _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))))))))), true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0)), (true ? float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(2151.8963)))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
