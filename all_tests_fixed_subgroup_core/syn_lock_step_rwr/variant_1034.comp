#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 mat4x3 _f0;
 bvec3 _f1;
 bvec4 _f2;
 bvec3 _f3;
 bvec3 _f4;
 vec4 _f5;
 float _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 mat2 _f1;
 vec4 _f2;
 uint read_2;
 ivec2 _f3;
 uint _f4;
 uvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 uvec3 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 uint _f1;
 mat2x3 _f2;
 uint workgroup_id;
 mat4x2 _f3;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 mat4x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 ivec4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 bool _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 uvec2 _f3;
 ivec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 bvec3 _f1;
 bool _f2;
 mat3x2 _f3;
 vec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 bool _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 mat3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_5 _f0;
 _GLF_struct_8 _f1;
 uint read_1;
 bvec3 _f2;
 _GLF_struct_10 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z = subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))), bool(bvec4(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))), true, false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))), bool(bvec4(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))), true, false, false))), true), false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), false, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7290.8909)), float(injectionSwitch.y), bool(true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7290.8909)), float(injectionSwitch.y), bool(true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))))))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7290.8909)), float(injectionSwitch.y), bool(true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))))))), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7290.8909)), float(injectionSwitch.y), bool(true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))))))))), false, false)))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3283.8866)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(91.40), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.x = _GLF_IDENTITY(num_workgroup, max(num_workgroup, _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(min(num_workgroup, num_workgroup), (min(num_workgroup, num_workgroup)) - 0u))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(vec4(1.0), 1u, mat2x3(1.0), gl_WorkGroupID.x, mat4x2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.workgroup_id, 0u | (_GLF_struct_replacement_12.workgroup_id)), (_GLF_struct_replacement_12.workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0)) * mat3(1.0))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) * GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, (workgroup_base + subgroup_id * GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z) / 1u) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 1)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (0u | 1u))), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, 1u, 1u, 0u)), ~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))), _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, 1u, 1u, 0u), (uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))), _GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, 1u, 1u, 0u)) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u)))))))) + 0u)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z), ((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, min(_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, (false ? _GLF_FUZZED(uvec4(150446u, 53835u, 41383u, 190084u).r) : (subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z)), (subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z)))) ^ 0u)), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z), ((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, min(_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, (false ? _GLF_FUZZED(uvec4(150446u, _GLF_IDENTITY(53835u, 0u | (_GLF_IDENTITY(53835u, ~ (~ (53835u))))), 41383u, 190084u).r) : (subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z)), (subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z)))) ^ 0u)), ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) ^ 0u)))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (1u * (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z), ((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, min(_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z, (false ? _GLF_FUZZED(uvec4(150446u, 53835u, 41383u, 190084u).r) : (subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z)), (subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.z)))) ^ 0u))))) | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_5(_GLF_struct_0(bvec3(true), bvec3(true), mat4x3(1.0), mat3x4(1.0), mat2(1.0)), _GLF_struct_1(true, mat3x2(1.0), mat3x4(1.0), mat3(1.0), vec2(1.0)), _GLF_struct_2(vec4(1.0)), _GLF_struct_3(vec4(1.0), bvec3(true), true, mat3x2(1.0), vec3(1.0), mat3x4(1.0)), _GLF_struct_4(true, mat4x2(1.0), mat3x4(1.0), uvec2(1u), ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (true) && true))), _GLF_struct_8(_GLF_struct_6(mat2x3(1.0), ivec4(1), bvec4(true)), _GLF_struct_7(vec3(1.0), mat4x2(1.0), uvec3(1u))), atomicLoad(buf[virtual_gid], 4, 64, 0), bvec3(true), _GLF_struct_10(mat4x3(1.0), _GLF_struct_9(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true, (true) && true)))), (bool(! (! (true)))) || false))))), vec3(_GLF_IDENTITY(1.0, (1.0) / exp(0.0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y = _GLF_struct_replacement_11.read_1;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1, max(GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1, (GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + _GLF_IDENTITY(1, max(1, 1))) - _GLF_IDENTITY(0u, (0u) | 0u)), clamp(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1, (GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1) - _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y, ~ (~ (GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y))) + 1, (GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1) - _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1, (GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + 1) - _GLF_IDENTITY(0u, (0u) | 0u))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false), true)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false), true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)), false)))), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false), true)), true), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)), false)))), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false), true)), true)))))))), false)))), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false))), (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat4(1.0), _GLF_struct_15(_GLF_struct_13(mat2x3(1.0), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec4(1.0), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0)) ^ 0), 64, 0), ivec2(_GLF_IDENTITY(1, (1) * 1)), 1u, uvec3(1u), uvec4(1u)), uvec3(1u), _GLF_struct_14(mat4x3(1.0), bvec3(true), bvec4(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false)) && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false)) && (true), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false)) && (true)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false))), true, false, true)))) || false)) && (true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false)))))))), (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true))))) || false)) || false) || false))))))))) || false))) && (true)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-33.13) : injectionSwitch.y))) * 1.0))))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), false))), true, false, true)))) || false)) && (true), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false)) && (true)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, length(vec2(0.0, 0.0)), determinant(mat2(1.0, sqrt(1.0), tan(0.0), 1.0)), sqrt(1.0)))) < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true, false, true)))) || false)) && (true))) || false)), bvec3(true), vec4(1.0), 1.0)));
 atomicStore(buf[next_virtual_gid], uint(GLF_merged3_0_1_13_1_1_6_2_1_13num_workgroupread_1subgroup_size.y + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), ((1)) >> 0), 0))), clamp((1), (1), (1))))) | (1)))) == _GLF_struct_replacement_16._f1._f0.read_2) + 1, _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  return;
}
