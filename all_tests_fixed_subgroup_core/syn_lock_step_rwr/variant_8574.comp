#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid;
 uvec4 GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id;
 uvec4 GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gid;
 GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz = GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gid;
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw = GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy = GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.zw;
 uvec4 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup;
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base;
 uvec4 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid;
 for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))), int(ivec3(((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (0 | 0))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))), 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          return;
        }
       return;
      }
    }
  }
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size;
 GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.xyz = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size;
 _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup.xyz = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.xyz, _GLF_IDENTITY((GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup.xyz = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.xyz), (_GLF_IDENTITY((GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup.xyz = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.xyz), ~ (~ ((GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup.xyz = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.xyz))))) - uvec3(0u, 0u, 0u)) ^ uvec3(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), 0u, 0u));
 for(int _injected_loop_counter = ((1 ^ 1) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup.xyz;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.w = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.w;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.w = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(25783) : int(4))))) >> _GLF_IDENTITY(int(4), int(4))) & ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bool((false))))), true && (! (_GLF_IDENTITY((false), bool(bool((false))))))))))) && true), true, false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z = subgroup_size;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))) && true)))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bool(! (true))))) || false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bool(! (true))))) || false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bool(! (true))))) || false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))))))), false))), true))), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | (1 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * int(_GLF_ONE(1.0, injectionSwitch.y))))
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = subgroup_local_id;
 GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(uvec2(90118u, 81178u)) : GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy), uvec2(uvec3((_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(uvec2(90118u, 81178u)) : GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy), 0u)))).x, _GLF_IDENTITY(clamp(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, min(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x)), _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY((1u ^ 1u) + _GLF_IDENTITY((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))))), clamp((1u ^ 1u) + _GLF_IDENTITY((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))))), (1u ^ 1u) + _GLF_IDENTITY((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))))), (1u ^ 1u) + _GLF_IDENTITY((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec3((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | uvec3(0u, 0u, 0u)))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(clamp(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz, _GLF_IDENTITY((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz), max((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz), (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz))) ^ uvec3(0u, 0u, 0u)).xy, clamp(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy) << uvec2(0u, 0u)))).x, min(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x)), _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u))) + (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (uvec3(clamp(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz, _GLF_IDENTITY((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz), max((GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz), (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz))) ^ uvec3(0u, 0u, 0u)).xy, clamp(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy) << uvec2(0u, 0u)))).x, min(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x)), _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u))) + (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) - uvec3(0u, 0u, 0u)), (true ? uvec3(clamp(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz, (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz) ^ uvec3(0u, 0u, 0u)).xy, clamp(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy, (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy) << uvec2(0u, 0u)))).x, min(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x)), _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x, _GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u))) + (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.x))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u) : _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.xyz))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup.w = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.x = GLF_merged2_0_3_74_3_1_13GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenum_workgroup.w;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.x = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.x;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(74797)))) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))) + 0))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-740.184) : injectionSwitch.x))), float(_GLF_FUZZED(0.1)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.y = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
  {
   GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y = workgroup_size;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -97149)); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
      }
    }
   else
    {
    }
  }
 _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y, _GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y), ((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.y)) * 1u) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.w = workgroup_id;
 GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.y = GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.w;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 uint workgroup_base = GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z * GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.xy.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.w = GLF_merged2_0_2_53_2_2_54GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_sizeGLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.xy.x;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.w) << 0u)) * 1u) * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z + GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.z = GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.w;
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y = GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.z;
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.w + GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.w * GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z + _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1, (true ? GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1 : _GLF_FUZZED(num_workgroup)))) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z, clamp(GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(((_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz, _GLF_IDENTITY(min(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz), (_GLF_IDENTITY(min(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz), max(min(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz), min(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz)))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) / uvec3(1u, 1u, 1u)).x + 1) % GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ _GLF_IDENTITY((uvec3(((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) % GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u * (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))))))), 1u * (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x) : (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u * (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u * (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u)))))) / 1u)))))), uvec3(uvec3((uvec3((_GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1) % GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z, (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x) : (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1) % GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1), (_GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1), (true ? (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1) : _GLF_FUZZED(num_workgroup)))) | ((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1))) % GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z), _GLF_IDENTITY(0u, uint(uint(0u))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)), 1.0 * (clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))))), ~ (~ (uvec3(((_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x, 0u | (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x, _GLF_IDENTITY(max(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x), ~ (~ (max(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid, min(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid)).xyz.x, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x))))))) + 1) % GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.z), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)))))))))) >> 0u));
 GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.x = next_virtual_gid;
 GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z = GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0), 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0), 0.0, 1.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(roundEven(0.7))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
      break;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z, ~ (~ _GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id, uvec4(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id[0], GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id[1], GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id[2], GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id[3])).xyz.z), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z), ((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z)) / 1u))))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2u, uint(uvec4(2u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (2u), (~ (2u)) << 0u)), ((~ (2u))) / 1u))))), uint(2u))) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id, (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id) ^ uvec4(0u, 0u, 0u, 0u)).xyz.z, 0u + (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z) / 1u))), (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = _GLF_IDENTITY(GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id, (GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id) ^ uvec4(0u, 0u, 0u, 0u)).xyz.z, 0u + (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_95_3_1_11GLF_merged2_0_2_54_2_1_16GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnext_virtual_gidsubgroup_id.xyz.z) / 1u)))) | 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.x = GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid)).xyz, min(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz)).y], 4, 64, 0);
 GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.w = read_1;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.x = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizeread_1.w;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.y = GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.y;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
   do
    {
     GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), false))))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.x], _GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z + 1), min(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z + 1), uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z + 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y, clamp(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y) | (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y)), GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y))) + 0u)], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.y = read_2;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.y = GLF_merged4_0_1_16_1_1_6_2_1_13_3_1_11next_virtual_gidread_2subgroup_sizevirtual_gid.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     continue;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.z = GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.y;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
                return;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_base.z;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(25554)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1, 1u, (1u & 1u), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1))))), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1subgroup_id.z)) + 1))) | 0u) == _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z) + 0u))))) + 1, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), _GLF_IDENTITY(int(int((4) | (4))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int((4) | (4))))))), 4)), 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (-33738 & _GLF_IDENTITY(0, (0) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0))) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)) && true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), true, true))), true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_IDENTITY(true, (true) && true), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))), _GLF_IDENTITY(false, true && (false)))))))), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))), false)))))), false || (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))), false))))))))))))))
        {
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & (-37505 + 11435)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
