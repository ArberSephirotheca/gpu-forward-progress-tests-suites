#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2;
 uint subgroup_id = gl_SubgroupID;
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.x = subgroup_id, (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.x = subgroup_id) << (0u | 0u));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      continue;
     return;
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED((- -8.6))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(float(_GLF_FUZZED((- -8.6))), float(mat4x2(float(_GLF_FUZZED((- -8.6))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, length(abs(0.0)), cos(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0), (mat4(_GLF_IDENTITY(float(_GLF_FUZZED((- -8.6))), float(mat4x2(float(_GLF_FUZZED((- -8.6))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, length(abs(0.0)), cos(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(float(_GLF_FUZZED((- -8.6))), float(mat4x2(float(_GLF_FUZZED((- -8.6))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, length(abs(0.0)), cos(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0), (mat4(_GLF_IDENTITY(float(_GLF_FUZZED((- -8.6))), float(mat4x2(float(_GLF_FUZZED((- -8.6))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, length(abs(0.0)), cos(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(false))) > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y)), false, false)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.3) : injectionSwitch.x))), float(_GLF_FUZZED(2.9)), bool(false))))), max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), clamp(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) / 1.0)))) > injectionSwitch.y)), false, false)), false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- _GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, _GLF_IDENTITY(-8.6, (true ? -8.6 : _GLF_FUZZED(889.905)))))))), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))) > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))) > injectionSwitch.y)))))), false, false)), false)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -8.6))), bool(false))) > injectionSwitch.y)), false, false)), false))))))) && true))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), ! (! (_injected_loop_counter != (0 ^ 1)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), ! (! (_injected_loop_counter != (0 ^ 1))))), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), ! (! (_injected_loop_counter != (0 ^ 1))))))))))), (bool(_GLF_IDENTITY(_injected_loop_counter != (0 ^ 1), ! (! (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))))) != (0 ^ 1)))))) || false)))); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) || false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-11.69)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
        break;
       continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             return;
            }
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))), (_GLF_IDENTITY(true && (false), ! (! (true && _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && true))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))))), 1.0, 1.0, 1.0, abs(1.0), 0.0), (false ? _GLF_FUZZED(mat2x3(-4287.8166, 83.71, 2.9, -679.668, 867.529, -418.719)) : mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) * mat4(1.0))))), 1.0, 1.0, 1.0, abs(1.0), 0.0))))))) * 1.0)))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((_GLF_IDENTITY(~ (0), (~ (0)) >> 0)), _GLF_IDENTITY((~ (0)), _GLF_IDENTITY(clamp((~ (0)), (~ (0)), (~ (0))), (clamp((~ (0)), (~ (0)), (~ (0)))) - 0)), _GLF_IDENTITY((~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0))), (~ ((~ (0)))) << 0))))))) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) | 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((_GLF_IDENTITY(~ (0), (~ (0)) >> 0)), _GLF_IDENTITY((~ (0)), _GLF_IDENTITY(clamp((~ (0)), (~ (0)), (~ (0))), (clamp((~ (0)), (~ (0)), (~ (0)))) - 0)), _GLF_IDENTITY((~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0))), (~ ((~ (0)))) << 0))))))) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) | 0), min((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((_GLF_IDENTITY(~ (0), (~ (0)) >> 0)), _GLF_IDENTITY((~ (0)), _GLF_IDENTITY(clamp((~ (0)), (~ (0)), (~ (0))), (clamp((~ (0)), (~ (0)), (~ (0)))) - 0)), _GLF_IDENTITY((~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0))), (~ ((~ (0)))) << 0))))))) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) | 0), (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((_GLF_IDENTITY(~ (0), (~ (0)) >> 0)), _GLF_IDENTITY((~ (0)), _GLF_IDENTITY(clamp((~ (0)), (~ (0)), (~ (0))), (clamp((~ (0)), (~ (0)), (~ (0)))) - 0)), _GLF_IDENTITY((~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0))), (~ ((~ (0)))) << 0))))))) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) | 0)))) | ((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((_GLF_IDENTITY(~ (0), (~ (0)) >> 0)), _GLF_IDENTITY((~ (0)), _GLF_IDENTITY(clamp((~ (0)), (~ (0)), (~ (0))), (clamp((~ (0)), (~ (0)), (~ (0)))) - 0)), _GLF_IDENTITY((~ (0)), ~ (_GLF_IDENTITY(~ ((~ (0))), (~ ((~ (0)))) << 0))))))) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))))
        return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), false), true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (bool(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), ! (! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), true, false, true)), (bool(bvec4(false || (false), true, false, true))) && true))), false)))))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.y = _GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)), _GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_WorkGroupSize)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, (6u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), 0u)))))) | (_GLF_IDENTITY(uvec3(6u), uvec3(6u))))) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) ^ _GLF_IDENTITY(uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(degrees(_GLF_IDENTITY(-6.2, 0.0 + (-6.2)))) : 0.0, mix(float(_GLF_FUZZED(4131.7976)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(degrees(_GLF_IDENTITY(-6.2, 0.0 + (-6.2)))) : 0.0, mix(float(_GLF_FUZZED(698.658)), float(false ? _GLF_FUZZED(degrees(_GLF_IDENTITY(-6.2, 0.0 + (-6.2)))) : 0.0), bool(true)))), bool(true))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, abs(log(1.0)) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), min(uvec3(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(degrees(-6.2)) : 0.0)), mix(float(_GLF_FUZZED(8.7)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(degrees(-6.2)) : 0.0))), bool(true))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.2) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(degrees(-6.2)) : 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 1.0, sin(0.0), abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, sqrt(0.0))), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, sqrt(0.0)))), 1.0))), injectionSwitch.x))))), gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.3) : injectionSwitch.y))))));
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_FUZZED(-740.276) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.5)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-740.276) : injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-740.276) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.5)))))), true, false, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))) ? _GLF_FUZZED(_GLF_IDENTITY(-740.276, max(-740.276, -740.276))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(0.5)), mix(float((true ? injectionSwitch.y : _GLF_FUZZED(0.5))), float(_GLF_FUZZED(6724.7276)), bool(false))))))), true, false, true))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(vec4(-567.914, -754.869, 1493.2628, -2.4)[2]))) > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))));
  }
 do
  {
   do
    {
     GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-671.144))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0)))))), vec2(mat2x3(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8285.6564)))))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-856.560))), 0.0)), 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0)))))), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(clamp(-7.0, -4.0, 3.1))))))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))).x, (false ? _GLF_FUZZED(-5233.9497) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-671.144))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0)))))), vec2(mat2x3(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8285.6564)))))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-856.560))), 0.0)), 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0)))))), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(clamp(-7.0, -4.0, 3.1))))))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))).x, mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-671.144))))), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0)))))), vec2(mat2x3(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8285.6564)))))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-856.560))), 0.0)), 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0)))))), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(clamp(-7.0, -4.0, 3.1))))))), tan(0.0), 0.0), vec4(1.0, 0.0, 0.0, sin(0.0))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))).x), bool(true))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-15.57)), float(injectionSwitch.y), bool(true)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bool(! (_GLF_IDENTITY(true, ! (! (true)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-15.57)), float(injectionSwitch.y), bool(true)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bool(! (_GLF_IDENTITY(true, ! (! (true)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-15.57)), float(injectionSwitch.y), bool(true)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bool(! (_GLF_IDENTITY(true, ! (! (true)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), false)))))), (injectionSwitch.x > injectionSwitch.y))))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)) && true)), (bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))))) && true))) || false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) / sqrt(1.0)) > injectionSwitch.y))))))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(46.39)), bool(false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(46.39)), bool(false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec3((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), true, false), bvec3(bvec4(bvec3((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), true, false), false))))) && true)), (_GLF_IDENTITY(bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true)), true && (bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true))))) || false))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) / sqrt(1.0)) > injectionSwitch.y))))))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(46.39)), bool(false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(46.39)), bool(false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec3((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), true, false), bvec3(bvec4(bvec3((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), true, false), false))))) && true)), (_GLF_IDENTITY(bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true)), true && (bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true))))) || false)))))), bool(bvec3(! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) / sqrt(1.0)) > injectionSwitch.y))))))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(46.39)), bool(false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(46.39)), bool(false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec3((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), true, false), bvec3(bvec4(bvec3((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), true, false), false))))) && true)), (_GLF_IDENTITY(bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true)), true && (bool(bool((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true))))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 | 1), min(_GLF_IDENTITY((1 | 1), clamp((1 | 1), (1 | 1), (1 | 1))), (1 | 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       continue;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   else
    {
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(54015) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << _GLF_IDENTITY(0, clamp(0, 0, 0))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.z = workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.3, 914.049)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.w, (true ? GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.w : _GLF_FUZZED(subgroup_size))) * GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))), true, false)))))) || false))))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(min(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), (0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)) >> 0u)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), (0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)) >> 0u)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), (0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)) >> 0u)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), (0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)) >> 0u)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y))))), (_GLF_IDENTITY(min(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[0], GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[1], GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[2], GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[3])).y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, 0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, ~ (~ (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size))).y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, 0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, 0u | _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), ((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)) / 1u)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)))), 0u))) | 0u))), uint(uint(min(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, 0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size) | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size)).y))))))) | (min(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, 0u | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y)))))) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, uvec4(_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u, 1u) * _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size), ((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size)) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u))).x * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(67.87))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) ? _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u) : _GLF_FUZZED(bitfieldInsert(subgroup_local_id, subgroup_id, -29761, -44899)))), 0u | (_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) ? (~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uvec3((subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), 0u | (uint(uvec3((subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))) : _GLF_FUZZED(bitfieldInsert(subgroup_local_id, subgroup_id, -29761, -44899)))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0), (_injected_loop_counter ++) ^ 0))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(560.809), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-32.64)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3181.5808) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(560.809), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-32.64)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3181.5808) : injectionSwitch.y))))), (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(560.809), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-32.64)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))).y)), false)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y))).y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(3181.5808) : _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-969.679, 949.059)) : injectionSwitch)).y)))))) || false))) ? injectionSwitch.x : _GLF_FUZZED(0.1)))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(817.712, 2.3, 6118.7713, -0.7).r)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))), 1.0)), 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))) / vec2(1.0, 1.0))) / exp(vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.9, 2008.3129)))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))), (false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5833.1377)), float(1.0), bool(true)))))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7)))) : injectionSwitch), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7))), max(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7))), vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7))), min(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7))), vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7)))))))) : injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, 1.0))))), _GLF_IDENTITY(9.7, min(9.7, 9.7)))) : injectionSwitch), mix(vec2(((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.1) : 0.0))))), log(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), _GLF_IDENTITY(9.7, min(9.7, _GLF_IDENTITY(9.7, clamp(9.7, 9.7, 9.7)))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_FUZZED(vec3(94.20, 6330.3457, -5658.0930).t)), vec2(_GLF_FUZZED(-2.4), ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(365.065, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(7.9) : 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, exp(0.0)))), 0.0))), log(1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(-2507.5486) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, 1.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, 1.0), min(vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, 1.0), vec4(_GLF_IDENTITY(365.065, float(mat2x4(365.065, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), log(1.0), 0.0, 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(9.7, min(9.7, 9.7)))) : injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))))))) / vec2(1.0, 1.0))) / exp(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))) / vec2(1.0, 1.0))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))) / vec2(1.0, 1.0))) / exp(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(75.51), _GLF_FUZZED(-5.2)), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(true, true))), mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1]))))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch, mat2(1.0) * (false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))), mix(vec2(_GLF_IDENTITY(((false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))[0], 0.0 + (((false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))[0])), ((false ? _GLF_FUZZED(vec2(365.065, 9.7)) : injectionSwitch))[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(-114.270)), bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))))) / vec2(1.0, 1.0))) / exp(vec2(0.0, 0.0))))))).y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-63.55)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(65.52)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(mat4x3(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0)))), 0.0, 1.0, 1.0, sin(0.0), 1.0))) + (injectionSwitch)).x), float(_GLF_IDENTITY(_GLF_FUZZED(-14.78), (_GLF_FUZZED(-14.78)) + 0.0)), bool(false)))), bool(true))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(65.52)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((uvec4(183629u, 88437u, 181434u, 21901u) == uvec4(175447u, 29620u, 8569u, 119199u))))), vec2(_GLF_FUZZED(-8911.5806), (injectionSwitch)[1]), bvec2(false, true))).x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x), float(_GLF_FUZZED(-14.78)), bool(false)))), bool(true))) > injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x)), mix(float(_GLF_FUZZED(65.52)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) * vec2(1.0, 1.0)) + (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((- -1250.0316)))), 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x)) + (injectionSwitch)).x), float(_GLF_FUZZED(-14.78)), bool(_GLF_IDENTITY(false, ! (! (false))))))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) * vec2(1.0, 1.0)) + (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((- -1250.0316)))), 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x)) + (injectionSwitch)).x), float(_GLF_FUZZED(-14.78)), bool(_GLF_IDENTITY(false, ! (! (false))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)), (vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) * vec2(1.0, 1.0)) + (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((- -1250.0316)))), 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), injectionSwitch.x)) + (injectionSwitch)).x), float(_GLF_FUZZED(-14.78)), bool(_GLF_IDENTITY(false, ! (! (false))))))))), bool(true))) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(65.52)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) + (injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-67.54), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(2.0)), bool(false))), _GLF_FUZZED(70.25)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(997.264)), bool(false))))) + (injectionSwitch)).x), float(_GLF_FUZZED(-14.78)), bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(true))) > injectionSwitch.y)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(65.52)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) + (injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-67.54), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(2.0)), bool(false))), _GLF_FUZZED(70.25)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), injectionSwitch)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(997.264)), bool(false))))) + (injectionSwitch)).x), float(_GLF_FUZZED(-14.78)), bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(true))) > injectionSwitch.y))) || false)))))))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         do
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, min((1) >> 0, (1) >> 0)))); _GLF_IDENTITY(_injected_loop_counter ++, (0 >> _GLF_IDENTITY(int(4), int(4))) + (_injected_loop_counter ++)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), ! (! ((! (_GLF_WRAPPED_IF_TRUE(true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          break;
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), clamp(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))))))) < injectionSwitch.y)) && (false))), bool(bvec3((_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), clamp(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (false ? _GLF_FUZZED(1264.2159) : float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))))))) < injectionSwitch.y)) && (false))), false, true)))))))
              return;
             if(_GLF_DEAD(false))
              return;
             break;
            }
           return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bvec3(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, false)))))))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))), ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) || false))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false)))))
          break;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(48574)), _GLF_FUZZED(9.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-3268.3389), min(_GLF_FUZZED(-3268.3389), _GLF_FUZZED(-3268.3389))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5560.5600, 57.46)) : injectionSwitch)))), vec2(vec3(injectionSwitch, 0.0))), injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), abs(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * (vec3(injectionSwitch, 0.0))))), injectionSwitch, injectionSwitch)).y) - 0.0)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y) | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), max((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y) | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y) | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), uint(_GLF_IDENTITY(uvec2((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y) | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), 1u), (uvec2((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y) | (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size.y), 1u)) / uvec2(1u, 1u))))))) + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, clamp(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size)).x * subgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[0], GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[2], (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[2], (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[2]) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> (193121u & 0u)), GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size[3])), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size), (~ (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size)) * uvec4(1u, 1u, 1u, 1u))), (~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size), (~ (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size)) * uvec4(1u, 1u, 1u, 1u)))) | uvec4(0u, 0u, 0u, 0u)))) | (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size) : uvec4(0u)))) | (uvec4(0u)))))))).y + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)) : _GLF_FUZZED(virtual_gid)))))) | _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size), uvec4(1u, 1u, 1u, 1u) * ((GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14subgroup_idworkgroup_baseworkgroup_idworkgroup_size)))).x * subgroup_size) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 1u, 1u)))))) ^ (48370u & _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY((((subgroup_local_id + 1))) | (((subgroup_local_id + 1))), uint(uvec2((((subgroup_local_id + 1))) | (((subgroup_local_id + 1))), 0u))))) | (((subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((1u ^ 1u) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (uint(6u)) / 1u))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), min(subgroup_local_id + 1, subgroup_local_id + 1)))))), _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), clamp(min(subgroup_local_id + 1, subgroup_local_id + 1), min(subgroup_local_id + 1, subgroup_local_id + 1), min(subgroup_local_id + 1, subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))), (1u ^ 0u) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) * 1u)))) | (subgroup_local_id + 1)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 ^ (4)))), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))))), 0u | (subgroup_local_id + 1))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)))))), (1 ^ 0) * (_GLF_IDENTITY(1, (1) + (_GLF_IDENTITY(0, (0) - 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(-77750))))))))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u + (0u))))) | (subgroup_local_id + 1)))))))))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2114) : 1)), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u | (~ (subgroup_local_id))))) + 1) << 0u), subgroup_local_id + 1)), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2114) : 1)), clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1)), 0u, 1u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u))))))))), (clamp(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ((_GLF_IDENTITY(1u ^ 1u, _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) >> 0u) - 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, 6u))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)), 0u | (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))) | (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)))), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u)))))))) << 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, 6u))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (~ (subgroup_local_id + 1))))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) >> 0))), (1u ^ 0u) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u) | _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), max((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), max((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))))))) >> 0u) | ((subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), (1) + (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1)))), (0u | _GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1))))) ^ 0u))))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 1u * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))))) << 0u), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 1))))), 1, 1)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), ((true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) ^ 0u)) + 1)), 0u, 1u)))))) * 1u)) % subgroup_size);
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))), int(7)), ~ (~ (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.6) : 1.0))) - 0.0), injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.6) : 1.0))) - 0.0), injectionSwitch.y)), true), bvec2(bvec3(bvec2(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.6) : 1.0))) - 0.0), injectionSwitch.y)), true), true)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (true ? GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id, 0u ^ (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))), subgroup_local_id)))));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.2)), bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - 0.0), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - 0.0)) || false)) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))])), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 ^ ((64))) << 0)) + 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED((41412 / 59267)) : 64)), (64) + 0))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true, false, true)), (bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true, false, true))) && true))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false)))), true && (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false)))), ! (! (bool(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false)))))))))), ! (! (bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false)))), true && (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false)))), ! (! (bool(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false)))))))))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true))) || false), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)))) && true)))) || false))), true, false, true)), _GLF_IDENTITY((bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true, false, true))), ((bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true, false, true)))) && true) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), ((! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false)))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), true))), true)))), (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true)))), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) && true)) || false))), true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), true))), true)))), (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true)))), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) && true)) || false))), true, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), true))), true)))), (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true)))), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) && true)) || false))), true, false, true)), ! (! (bool(bvec4(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true), true))), true)))), (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true)))), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) && true)) || false))), true, false, true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true, false, true))), false || (_GLF_IDENTITY((bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true, false, true))), bool(bvec3((bool(bvec4(! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), true)), (bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, true && (true))))) || false))), true, false, true))), false, true))))) && true)))))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false)))))), (true && (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false))))))) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z = read_1;
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x], uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), (uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), min((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2), (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)))) + uvec4(0u, 0u, 0u, 0u))).z + 1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) / 1, 0 | _GLF_IDENTITY(((_GLF_IDENTITY(4, min(4, 4))) / 1), _GLF_IDENTITY(int(int(((_GLF_IDENTITY(4, min(4, 4))) / 1))), min(int(int(((_GLF_IDENTITY(4, min(4, 4))) / 1))), int(int(((_GLF_IDENTITY(4, min(4, 4))) / 1))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0), 4)), 4))) / 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), clamp((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4)))))) + (0 >> _GLF_IDENTITY(int(5), int(5)))) / 1, ((_GLF_IDENTITY(4, min(4, 4))) / 1) | (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | 0), 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ((_GLF_IDENTITY(4, min(4, 4)))) - 0)) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67660) : 0))) / _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)))) << 0))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) / 1, (true ? (_GLF_IDENTITY(4, min(4, 4))) / 1 : _GLF_FUZZED(-23706))), ((_GLF_IDENTITY(4, min(4, 4))) / 1) | ((_GLF_IDENTITY(4, min(4, 4))) / _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0)))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(78424), (false ? _GLF_FUZZED(ivec2(-37158, -65316).y) : _GLF_FUZZED(78424))) : _GLF_IDENTITY(0, ~ (~ (0)))))) | (0)), ((1) << 0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))))) / 1)))))), _GLF_IDENTITY(64, (0 << _GLF_IDENTITY(int(2), int(2))) | (64)), 4);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u | _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) + 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(0u | ((buf[virtual_gid])), clamp(0u | ((buf[virtual_gid])), 0u | ((buf[virtual_gid])), 0u | ((buf[virtual_gid]))))), 0u ^ (_GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(_GLF_IDENTITY(0u | ((buf[virtual_gid])), max(0u | ((buf[virtual_gid])), _GLF_IDENTITY(0u | ((buf[virtual_gid])), (0u | ((buf[virtual_gid]))) | 0u))), clamp(0u | ((buf[virtual_gid])), 0u | ((buf[virtual_gid])), 0u | ((_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_local_id) : buf[virtual_gid])))))))))))))) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 4, 64, _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-2.1, 7.6)))).x > injectionSwitch.y))))))
    return;
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w = read_2;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(18368), clamp(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(18368), clamp(true ? 1 : _GLF_FUZZED(18368), true ? 1 : _GLF_FUZZED(18368), true ? 1 : _GLF_FUZZED(18368))), true ? 1 : _GLF_FUZZED(18368), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(18368), clamp(true ? 1 : _GLF_FUZZED(18368), true ? 1 : _GLF_FUZZED(18368), true ? 1 : _GLF_FUZZED(18368))))))) ^ 0, (true ? _GLF_IDENTITY(1, min(1, 1)) ^ 0 : _GLF_FUZZED(-14246)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(18368))) ^ 0, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), 1)) ^ 0 : _GLF_FUZZED(-14246)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(18368), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(18368), (_GLF_FUZZED(18368)) | 0)), clamp(int(_GLF_IDENTITY(_GLF_FUZZED(18368), (_GLF_FUZZED(18368)) | 0)), int(_GLF_IDENTITY(_GLF_FUZZED(18368), (_GLF_FUZZED(18368)) | 0)), int(_GLF_IDENTITY(_GLF_FUZZED(18368), (_GLF_FUZZED(18368)) | 0)))))))) ^ 0, (true ? _GLF_IDENTITY(1, min(1, 1)) ^ 0 : _GLF_FUZZED(-14246))))) - 0)) / 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) > 0), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(true, true && (true))) || false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(true, true && (true))) || false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(true, true && (true))) || false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, int(ivec3(0, (0 << _GLF_IDENTITY(int(0), int(0))), 0))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, int(ivec3(0, (0 << _GLF_IDENTITY(int(0), int(0))), 0))), ! (! (_injected_loop_counter > _GLF_IDENTITY(0, int(ivec3(0, (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(0), int(0))), 0)))))), false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0)), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(80.49)), max(float(_GLF_FUZZED(80.49)), float(_GLF_FUZZED(80.49)))), bool(false))), 0.0))), injectionSwitch)).x < injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))), _GLF_IDENTITY(min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), _GLF_IDENTITY((clamp(0, 0, 0)) << 0, ((clamp(0, 0, 0)) << 0) | 0))), max(min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), _GLF_IDENTITY((clamp(0, 0, 0)) << 0, ((clamp(0, 0, 0)) << 0) | 0))), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), _GLF_IDENTITY((clamp(0, 0, 0)) << 0, ((clamp(0, 0, 0)) << 0) | 0)))))))), ((_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))), _GLF_IDENTITY(min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), _GLF_IDENTITY((clamp(0, 0, 0)) << 0, ((clamp(0, 0, 0)) << 0) | 0))), max(min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), _GLF_IDENTITY((clamp(0, 0, 0)) << 0, ((clamp(0, 0, 0)) << 0) | 0))), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), _GLF_IDENTITY((clamp(0, 0, 0)) << 0, ((clamp(0, 0, 0)) << 0) | 0))))))))) && _GLF_IDENTITY(true, ! (! (true)))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false))), injectionSwitch)).x < injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))))]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(_GLF_IDENTITY(true, (true) && true), false))), injectionSwitch)).x < injectionSwitch.y))) && true)))))))), true && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(54.62), _GLF_FUZZED(-785.912)), bvec2(false, false))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(54.62), _GLF_FUZZED(-785.912)), bvec2(false, false)))), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(54.62), _GLF_FUZZED(-785.912)), bvec2(false, false)))), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(54.62), _GLF_FUZZED(-785.912)), bvec2(false, false)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) / vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(672.585)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(4.1, max(4.1, 4.1)))), bool(false)))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), clamp(_GLF_FUZZED(4.1), _GLF_FUZZED(4.1), _GLF_IDENTITY(_GLF_FUZZED(4.1), (false ? _GLF_FUZZED(determinant(mat4(-2.1, -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94))) : _GLF_FUZZED(4.1)))))), bool(false)))) + 0.0)) * 1.0)), float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(false)))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), clamp(_GLF_FUZZED(4.1), _GLF_FUZZED(4.1), _GLF_IDENTITY(_GLF_FUZZED(4.1), (false ? _GLF_FUZZED(determinant(mat4(-2.1, -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94))) : _GLF_FUZZED(4.1)))))), bool(false)))) + 0.0)) * 1.0))))), bool(true)))))) || false))), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.3)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (injectionSwitch.x < injectionSwitch.y)))))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)) || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))))[0], _GLF_FUZZED(3.2)), vec2(_GLF_FUZZED(-5.7), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))))[1]), bvec2(false, true))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), bvec2(true, false))), injectionSwitch)))).x < injectionSwitch.y))) && true)))))))), true && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(54.62), _GLF_FUZZED(-785.912)), bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(672.585)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(false)))) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), clamp(_GLF_FUZZED(4.1), _GLF_FUZZED(4.1), _GLF_IDENTITY(_GLF_FUZZED(4.1), (false ? _GLF_FUZZED(determinant(mat4(-2.1, -7.0, _GLF_IDENTITY(4.8, 1.0 * (4.8)), -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94))) : _GLF_FUZZED(4.1)))))), bool(false)))) + _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sqrt(0.0)))), 1.0, 1.0, 1.0))))) * 1.0, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), clamp(_GLF_FUZZED(4.1), _GLF_FUZZED(4.1), _GLF_IDENTITY(_GLF_FUZZED(4.1), (false ? _GLF_FUZZED(_GLF_IDENTITY(determinant(mat4(-2.1, -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94)), clamp(_GLF_IDENTITY(determinant(mat4(-2.1, -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94)), (determinant(mat4(-2.1, -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94))) / 1.0), determinant(mat4(-2.1, -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94)), determinant(mat4(-2.1, -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94))))) : _GLF_FUZZED(4.1)))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), true)), _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true)))))))))) + 0.0)) * _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(float(-11785)))))), float(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(false)))) + _GLF_IDENTITY(0.0, (0.0) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y) / 1.0))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), clamp(_GLF_FUZZED(4.1), _GLF_FUZZED(4.1), _GLF_IDENTITY(_GLF_FUZZED(4.1), (false ? _GLF_FUZZED(determinant(mat4(_GLF_IDENTITY(-2.1, float(mat3x2(-2.1, 1.0, 1.0, 0.0, 0.0, 1.0))), -7.0, 4.8, -7559.4470, 59.65, 438.375, 1929.0680, 59.25, -7.0, 76.89, -372.748, -2.7, 4636.3433, 770.908, -6.0, -15.94))) : _GLF_FUZZED(4.1)))))), bool(false)))) + 0.0)) * 1.0))))), bool(true)))))) || false)))))))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1])))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), bvec2(true, false))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1])))))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), _GLF_IDENTITY((_GLF_FUZZED(-690.659)) + 0.0, ((_GLF_FUZZED(-690.659)) + 0.0) * 1.0)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-690.659), (_GLF_FUZZED(-690.659)) + 0.0), (injectionSwitch)[1]))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.9, -1.2)))))[0], _GLF_FUZZED(0.2)), bvec2(true, false))).y)))) || false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7624.8568) : injectionSwitch.x))), float(_GLF_FUZZED(-6.7)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     return;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    continue;
   if(_GLF_DEAD(false))
    break;
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[0], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[1], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[2], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2[3])).x], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z, 1u * (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z))) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1 ^ 1, (false ? _GLF_FUZZED(35822) : 1 ^ 1))) ^ (1)), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1)))), 1u * (((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1)))))) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) | uvec4(0u, 0u, 0u, 0u)).z + 1), 1u), uvec2(1u, 1u) * (uvec2((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))), (uvec2(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), _GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1)) << 0u, max(_GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1)) << 0u, (false ? _GLF_FUZZED(num_workgroup) : ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1)) << 0u)), ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1)) << 0u)))) | ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1))), 1u)) | _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 0u ^ ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1))), 1u), (uvec2(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), uint(uvec3((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 1u, 0u))), 1u)) | uvec2(0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) * ((uvec4(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, (3u) - (0u ^ 0u))))), uvec4(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), (_GLF_IDENTITY(uvec4(3u), uvec4(3u))) | uvec4(0u, 0u, 0u, 0u)))).z + 1), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), _GLF_IDENTITY((uvec2((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 1u)) | uvec2(0u, 0u), ((uvec2((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 1u)) | uvec2(0u, 0u)) >> uvec2(0u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) * ((uvec4(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, (3u) - (0u ^ 0u))))), uvec4(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), uvec4(3u)), (_GLF_IDENTITY(uvec4(3u), uvec4(3u))) | uvec4(0u, 0u, 0u, 0u)))).z + 1), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), _GLF_IDENTITY((uvec2((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 1u)) | uvec2(0u, 0u), ((uvec2((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z + 1), 1u)) | uvec2(0u, 0u)) >> uvec2(0u, 0u)))), 1u, 0u)))))))) << 0u) == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w) + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) << 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, false, false))), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true, false, false))), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false)), true, true))))))))))
  return;
}
