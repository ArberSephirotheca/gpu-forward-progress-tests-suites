#version 460
struct _GLF_struct_3 {
 ivec2 _f0;
 bvec3 _f1;
 int _f2;
 uvec3 _f3;
 mat4x2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_2 {
 float _f0;
 ivec4 _f1;
 vec3 _f2;
 mat2x4 _f3;
 vec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uvec3 _f3;
 uint subgroup_local_id;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 _GLF_struct_4 _f1;
 bool _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.y = subgroup_id;
uint subgroup_size = 16;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(uvec2(1u), _GLF_struct_4(_GLF_struct_0(uvec2(1u)), _GLF_struct_1(mat4x3(1.0), uvec2(1u), mat2(1.0)), _GLF_struct_2(1.0, ivec4(1), vec3(1.0), mat2x4(1.0), vec4(1.0), ivec3(1)), uvec3(1u), gl_SubgroupInvocationID, _GLF_struct_3(ivec2(1), bvec3(true), 1, uvec3(1u), mat4x2(1.0), mat2x3(1.0))), true);
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.z * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.y * subgroup_size + _GLF_struct_replacement_5._f1.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupsubgroup_idworkgroup_size.y * subgroup_size + ((_GLF_struct_replacement_5._f1.subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
}
