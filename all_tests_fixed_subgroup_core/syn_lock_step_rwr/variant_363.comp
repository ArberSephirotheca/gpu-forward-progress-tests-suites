#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 bvec3 _f0;
 mat4x2 _f1;
 mat4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 mat4 _f3;
 float _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_12 {
 uint _f0;
 mat4 _f1;
 uint _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 vec4 _f1;
 vec4 _f2;
 float _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 vec3 _f1;
 vec4 _f2;
 ivec4 _f3;
 uvec2 _f4;
 uvec3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 float _f1;
 mat4x2 _f2;
 mat4 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 mat3x2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 vec2 _f1;
 uvec2 _f2;
 vec3 _f3;
 vec3 _f4;
 vec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_6 _f0;
 bvec2 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_11 _f3;
 uint workgroup_id;
 _GLF_struct_15 _f4;
 mat2x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat3x2 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_1 {
 uint subgroup_size;
 mat2 _f0;
 _GLF_struct_0 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id;
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_6_1_1_14read_1workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(8.8, 2129.5068)))))), (vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), true && (! (bool(bvec3(false, false, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - log(1.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - log(1.0))) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(1265.8618, 420.049).r)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) - log(1.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - log(1.0), max((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - log(1.0), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - log(1.0))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6082.7210) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / abs(1.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-34.72), (false ? _GLF_FUZZED(12.37) : _GLF_IDENTITY(_GLF_FUZZED(-34.72), max(_GLF_FUZZED(-34.72), _GLF_IDENTITY(_GLF_FUZZED(-34.72), (_GLF_FUZZED(-34.72)) + 0.0)))))), vec2(_GLF_FUZZED(vec4(-7.6, 741.913, -337.491, -532.361).t), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (true))), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(gl_SubgroupSize, mat2(1.0), _GLF_struct_0(mat3x2(1.0), mat3x2(1.0), ivec3(1), mat4x3(1.0), mat4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.4))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))) && true)) && true), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_6(_GLF_struct_2(vec4(1.0), mat4x2(1.0)), _GLF_struct_3(bvec2(true), uvec2(1u)), _GLF_struct_4(vec3(1.0), vec2(1.0), _GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), (~ (uvec2(1u))) | (~ (uvec2(1u)))))), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(vec3((1.0), log(1.0), 0.0)), clamp(float(vec3((1.0), log(1.0), 0.0)), float(vec3((1.0), log(1.0), 0.0)), float(vec3((1.0), log(1.0), 0.0))))) - 0.0)), vec3(1.0), vec4(1.0), bvec4(true)), _GLF_struct_5(uvec3(1u), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_FUZZED(5.3), _GLF_FUZZED(9484.5696)), _GLF_IDENTITY(vec3((vec3(1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, 0.0, 1.0))[2]), (vec3((vec3(1.0, 0.0, 1.0))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(mat4(vec3(1.0, 0.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), mat3(1.0) * (vec3(mat4(vec3(1.0, 0.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))))[1], mix(float((vec3(1.0, 0.0, 1.0))[1]), float(_GLF_FUZZED((- 2.7))), bool(false))), _GLF_IDENTITY((vec3(1.0, 0.0, 1.0))[2], max((vec3(1.0, 0.0, 1.0))[2], _GLF_IDENTITY((vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(925.093)))))[2], ((vec3(1.0, 0.0, 1.0))[2]) + sqrt(0.0)))))) - vec3(0.0, 0.0, 0.0)), bvec3(true, true, true))), vec3(_GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(76.02)), bool(false))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))), 0.0, 1.0)))), sin(0.0) + (float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(97.65), _GLF_FUZZED(5.3), _GLF_FUZZED(9484.5696)), _GLF_IDENTITY(vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, 0.0, 1.0))[2]), (vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, 0.0, 1.0))[2])) - vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-70.29) : 0.0)))), bvec3(true, true, true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(vec3(_GLF_FUZZED(97.65), _GLF_FUZZED(5.3), _GLF_FUZZED(9484.5696)), _GLF_IDENTITY(_GLF_IDENTITY(vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), (_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec3(-9.0, -290.118, -5289.8189)) : (vec3(1.0, 0.0, 1.0)))), (vec3(1.0, 0.0, 1.0))))) / _GLF_IDENTITY(cos(vec3(0.0, 0.0, 0.0)), mix(vec3((cos(vec3(0.0, 0.0, 0.0)))[0], _GLF_FUZZED(8.2), _GLF_FUZZED(272.047)), vec3(_GLF_FUZZED(-8008.8089), _GLF_IDENTITY((cos(vec3(0.0, 0.0, 0.0)))[1], ((cos(vec3(0.0, 0.0, 0.0)))[1]) - 0.0), (cos(vec3(0.0, 0.0, 0.0)))[2]), bvec3(false, true, true))))[2]), (vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), (_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec3(-9.0, -290.118, -5289.8189)) : (vec3(1.0, 0.0, 1.0)))), (vec3(1.0, 0.0, 1.0))))) / cos(vec3(0.0, 0.0, 0.0)))[2])) - cross(vec3(1144.0857, _GLF_IDENTITY(-96.73, (false ? _GLF_FUZZED(-4851.2250) : -96.73)), 9.1), vec3(1144.0857, -96.73, 9.1))), (vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.7)), bool(false))), 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.7)), bool(false))), 0.0, 1.0) : _GLF_FUZZED(mod(vec3(7190.0036, 1.6, -29.94), vec3(-3.1, 3984.4124, 3.0))))))[0], (vec3(1.0, 0.0, 1.0))[1], (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))))[2])) - vec3(0.0, 0.0, 0.0)), bvec3(true, true, true)) : _GLF_FUZZED(vec3(3441.6247, -6.0, -5879.9659))))), vec3(1.0, 0.0, 1.0)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-8213.3546) : float(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_IDENTITY(_GLF_FUZZED(5.3), _GLF_IDENTITY((_GLF_FUZZED(5.3)), max((_GLF_FUZZED(5.3)), _GLF_IDENTITY((_GLF_FUZZED(5.3)), mix(float((_GLF_FUZZED(5.3))), float(_GLF_FUZZED(-565.906)), bool(false))))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_FUZZED(9484.5696)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-62.98)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))), 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 1.0))))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-8213.3546) : float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) / round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED(-7.3))))), _GLF_FUZZED(9484.5696)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))[0], (vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.7)), bool(false)))) / cos(_GLF_ZERO(0.0, injectionSwitch.x)))))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, (0 << _GLF_IDENTITY(int(0), int(0))))))))], (vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-62.98)), (float(_GLF_FUZZED(-62.98))) - 0.0), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(float(_GLF_FUZZED(-62.98)), (float(_GLF_FUZZED(-62.98))) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat2x4(_GLF_IDENTITY(float(_GLF_FUZZED(-62.98)), (float(_GLF_FUZZED(-62.98))) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(float(_GLF_FUZZED(-62.98)), (float(_GLF_FUZZED(-62.98))) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-62.98)), (float(_GLF_FUZZED(-62.98))) - 0.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_FUZZED(-62.98)), (float(_GLF_FUZZED(-62.98))) - 0.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0))))), 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 1.0))))), ((false ? _GLF_FUZZED(-8213.3546) : float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_FUZZED(9484.5696)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(mat2x4(vec3(1.0, 0.0, 1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) + vec3(0.0, 0.0, 0.0))), (vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), max((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))))[0], (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (vec3(1.0, 0.0, 1.0)) * vec3(1.0, 1.0, 1.0)))[1], (vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-62.98)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))))), 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 1.0)))))) - 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-8213.3546) : float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) / round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(9484.5696), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0), (false ? _GLF_FUZZED(mat3x4(-8.9, -444.862, -1975.6357, -6864.7985, 1428.8203, -9.0, -6.1, 682.930, -328.305, 75.60, -3.8, -783.110)) : mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0)))))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-62.98)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 1.0))))), clamp((false ? _GLF_FUZZED(-8213.3546) : float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) / round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(9484.5696), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0), (false ? _GLF_FUZZED(mat3x4(-8.9, -444.862, -1975.6357, -6864.7985, 1428.8203, -9.0, -6.1, 682.930, -328.305, 75.60, -3.8, -783.110)) : mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0)))))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-62.98)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(-8213.3546) : float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) / round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(9484.5696), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0), (false ? _GLF_FUZZED(mat3x4(-8.9, -444.862, -1975.6357, -6864.7985, 1428.8203, -9.0, -6.1, 682.930, -328.305, 75.60, -3.8, -783.110)) : mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0)))))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-62.98)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(-8213.3546) : float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(97.65), _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) / round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(9484.5696), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0), (false ? _GLF_FUZZED(mat3x4(-8.9, -444.862, -1975.6357, -6864.7985, 1428.8203, -9.0, -6.1, 682.930, -328.305, 75.60, -3.8, -783.110)) : mat3x4(_GLF_FUZZED(9484.5696), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(0.0), tan(0.0), 0.0)))))), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 1.0)), clamp((vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0)), (vec3(1.0, 0.0, 1.0))))[0], (vec3(1.0, 0.0, 1.0))[1], (vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-62.98)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))), 1.0))[2]), bvec3(true, true, true))), vec3(1.0, 0.0, 1.0)))))))))))), vec3(1.0))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / 1.0) < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bool(bvec3(bool(bvec2(true, _GLF_IDENTITY(true, (true) && true))), true, true)))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) || false), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) || false), false, false, false))))), ! (! (false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) < injectionSwitch.y)))))))) && true) && (true))), _GLF_struct_8(bvec2(true), 1.0, mat4x2(1.0), mat4(1.0), _GLF_struct_7(bvec4(true), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec4(1.0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1), min(clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)), 1))) << 0), 1, 1))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec4(67362, 17719, -99821, 61465), (_GLF_IDENTITY(ivec4(67362, _GLF_IDENTITY(17719, min(17719, 17719)), -99821, 61465), clamp(ivec4(67362, 17719, -99821, 61465), ivec4(67362, 17719, -99821, 61465), ivec4(67362, 17719, -99821, 61465)))) / ivec4(1, 1, 1, 1))), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(_GLF_IDENTITY(ivec4(67362, 17719, -99821, 61465), clamp(ivec4(67362, 17719, -99821, 61465), _GLF_IDENTITY(ivec4(67362, 17719, -99821, 61465), _GLF_IDENTITY((ivec4(67362, 17719, -99821, 61465)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(67362, 17719, -99821, _GLF_IDENTITY(61465, (61465) >> 0)), (ivec4(67362, 17719, -99821, 61465)) | (ivec4(67362, 17719, -99821, 61465))), (_GLF_IDENTITY(ivec4(67362, 17719, _GLF_IDENTITY(-99821, (-99821) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 61465), (ivec4(67362, 17719, -99821, 61465)) | (ivec4(67362, 17719, -99821, 61465)))) - ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) / 1)))), (_GLF_IDENTITY((ivec4(67362, 17719, -99821, 61465)) | (_GLF_IDENTITY(ivec4(67362, 17719, -99821, 61465), (ivec4(67362, 17719, -99821, 61465)) | (ivec4(67362, 17719, -99821, _GLF_IDENTITY(61465, (_GLF_IDENTITY(61465, clamp(61465, 61465, 61465))) - 0))))), (false ? _GLF_FUZZED(ivec4(-19523, _GLF_IDENTITY(43849, (43849) << 0), 8652, -37082)) : (ivec4(67362, 17719, -99821, 61465)) | (_GLF_IDENTITY(ivec4(67362, 17719, -99821, 61465), (ivec4(67362, 17719, -99821, 61465)) | (ivec4(67362, 17719, -99821, 61465))))))) | ((ivec4(67362, 17719, -99821, 61465)) | (_GLF_IDENTITY(ivec4(67362, 17719, -99821, 61465), (ivec4(67362, 17719, -99821, 61465)) | (ivec4(_GLF_IDENTITY(67362, (67362) - 0), 17719, -99821, 61465))))))), ivec4(67362, 17719, -99821, 61465))))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (false ? _GLF_FUZZED(ivec4(-98653, 13593, -36483, -46578)) : ivec4(1, 1, 1, 1))) * (~ (_GLF_FUZZED(_GLF_IDENTITY(ivec4(67362, 17719, -99821, 61465), (ivec4(67362, 17719, -99821, 61465)) * ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))))))))) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-21784))) : _GLF_FUZZED(-46739))), clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(48439) : 1)), clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(1, 1, 1))) >> 0)) * 1)))))), min(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1))), 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(62721, int(ivec2(62721, 1)))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))), int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)))), _GLF_IDENTITY(1, min(1, 1)), 0)))) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) + 0), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1))))))), uvec2(1u), uvec3(1u), mat4x3(1.0))), _GLF_struct_11(_GLF_struct_9(uvec3(1u), vec4(1.0), vec4(1.0), 1.0), _GLF_struct_10(vec4(1.0), bvec3(true))), gl_WorkGroupID.x, _GLF_struct_15(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_struct_12(1u, mat4(1.0), 1u, mat2x4(1.0)), _GLF_struct_13(ivec4(1), uvec4(1u), mat4x2(1.0), mat4(1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))), _GLF_IDENTITY(true, ! (! (true))))))), true))))), _GLF_struct_14(bvec3(true), mat4x2(1.0), mat4(1.0), mat4x2(1.0))), mat2x3(1.0), mat3x4(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.w = _GLF_struct_replacement_16.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.w * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.z = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_1_6_1_1_14read_1workgroup_base.y = GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-267.132), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))).x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))), true && ((! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, false || (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, ! (! (((injectionSwitch.x < injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, (((injectionSwitch.x < injectionSwitch.y)) || false) || false)) || false))), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(24967u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(681.518)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)) || false))) && true))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_base.y + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y * _GLF_struct_replacement_1.subgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_base.y, (GLF_merged2_0_1_6_1_1_14read_1workgroup_base.y) - (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))), uint(1u)))) + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y * _GLF_struct_replacement_1.subgroup_size))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id) * uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id) * uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id) * uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id) * uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u))) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))))) / uvec4(1u, 1u, 1u, 1u)).z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id) / uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u)).z) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(false || (false), false, false)), (bool(bvec3(false || (false), false, false))) || false)))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.y = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_1workgroup_base, (true ? GLF_merged2_0_1_6_1_1_14read_1workgroup_base : _GLF_FUZZED((uvec2(144890u, 123490u) - GLF_merged2_0_1_6_1_1_14read_1workgroup_base)))).y + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y * _GLF_struct_replacement_1.subgroup_size + (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z + 1), ((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z + 1)) | ((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))))) % _GLF_struct_replacement_1.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.y], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.x = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, sqrt(0.0), 1.0, 1.0, 1.0)))) + _GLF_ZERO(0.0, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(548.233), float(vec3(_GLF_FUZZED(548.233), 0.0, 1.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) && true)) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_6_1_1_14read_1workgroup_base.x = GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_1_6_1_1_14read_1workgroup_base.x + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.y], clamp(buf[GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.y], buf[GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.y], buf[GLF_merged4_0_1_6_1_1_11_2_1_14_3_1_14read_1virtual_gidworkgroup_baseworkgroup_size.y])), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false)))))))))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0)) / 1.0) > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.x = _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 1u))) * ((read_2))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-298.800, 62.64)))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_1_6_1_1_14read_1workgroup_base.x + 1 == GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.x) + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ _GLF_IDENTITY((1), 0 + ((_GLF_IDENTITY(1, 0 | (1)))))))), _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), ~ (~ ((1))))), max(~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0))), ~ (~ (1))))) / 1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, min(1, 1)))), (~ (~ (1))) >> 0)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bool(true))) && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), bool(bvec4(false, false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) * 1.0), min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-6559.1825)), (float(_GLF_FUZZED(-6559.1825))) + 0.0), bool(false))), injectionSwitch.x)))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-6559.1825)), (float(_GLF_FUZZED(-6559.1825))) + 0.0), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))))), false))) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}
