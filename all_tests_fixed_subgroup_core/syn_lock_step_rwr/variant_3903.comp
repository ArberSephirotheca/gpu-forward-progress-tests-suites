#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) || false))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))))) + 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec2((injectionSwitch)[0], 1.0)), (float(vec2((injectionSwitch)[0], 1.0))) - 0.0)), _GLF_FUZZED(-19.83)), bvec2(true, false))).y, 1.0, 0.0)))))) + 0.0)) || false))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(injectionSwitch.y, 1.0, 0.0)))))) + 0.0, min((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(injectionSwitch.y, 1.0, 0.0)))))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(injectionSwitch.y, 1.0, 0.0)))))) + 0.0, ((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(injectionSwitch.y, 1.0, 0.0)))))) + 0.0) - 0.0))))))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(83.64)), float(1.0), bool(true))), 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(injectionSwitch.y, 1.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(injectionSwitch.y, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-916.075))), 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 0.0)))))))) + 0.0)))), false, true, false)), ! (! (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.1)), float(0.0), bool(true)))), _GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(2.2, -366.853, -3484.2956)) : vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))))))))))) + 0.0)))), false, true, false)))))) || false), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), min(vec3(injectionSwitch.y, 1.0, 0.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)), mix(vec3(_GLF_FUZZED(-97.48), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[1], _GLF_FUZZED(86.52)), _GLF_IDENTITY(vec3((mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[0], _GLF_FUZZED(-908.448), (mat3(1.0) * (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))) / 1.0), 1.0, 0.0)))[_GLF_IDENTITY(2, ~ (~ (2)))]), (vec3((mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[0], _GLF_FUZZED(-908.448), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[2])) * cos(vec3(0.0, 0.0, 0.0))), bvec3(true, false, true))))))))) + 0.0)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))).y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), _GLF_IDENTITY(mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, 1.0, 0.0)), max(_GLF_IDENTITY((vec3(injectionSwitch.y, 1.0, 0.0)), vec3(0.0, 0.0, 0.0) + ((vec3(injectionSwitch.y, 1.0, 0.0)))), (vec3(injectionSwitch.y, 1.0, 0.0)))), mix(vec3(_GLF_FUZZED(-97.48), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[1], _GLF_FUZZED(86.52)), vec3((mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, 1.0, 0.0)), ((vec3(injectionSwitch.y, 1.0, 0.0))) + vec3(0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-908.448), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[2]), bvec3(true, false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) + 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))).y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)), mix(vec3(_GLF_FUZZED(-97.48), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[1], _GLF_FUZZED(86.52)), vec3((mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, 1.0, 0.0)), ((vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) + vec3(0.0, 0.0, 0.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(-908.448, (true ? _GLF_IDENTITY(-908.448, min(-908.448, -908.448)) : _GLF_FUZZED(6772.3535)))), _GLF_IDENTITY((mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[2], max((mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[2], (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[2]))), bvec3(true, false, true))))))))) + 0.0)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))).y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)), mix(vec3(_GLF_FUZZED(-97.48), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[1], _GLF_FUZZED(86.52)), vec3((mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, 1.0, 0.0)), ((vec3(injectionSwitch.y, 1.0, 0.0))) + vec3(0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-908.448), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[2]), bvec3(true, false, true))))))))) + 0.0), bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), min(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))).y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), _GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)), mix(vec3(_GLF_FUZZED(-97.48), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[1], _GLF_FUZZED(86.52)), vec3((mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch.y, 1.0, 0.0)), ((vec3(injectionSwitch.y, 1.0, 0.0))) + vec3(0.0, 0.0, 0.0)))[0], _GLF_FUZZED(-908.448), (mat3(1.0) * (vec3(injectionSwitch.y, 1.0, 0.0)))[2]), bvec3(true, false, true))))))))) + 0.0))))))))) || false), true, true)))), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), bool(bvec4(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), true, true, false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(0.8) : abs(1.0)))) - 0.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) / 1.0)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), false || (true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.12)), bool(false)))))))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(0.8) : abs(1.0)))) - 0.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) / 1.0)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), false || (true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.12)), bool(false)))))))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(0.8) : abs(1.0)))) - 0.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) / 1.0)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), false || (true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.12)), bool(false)))))))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(0.8) : abs(1.0)))) - 0.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) / 1.0)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), false || (true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.12)), bool(false)))))))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(0.8) : abs(1.0)))) - 0.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) / 1.0)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), false || (true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.12)), bool(false)))))))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(0.8) : abs(1.0)))) - 0.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) / 1.0)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), false || (true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.12)), bool(false)))))))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(0.8) : abs(1.0)))) - 0.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0))), (float(_GLF_IDENTITY(mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(1.0, 1.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) / 1.0)))))))))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))), false || (true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.12)), bool(false)))))))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), false))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-0.1 / 8.1))), float(injectionSwitch.y), bool(true))), abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(64.79)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), _GLF_IDENTITY(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), min(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.57)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), _GLF_IDENTITY(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), min(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.57)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))))), false, true)), false || (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), _GLF_IDENTITY(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), min(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.57)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))))), false, true)), ! (! (bool(bvec3((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), _GLF_IDENTITY(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), min(float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), float(mat2x4(float(vec2(injectionSwitch.y, abs(1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0)))))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.57)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))))), false, true)))))))) && true)) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, abs(1.0), 0.0))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0) : _GLF_FUZZED(76.99))), _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, log(1.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)))))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))), false, false, true))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))))) && true, ! (! ((_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), abs(1.0)), max(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), abs(1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), abs(1.0)), vec2(mat4(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), abs(1.0)), 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0)))))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, abs(1.0))), (float(vec2(injectionSwitch.y, abs(1.0)))) * 1.0))))))))) && true))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (0u & 54967u)), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_NumWorkGroups, (0u & 54967u)))))).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), true && _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), true && (! ((false))))), ! (! (! (_GLF_IDENTITY(! ((false)), true && (! (_GLF_IDENTITY((false), false || ((false)))))))))))), false || (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(896.395, 1.9)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9761.3830)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9761.3830)), bvec2(true, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-3600.3475)), bool(false))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec4(-74.55, -8.0, -0.3, -28.70))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y)), false)), true, true)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), true, true)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), true, true)))))), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), true, true))), false, false)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2958.9805))))), false)), true, true)))))), true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(max(-68.13, _GLF_IDENTITY(0.1, clamp(0.1, _GLF_IDENTITY(_GLF_IDENTITY(0.1, max(0.1, 0.1)), min(0.1, 0.1)), 0.1))), max(max(-68.13, _GLF_IDENTITY(0.1, _GLF_IDENTITY(clamp(0.1, _GLF_IDENTITY(0.1, min(0.1, 0.1)), 0.1), (true ? clamp(0.1, _GLF_IDENTITY(0.1, min(0.1, 0.1)), 0.1) : _GLF_FUZZED(22.63))))), max(-68.13, _GLF_IDENTITY(0.1, clamp(0.1, _GLF_IDENTITY(0.1, min(0.1, 0.1)), 0.1))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))), (0u ^ (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))))) >> 0u)) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))), min(0u ^ (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))), 0u ^ (_GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))))))))), (workgroup_size)))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), 0u + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, 1u, 1u), max(uvec4(workgroup_size, 0u, 1u, 1u), uvec4(workgroup_size, 0u, 1u, 1u)))))))), 0u | ((_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, 0u, 1u, 1u), (uvec4(workgroup_size, 0u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))))))))), ((workgroup_size)) - 0u))) | (_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (1u & 1u) * ((workgroup_size))), ((workgroup_size)) - 0u), max(_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(workgroup_size), clamp(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), ~ (~ (uint(workgroup_size)))), uint(workgroup_size)))))), _GLF_IDENTITY(((workgroup_size)), (((workgroup_size))) << 0u) - 0u), (true ? 0u + _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u) : _GLF_FUZZED((mat4x3(9.8, 4.5, 2.5, 53.93, 6.1, 479.892, -4002.9862, 19.67, 248.444, -66.33, -1745.0756, -1.2) , workgroup_size)))), _GLF_IDENTITY(0u + _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ((workgroup_size)))) - 0u), (0u + _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : ((workgroup_size)))) - 0u)) * 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), ((workgroup_size)) - 0u)), (_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))) | (_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), ((workgroup_size)) - 0u)), (_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))) | (_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))))), clamp((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))))), max((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u))))), 0u + ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)) + _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u), 0u ^ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u)))))))))))) : _GLF_FUZZED(37503u))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id)))), (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + subgroup_local_id))))) << 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))) || false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))) || false))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))) || false))))), false, false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true)))), false, true)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-9551.8655 + -4.8))), vec2(_GLF_FUZZED(61.25), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y)))), false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.56), _GLF_FUZZED(2688.0466)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u)) * 1u)) >> (1u ^ 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), max(_GLF_IDENTITY((virtual_gid), 0u + ((virtual_gid))), (virtual_gid))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))) : _GLF_FUZZED(floatBitsToUint(27.14))), max((true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))) : _GLF_FUZZED(floatBitsToUint(27.14))), (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))))) : _GLF_FUZZED(floatBitsToUint(27.14))))))], _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))), (true ? (~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))) : _GLF_FUZZED(81475))), int(ivec3(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && _GLF_IDENTITY(true, ! (! (true))))))) || false) ? ~ (~ (4)) : _GLF_IDENTITY(_GLF_FUZZED(-32675), max(_GLF_FUZZED(-32675), _GLF_IDENTITY(_GLF_FUZZED(-32675), (_GLF_IDENTITY(_GLF_FUZZED(-32675), ~ (~ (_GLF_FUZZED(-32675))))) >> 0))))), 1, 1))), (false ? _GLF_FUZZED(14818) : _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))), (true ? (~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))) : _GLF_FUZZED(81475))), int(ivec3(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && _GLF_IDENTITY(true, ! (! (true))))))) || false) ? ~ (~ (4)) : _GLF_IDENTITY(_GLF_FUZZED(-32675), max(_GLF_FUZZED(-32675), _GLF_IDENTITY(_GLF_FUZZED(-32675), (_GLF_IDENTITY(_GLF_FUZZED(-32675), ~ (~ (_GLF_FUZZED(-32675))))) >> 0))))), 1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))), (true ? (~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))) : _GLF_FUZZED(81475))), int(ivec3(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && _GLF_IDENTITY(true, ! (! (true))))))) || false) ? ~ (~ (4)) : _GLF_IDENTITY(_GLF_FUZZED(-32675), max(_GLF_FUZZED(-32675), _GLF_IDENTITY(_GLF_FUZZED(-32675), (_GLF_IDENTITY(_GLF_FUZZED(-32675), ~ (~ (_GLF_FUZZED(-32675))))) >> 0))))), 1, 1))), 0 | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))), (true ? (~ _GLF_IDENTITY((4), ((4)) / (1 & (1 & 1)))) : _GLF_FUZZED(81475))), int(ivec3(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && true)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))) && _GLF_IDENTITY(true, ! (! (true))))))) || false) ? ~ (~ (4)) : _GLF_IDENTITY(_GLF_FUZZED(-32675), max(_GLF_FUZZED(-32675), _GLF_IDENTITY(_GLF_FUZZED(-32675), (_GLF_IDENTITY(_GLF_FUZZED(-32675), ~ (~ (_GLF_FUZZED(-32675))))) >> 0))))), 1, 1)))))) / 1)))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-6570.2178)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(vec2(1.7, -2908.3769), vec2(-1365.4332, -5.1), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), (read_1 + 1) >> 0u), (read_1 + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))) ^ _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), int(ivec3((_GLF_IDENTITY(1, 0 | (1))) ^ _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), 1, (1 & 1))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) ^ 0), (_GLF_IDENTITY(read_1, 0u ^ (read_1)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) ^ 0)) | (_GLF_IDENTITY(read_1, 0u ^ (read_1)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) ^ 0))) : _GLF_FUZZED(subgroup_id)))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) - (0 << _GLF_IDENTITY(int(3), int(3))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (64))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(53.74)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9026.8015)), bool(false))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-3.8)), bvec2(false, false))).y)))))), ! (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9026.8015)), bool(false)), (true ? mix(float(injectionSwitch.x), float(_GLF_FUZZED(9026.8015)), bool(false)) : _GLF_FUZZED(pow(-0.3, -201.527))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (false ? _GLF_FUZZED(read_1) : uint(read_1 + 1 == read_2))), max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1)))) | _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1), (~ (read_1)) | (0u | 0u)), (~ (read_1)) << 0u))) + _GLF_IDENTITY(1, (1) / 1)) ^ 0u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1), (~ (read_1)) | (0u | 0u)), (~ (read_1)) << 0u))) + _GLF_IDENTITY(1, (1) / 1)) ^ 0u)), 0u | ((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_1), (~ (read_1)) | (0u | 0u)), (~ (read_1)) << 0u))) + _GLF_IDENTITY(1, (1) / 1)) ^ 0u))))))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) - (0u | 0u))))) >> 0u), _GLF_IDENTITY((read_2) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (0u) + 0u) + ((read_2) - 0u)))), uint(read_1 + 1 == read_2))) + _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))))))))) && true)) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) || false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) || false)))))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (bool(false)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true, false))))))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true, false))))))))), (bool(bool(((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true, false)))))))))) || false))))))) || false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY((true), ((true)) || false), false, _GLF_IDENTITY(true, false || (true)), false))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), ((true)) && true)) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((true), ((true)) && true)) || false), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY((true), ((true)) && true)) || false), bool(bvec4(! ((_GLF_IDENTITY((true), ((true)) && true)) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
