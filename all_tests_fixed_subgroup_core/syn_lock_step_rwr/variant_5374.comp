#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 vec3 _f0;
 uvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 mat3x4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_2 {
 uint subgroup_id;
 bvec4 _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(gl_SubgroupID, bvec4(true), _GLF_struct_1(ivec3(1), _GLF_struct_0(vec3(1.0), uvec3(1u), mat3x4(1.0)), mat3x4(1.0), mat2(1.0)));
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size + GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.z;
 GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w = virtual_gid;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size + ((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.z + 1) % subgroup_size);
 GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.x = next_virtual_gid;
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y = read_1;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y + 1), 4, 64, 4);
  }
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w], 4, 64, 0);
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y + 1 == read_2) + 1, 4, 64, 4);
}
