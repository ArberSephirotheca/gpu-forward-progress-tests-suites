#version 460
struct _GLF_struct_3 {
 vec4 _f0;
 vec3 _f1;
 mat3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat2x3 _f1;
 uvec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
 uvec3 _f2;
 uint read_1;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 vec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(_GLF_struct_0(mat4x2(1.0), vec2(1.0), mat2x4(1.0)), ivec3(1)), _GLF_struct_4(uvec2(1u), _GLF_struct_2(bvec4(true), mat2x3(1.0), uvec2(1u), true), uvec3(1u), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_3(vec4(1.0), vec3(1.0), mat3(1.0), bvec2(true))));
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_5._f1.read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_5._f1.read_1 + 1 == read_2) + 1, 4, 64, 4);
}
