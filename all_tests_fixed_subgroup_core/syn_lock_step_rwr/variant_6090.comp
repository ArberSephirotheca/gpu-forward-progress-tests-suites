#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat4x3 _f0;
 uvec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 mat2x4 _f1;
 uint virtual_gid;
 uint _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 ivec2 _f1;
 mat3x4 _f2;
 bvec4 _f3;
 int _f4;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 bool _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 vec3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 uvec2 _f1;
 _GLF_struct_2 _f2;
 ivec3 _f3;
 _GLF_struct_5 _f4;
 ivec2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || false, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || false))), false, true))), true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(96.24)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1090.1492)), float(injectionSwitch.x), bool(true))))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), 1.0, 0.0, 0.0, sin(0.0), 1.0)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), true, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), true, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, tan(0.0), 1.0, 0.0, 0.0, sin(0.0), 1.0)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true))), true)), true)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, false, true))))), true)), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), true))))), true, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-228.435)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), false))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)) || ((! ((injectionSwitch.x < injectionSwitch.y)))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true)), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))), true)), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true))))))))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || _GLF_IDENTITY(false, true && (false)), false, true)), bool(bvec4(bool(bvec3((false) || false, false, true)), true, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) || false), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-88.13))), 0.0, 1.0, 1.0)), min(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-88.13))), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-88.13))), 0.0, 1.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) * mat4(1.0))) / vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(236.858)), bool(false))), mix(float(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(236.858)), bool(false)))), float(_GLF_FUZZED(-121.249)), bool(false))), 1.0, 1.0, 0.0, 1.0, abs(1.0)))).y)), false, true)), false || _GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false, true))), bool(bvec2(_GLF_IDENTITY((bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)), (true ? (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)) : _GLF_FUZZED(6.9)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)), (true ? (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)) : _GLF_FUZZED(6.9)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)), (true ? (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)) : _GLF_FUZZED(6.9)))))) > injectionSwitch.y)), false, true))), ((bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)), (true ? (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)) : _GLF_FUZZED(6.9)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)), (true ? (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)) : _GLF_FUZZED(6.9)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)), (true ? (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(-47.04)) : _GLF_FUZZED(6.9)))))) > injectionSwitch.y)), false, true)))) && true), false))))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9666.8821)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) - 0u))), max(~ (_GLF_IDENTITY(0u, (0u) ^ 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) << 0u))) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), ~ (~ (_GLF_IDENTITY(0u, (0u) ^ 0u))))), min(~ (_GLF_IDENTITY(0u, (0u) ^ 0u)), ~ (_GLF_IDENTITY(0u, (0u) ^ 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(156474u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), 0u ^ (0u)), 0u, 0u, (0u | 0u))), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, (0u | 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << _GLF_IDENTITY(0u, (0u) + 0u))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u)), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u * (_GLF_IDENTITY(0u, 0u ^ (0u))))) << 0u)) | 0u))), 0u, 0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u)))))) >> 0u), uint(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, (0u | 0u))), uint(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, _GLF_IDENTITY(0u, (0u) | (0u)), (0u | 0u))))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, (5u) | (5u)), 5u))), uvec3(5u)))).x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (0u & 31019u) ^ (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), false || (bool(bvec4(true, true, true, true))))) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, true, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3x4(1.0), uvec2(1u), _GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-4323) : 1)), 1))))), ivec3(1))), true, mat4x3(1.0), mat4x3(1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(36.46), max(_GLF_FUZZED(36.46), _GLF_FUZZED(36.46)))), mix(float(_GLF_FUZZED(462.784)), float((_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(36.46), max(_GLF_FUZZED(36.46), _GLF_FUZZED(36.46))))), bool(true)))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-2.7))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(6.8, -5232.1184, -49.53).x)), bool(false)))))), mat2x4(1.0)), mat4x3(1.0), _GLF_struct_1(mat4x3(1.0), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(1))), mat3x4(1.0), bvec4(true), 1)), ivec3(1), _GLF_struct_5(_GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(362.203), _GLF_FUZZED(-9.3), _GLF_IDENTITY((vec4(1.0))[3], ((vec4(1.0))[_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, 3))) ^ 0)]) - 0.0)), vec4(_GLF_FUZZED(-320.061), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-23.93)), bvec4(false, true, true, false))), vec4(1.0))), mix(vec4((_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(362.203), _GLF_FUZZED(-9.3), _GLF_IDENTITY((vec4(1.0))[3], _GLF_IDENTITY(((vec4(1.0))[3]) - 0.0, clamp(((vec4(1.0))[3]) - 0.0, _GLF_IDENTITY(((vec4(1.0))[3]) - 0.0, clamp(_GLF_IDENTITY(((vec4(1.0))[3]) - 0.0, 0.0 + (((vec4(1.0))[3]) - 0.0)), ((vec4(1.0))[3]) - 0.0, _GLF_IDENTITY(((vec4(1.0))[3]) - 0.0, clamp(((vec4(1.0))[3]) - 0.0, ((vec4(1.0))[3]) - 0.0, ((vec4(1.0))[3]) - 0.0)))), ((vec4(1.0))[3]) - 0.0)))), vec4(_GLF_FUZZED(-320.061), _GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY((vec4(1.0)), vec4(mat4x2((vec4(1.0)), 0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-23.93)), bvec4(false, true, true, false))), vec4(1.0))))[0], _GLF_FUZZED(-351.995), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(362.203), _GLF_FUZZED(-9.3), _GLF_IDENTITY((vec4(1.0))[3], ((vec4(1.0))[3]) - 0.0)), vec4(_GLF_FUZZED(-320.061), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-23.93)), bvec4(false, true, true, false))), vec4(1.0))))[2], _GLF_FUZZED(3.9)), vec4(_GLF_FUZZED(-71.53), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(362.203), _GLF_FUZZED(-9.3), _GLF_IDENTITY((vec4(1.0))[3], ((vec4(1.0))[3]) - 0.0)), vec4(_GLF_FUZZED(-320.061), (vec4(1.0))[1], (vec4(1.0))[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, clamp(2, 2, 2)), 2))], _GLF_FUZZED(-23.93)), bvec4(false, true, true, false))), vec4(1.0))))[1], _GLF_FUZZED(-9.0), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(362.203), _GLF_FUZZED(-9.3), _GLF_IDENTITY((vec4(1.0))[3], ((vec4(1.0))[3]) - 0.0)), vec4(_GLF_FUZZED(-320.061), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-23.93)), bvec4(false, true, true, false))), vec4(1.0))))[3]), bvec4(false, true, _GLF_IDENTITY(false, bool(bool(false))), true))), mat2x4(1.0), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), 1u), _GLF_struct_4(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0 + (float(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0)), (mat4(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(-7.1)), float(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), _GLF_IDENTITY(bool(true), (bool(true)) || false))))), uvec4(1u), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-22.04)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.9) : 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), mix(float(_GLF_FUZZED(89.94)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), cos(0.0), 1.0, 1.0)))))))), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (ivec2(1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(618.767)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(1.7)) : mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(1.7)) : mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))), mat2(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(1.7)) : mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(618.767)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-909.136)), (_GLF_IDENTITY(float(_GLF_FUZZED(-909.136)), mix(float(float(_GLF_FUZZED(-909.136))), float(_GLF_FUZZED(59.64)), bool(false)))) - 0.0), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat2(1.7)) : mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, true)), true && (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(618.767)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(1.7)) : mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, true)), true && (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(618.767)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.6))), 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(1.7)) : mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))))), _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(618.767)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(618.767)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-909.136)), bool(false)))), bool(true))) > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, ! (! (false))), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) - 0u) * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) ^ 0u) + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))))) << 0u))) % subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), min((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), 0u, 1u, 0u)), (true ? uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_id)))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), min((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), 0u, 1u, 0u)), (true ? uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_id)))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), min((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), 0u, 1u, 0u)), (true ? uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) ? 1 : _GLF_FUZZED(54610))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35571)))))))), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_id)))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), clamp((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), (uint(uvec3(subgroup_local_id + 1, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) + 0u))))), (0u ^ 0u) | (0u + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(subgroup_local_id + 1, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec3(subgroup_local_id + 1, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) + 0u))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 1, 0), (ivec4(1, 0, 1, 0)) | (ivec4(1, 0, 1, 0)))))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1)))) - 0u)))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) >> _GLF_IDENTITY((0u | 0u), ~ (~ (_GLF_IDENTITY((0u | 0u), uint(uvec2((0u | 0u), 1u))))))))) | ((subgroup_local_id + 1))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_6._f4._f0.virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(_GLF_IDENTITY(read_1, (read_1) + 0u), _GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, min(read_1, read_1))))), (max(_GLF_IDENTITY(read_1, (read_1) + 0u), _GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, _GLF_IDENTITY(read_1, min(read_1, read_1))), (clamp(read_1, read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) | 0u)))) - 0u)) + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(41.31), _GLF_FUZZED(8.3)), bvec2(false, false))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-6817.4413)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(5.9))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), max(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))))), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(sinh(80.98)) : determinant(mat2(0.0, 0.0, 1.0, 0.0)))), 0.0)), max(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.3) : 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) - 0.0)))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))), min(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), max(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), clamp(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), max(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))))))), _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), max(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, determinant(mat2(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0)))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))))))), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.3)), bool(false))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), max(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)), float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, tan(0.0) + (1.0))), float(_GLF_IDENTITY(_GLF_FUZZED((131.379 / -9218.7762)), (true ? _GLF_FUZZED((131.379 / -9218.7762)) : _GLF_FUZZED(sqrt(-108.898))))), bool(false)))), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))))), 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0)))))))), true))), true, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), true && ((false) && _GLF_IDENTITY(true, (true) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) || false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), true, true, false)))), false || ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool((true)))) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bool((true)))) || false)) && true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6256.7636))), 0.0, 1.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, abs(0.0), 1.0, abs(1.0), cos(0.0))))), 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(6256.7636), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(6256.7636) : _GLF_FUZZED(-8844.2950))))), 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), float(mat4x2(injectionSwitch.x, abs(0.0), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), sin(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.887))) + (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat4x3((1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(mat4x3((1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (mat4x3((1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) * mat4(1.0)) : _GLF_FUZZED(mat4x3(7.9, -535.544, -3085.2350, 811.880, -485.271, -6499.2868, -7.6, -1300.1138, 9.2, 4.5, -4.4, -96.62)))))) / 1.0))), 0.0, 0.0, 0.0))))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! (! (_GLF_DEAD(false))))), ! (! ((! (! (! (_GLF_DEAD(false)))))))))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(mat4(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_6._f4._f0.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(clamp(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitCount(19060)))) * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(ivec3(_GLF_IDENTITY(1, 1 * (1)), 0, 0)))) + 0))), 0, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0)))) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0) * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (true ? _GLF_IDENTITY(1 * (1), (1 * (1)) + 0) : _GLF_FUZZED(ivec4(-96614, 64526, 98468, -96048)[0])))))), 0, 0))))), read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))), (_GLF_IDENTITY(clamp(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitCount(19060)))) * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(ivec3(_GLF_IDENTITY(1, 1 * (1)), 0, 0)))) + 0))), 0, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0)))) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0) * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (true ? _GLF_IDENTITY(1 * (1), (1 * (1)) + 0) : _GLF_FUZZED(ivec4(-96614, 64526, 98468, -96048)[0])))))), 0, 0))))), read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))), ~ (_GLF_IDENTITY(~ (clamp(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitCount(19060)))) * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(ivec3(_GLF_IDENTITY(1, 1 * (1)), 0, 0)))) + 0))), 0, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0)))) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0) * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (true ? _GLF_IDENTITY(1 * (1), (1 * (1)) + 0) : _GLF_FUZZED(ivec4(-96614, 64526, 98468, -96048)[0])))))), 0, 0))))), read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)))), uint(uvec4(~ (clamp(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitCount(19060)))) * (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(ivec3(_GLF_IDENTITY(1, 1 * (1)), 0, 0)))) + 0))), 0, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, 1 * (1)))), 0, 0)))) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0) * (1)), (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (true ? _GLF_IDENTITY(1 * (1), (1 * (1)) + 0) : _GLF_FUZZED(ivec4(-96614, 64526, 98468, -96048)[0])))))), 0, 0))))), read_1 + 1, _GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)))), 0u, 1u, 1u)))))) | 0u)) == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
