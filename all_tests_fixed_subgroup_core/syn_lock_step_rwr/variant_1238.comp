#version 460
struct _GLF_struct_0 {
 uint next_virtual_gid;
 ivec2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.w * workgroup_id;
 GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_local_id;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.y + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_13_2_1_14_3_1_14num_workgroupsubgroup_sizeworkgroup_baseworkgroup_size.y), ivec2(1));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
}
