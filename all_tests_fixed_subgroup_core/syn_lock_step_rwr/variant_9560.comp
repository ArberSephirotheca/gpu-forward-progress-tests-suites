#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(140272u))), (_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[_GLF_IDENTITY(1, int(int(1)))]) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (~ (_GLF_IDENTITY(int(8), int(8)))))))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]), (false ? _GLF_FUZZED(subgroup_id) : (gl_WorkGroupSize[1]))) + 0u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-62.78)))) - 0.0) < injectionSwitch.y)) ? _GLF_IDENTITY((gl_WorkGroupSize[1]), ((gl_WorkGroupSize[1])) | (_GLF_IDENTITY((gl_WorkGroupSize[1]), ((gl_WorkGroupSize[1])) ^ 0u))) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), int(8))))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))), bool(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))) ? (gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52950) : 1))) | (_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))))]) + 0u : _GLF_FUZZED(140272u))), (_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))[2]))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u))), (_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + (gl_WorkGroupSize))[1]) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))[2])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), 1 * (0 << _GLF_IDENTITY(int(8), int(8))))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u))), (_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[_GLF_IDENTITY(1, int(int(1)))]) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))[2])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) >> 0))))], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]), (false ? _GLF_FUZZED(subgroup_id) : (gl_WorkGroupSize[1]))) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((gl_WorkGroupSize[1]), ((gl_WorkGroupSize[1])) | ((gl_WorkGroupSize[1]))) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), int(8))))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bool(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))) ? (gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52950) : 1))) | (1))))]) + 0u : _GLF_FUZZED(140272u))), (_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(int(8), int(8))))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bool(bool(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))) ? _GLF_IDENTITY((gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52950) : 1))) | (1))))]) + 0u, 0u ^ (_GLF_IDENTITY((gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52950) : 1))) | (1))))]) + 0u, max((gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52950) : 1))) | (1))))]) + 0u, (gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52950) : 1))) | (1))))]) + 0u)))) : _GLF_FUZZED(140272u))), (_GLF_IDENTITY((gl_WorkGroupSize[1]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))) >> uvec3(0u, 0u, 0u))[2]))) + uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, 0 ^ (1))) ^ (0 << _GLF_IDENTITY(int(8), int(8))))], _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize[_GLF_IDENTITY(1, 0 | (1))]) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u))), (_GLF_IDENTITY((gl_WorkGroupSize[1]) + _GLF_IDENTITY(0u, (0u) | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize[1]) + 0u : _GLF_FUZZED(140272u)))) / 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))[2])))).x) << 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), subgroup_size))) | (subgroup_size)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) : _GLF_FUZZED(76909u)))) ^ 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_base)))) / 1u), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))))) | 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))))], ~ (~ (buf[virtual_gid]))), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), min((64), (64))), ~ (_GLF_IDENTITY(~ ((64)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6543) : ~ ((64)))))) << (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0)), 0, 0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(8315) : 0))) * 1)) + 0) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (int(8))), (_GLF_IDENTITY(~ (~ (int(8))), 0 ^ (~ (~ (int(8)))))) << 0), max(_GLF_IDENTITY(~ (~ (int(8))), (_GLF_IDENTITY(~ (~ (int(8))), 0 ^ (~ (~ (int(8)))))) << 0), _GLF_IDENTITY(~ (~ (int(8))), (_GLF_IDENTITY(~ (~ (int(8))), 0 ^ (~ (~ (int(8)))))) << 0))))))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)))), 1, 1))))))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ 1)))), (_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(_GLF_IDENTITY(6140, (false ? _GLF_FUZZED(-47904) : 6140)))) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2693), int(int(_GLF_FUZZED(-2693)))) : 1)))), 1, 1))))))) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ 1)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)))), 1, 1)))), (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)))), 1, 1))))) ^ 0)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (_GLF_IDENTITY(0, 0 | (0)) ^ 1)))), (_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | 0)) ^ 0)) | 0) : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)))), 1, 1))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (_GLF_IDENTITY(0 ^ 1, min(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)), max(_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1)), 0 ^ 1)), 0 ^ 1)))))), (_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)))), 1, 1))))))) << 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ 1))), ((true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ 1)))) | ((true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ 1)))))), (_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1))) >> 0))), 1, 1))))))) << 0), 0))))))))), (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(6140))))) | (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(6140))))))))) << 0)) | 0, ((_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), (0 << _GLF_IDENTITY(int(2), int(2))) ^ ((64))) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(8)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)) * (_GLF_IDENTITY(~ (int(8)), (~ (int(8))) | (~ (int(8))))))), _GLF_IDENTITY((~ (~ (int(8)))) << 0, _GLF_IDENTITY(1, clamp(1, 1, 1)) * ((~ (~ (int(8)))) << 0))))), (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(8)), 1 * (_GLF_IDENTITY(~ (int(8)), (~ (int(8))) | (~ (int(8))))))), _GLF_IDENTITY((~ (~ (int(8)))) << 0, 1 * ((~ (~ (int(8)))) << 0)))))) ^ 0))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(6140)) / (0 ^ 1)))), _GLF_IDENTITY((_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(_GLF_IDENTITY(6140, (6140) ^ 0))) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)))), 1, 1))))))), ((_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(6140), (_GLF_FUZZED(_GLF_IDENTITY(6140, (6140) ^ 0))) / (0 ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2693) : 1)))), 1, 1)))))))) >> 0) << 0)), (~ _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((true ? 64 : _GLF_FUZZED(6140)), ((true ? 64 : _GLF_FUZZED(6140))) | 0))), min((_GLF_IDENTITY(64, _GLF_IDENTITY((true ? 64 : _GLF_FUZZED(6140)), ((true ? 64 : _GLF_FUZZED(6140))) | 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(true ? 64 : _GLF_FUZZED(6140), clamp(_GLF_IDENTITY(true ? 64 : _GLF_FUZZED(6140), clamp(true ? 64 : _GLF_FUZZED(6140), true ? 64 : _GLF_FUZZED(6140), true ? 64 : _GLF_FUZZED(6140))), _GLF_IDENTITY(true ? 64 : _GLF_FUZZED(6140), max(true ? 64 : _GLF_FUZZED(6140), true ? 64 : _GLF_FUZZED(6140))), true ? 64 : _GLF_FUZZED(6140)))), ((_GLF_IDENTITY(true ? 64 : _GLF_FUZZED(6140), (true ? 64 : _GLF_FUZZED(6140)) - 0))) | 0)))))) | (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(6140))))))))) << 0)) | 0) / 1)), 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), min(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), uint(uvec3(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u)))))) + 1)), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), min(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), uint(uvec3(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u)))))) + 1)), _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), min(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u))), uint(uvec3(clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u)))))) + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, min(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) || false))), min((uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) || false))), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) || false))))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) || false))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) || false))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))) || false))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) + 1, (false ? _GLF_FUZZED(workgroup_id) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) + 1)), min(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false))), (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uint(read_2), 0u ^ (uint(read_2))))), ! (! (read_1 + 1 == read_2)))) && _GLF_IDENTITY(true, (true) || false))) || false, bool(bvec4((_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))) && true)) || false, false, false, false)))))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + 1))) | 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) ? _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))), max(1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))), _GLF_IDENTITY(1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))), (false ? _GLF_FUZZED(next_virtual_gid) : 1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))), max(1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))), _GLF_IDENTITY(1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))), (false ? _GLF_FUZZED(next_virtual_gid) : 1u * ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ~ (~ ((uint(read_1 + 1 == read_2) + 1)))))))))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) * 1u) + 1 == read_2) + 1, ~ (_GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) ^ 0) == read_2) + 1), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), _GLF_IDENTITY(~ (~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))))), (~ (~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))))) | (~ (~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))))))))))) == read_2, false || (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + _GLF_IDENTITY(1, (1) << 0))))), _GLF_IDENTITY(~ (~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))))), (~ (~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))))) | (~ (~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))))))))))) == read_2)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)) && true, ! (! ((read_1 + 1 == read_2) && true))))), (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))) - 0u) == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), false || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))))) && true), true, false, false)))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), true && ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), true && ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false))))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), true && ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2) && true), true && (bool((read_1 + 1 == read_2) && true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) == read_2, false || (read_1 + 1 == read_2))))) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), ! (! (! (! ((read_1 + 1 == read_2) && true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(58.53), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), bvec2(true, false))).x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, _GLF_IDENTITY(false, false || (false)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, (true) && true), ! (! ((read_1 + 1 == read_2) && true))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1))))) == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1))))) == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1))))) == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1))))) == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), true && ((read_1 + 1 == read_2))) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec2(read_1 + 1 == read_2, false)), true && (bool(bvec2(read_1 + 1 == read_2, false)))))) && _GLF_IDENTITY(true, ! (! (true))), ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) << 0u))), _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false))))))))))))))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), ! (! (! (! ((read_1 + 1 == read_2) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), ! (! (! (! ((read_1 + 1 == read_2) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? read_1 : _GLF_FUZZED(35741u))) + 1 == read_2, true && (_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(35741u))) + 1 == read_2)), _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), ! (! (! ((read_1 + 1 == read_2) && true))))))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? read_1 : _GLF_FUZZED(35741u))) + 1 == read_2, true && (_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(35741u))) + 1 == read_2)), _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), ! (! (! ((read_1 + 1 == read_2) && true)))))))))) || false))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY((false ? _GLF_FUZZED(read_1) : read_2), min((false ? _GLF_FUZZED(read_1) : read_2), (false ? _GLF_FUZZED(read_1) : read_2))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, ((read_1 + 1 == read_2) && true) || false)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, ((read_1 + 1 == read_2) && true) || false)))))))))), true && ((read_1 + 1 == read_2) && true))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))) || false)) && true, true && ((read_1 + 1 == read_2) && true))))))), ! (! ((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 0u))) + 1) * 1u) == read_2) && true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(true && (_GLF_IDENTITY((read_1 + 1 == read_2) && true, bool(bvec4((read_1 + 1 == read_2) && true, false, false, false)))), false || (true && (_GLF_IDENTITY((read_1 + 1 == read_2) && true, bool(bvec4((read_1 + 1 == read_2) && true, false, false, false)))))))), true && (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((read_1 + 1 == read_2) && true))))))), ! (! ((read_1 + 1 == read_2) && true)))))), (! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + _GLF_IDENTITY(0u, max(0u, 0u))) == read_2) && true, true && ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, false, false)))) && true))), true && (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, max(read_1, read_1)) : _GLF_FUZZED(virtual_gid))) + 1 == read_2) && true))))))), bool(bool(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true, true && ((read_1 + 1 == read_2) && true))), true && (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(true && ((read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(true && ((read_1 + 1 == read_2) && true), (true && ((_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) | (read_1)), read_1)) + 1 == read_2) && true)) && true)))))))))))), ! (! ((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, true), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, true), true))))))) && true))) && true))))))) && true))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))) && true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(next_virtual_gid)))) - (85549u & 0u)), (false ? _GLF_FUZZED(uvec2(110521u, 132283u)[0]) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(next_virtual_gid)))) - (85549u & 0u)))) + 1 == read_2) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), bool(bvec3(! (! ((read_1 + 1 == read_2) && true)), true, false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))) || false))))) && true), true, false, false)))))), true, false)))))))))) + 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), 0u ^ (~ (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (_GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-58872) : _GLF_IDENTITY(1, ~ (~ (1))))), (1) * 1) == _GLF_IDENTITY(read_2, max(read_2, read_2)))), (~ (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-58872) : _GLF_IDENTITY(1, ~ (~ (1))))), (1) * 1) == _GLF_IDENTITY(read_2, max(read_2, read_2))))) | (~ (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-58872) : _GLF_IDENTITY(1, ~ (~ (1))))), (1) * 1) == _GLF_IDENTITY(read_2, max(read_2, read_2)))))))) + 1))) : _GLF_FUZZED(subgroup_id)), ~ (~ ((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0u ^ (~ (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-58872) : _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1))))))), (1) * 1) == _GLF_IDENTITY(read_2, max(read_2, read_2)))))) + 1))) : _GLF_FUZZED(subgroup_id))))), uint(uvec3(_GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + 1, min(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + 1, (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + 1) ^ 0u), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + 1, clamp(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + 1, uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(read_1, 1u, 1u, 1u), (uvec4(read_1, 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))) | (uvec4(read_1, 1u, 1u, 1u))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + 1, uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + 1))))) : _GLF_FUZZED(subgroup_id)), clamp((true ? ~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) >> uvec3(0u, 0u, 0u)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) >> uvec3(0u, 0u, 0u)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) - uvec4(0u, 0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) >> uvec3(0u, 0u, 0u)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec4(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) >> uvec3(0u, 0u, 0u)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) - uvec4(0u, 0u, 0u, 0u)))))) + 0u)))), (true ? ~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY(true, false || (true)) ? ~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1) : _GLF_FUZZED(subgroup_id)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) + 0u), uint(2u))), 1u)))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-55508, 67518, -93350)), (_GLF_IDENTITY(_GLF_FUZZED(ivec3(-55508, 67518, -93350)), clamp(_GLF_FUZZED(ivec3(-55508, 67518, -93350)), _GLF_FUZZED(ivec3(-55508, 67518, -93350)), _GLF_FUZZED(ivec3(-55508, 67518, -93350))))) / ivec3(1, 1, 1)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), ~ (~ (read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-55508, 67518, -93350)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(ivec3(-55508, 67518, -93350))), clamp(~ (_GLF_FUZZED(ivec3(-55508, 67518, -93350))), ~ (_GLF_FUZZED(ivec3(-55508, 67518, -93350))), ~ (_GLF_FUZZED(_GLF_IDENTITY(ivec3(-55508, 67518, -93350), ~ (_GLF_IDENTITY(~ (ivec3(-55508, 67518, -93350)), (~ (ivec3(-55508, 67518, -93350))) | (~ (ivec3(-55508, 67518, -93350)))))))))))) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0)))))))) == read_2) + 1, max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))) == read_2) + 1, 0u ^ (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-55508, _GLF_IDENTITY(67518, clamp(67518, 67518, 67518)), -93350), min(ivec3(-55508, _GLF_IDENTITY(67518, clamp(67518, 67518, 67518)), -93350), ivec3(-55508, _GLF_IDENTITY(67518, clamp(67518, 67518, 67518)), -93350)))) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))) == _GLF_IDENTITY(read_2, 0u ^ (read_2))) + 1)), uint(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))) == read_2) + 1)))), (min(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (true ? ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), clamp((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), ((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1)) - 0u)) << 0u), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1))) : _GLF_FUZZED(subgroup_id))), ~ (uint(read_1 + 1 == read_2) + 1))) / 1u))), ((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1), _GLF_IDENTITY(min(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))) << 0u)), (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))) << 0u)))), 0u ^ ((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))) << 0u)), (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))) << 0u)))))))))) == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), uvec2(0u, 0u) | (uvec2(read_1, 1u))))) + 1 == read_2) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) >> 0u))) == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)) || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)) == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), ((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), (! (_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true)) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! _GLF_IDENTITY((! ((read_1 + 1 == read_2) && true)), false || ((! ((read_1 + 1 == read_2) && true)))))), true && (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) && true))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (! ((read_1 + 1 == read_2) && true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) && true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false))))), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) >> 0u))) == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)) || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)) == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), ((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), (! (_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true)) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) && true, ! (! _GLF_IDENTITY(((read_1 + 1 == read_2) && true), ! (! (((read_1 + 1 == read_2) && true)))))))))))) && true), true, false, false)))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! _GLF_IDENTITY((! ((read_1 + 1 == read_2) && true)), false || ((! ((read_1 + 1 == read_2) && true)))))), true && (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (! ((read_1 + 1 == read_2)))) && true))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))))))), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (! ((read_1 + 1 == read_2) && true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)) && true)))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), ! (_GLF_IDENTITY(! (! (! ((read_1 + 1 == read_2) && true))), ! (! (! (! (! ((read_1 + 1 == read_2) && true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) && true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))))), _GLF_IDENTITY(read_2, (read_2) >> 0u), _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) - 0u), read_2, read_2)))), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))), ! (! ((read_1 + 1 == read_2) && true)))) && true))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false)))))) || false)))) + 1), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))) << 0u)), (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))) << 0u)))), 0u ^ ((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))) << 0u)), (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))) << 0u)))))))))) == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), uvec2(0u, 0u) | (uvec2(read_1, 1u))))) + 1 == read_2) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) >> 0u))) == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)) || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)) == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), ((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), (! (_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true)) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! _GLF_IDENTITY((! ((read_1 + 1 == read_2) && true)), false || ((! ((read_1 + 1 == read_2) && true)))))), true && (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) && true))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (! ((read_1 + 1 == read_2) && true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) && true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false))))), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) >> 0u))) == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)) || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)) == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), ((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), (! (_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true)) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) && true, ! (! _GLF_IDENTITY(((read_1 + 1 == read_2) && true), ! (! (((read_1 + 1 == read_2) && true)))))))))))) && true), true, false, false)))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! _GLF_IDENTITY((! ((read_1 + 1 == read_2) && true)), false || ((! ((read_1 + 1 == read_2) && true)))))), true && (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (! ((read_1 + 1 == read_2)))) && true))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))))))), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (! ((read_1 + 1 == read_2) && true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)) && true)))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), ! (_GLF_IDENTITY(! (! (! ((read_1 + 1 == read_2) && true))), ! (! (! (! (! ((read_1 + 1 == read_2) && true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) && true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))))), _GLF_IDENTITY(read_2, (read_2) >> 0u), _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) - 0u), read_2, read_2)))), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))), ! (! ((read_1 + 1 == read_2) && true)))) && true))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false)))))) || false)))) + 1), uint(uint((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))) << 0u)), (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))) << 0u)))), 0u ^ ((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))) << 0u)), (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))) << 0u)))))))))) == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), uvec2(0u, 0u) | (uvec2(read_1, 1u))))) + 1 == read_2) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) >> 0u))) == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)) || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)) == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), ((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), (! (_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true)) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! _GLF_IDENTITY((! ((read_1 + 1 == read_2) && true)), false || ((! ((read_1 + 1 == read_2) && true)))))), true && (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))) && true))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (! ((read_1 + 1 == read_2) && true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) && true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false))))), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)) == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, ~ (_GLF_IDENTITY(~ (read_1 + 1), (~ (read_1 + 1)) >> 0u))) == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)) || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_1 + 1)) == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), ((! (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), (! (_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) || false) && true)) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, false, false, false)))) && true, ! (! _GLF_IDENTITY(((read_1 + 1 == read_2) && true), ! (! (((read_1 + 1 == read_2) && true)))))))))))) && true), true, false, false)))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))) && true, ! (! ((read_1 + 1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! _GLF_IDENTITY((! ((read_1 + 1 == read_2) && true)), false || ((! ((read_1 + 1 == read_2) && true)))))), true && (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && true), ! (! ((read_1 + 1 == read_2)))) && true))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), false, true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true))))))))))), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (! ((read_1 + 1 == read_2) && true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)) && true)))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), ! (_GLF_IDENTITY(! (! (! ((read_1 + 1 == read_2) && true))), ! (! (! (! (! ((read_1 + 1 == read_2) && true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))) && true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))))), _GLF_IDENTITY(read_2, (read_2) >> 0u), _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) - 0u), read_2, read_2)))), _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))), (_GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))), ! (! ((read_1 + 1 == read_2) && true)))) && true))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false)))))) || false)))) + 1))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))) : _GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))) : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))) ^ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))) : _GLF_FUZZED(subgroup_id)) / 1u)))), uint(uvec3(_GLF_IDENTITY((true ? ~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), int(ivec2(~ ((1)), 1))))) * 1) == _GLF_IDENTITY(read_2, (read_2) | 0u)) + 1) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) / 1u)), clamp((true ? ~ (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) + 0), 1, 0)))))) * 1) == read_2) + 1) : _GLF_FUZZED(subgroup_id)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1, 0u + (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1)), ~ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1)))) : _GLF_FUZZED(subgroup_id)), (true ? ~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1) : _GLF_FUZZED(subgroup_id)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) + 0u), uint(2u))), 1u)))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), min(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), int(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(0, (0) * (1 | 1))))))), 1))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, _GLF_IDENTITY(67518, (67518) << 0), -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), ~ (~ (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1))))))), int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 0)))))))))) == read_2) + 1), max((uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), min(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), int(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(0, (0) * (1 | 1))))))), 1))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, _GLF_IDENTITY(67518, (67518) << 0), -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), ~ (~ (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1))))))), int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 0)))))))))) == read_2) + 1), (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), min(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), int(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(0, (0) * (1 | 1))))))), 1))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, _GLF_IDENTITY(67518, (67518) << 0), -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), ~ (~ (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1))))))), int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, 0 ^ (1)), 0)))))))))) == read_2) + 1)))), (min(_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2) + 1), (true ? _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), min(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1)))) | (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1)))) >> 0u) : _GLF_FUZZED(subgroup_id))), ~ (uint(read_1 + 1 == read_2) + 1))) / 1u)))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))))))) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0)), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))))))))) + 1), min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))), (0u ^ 1u))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, false), bvec3(bvec3(bvec3(! (true), true, false)))))))) && (read_1 + 1 == read_2))) + 1), min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))), (0u ^ 1u))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))), (0u ^ 1u))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), min((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))), (0u ^ 1u))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))), (0u ^ 1u))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), _GLF_IDENTITY(min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1)), (min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))) / 1u)), (uint(_GLF_IDENTITY(min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1)), (min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))) / 1u))) << 0u)))), (0u ^ 1u)), ~ (~ (uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), _GLF_IDENTITY(min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1)), (min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))) / 1u)), (uint(_GLF_IDENTITY(min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1)), (min((uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) && (read_1 + 1 == read_2))) + 1))) / 1u))) << 0u)))), (0u ^ 1u)))))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 ^ (1)), min(read_1 + _GLF_IDENTITY(1, 0 ^ (1)), read_1 + _GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(0u + (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))) | (read_1 + 1))), (0u + (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))) | (read_1 + 1)))) >> 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))), (~ (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))))) >> 0u)))))) == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) && true))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), (min(read_1 + 1, read_1 + 1)) / 1u)) == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, (read_1) >> 0u)))) | (read_1)) + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), false)), (_GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! ((read_1 + 1 == read_2) && true), false))))) || false), bool(bool(_GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), false)), (_GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! ((read_1 + 1 == read_2) && true), false))))) || false)))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true)))), true)))))), true, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, (read_1) >> 0u)))) | (read_1)) + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((read_1 + 1 == read_2) && true))), false || (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), (! ((read_1 + 1 == read_2) && true)) || false), false)), (_GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! ((read_1 + 1 == read_2) && true), false))))) || false))))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))) && true), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))), (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))) && true)))))))) && true), true, false, false))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, (read_1) >> 0u)))) | (read_1)) + 1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2))))) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (! ((read_1 + 1 == read_2) && true))), false || (_GLF_IDENTITY(! ((read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1)) == read_2) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), _GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! ((read_1 + 1 == read_2) && true), false))))) || false))))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 0u), min(uvec4(read_1, 1u, 0u, 0u), uvec4(read_1, 1u, 0u, 0u)))), uint(uvec3(uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 0u), min(uvec4(read_1, 1u, 0u, 0u), uvec4(read_1, 1u, 0u, 0u)))), 1u, 1u)))) + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! _GLF_IDENTITY((! ((read_1 + 1 == read_2) && true)), ((! ((read_1 + 1 == read_2) && true))) || false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)) == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, (read_1) >> 0u)))) | (read_1)) + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), _GLF_IDENTITY(bool(bvec2(! ((read_1 + 1 == read_2) && true), false)), (_GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY(((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) | 0u) + 1)) == read_2) && true), (((_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) | 0u) + 1)) == read_2) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! ((read_1 + 1 == read_2) && true), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) || false))))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), max(~ (read_2), ~ (read_2))))))), _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3((read_1 + 1 == read_2), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), (! (! ((read_1 + 1 == read_2) && true))) || false)))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false))))))))))))))), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, ((read_1 + 1 == read_2) && true) && true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2) && true), ! (! (! ((read_1 + 1 == read_2) && true)))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, _GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), (_GLF_IDENTITY(! (! ((read_1 + 1 == read_2) && true)), bool(bvec2(! (! ((read_1 + 1 == read_2) && true)), true)))) || false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((read_1 + 1 == read_2) && true))))))), false || (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! ((read_1 + 1 == read_2) && true))))))))) && true), true, false, false)))))), true, false)))))))) + 1), _GLF_IDENTITY((true ? _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2, false || (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, max((1) * 1, _GLF_IDENTITY((1) * 1, ((1) * 1) | 0)))) == read_2))) + 1), 0u ^ (~ (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1, (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1) | (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1))))) : _GLF_FUZZED(subgroup_id)), uint(uvec3(_GLF_IDENTITY((true ? ~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) * 1) == read_2) + _GLF_IDENTITY(1, (1) | (1))) : _GLF_FUZZED(subgroup_id)), clamp((true ? ~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1) : _GLF_FUZZED(subgroup_id)), (true ? ~ (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) * 1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) * 1, ((_GLF_IDENTITY(1, (1) / 1)) * 1) | 0)))) == read_2) + 1) : _GLF_FUZZED(subgroup_id)), (true ? ~ (uint(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2) + 1) : _GLF_FUZZED(subgroup_id)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) + 0u), uint(2u))), 1u)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))) == read_2) + 1), 0u | ((uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0)))))) >> 0))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))))) == read_2) + 1))), ~ (_GLF_IDENTITY(~ ((uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(ivec3(-55508, 67518, -93350)) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))) == read_2) + 1)), _GLF_IDENTITY(0u, 0u + (0u)) ^ (~ ((uint(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-55508, 67518, -93350), max(_GLF_IDENTITY(ivec3(-55508, 67518, -93350), max(ivec3(-55508, 67518, -93350), ivec3(-55508, 67518, -93350))), ivec3(-55508, 67518, -93350)))) : ivec3(_GLF_IDENTITY(1, max(1, 1)), 1, 0))))) == read_2) + 1))))))), (min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u) + 1), (true ? ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1, max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true)))) + 1))) : _GLF_FUZZED(subgroup_id))), ~ (uint(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u), read_1 + 1)) == read_2) + 1))) / 1u))))) | (~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec2((0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((read_1) | (_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec2((0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))))), (1u ^ 0u)), (uvec2((read_1) | (_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec2((0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))))), (1u ^ 0u))) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2((read_1) | (_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec2((0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))))), (1u ^ 0u)), (uvec2((read_1) | (_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec2((0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))))), (1u ^ 0u))) + uvec2(0u, 0u)))) >> 0u))) + 1 == read_2) + 1))))) : _GLF_FUZZED(subgroup_id)) / 1u))), 4, 64, 4);
}
