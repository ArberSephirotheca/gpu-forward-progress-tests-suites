#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_51 {
 bool _f0;
 ivec4 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_52 {
 _GLF_struct_51 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_49 {
 bvec2 _f0;
 mat4 _f1;
 vec2 _f2;
 float _f3;
 mat2 _f4;
} ;

struct _GLF_struct_50 {
 vec4 _f0;
 float _f1;
 _GLF_struct_49 _f2;
 mat2x4 _f3;
 float _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_47 {
 vec4 _f0;
 ivec4 _f1;
 int _f2;
 vec3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_46 {
 uvec4 _f0;
 uvec4 _f1;
 uvec4 _f2;
 bvec4 _f3;
 uint _f4;
 int _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_45 {
 mat4x3 _f0;
} ;

struct _GLF_struct_48 {
 vec2 _f0;
 _GLF_struct_45 _f1;
 bvec3 _f2;
 _GLF_struct_46 _f3;
 _GLF_struct_47 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_53 {
 mat2 _f0;
 bvec2 _f1;
 _GLF_struct_48 _f2;
 _GLF_struct_50 _f3;
 _GLF_struct_52 _f4;
 uint num_workgroup;
 ivec3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_42 {
 mat3 _f0;
 bvec4 _f1;
 vec4 _f2;
 float _f3;
} ;

struct _GLF_struct_41 {
 vec2 _f0;
 int _f1;
 ivec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_40 {
 vec4 _f0;
 uint _f1;
} ;

struct _GLF_struct_43 {
 _GLF_struct_40 _f0;
 _GLF_struct_41 _f1;
 bvec4 _f2;
 ivec2 _f3;
 _GLF_struct_42 _f4;
} ;

struct _GLF_struct_38 {
 ivec3 _f0;
 uvec4 _f1;
 vec2 _f2;
 mat2x3 _f3;
 ivec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_37 {
 ivec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_39 {
 _GLF_struct_37 _f0;
 bool _f1;
 _GLF_struct_38 _f2;
} ;

struct _GLF_struct_35 {
 mat3x4 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_34 {
 uvec2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_36 {
 mat4x3 _f0;
 _GLF_struct_34 _f1;
 mat2x4 _f2;
 _GLF_struct_35 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_32 {
 mat3 _f0;
 bool _f1;
 mat2x4 _f2;
 bool _f3;
 vec2 _f4;
} ;

struct _GLF_struct_31 {
 bool _f0;
 mat2x4 _f1;
 uint _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_30 {
 bvec2 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 float _f3;
 vec3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_33 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 ivec2 _f2;
 _GLF_struct_32 _f3;
} ;

struct _GLF_struct_44 {
 _GLF_struct_33 _f0;
 uint read_2;
 _GLF_struct_36 _f1;
 _GLF_struct_39 _f2;
 mat3x4 _f3;
 _GLF_struct_43 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_27 {
 bvec3 _f0;
 bool _f1;
 ivec4 _f2;
 uint _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_26 {
 uvec2 _f0;
 ivec4 _f1;
 uint _f2;
 mat4x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_25 {
 bool _f0;
 bool _f1;
 uint _f2;
 vec2 _f3;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 bvec3 _f3;
 ivec3 _f4;
 ivec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 bvec3 _f2;
 _GLF_struct_26 _f3;
 _GLF_struct_27 _f4;
} ;

struct _GLF_struct_29 {
 ivec2 _f0;
 mat4x3 _f1;
 uint next_virtual_gid;
 _GLF_struct_28 _f2;
} ;

struct _GLF_struct_21 {
 uint subgroup_local_id;
 vec2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 mat4x3 _f4;
 int _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 mat3x4 _f1;
 vec4 _f2;
 vec2 _f3;
 ivec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_18 {
 uint _f0;
 mat3x2 _f1;
 float _f2;
 ivec2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 uvec2 _f1;
 ivec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 float _f3;
} ;

struct _GLF_struct_15 {
 uint _f0;
 vec2 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
} ;

struct _GLF_struct_12 {
 uint _f0;
 uint _f1;
 vec2 _f2;
 uint _f3;
 bvec4 _f4;
 vec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 bool _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 bvec4 _f4;
 mat3x4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_23 {
 _GLF_struct_14 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_22 _f3;
 float _f4;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 bool _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_6 {
 uint virtual_gid;
 mat3x2 _f0;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 uvec3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat4x2 _f1;
 ivec4 _f2;
 ivec3 _f3;
 int _f4;
 bvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 _GLF_struct_0 _f1;
 bool _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_2 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_9 _f2;
 mat4x3 _f3;
 mat4 _f4;
 int _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (true ? min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-24.75)), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-24.75)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-24.75)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 1.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 0.0 + (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0), (true ? mat2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 0.0 + (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(-4889.2372, -692.848, 66.71, -30.36)))))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(49215u))), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9)))), bool(true))), 0.0, 0.0)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))), true && (! (! ((false))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && _GLF_IDENTITY((! (! ((false)))), true && ((! (! ((false))))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! _GLF_IDENTITY(((false)), true && (((false))))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), false || ((_GLF_IDENTITY(true, true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), false || ((_GLF_IDENTITY(true, true && (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! _GLF_IDENTITY(((false)), false || (((false))))), true && (! (! ((false))))))) || false), true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_14(_GLF_struct_11(mat4x2(1.0), true, mat4x3(1.0), mat3x4(1.0), bvec4(true), mat3x4(1.0), mat2(1.0)), _GLF_struct_12(1u, 1u, vec2(_GLF_IDENTITY(1.0, (1.0) - sin(0.0))), _GLF_IDENTITY(1u, (1u) + 0u), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), (false ? _GLF_FUZZED(vec3(-1088.4501, -512.527, -1546.6342)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), (_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0)))) * mat3(1.0)))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) | (1))), ivec3(0, 0, 0) ^ (ivec3(1)))), _GLF_struct_13(mat4x2(1.0))), _GLF_struct_16(_GLF_struct_15(1u, vec2(1.0)), mat3(1.0)), _GLF_struct_20(_GLF_struct_17(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.7) : 1.0)), 1.0))), uvec2(1u), ivec3(1), mat4x2(1.0)), _GLF_struct_18(1u, mat3x2(1.0), 1.0, ivec2(1), uvec3(1u)), _GLF_struct_19(vec2(1.0), mat3x4(1.0), vec4(1.0), vec2(1.0), ivec3(1), mat2(1.0)), 1.0), _GLF_struct_22(_GLF_struct_21(gl_SubgroupInvocationID, vec2(1.0), mat4x2(1.0), mat4x2(1.0), mat4x2(1.0), mat4x3(1.0), 1)), 1.0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false)), ! (! _GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false))))))), _GLF_IDENTITY(false, bool(bool(false))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(false, bool(bool(false))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), ! (! (bool(bool(false)))))) && true), _GLF_IDENTITY(false, bool(bool(false))), false))))))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))))), bool(bvec4((! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))))), false, true, true)))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-28.63)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = _GLF_struct_replacement_23._f3._f0.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_53 _GLF_struct_replacement_53 = _GLF_struct_53(mat2(1.0), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_struct_48(vec2(1.0), _GLF_struct_45(mat4x3(1.0)), bvec3(true), _GLF_struct_46(uvec4(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u))), uvec4(1u), uvec4(1u), bvec4(true), 1u, 1, mat4x3(1.0)), _GLF_struct_47(vec4(1.0), ivec4(1), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 1.0)))), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(10.23) : cos(0.0))), abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(10.23) : cos(0.0))), abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-4.4, 5.8, -2.4, -572.838, -1748.8391, -492.118, 5.9, 855.634)))))), 0.0 + (cos(0.0))))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.97) : 0.0))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(85.18)), float(1.0), bool(true))))), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))))), sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.7)), float(0.0), bool(true))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.97) : 0.0))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.97) : 0.0))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) + 0.0), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.97) : 0.0))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(6.6) : _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.97) : 0.0))), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), clamp(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat4(1.0) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-2467.6016), _GLF_FUZZED(5.9)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.6) : 0.0)), cos(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(8.5)), bool(false)))), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat4(1.0) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(vec2(-4.1, -1.8).r)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), bool(true))), 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.5)), float(0.0), bool(true))))), 1.0))), 1.0, 1.0, 0.0, cos(0.0), sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, 1.0)), max(mat3(1.0) * (vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, 1.0)), (true ? mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-2.1)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), (float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-2.1)), bool(false))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) + 0.0)), 1.0, 1.0)) : _GLF_FUZZED(vec3(4.2, -687.746, -2254.0186))))))))))), mat4(1.0) * (mat3x4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (float(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) / 1.0)), 1.0, 0.0, cos(0.0), sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))), _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat3x4(1.0)), vec4(1.0)), _GLF_struct_50(_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(601.662), _GLF_FUZZED((308.038 / 622.760)), (vec4(1.0))[3]), vec4(_GLF_FUZZED(5.5), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-6260.1534)), bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, _GLF_struct_49(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))), mat4(1.0), vec2(1.0), 1.0, mat2(1.0)), mat2x4(1.0), 1.0, mat4x3(1.0)), _GLF_struct_52(_GLF_struct_51(true, ivec4(1), ivec3(_GLF_IDENTITY(1, min(1, 1))), mat4x3(1.0), vec2(1.0)), mat2x4(1.0)), gl_NumWorkGroups.x, ivec3(1), bvec4(true));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(mat3x2(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(mat3x2(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(mat3x2(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, exp(0.0), 0.0, 0.0, 1.0))))))), float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0, 0.0, 0.0, 0.0, abs(0.0), cos(0.0), 0.0)), min(float(mat4x3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0, 0.0, 0.0, 0.0, abs(0.0), cos(0.0), 0.0)), float(mat4x3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 1.0, 0.0, 0.0, 0.0, abs(0.0), cos(0.0), 0.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0)), min(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), 1.0, 1.0))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
  }
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, _GLF_IDENTITY(uint(uvec3(workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), clamp(uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), uint(uvec3(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 1u, 1u))) * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.6)), bool(false))), 1.0, 0.0))), injectionSwitch.x)), 1u)), uint(uvec3(workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(9656.9900))), 0.0)) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.7))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_2(vec3(1.0), _GLF_struct_0(mat4x2(1.0)), true, _GLF_struct_1(mat3x4(1.0), mat4x2(1.0), ivec4(1), ivec3(1), 1, bvec3(true), 1)), _GLF_struct_7(_GLF_struct_3(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(1.0))), (mat3(mat3x4(mat3(1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)))) / 1.0), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(450.320) : float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, 1.0, 1.0)))))))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), clamp((_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), clamp((_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY(1.0, 1.0 * (1.0))))), (_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) / 1.0))))), 1.0))), (false ? _GLF_FUZZED(mat4(mat3x4(-3.8, -75.53, 69.99, -4090.8705, 3.8, -59.04, 6774.6223, 2.2, -804.672, -6.8, 51.09, -847.137))) : mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)))) / 1.0), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0, mix(float((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), float(_GLF_FUZZED(2073.3263)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0))))), 1.0))))), mat2x3(1.0)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | 0u), max(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) | (_GLF_IDENTITY(1u, (1u) | 0u)))))))) >> 0u)), _GLF_struct_4(bvec4(true), mat2x4(1.0)), _GLF_struct_5(vec2(1.0), mat3x4(1.0), mat4x2(1.0)), _GLF_struct_6(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(_GLF_struct_replacement_53.num_workgroup) : workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, uvec2(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id), (uvec2(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)) ^ (uvec2(0u, 0u) | uvec2(0u, 0u))))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)).x, mat3x2(1.0))), _GLF_struct_9(vec3(1.0), true, _GLF_struct_8(mat2(1.0), vec4(1.0))), mat4x3(1.0), mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0 ^ (1)), min((0 ^ (1)), (0 ^ (1)))), ~ (~ (~ (0 ^ (1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), ~ (_GLF_IDENTITY(~ (0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), ~ (~ (~ (0 ^ (1)))))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), ~ (_GLF_IDENTITY(~ (0 ^ (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(1, (1) ^ 0))))), ~ (~ _GLF_IDENTITY((~ (0 ^ (1))), ((~ (0 ^ (1)))) | ((~ (0 ^ (1)))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0 ^ (1)), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0 ^ (1), int(ivec2(0 ^ (1), 0))))), 1 * ((~ (_GLF_IDENTITY(0 ^ (1), int(ivec2(0 ^ (1), 0))))))))), (_GLF_IDENTITY(~ (0 ^ (1)), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0 ^ (1), int(ivec2(0 ^ (1), 0))))), 1 * ((~ (_GLF_IDENTITY(0 ^ (1), int(ivec2(0 ^ (1), 0)))))))))) << 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, 1))))) ^ (1), ~ (_GLF_IDENTITY(~ (0 ^ (1)), ~ (~ (~ (0 ^ (_GLF_IDENTITY(1, (1) * 1)))))))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) << 0))), _GLF_IDENTITY(0, (0) + 0) + (_GLF_IDENTITY(1, (1) + 0)))), mat4x3(1.0), workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) | _GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id)))))) * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (1) << 0)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))))))))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (0u) >> 0u))) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u))))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec4(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) << 0u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(177560u) : uint(5u)))) | (0u | 0u), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(177560u) : uint(5u)))) | (0u | _GLF_IDENTITY(0u, (0u) - 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2((_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(177560u) : uint(5u)))) | (0u | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2((_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(177560u) : uint(5u)))) | (0u | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u + (1u)))), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | 0u))))), 0u, 1u)))))))))) - 0u)), _GLF_struct_28(_GLF_struct_24(ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) ^ 0, (_GLF_IDENTITY((~ (1)) ^ 0, ((~ (1)) ^ 0) / 1)) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))))), uvec3(1u), mat2x4(1.0), bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), ivec2(1), 1u), _GLF_struct_25(true, true, 1u, vec2(1.0)), bvec3(true), _GLF_struct_26(uvec2(1u), ivec4(1), 1u, mat4x3(1.0), vec2(1.0)), _GLF_struct_27(bvec3(true), true, ivec4(_GLF_IDENTITY(1, 0 ^ (1))), 1u, mat2x4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_10._f1._f4.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(6.8)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_struct_replacement_29.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(1487) : 1)), 0u + (read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(1487) : 1)))), 0u ^ (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), _GLF_IDENTITY(int(ivec2(max(1, 1), 0)), (int(ivec2(max(1, 1), 0))) ^ 0))))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), _GLF_IDENTITY(int(ivec2(max(1, 1), 0)), (int(ivec2(max(1, 1), 0))) ^ 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), _GLF_IDENTITY(int(ivec2(max(1, 1), 0)), (int(ivec2(max(1, 1), 0))) ^ 0))))), (true ? _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), _GLF_IDENTITY(int(ivec2(max(1, 1), 0)), (int(ivec2(max(1, 1), 0))) ^ 0))))) : _GLF_FUZZED(-68957))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(1487) : 1)), 0u + (read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(1487) : 1))))))), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_IDENTITY(_GLF_FUZZED(-16094), int(int(_GLF_IDENTITY(_GLF_FUZZED(-16094), (_GLF_FUZZED(-16094)) | (_GLF_IDENTITY(_GLF_FUZZED(-16094), (false ? _GLF_FUZZED(73058) : _GLF_FUZZED(-16094))))))))))), min((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_IDENTITY(_GLF_FUZZED(-16094), (_GLF_FUZZED(-16094)) / 1)))), (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(_GLF_IDENTITY(-16094, int(_GLF_IDENTITY(ivec2(-16094, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(-16094, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec2(-16094, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), 64, 4);
 _GLF_struct_44 _GLF_struct_replacement_44 = _GLF_struct_44(_GLF_struct_33(_GLF_struct_30(bvec2(true), ivec3(1), mat3x4(1.0), 1.0, vec3(1.0), mat3(1.0)), _GLF_struct_31(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7341.0136)), bool(false))))), true))), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec2(1.0, 4.8)[0])))), 1u, mat3(1.0), mat3x2(1.0)), ivec2(1), _GLF_struct_32(mat3(1.0), true, mat2x4(1.0), true, _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)))), atomicLoad(buf[_GLF_struct_replacement_10._f1._f4.virtual_gid], 4, 64, 0), _GLF_struct_36(mat4x3(1.0), _GLF_struct_34(uvec2(1u), bvec4(true)), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-136.795)), bool(false))) + (1.0))), _GLF_struct_35(mat3x4(1.0), mat2x4(1.0), mat4x3(1.0), mat2x3(1.0)), mat3x4(1.0)), _GLF_struct_39(_GLF_struct_37(ivec2(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 1 * (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 1 * (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(int((_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 1 * (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), 1 * (int(int((_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 1 * (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))))))), mat3x4(1.0)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), _GLF_struct_38(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), clamp(max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), _GLF_IDENTITY(max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1)), 1, 1)))))) / 1))))), uvec4(1u), vec2(1.0), mat2x3(1.0), ivec4(1), vec3(1.0))), mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.0)), float(1.0), bool(true)))), _GLF_struct_43(_GLF_struct_40(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0)))), bool(true)))), 1u), _GLF_struct_41(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9963.3871) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(458.258))))), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) / 1.0))), sqrt(0.0))), min(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), max(determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))))), determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), 0.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) + 0.0), sqrt(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), abs(0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), 0.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), 0.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(-27.37))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sqrt(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), sqrt(0.0), 0.0, 1.0, 0.0))))))))), 1, ivec4(1), true), bvec4(true), ivec2(1), _GLF_struct_42(mat3(_GLF_IDENTITY(1.0, log(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y))), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0))))), bvec4(true), vec4(1.0), 1.0)), ivec3(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(roundEven(injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch * mat2(-769.708, 939.298, 2.0, -38.94))) : injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(false, false, true))))))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_29.next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_struct_replacement_44.read_2) + 1, (true ? uint(read_1 + 1 == _GLF_struct_replacement_44.read_2) + 1 : _GLF_FUZZED(41518u))), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))))
  return;
}
