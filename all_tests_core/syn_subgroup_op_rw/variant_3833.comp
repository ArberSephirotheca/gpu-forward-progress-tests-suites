#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, true && (true)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, true && (true)))))), false)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || (_GLF_IDENTITY(true, true && (true))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, true && (true)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, true && (true)))))), false)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, true)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, true)))), false))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, true)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, true)))), false))))))))))), false))))), true)))))), ! (! (bool(bvec3(false, false, true)))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, true, false)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))) && true))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(62.75) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.5)), bool(false))), mix(float(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(62.75) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.5)), bool(false)))), float(_GLF_FUZZED((- 85.37))), bool(false))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-99.29) : injectionSwitch.y)))) ? _GLF_FUZZED(62.75) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.5)), bool(false))))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.8))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 0.0))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1929.6562) : injectionSwitch.y)), 1.0, determinant(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 0.0, sin(0.0), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1929.6562) : injectionSwitch.y)), 1.0, determinant(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 0.0, sin(0.0), 1.0, 1.0)) * mat2(1.0))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true && (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true && (_GLF_IDENTITY(false, true && (false)))), ! (! ((true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))), true && (! (_GLF_IDENTITY((true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(false, true && (false))))), (! ((true && (_GLF_IDENTITY(false, true && (false)))))) || false)))))))))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) && true)) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))), false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(cos(0.0)), 0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))), max(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))), max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u)) << 0u), clamp(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u + (0u)))))), 0u))), subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 0u, 0u, 1u)), uint(uvec4(uint(uvec4(subgroup_local_id, 0u, 0u, 1u)), 0u, 1u, 1u)))), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), subgroup_local_id)))))), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))) - 0u), _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))), uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))), 1u, 0u), min(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)), (_GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)), 1u * ((max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id))))) | ((max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))) | (max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u)) << 0u)), uvec3(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), subgroup_local_id)))), 1u, 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id + 1, 0u, 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id + 1, 0u, 0u, 1u)))), uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id + 1, 0u, 0u, 1u)))))))) / 1u)) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y))), mat2x4(_GLF_IDENTITY(mat2x4(mat2x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)))), (mat2x4(mat2x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, sqrt(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED((-0.3 / -1.1))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))) - mat2x4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.5)))) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((uvec4(80666u, 29792u, 96881u, 190675u) , injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true)))))))
  barrier();
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) | 0u))) * 1u), uint(uvec3(subgroup_local_id, 0u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), (uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u, 0u))) : _GLF_FUZZED(subgroup_base))))) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) | 0u))) * 1u), uint(uvec3(subgroup_local_id, 0u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), (uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u, 0u))) : _GLF_FUZZED(subgroup_base))))) + 0u))), clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) | 0u))) * 1u), uint(uvec3(subgroup_local_id, 0u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), (uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u, 0u))) : _GLF_FUZZED(subgroup_base))))) + 0u))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) | 0u))) * 1u), uint(uvec3(subgroup_local_id, 0u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), (uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u, 0u))) : _GLF_FUZZED(subgroup_base))))) + 0u))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) | 0u))) * 1u), uint(uvec3(subgroup_local_id, 0u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))))), (uint(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u, 0u))) : _GLF_FUZZED(subgroup_base))))) + 0u)))))) >> (1u ^ 1u)) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6649.8096)), bool(false))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))), int(_GLF_IDENTITY(ivec2((4), 1), clamp(ivec2((4), 1), ivec2((4), 1), ivec2((4), 1))))), 0 | ((4)))) << 0) : _GLF_FUZZED(84815))), _GLF_IDENTITY(max(_GLF_IDENTITY((4) | _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(84815))), _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(84815)))), max(max(_GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)))))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(84815))), _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << _GLF_IDENTITY(0, (0) << 0)), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(84815)))), _GLF_IDENTITY(max(_GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(84815))), _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(84815)))), max(max(_GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (4))))) - 0))))) << 0) : _GLF_FUZZED(84815))), _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(_GLF_IDENTITY(84815, (84815) / 1))))), max(_GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(0 | ((4)), clamp(0 | ((4)), 0 | ((4)), 0 | ((4)))))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), 0 | ((4)))) << 0) : _GLF_FUZZED(84815))), _GLF_IDENTITY((4) | _GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_IDENTITY((4), 0 | ((4))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 | ((4))), clamp(_GLF_IDENTITY((4), 0 | ((4))), _GLF_IDENTITY((4), 0 | ((4))), _GLF_IDENTITY((4), 0 | ((4))))), _GLF_IDENTITY((4), 0 | ((4))), _GLF_IDENTITY((4), 0 | ((4)))))) << 0), (true ? (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, 0 + (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(0 | ((4)), (_GLF_IDENTITY(0 | ((4)), (0 | ((4))) | (0 | ((4))))) - 0))) << 0) : _GLF_FUZZED(84815))))))))), (_GLF_IDENTITY(4, (4) / 1)) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) | ((4)))) << 0)))), 0), _GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) << 0)), 0)) ^ ivec2(0, 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (false ? _GLF_FUZZED(ivec3(-70451, 55173, 52773)) : ivec3(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4)))), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0), ((~ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) << _GLF_IDENTITY(0, 0 | (0))) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | (0))))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0)) / ivec2(1, 1))), ivec2(1, 1) * (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (false ? _GLF_FUZZED(ivec3(-70451, 55173, 52773)) : ivec3(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4)))), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0), ((~ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) << _GLF_IDENTITY(0, 0 | (0))) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | (0))))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0)) / ivec2(1, 1))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (false ? _GLF_FUZZED(ivec3(-70451, 55173, 52773)) : ivec3(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec2(ivec2(0, 0)))))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)), 0))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4)))), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0), ((~ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) << _GLF_IDENTITY(0, 0 | (0))) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | (0))))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0)) / ivec2(1, 1)))) | ivec2(0, 0)))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(73030) : 4)))), (4) | (4)), 0)) ^ ivec2(0, 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) >> 0) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) | (ivec2(0, 0)))) / ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(_GLF_IDENTITY(0, int(int(0))), 0)) / ivec2(1, 1))), _GLF_IDENTITY(((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0), ~ (~ (((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, _GLF_IDENTITY(0, max(0, 0)))))))) - ivec2(0, 0)), _GLF_IDENTITY(((ivec2(1, 1) << _GLF_IDENTITY(_GLF_IDENTITY(ivec2(6), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(6), ivec2(0, 0) | (ivec2(6))))), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, max(6, 6))))))), (true ? ((ivec2(1, 1) << _GLF_IDENTITY(_GLF_IDENTITY(ivec2(6), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(6), ivec2(0, 0) | (ivec2(6))))), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, max(6, 6))))))) : _GLF_FUZZED(ivec2(-92934, 66478)))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), 0 + _GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(int(true)))))), 0)) ^ ivec2(0, 0)) / ivec2(1, 1), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)) / ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - (0 | 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)), ~ (~ ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0))))) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))) >> ivec2(0, 0))) - ivec2(0, 0)))), (_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) ^ (ivec2(1, 1))) | ivec2(0, 0)) * (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(77473))))))), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ivec2(ivec2((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)), ((_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, 1 * (1))), clamp(ivec2(1, _GLF_IDENTITY(1, 1 * (1))), _GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, 1 * (1))), min(ivec2(1, _GLF_IDENTITY(1, 1 * (1))), ivec2(1, _GLF_IDENTITY(1, 1 * (1))))), ivec2(1, _GLF_IDENTITY(1, 1 * (1))))) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(ivec2(67187, 82297)) : _GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1))))), (_GLF_IDENTITY(((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, _GLF_IDENTITY(1, min(1, 1))))), (4) | (4)), 0)) ^ ivec2(0, 0)), ivec2(ivec4(((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, _GLF_IDENTITY(1, min(1, 1))))), (4) | (4)), 0)) ^ ivec2(0, 0)), 0, 0))) / ivec2(1, 1)) / ivec2(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), max((4), (4))), (4), _GLF_IDENTITY((4), 0 | ((4))))) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0)), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), clamp(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), (false ? _GLF_FUZZED(-14976) : (4) | (4)))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | ((4))) | (4)))))), _GLF_IDENTITY(4, (4) | (4)))), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), _GLF_IDENTITY(0, min(0, 0)))) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-20645, ~ (~ (_GLF_IDENTITY(-20645, clamp(-20645, -20645, -20645))))), int(_GLF_IDENTITY(ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (_GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), clamp(ivec3(0, 0, 0) | (ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), _GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), min(ivec3(0, 0, 0) | (ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), ivec3(0, 0, 0) | (ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), ivec3(0, 0, 0) | (ivec3(-20645, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) + ivec3(0, 0, 0))))), -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), _GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0))))))) - ivec2(0, 0))) - ivec2(0, 0)))), clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / _GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), _GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(~ (ivec2(1, 1)), ivec2(ivec2(~ (ivec2(1, 1))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0), ((_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)) | ((_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)))), (_GLF_IDENTITY((ivec2(1, 1) << _GLF_IDENTITY(ivec2(_GLF_IDENTITY(6, clamp(6, 6, 6))), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6)), min((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6)), (_GLF_IDENTITY(ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6)), (ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) | (ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4))))), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0)))) / ivec2(1, 1), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), (_GLF_IDENTITY(0 + (4), _GLF_IDENTITY(~ (~ (0 + (4))), 0 ^ (~ (~ (0 + (4))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)) / ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) | (4)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97887))))) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4)))))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) | (4)))), min(int(int(_GLF_IDENTITY(4, (4) | (4)))), int(int(_GLF_IDENTITY(4, (4) | (4))))))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(0, 0)), ivec2(0, 0))), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))))))) / ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, _GLF_IDENTITY(0, clamp(0, 0, 0))), ((ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0)), ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) | ((4)))), 0)) ^ ivec2(0, 0)) / ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, max(1, 1))))) << 0)), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), max(ivec2(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), max(ivec2(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0)), (4) | (4)), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) << (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))))) / ivec2(1, 1)) / ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (_GLF_IDENTITY(4, ~ (~ (4)))), 0 | ((4) | (4)))), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) | (4)), 0)) ^ ivec2(0, 0), ((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0), (ivec2(1, 1) & ivec2(1, 1)) * (ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)))) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 0, 0, 1))), 0)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ ivec2(0, 0)) / ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) | (4), max((4) | (4), (4) | (4))), ((4) | (4)) + 0)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-33606) : 0)))))), 0)) / _GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1)))))) >> ivec2(0, 0))) - ivec2(0, 0)), _GLF_IDENTITY(((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)) / ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (0 | (0 ^ 0))), (4) | (4)), 0)) ^ ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, min(0, 0)), 0)), 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0))), (_GLF_IDENTITY(((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)) / ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (0 | (0 ^ 0))), (4) | (4)), 0)) ^ ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, min(0, 0)), 0)), 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0))), max(((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)) / ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (0 | (0 ^ 0))), (4) | (4)), 0)) ^ ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, min(0, 0)), 0)), 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0))), _GLF_IDENTITY(((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)) / ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (0 | (0 ^ 0))), (4) | (4)), 0)) ^ ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, min(0, 0)), 0)), 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0))), (true ? ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) * (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1), (((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), 1, 1))), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)) / ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (0 | (0 ^ 0))), (4) | (4)), 0)) ^ ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, min(0, 0)), 0)), 0)) / ivec2(1, 1))), ((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (4) | (4)), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), clamp(_GLF_IDENTITY((4) | (4), ((4) | (4)) << 0), _GLF_IDENTITY((4) | (4), ~ (~ ((4) | (4)))), (4) | (4)))), 0)) ^ _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-20645, -89006)) : _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))))) / ivec2(1, 1)))) >> ivec2(0, 0))) - ivec2(0, 0))) : _GLF_FUZZED(ivec2(-65373, 44153))))))) - ivec2(0, 0))))))), (~ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), 0)) ^ ivec2(0, 0), ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) | (4)), 0)) ^ ivec2(0, 0)) / ivec2(1, 1)))) >> ivec2(0, 0))))) / ivec2(1, 1))))), _GLF_IDENTITY(64, (64) * 1), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0))) + (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-933.245)), vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y : _GLF_FUZZED(atan(3083.4903, -8.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), (clamp(uint(1), uint(1), uint(1))) | (_GLF_IDENTITY(clamp(uint(1), uint(1), uint(1)), (clamp(uint(1), uint(1), uint(1))) | (clamp(uint(1), uint(1), uint(1))))))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED((62211 << 62573)) : 64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.8), _GLF_FUZZED((-2540.8434 * _GLF_IDENTITY(2.4, min(2.4, 2.4))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, determinant(mat4(0.0, 0.0, 1.0, length(0.0), 0.0, 0.0, 0.0, 0.0, log(1.0), length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) | ivec4(0, 0, 0, 0)))), int(ivec2(4, 0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) | ivec4(0, 0, 0, 0)))), int(ivec2(4, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) | ivec4(0, 0, 0, 0)))), int(ivec2(4, 0)))))) - 0), (false ? _GLF_FUZZED(36356) : _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) | ivec4(0, 0, 0, 0)))), int(ivec2(4, 0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) | ivec4(0, 0, 0, 0)))), int(ivec2(4, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 0, 0), (ivec4(4, 0, 0, 0)) | ivec4(0, 0, 0, 0)))), int(ivec2(4, 0)))))) - 0)))) | (4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), 0 | (_GLF_IDENTITY(4, int(ivec2(4, 0)))))) >> 0)) - 0)) | (4)) : _GLF_FUZZED(floatBitsToInt(705.289)))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - 0.0))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
