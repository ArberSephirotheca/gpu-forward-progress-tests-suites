#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-29.11, -6.1, 8.8))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 0.0, 1.0, 0.0)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(16984u, 100496u, 1901u)))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))), ~ (~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) << (110179u & 0u))));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(subgroup_base) : ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)) + 1) % subgroup_size) << _GLF_IDENTITY(0u, 0u ^ (0u)))) ^ 0u)), uint(uint((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) - 0u)) % subgroup_size) << 0u)) ^ 0u))))), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) + 0)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ 0u)) - 0u), ((subgroup_local_id + 1) % subgroup_size)));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | 0u) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 30:
     if(_GLF_DEAD(false))
      barrier();
     if((ivec2(45811, -66680)[0] >= 26445))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       uvec2(20184u, 69250u);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
        barrier();
       for(       -7.3;
 (mat3x4(-2.5, 7670.9690, 5.1, -6.9, 17.83, 8601.0747, 16.11, 1568.7861, 10.53, -178.048, -613.606, -3.1) != mat3x4(8.0, _GLF_IDENTITY(-6.3, min(-6.3, -6.3)), -69.04, 671.929, -0.4, 9817.6857, -1.2, 8.6, -4095.3529, -5159.9473, -5716.6206, 13.88)); (ivec2(71181, 21390) , bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false)))
        {
         ;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         for(         tanh(vec2(-821.319, 9383.0801));
 false; mat4x3(9.6, -6.7, 8.7, -354.424, -7817.0420, -9035.6904, 5.3, 1.9, 5.0, -8.9, 7.0, 595.419))
          {
           if(_GLF_DEAD(false))
            barrier();
           uint _GLF_SWITCH_3_0v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           ;
           uvec2(136576u, 172109u);
           vec2(-9.5, 3.4).ts;
           ;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           ivec3(-62600, -79823, 91431);
          }
         if(_GLF_DEAD(false))
          barrier();
         mat4(6701.2883, 78.48, 920.392, 5.2, 1836.4657, -75.00, -3.7, 3.9, 2423.7909, -826.568, 5994.2891, 8.4, 0.0, -9427.3360, 4.8, 3.1);
        }
       lessThan(vec3(-20.69, -27.77, -24.64), (vec3(-693.644, _GLF_IDENTITY(19.16, clamp(19.16, 19.16, 19.16)), -8.6) - vec3(-548.139, -3.4, -9.9)));
       bitfieldReverse(min(_GLF_IDENTITY(-43134, 0 | (-43134)), 68819));
      }
     case 26:
     if(_GLF_DEAD(false))
      barrier();
     while(true)
      {
       {
        if(_GLF_DEAD(false))
         barrier();
        bvec3 _GLF_SWITCH_3_1v;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        {
         bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false);
         ivec2 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
        }
        ;
        for(        mat4x2(-5.1, _GLF_IDENTITY(-1.4, max(-1.4, -1.4)), _GLF_IDENTITY(-6534.0727, mix(float(-6534.0727), float(_GLF_FUZZED(547.663)), bool(false))), _GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)), -3.0, -5.3, 1.8, 63.04);
 true; mat2(3325.4073, 24.92, 8.0, 631.177))
         {
          uint _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          atomicOr(workgroup_base, subgroup_base);
          uvec3 _GLF_SWITCH_3_7v;
          vec4(514.158, -2.6, 7.6, -4.1);
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(ivec3(int(2), 1, 0)))) ^ 0), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, int(int(2)))))), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter ++)
           {
            mat4x3(-77.61, -2.8, -7.6, 1.4, 6955.7313, -3.3, -3416.7631, 6.2, -312.311, -10.91, 3.5, 2154.3320);
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), true))))))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
             barrier();
            break;
            if(_GLF_DEAD(false))
             barrier();
           }
          ;
          uint _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          mat4x2 _GLF_SWITCH_3_11v, _GLF_SWITCH_3_12v;
          mat2 _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v[2];
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        vec4(9.1, 133.636, -313.683, 656.381);
        if(_GLF_IDENTITY((ivec2(60133, -78798) != ivec2(-70695, 18220)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((ivec2(60133, -78798) != ivec2(-70695, 18220)), bool(bool((ivec2(60133, -78798) != ivec2(-70695, 18220))))))))
         {
          ivec2 _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v[35];
          if(_GLF_DEAD(false))
           continue;
          vec2 _GLF_SWITCH_3_17v, _GLF_SWITCH_3_18v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          ivec4 _GLF_SWITCH_3_19v[69];
          if(_GLF_DEAD(false))
           barrier();
          vec3 _GLF_SWITCH_3_20v[98], _GLF_SWITCH_3_21v;
          (mat4x3(-1.4, -5.1, 52.08, -23.31, -4.6, -489.199, 755.929, 28.99, -47.49, -69.16, -4164.9148, 9.6) * mat3x4(765.525, -26.27, 810.327, 620.860, 32.73, 37.06, 88.96, 2982.3545, 7.5, -34.93, -25.04, -3633.5810));
         }
       }
       if(true)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat2x4(-1.4, 4670.5271, 75.11, -8067.1990, -55.63, 70.65, -3462.7727, -1.1);
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
          barrier();
        }
       else
        {
         ;
         if(bool(sign(86824)))
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           uvec4 _GLF_SWITCH_3_22v, _GLF_SWITCH_3_23v[18];
           bvec2(false, _GLF_IDENTITY(false, ! (! (false))));
           mat2x3 _GLF_SWITCH_3_24v, _GLF_SWITCH_3_25v[8], _GLF_SWITCH_3_26v[62];
           int _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v, _GLF_SWITCH_3_29v;
           uvec3 _GLF_SWITCH_3_30v, _GLF_SWITCH_3_31v, _GLF_SWITCH_3_32v;
           mat2x4(3.9, 114.152, -9.2, 553.736, -32.28, 6141.3783, 8.6, -65.13);
           uvec3 _GLF_SWITCH_3_33v[8], _GLF_SWITCH_3_34v, _GLF_SWITCH_3_35v;
          }
         while((uvec2(72017u, 142844u) != uvec2(188072u, 15462u)));
         mat3x2 _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v[18];
         notEqual(vec2(-9.1, 7.0), vec2(8953.6399, -0.9));
         for(bvec2 _GLF_SWITCH_3_38v, _GLF_SWITCH_3_39v, _GLF_SWITCH_3_40v[43]; false; bvec3(false, true, true))
          {
           false;
           mat3x2(mat2(588.565, acos(10.49), 676.126, -6.3));
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           uvec4(67381u, 110895u, 48446u, 120673u);
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           true;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         ((mat4(-2810.2903, 8.2, 2.3, 9069.4168, -287.346, 94.53, -6749.0364, -92.25, -4436.6700, -7.5, -5450.9570, -2.7, _GLF_IDENTITY(-45.19, min(-45.19, _GLF_IDENTITY(-45.19, min(-45.19, -45.19)))), 1.4, -2020.9546, 73.61) - 69.16) / mat4(-44.58, -383.403, -49.37, -3.1, 2.4, 2793.9303, 0.3, 6037.1478, -7272.1936, 46.94, 4.1, -1694.9154, 3.2, 607.861, 94.27, 0.9));
        }
       matrixCompMult(mat2x3(-4436.2970, 428.587, 714.411, -568.175, 3.9, 6.6), mat2x3(-68.10, _GLF_IDENTITY(-0.8, clamp(-0.8, -0.8, -0.8)), 7903.4583, -177.588, -322.404, 6.2));
       bvec2(true, false);
       for(       mat3x2(-1.9, 9310.9240, 3.6, 0.9, 866.633, -28.87);
 false; 146600u)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         mat2(mat3x4(-6.0, 91.98, -6888.7716, 97.42, -15.92, -2.2, _GLF_IDENTITY(-9249.7856, (-9249.7856) - 0.0), -5320.4547, 7.7, 664.420, -70.29, -31.38));
         if(((mat3x2(2802.9590, -453.464, -9.4, 725.996, 4.2, 1721.0658) - _GLF_IDENTITY(6291.6424, min(6291.6424, _GLF_IDENTITY(6291.6424, clamp(6291.6424, 6291.6424, 6291.6424))))) != (- (mat3x2(0.7, 8809.5119, -5490.1441, -712.274, 397.011, -0.8) - -78.30))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.1)), bool(false)))))))))
            barrier();
          }
         else
          {
           mat3x2(19.68, 4156.2483, -5417.5716, -640.849, 3.9, -506.200);
           bvec4 _GLF_SWITCH_3_41v[8], _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v;
           mat3x4 _GLF_SWITCH_3_44v, _GLF_SWITCH_3_45v[26];
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(false))
            barrier();
           uint _GLF_SWITCH_3_46v, _GLF_SWITCH_3_47v;
           float _GLF_SWITCH_3_48v;
          }
         while(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           mat4x3(-8.9, -5.7, 46.78, -7.5, -6.4, 5.8, 55.19, -3.7, -1.2, 954.394, -47.46, -5.0);
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat4 _GLF_SWITCH_3_49v;
           vec2 _GLF_SWITCH_3_50v;
           if(_GLF_DEAD(false))
            barrier();
           false;
           if(_GLF_DEAD(false))
            barrier();
           -24484;
           uint _GLF_SWITCH_3_51v[36], _GLF_SWITCH_3_52v, _GLF_SWITCH_3_53v;
           mat2 _GLF_SWITCH_3_54v, _GLF_SWITCH_3_55v, _GLF_SWITCH_3_56v;
           mat3x4(-1.8, -9.7, -909.980, 6.1, 5.3, -3.1, 6.0, 1.2, 336.214, 4.5, 9223.8451, _GLF_IDENTITY(-9209.4606, _GLF_IDENTITY(float(mat3x2(-9209.4606, 1.0, 0.0, determinant(mat2(1.0, 0.0, round(length(normalize(1.0))), 1.0)), 1.0, 0.0)), min(float(mat3x2(-9209.4606, 1.0, 0.0, determinant(mat2(1.0, 0.0, round(length(normalize(1.0))), 1.0)), 1.0, 0.0)), float(mat3x2(-9209.4606, 1.0, 0.0, determinant(mat2(1.0, 0.0, round(length(normalize(1.0))), 1.0)), 1.0, 0.0))))));
           mat4x2(4.5, 709.582, 6.3, -1853.0832, 2.0, 19.26, -3.6, -2.9);
          }
        }
       while(true)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           (false ? ivec2(-12551, 19611) : _GLF_IDENTITY(ivec2(92831, 67450), (ivec2(92831, 67450)) + ivec2(0, 0)));
          }
         else
          {
          }
         for(uvec3 _GLF_SWITCH_3_57v, _GLF_SWITCH_3_58v; true; mat4(5.7, 5112.2154, 5.0, 66.10, 3615.2166, 900.473, -9.3, -975.315, 5877.4751, -5338.6767, 1.0, 36.73, 209.834, -8.9, 6.0, -7608.9535))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           mat4x2 _GLF_SWITCH_3_59v, _GLF_SWITCH_3_60v, _GLF_SWITCH_3_61v;
           if(_GLF_DEAD(false))
            break;
          }
         mat3 _GLF_SWITCH_3_62v[69], _GLF_SWITCH_3_63v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           mat3x4(0.6, 866.978, -8324.2057, 4688.8707, 9359.7502, 869.954, -8629.3673, -20.18, -4.9, -7904.0062, -8550.6391, -995.284);
           mat4x2(-38.64, -8.2, 64.54, 655.324, -354.969, -789.801, 54.09, 0.7);
           matrixCompMult(mat3(530.557, 6.9, -21.69, -3.5, 454.904, _GLF_IDENTITY(-9631.1439, clamp(-9631.1439, -9631.1439, _GLF_IDENTITY(-9631.1439, (-9631.1439) / 1.0))), -6.2, 8073.0352, -40.96), mat3(432.405, -5.6, -6.3, 4.4, -5.5, -9549.7179, -214.132, -9.4, 1.0));
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat2x4 _GLF_SWITCH_3_64v;
           matrixCompMult((_GLF_SWITCH_3_64v), matrixCompMult(mat2x4(-2.2, 81.71, _GLF_IDENTITY(7.8, float(_GLF_IDENTITY(mat3x4(7.8, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0), _GLF_IDENTITY((mat3x4(7.8, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0)) * mat3(1.0), transpose(transpose((mat3x4(7.8, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0)) * mat3(1.0))))))), 4.1, 7531.3868, 762.783, 5.9, -775.080), mat2x4(51.61, -2.6, 1.2, -7.6, -37.16, -208.277, 7773.2868, 4.8)));
           if(_GLF_DEAD(false))
            barrier();
           atomicAdd(subgroup_size, (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             barrier();
            }
           bvec3(false, true, false);
           ivec2 _GLF_SWITCH_3_65v;
           mat4x2 _GLF_SWITCH_3_66v, _GLF_SWITCH_3_67v[20], _GLF_SWITCH_3_68v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), false, false, true))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
              barrier();
             findLSB(ivec4(26139, -14387, _GLF_IDENTITY(-92823, int(ivec2(-92823, 1))), -2219));
            }
           bool _GLF_SWITCH_3_69v, _GLF_SWITCH_3_70v, _GLF_SWITCH_3_71v[64];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2 _GLF_SWITCH_3_72v[51], _GLF_SWITCH_3_73v, _GLF_SWITCH_3_74v;
           uvec4(175442u, 176696u, 5921u, 173975u);
           if(_GLF_DEAD(false))
            barrier();
           ivec3 _GLF_SWITCH_3_75v[8];
          }
         if(_GLF_DEAD(false))
          barrier();
         ivec4 _GLF_SWITCH_3_76v;
        }
      }
     case 0:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 87:
     if(_GLF_DEAD(false))
      {
       switch(_GLF_IDENTITY(_GLF_SWITCH(0), max(_GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) >> 0), _GLF_SWITCH(0))))
        {
         case 32:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           while((mat4x2(-4.8, -1.1, -431.631, -2.5, -9.5, 1.3, 43.13, -2.8) != mat4x2(-564.734, -6.5, -47.17, 7.2, 659.283, -460.194, 20.71, 303.967)))
            {
            }
          }
         else
          {
          }
         case 0:
         case 47:
         if(_GLF_DEAD(false))
          barrier();
         case 29:
         case 13:
         case 83:
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool((false) && true)), bool(bvec4(bool(bool((false) && true)), false, true, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         case 35:
         case 44:
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
         case 10:
         vec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[8], _GLF_SWITCH_2_2v;
         case 59:
         for(vec2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v; (clamp(_GLF_IDENTITY(uvec2(132419u, 144910u), (uvec2(132419u, 144910u)) ^ uvec2(0u, 0u)), uvec2(147725u, 89186u), uvec2(113156u, 105621u)).ttt == (uvec3(88447u, 79031u, _GLF_IDENTITY(_GLF_IDENTITY(185591u, max(185591u, 185591u)), (true ? _GLF_IDENTITY(185591u, max(185591u, 185591u)) : _GLF_FUZZED(virtual_gid)))) % uvec3(9228u, 133857u, 143186u))); mat4x2(23.57, -447.021, -909.618, -6786.3894, 27.30, 6.5, -8.7, -9522.2992))
          {
           bvec2 _GLF_SWITCH_2_5v[33];
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             ivec2(-23152, -15291);
            }
           while(false);
           if(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))).r)
            {
             uvec2 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
             if(_GLF_DEAD(false))
              barrier();
             _GLF_IDENTITY(ivec3(ivec4(94726, 87861, -40043, -79364)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec3(ivec4(94726, 87861, -40043, -79364)), max(_GLF_IDENTITY(ivec3(ivec4(94726, 87861, -40043, -79364)), (ivec3(ivec4(94726, 87861, -40043, -79364))) + ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ivec3(ivec4(94726, 87861, -40043, -79364))))), (~ (ivec3(_GLF_IDENTITY(ivec4(94726, 87861, -40043, -79364), (ivec4(94726, 87861, -40043, -79364)) - ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + ivec3(0, 0, 0))));
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, abs(1.0), 1.0))) : _GLF_FUZZED(808.685))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))))))
              barrier();
             mat4x3(mat4(85.53, -88.57, -907.758, 5.5, -6982.8234, 1.1, 94.29, 624.858, -3.7, -798.811, 4215.8309, 9.6, -56.62, -3425.1535, -9.2, 627.379));
             (+ mat4(-3375.8634, -9905.6788, 73.13, -6850.6074, -8.8, -204.209, 9.6, 9.3, 370.496, 0.8, -41.67, 683.672, -9.9, -5.1, _GLF_IDENTITY(7.8, clamp(7.8, 7.8, 7.8)), 2675.5280));
             (uvec4(101776u, 147970u, 160344u, 8059u) >> (subgroup_id - workgroup_base));
             mat2(7.3, _GLF_IDENTITY(58.04, (58.04) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), sin(0.0), 1.0, 0.0)))), 2.1, 146.020);
             _GLF_SWITCH_2_7v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             true;
            }
           else
            {
             (mat4(5.6, 2.3, -3.3, 1.6, -861.994, 451.101, 227.795, -586.133, -5.9, -762.019, 7.7, -5879.4248, 1.4, 30.36, -1.2, 93.73) / degrees(0.4));
             if(_GLF_DEAD(false))
              barrier();
             bvec4 _GLF_SWITCH_2_8v;
             (mat3(0.3, -473.456, 358.662, 9.5, 38.02, -2974.8528, 2.7, 9897.0134, 7.9) * mat4x3(mat4(-3339.7394, _GLF_IDENTITY(5.4, (true ? _GLF_IDENTITY(5.4, float(mat2x3(_GLF_IDENTITY(5.4, 1.0 * (5.4)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6077.8262)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))) : _GLF_FUZZED(3.0))), -1.6, 2010.4170, -746.202, 22.65, 86.98, -3358.7056, 257.421, -880.009, 1.1, -0.0, -6590.1713, 6.8, -9743.3445, 8.8)));
             if(_GLF_DEAD(false))
              barrier();
             mat2(87.23, 4.1, -82.15, 1998.9397);
             ;
             bvec4 _GLF_SWITCH_2_9v[89], _GLF_SWITCH_2_10v[35], _GLF_SWITCH_2_11v[47];
             if(_GLF_DEAD(false))
              barrier();
             vec3 _GLF_SWITCH_2_12v;
             ;
             sinh(_GLF_SWITCH_2_12v);
            }
          }
         default:
         1;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 12:
     case 29:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 1:
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(_GLF_IDENTITY((0 | 0), ((0 | 0)) >> 0)))
      {
       case 34:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       mat4(159.157, 6485.5671, -214.926, -1.1, _GLF_IDENTITY(6.0, mix(float(6.0), float(_GLF_FUZZED(-85.91)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, true && (true)) && (bool(false))))), -2.6, -3407.3544, _GLF_IDENTITY(8.4, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))) ? 8.4 : _GLF_FUZZED(276.539))), -99.17, -3.7, 1.5, 9515.1720, _GLF_IDENTITY(-8906.9868, float(mat4x2(-8906.9868, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), -9.7, -181.235, 60.32);
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
          barrier();
         barrier();
        }
       case 0:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       case 67:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       case 22:
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)))) - 0.0), float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) + 0.0)))) - 0.0))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       case 71:
       case 40:
       case 23:
       case 5:
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(_GLF_IDENTITY(false, bool(bool(false))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 74:
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) && true))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && _GLF_IDENTITY(true, ! (! (true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / int(_GLF_ONE(1.0, injectionSwitch.y))))
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       case 41:
       if(_GLF_DEAD(false))
        barrier();
       bvec2(false, true);
       default:
       _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 1, 0), (ivec4(1, 0, 1, 0)) | ivec4(0, 0, 0, 0))))) + (0 ^ 0));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     break;
     default:
     1;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 9:
     ;
     if(_GLF_DEAD(false))
      barrier();
     case 86:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     vec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     case 41:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 46:
     case 27:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 91:
     case 15:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     switch(_GLF_SWITCH(0))
      {
       case 26:
       ;
       case 0:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(mod(vec2(1.0, 71.86), 5.8)) : max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY((0 | 0), int(int(_GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | 0))))))))
            {
             case 22:
             (floatBitsToUint(injectionSwitch) + num_workgroup);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 77:
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
              barrier();
             for(mat4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[97], _GLF_SWITCH_2_2v[61]; false; 5.9)
              {
              }
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             case 93:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             case 63:
             if(_GLF_DEAD(false))
              barrier();
             case 86:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               barrier();
              }
             break;
             case 95:
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               {
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
             }
             case 8:
             (~ 12519);
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH(_GLF_IDENTITY(0, int(int(0)))))
              {
               case 14:
               mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[42], _GLF_SWITCH_3_2v;
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 5:
               case 77:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 2:
               return;
               break;
               case 94:
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 (mat2x4(_GLF_IDENTITY(-12.13, float(mat2x4(-12.13, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0))))), 3.8, -9.1, 41.75, -0.4, -9.3, -2.2, -8.9) == mat2x4(-651.327, -7.0, -0.9, 2078.3894, -8.1, 38.00, -7.7, -90.85));
                }
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), bool(bvec2(bool(bvec4(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-4009.8643, 1.1, 1.6).s)), bool(false)))) * 1.0) > injectionSwitch.y))), true, false)), false)))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, 9607.7369)) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, 9607.7369)) : injectionSwitch)).x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 61:
             vec2 _GLF_SWITCH_3_0v[63], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[48];
             case 0:
             case 26:
             atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) / 1u), 4, 64, 4);
             break;
             case 71:
             if(_GLF_DEAD(false))
              barrier();
             mat4 _GLF_SWITCH_3_3v;
             case 44:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             ivec3(-25478, -5453, -20590);
             if(_GLF_DEAD(false))
              barrier();
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       case 89:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
        barrier();
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
       case 21:
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))
          return;
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
           barrier();
          mat4x2(_GLF_IDENTITY(9716.6232, clamp(_GLF_IDENTITY(9716.6232, min(9716.6232, 9716.6232)), _GLF_IDENTITY(9716.6232, mix(float(_GLF_IDENTITY(9716.6232, (true ? 9716.6232 : _GLF_FUZZED(7.4)))), float(_GLF_FUZZED(6.8)), bool(false))), 9716.6232)), -2.7, _GLF_IDENTITY(_GLF_IDENTITY(74.10, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec2(0.0, 1.0)), dot(vec2(1.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) + 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))))), 1.0, 1.0))))) + (74.10)), (true ? _GLF_IDENTITY(74.10, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec2(0.0, 1.0)), dot(vec2(1.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0)), (determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) + 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), mix(float(_GLF_IDENTITY(round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), clamp(round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))), float(_GLF_FUZZED(-36.30)), bool(false)))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.2) : 1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))) + 0.0), min(mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(438.593)), bool(false)))))), bool(true)), mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true))))), 1.0, 1.0))))) + (74.10)) : _GLF_FUZZED(-543.897))), 3.5, 8.9, 104.161, 9.1, -300.453);
          for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))) && true), true))), (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                return;
               }
              barrier();
             }
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))
             barrier();
            barrier();
           }
          uvec3(71027u, 193341u, 33576u);
          if(_GLF_DEAD(false))
           barrier();
          if(true)
           {
            if(_GLF_DEAD(false))
             barrier();
            _GLF_IDENTITY(-1298, (-1298) >> _GLF_IDENTITY(0, min(0, 0)));
            bvec3 _GLF_SWITCH_1_0v[57], _GLF_SWITCH_1_1v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
             barrier();
            uint _GLF_SWITCH_1_2v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            injectionSwitch;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) * 1), int(6))), _GLF_IDENTITY(int(6), clamp(int(6), int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max(_GLF_IDENTITY((1) / 1, (_GLF_IDENTITY((1) / 1, ((1) / 1) | ((1) / 1))) >> 0), (1) / 1))))) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max(_GLF_IDENTITY((1) / 1, (_GLF_IDENTITY((1) / 1, ((1) / 1) | ((1) / 1))) >> 0), (1) / 1))))) ^ 0))), (true ? _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max(_GLF_IDENTITY((1) / 1, (_GLF_IDENTITY((1) / 1, ((1) / 1) | ((1) / 1))) >> 0), (1) / 1))))) ^ 0))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max(_GLF_IDENTITY((1) / 1, (_GLF_IDENTITY((1) / 1, ((1) / 1) | ((1) / 1))) >> 0), (1) / 1))))) ^ 0))))))) && true); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               barrier();
              bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9424.9433))), 0.0)), log(1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), injectionSwitch.y), 0.0, 0.0, 0.0))).y)), false))), true);
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
              if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
             }
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))), false, true, true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            uvec4(124870u, 68155u, _GLF_IDENTITY(23947u, max(23947u, _GLF_IDENTITY(23947u, min(23947u, 23947u)))), _GLF_IDENTITY(111816u, _GLF_IDENTITY(min(_GLF_IDENTITY(111816u, (111816u) / 1u), 111816u), clamp(min(_GLF_IDENTITY(111816u, (111816u) / 1u), 111816u), min(_GLF_IDENTITY(111816u, (111816u) / 1u), 111816u), _GLF_IDENTITY(min(_GLF_IDENTITY(111816u, (111816u) / 1u), 111816u), 0u ^ (min(_GLF_IDENTITY(111816u, (111816u) / 1u), 111816u)))))));
            (87623 - _GLF_IDENTITY(ivec4(31108, -57082, 57879, -72573), (ivec4(31108, -57082, 57879, -72573)) | (ivec4(31108, -57082, 57879, -72573))));
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
             barrier();
            bvec2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[91];
            if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
             barrier();
            ivec3 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
             barrier();
            (true , ivec4(-64608, -48781, 94486, -79525));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            do
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    barrier();
                   }
                 }
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))));
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              unpackHalf2x16((+ read))[1];
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  barrier();
                 }
               }
              return;
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
           barrier();
          ivec3(6756, 43637, -74352);
         }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         mat3 _GLF_SWITCH_1_8v[7];
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         while((mat4x2(_GLF_IDENTITY(-156.019, _GLF_IDENTITY((_GLF_IDENTITY(-156.019, (_GLF_IDENTITY(-156.019, float(mat2(-156.019, 1.0, 0.0, 1.0)))) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), mix(float((_GLF_IDENTITY(-156.019, (_GLF_IDENTITY(-156.019, float(mat2(-156.019, 1.0, 0.0, 1.0)))) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(4620.6070)), bool(false))) * 1.0), 8.0, -5.4, 92.90, -9478.4378, -2.7, -3754.7010, 455.976) == mat4x2(-6.2, 9.4, 8.1, -6.7, _GLF_IDENTITY(-2.4, (-2.4) - sin(0.0)), _GLF_IDENTITY(-5552.9295, clamp(-5552.9295, -5552.9295, _GLF_IDENTITY(-5552.9295, max(-5552.9295, -5552.9295)))), 53.61, -67.78)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 58:
               uint _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
               case 0:
               case 24:
               case 73:
               case 97:
               if(_GLF_DEAD(false))
                barrier();
               case 16:
               case 57:
               case 55:
               case 25:
               case 6:
               case 84:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               break;
               case 7:
               vec3(-7.2, 14.86, 8.9);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               default:
               if(_GLF_DEAD(false))
                barrier();
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           {
            switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
             {
              case 0:
              case 79:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), ~ (~ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(2))))))); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                transpose(mat3x2(19.88, 9.9, 7.3, 5.8, -9.8, 2809.8866));
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))))
                 barrier();
               }
              case 41:
              case 47:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 80:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  barrier();
                 }
               }
              case 10:
              uvec3 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v;
              if(_GLF_DEAD(false))
               barrier();
              case 73:
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
               barrier();
              case 12:
              mat2x3(_GLF_IDENTITY(4.4, clamp(4.4, 4.4, 4.4)), -7435.8534, -980.084, 2.4, -1.4, -44.95);
              if(_GLF_DEAD(false))
               barrier();
              case 27:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              case 89:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false, true)))))
                 barrier();
                barrier();
               }
              break;
              case 13:
              _GLF_IDENTITY(mat2(-5560.1837, 1.0, -62.24, 3801.4926), transpose(transpose(mat2(-5560.1837, 1.0, -62.24, 3801.4926))));
              case 37:
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                942.563;
               }
              default:
              1;
              if(_GLF_DEAD(false))
               barrier();
             }
           }
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, true), true)))))))))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), float(_GLF_FUZZED(0.2)), bool(false))) : _GLF_FUZZED(1671.1057))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(17.09)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(97.79)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.1))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) - 0.0)), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), transpose(transpose(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), (1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0), mat3x2(_GLF_IDENTITY(mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (mat4(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) / mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, exp(0.0) * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))))))))) - _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(0.2)), bool(false))) : _GLF_FUZZED(1671.1057)))) - 0.0)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           bvec2 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2 _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v[21];
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), false || (! (true)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)))
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), _GLF_IDENTITY((~ (int(0))), (_GLF_IDENTITY((~ (int(0))), (true ? (~ (int(0))) : _GLF_FUZZED(-32662)))) << (0 & 64480)) >> 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           float _GLF_SWITCH_1_17v;
           mat2x3 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           for(vec2 _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v; _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), (bool(bvec2(bool(true), true))) && true)), bool(bvec3(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), (bool(bvec2(bool(true), true))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY((true), ! (! ((true)))) || false)))); lessThan(vec2(-14.00, 9.7), vec2(-7466.7468, -5.0)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7972.8659)), float(injectionSwitch.x), bool(true))))), round(length(normalize(1.0))) * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7972.8659)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
              barrier();
             mat4x2 _GLF_SWITCH_1_23v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) ^ 0) & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-814.238)), float(injectionSwitch.x), bool(true))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | _GLF_IDENTITY((int(8)), (_GLF_IDENTITY((int(8)), min((int(8)), (int(8))))) >> 0))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), (dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0))) - 0.0)), sin(0.0)), clamp(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), (dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0))) - 0.0)), sin(0.0)), vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), (dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0))) - 0.0)), sin(0.0)), vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0)), (dot(vec2(1.0, abs(0.0)), vec2(1.0, 0.0))) - 0.0)), sin(0.0)))))))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0, _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(_injected_loop_counter))) << 0) | (int(8))))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0, (0) << 0) | (int(8)))))) | ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0, (0) << 0) | (int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, 1 * (8)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))), (_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 | (int(8))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(bitCount(workgroup_id)) : _GLF_IDENTITY(0, ~ (~ (0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 | (int(8))), 1 * (_GLF_IDENTITY(int(8), 0 | (int(8)))))))))) || false))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))), (_injected_loop_counter != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 | (int(8))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(bitCount(workgroup_id)) : _GLF_IDENTITY(0, ~ (~ (0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 | (int(8))), 1 * (_GLF_IDENTITY(int(8), _GLF_IDENTITY(0 | (int(8)), min(0 | (int(8)), _GLF_IDENTITY(0 | (int(8)), min(0 | (int(8)), 0 | (int(8)))))))))))))) || false)))))))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) << 0)) << 0) != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-8554.2615), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | _GLF_IDENTITY((int(8)), (_GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), (int(8))))) | 0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_SWITCH_1_17v))))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), (int(8)) | 0))))), ((int(8))) << (0 ^ 0)))))), true && (! (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, clamp(8, 8, _GLF_IDENTITY(8, max(8, 8))))) | (8))))))), (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))), clamp(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8)))))), 1)))), int(ivec4((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))), 0, 0, 0)))) | ((int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(8))))))))))))) && _GLF_IDENTITY(true, false || (true))))))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2.3))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))))); _injected_loop_counter --)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 15:
                 uint _GLF_SWITCH_2_0v;
                 case 61:
                 ivec2 _GLF_SWITCH_2_1v[67], _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[1];
                 case 0:
                 case 3:
                 case 77:
                 read;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   continue;
                  }
                 case 16:
                 case 71:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 break;
                 case 94:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 mat4x3 _GLF_SWITCH_2_4v[42], _GLF_SWITCH_2_5v;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 31:
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true)))))), false, true)))))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 mat4x2(5.3, -5.1, 55.69, 4.6, -8005.5284, 6.0, 0.9, 1.4);
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.4)), bool(false))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
                barrier();
               faceforward(_GLF_SWITCH_1_22v, vec2(8270.2785, -3.2), (++ _GLF_SWITCH_1_22v));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-2.9, float(mat2(_GLF_IDENTITY(-2.9, max(-2.9, -2.9)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-3.8) : dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 1.0))), min(_GLF_IDENTITY(-2.9, float(mat2(_GLF_IDENTITY(-2.9, max(-2.9, -2.9)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-3.8) : dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 1.0))), _GLF_IDENTITY(-2.9, float(mat2(_GLF_IDENTITY(-2.9, max(-2.9, -2.9)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(-3.8) : dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 1.0))))), 6.8, 89.04, 41.03, 72.42, -9650.7123, -8543.4182, 2.3, 707.671, -97.02, 5.2, 4719.8765);
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               ;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bool(true))), false))) || false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 2339.7273))), bool(false))) > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
            }
           injectionSwitch;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7343.9064)), vec2(_GLF_FUZZED(8.6), (injectionSwitch)[1]), bvec2(false, true))).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7343.9064)), vec2(_GLF_FUZZED(8.6), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7343.9064)), vec2(_GLF_FUZZED(8.6), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7343.9064)), vec2(_GLF_FUZZED(8.6), (injectionSwitch)[1]), bvec2(false, true))))).y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(vec4 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v; (mat3(-21.90, _GLF_IDENTITY(171.123, (171.123) / 1.0), 1734.6766, -40.94, -6.1, -2671.2775, 0.9, -9.0, -8812.8183) == mat3(3.7, -2.0, 5.8, _GLF_IDENTITY(8.8, float(mat4x3(8.8, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(cos(0.0)), (sqrt(cos(0.0))) / 1.0), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (true ? determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(1.3))), 0.0))), -3909.6401, -435.126, -3481.0830, 656.424, 8.7)); vec3(_GLF_IDENTITY(10.66, (_GLF_IDENTITY(_GLF_IDENTITY(true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), clamp(true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v))), max(_GLF_IDENTITY(true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), min(true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v))), float(mat3(_GLF_IDENTITY(true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), min(true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v), true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v))), 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 1.0)))) - 0.0), true ? 10.66 : _GLF_FUZZED(_GLF_SWITCH_1_17v))))), 3.2, -7.5))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))) && (false))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             ;
             if(_GLF_DEAD(false))
              barrier();
             mat3x4(7.3, -6.7, 963.668, 32.04, _GLF_IDENTITY(711.399, max(_GLF_IDENTITY(711.399, min(711.399, 711.399)), 711.399)), 1771.8183, _GLF_IDENTITY(2245.7807, min(_GLF_IDENTITY(2245.7807, 1.0 * (2245.7807)), 2245.7807)), -7.4, 351.520, 50.79, -68.65, -6682.0412);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false)), true, false))), false, true))))))
                barrier();
               vec4(1.6, _GLF_IDENTITY(-462.469, (-462.469) + 0.0), -95.94, -9.2);
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             mat3 _GLF_SWITCH_1_26v[98], _GLF_SWITCH_1_27v;
             ;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), false, _GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), false, _GLF_IDENTITY(false, true && (false)))), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))), false, _GLF_IDENTITY(false, true && (false)))))))))), (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), _GLF_IDENTITY(false, false || (false)), true))) && true))) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-750.987), _GLF_FUZZED(-0.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
              barrier();
            }
           (- mat3(-5200.3781, -4.6, 2.8, -712.909, 728.667, -905.162, _GLF_IDENTITY(9.2, mix(float(_GLF_FUZZED(-35.09)), float(_GLF_IDENTITY(9.2, (9.2) / 1.0)), bool(true))), 4006.9869, 8.4));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
          return;
         if((uvec4(146211u, 105111u, 167516u, 51488u) != uvec4(156027u, 181039u, 100201u, 189045u)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(_GLF_IDENTITY((0 | _GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5))))), 1 * ((0 | 0)))))
              {
               case 0:
               case 16:
               case 58:
               case 61:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 46:
               case 81:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               case 97:
               case 69:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               case 14:
               if(_GLF_DEAD(false))
                return;
               return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               break;
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
              barrier();
            }
           mat3x2(mat3x4(9.9, -39.85, -7603.1656, _GLF_IDENTITY(590.150, max(590.150, 590.150)), _GLF_IDENTITY(-2.4, (_GLF_IDENTITY(-2.4, clamp(-2.4, -2.4, -2.4))) - 0.0), -5129.2616, -948.569, 42.19, 5845.4998, -4420.9156, 6.7, -3555.3702));
           uvec2 _GLF_SWITCH_1_28v;
           mat2x4(5393.7473, -72.13, -8.4, _GLF_IDENTITY(500.654, _GLF_IDENTITY(mix(float(500.654), float(_GLF_FUZZED(2547.4054)), bool(_GLF_IDENTITY(false, ! (! (false))))), float(_GLF_IDENTITY(mat2(mix(float(500.654), float(_GLF_FUZZED(2547.4054)), bool(_GLF_IDENTITY(false, ! (! (false))))), sqrt(1.0), 1.0, tan(0.0)), (_GLF_IDENTITY(mat2(mix(float(500.654), float(_GLF_FUZZED(2547.4054)), bool(_GLF_IDENTITY(false, ! (! (false))))), sqrt(1.0), 1.0, tan(0.0)), (true ? mat2(mix(float(500.654), float(_GLF_FUZZED(2547.4054)), bool(_GLF_IDENTITY(false, ! (! (false))))), sqrt(1.0), 1.0, tan(0.0)) : _GLF_FUZZED(mat2(5339.2766, -45.52, 110.103, 9.5))))) + mat2(0.0, 0.0, 0.0, 0.0))))), -4528.7722, -1.0, 97.42, _GLF_IDENTITY(800.617, max(800.617, _GLF_IDENTITY(800.617, float(_GLF_IDENTITY(mat3x4(800.617, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x4(800.617, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))));
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-79.75)), vec2(_GLF_FUZZED(-1.1), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-79.75)), vec2(_GLF_FUZZED(-1.1), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y), true))))));
            }
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[0], _GLF_FUZZED(1.7), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[2], (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[3]), vec4(_GLF_FUZZED(65.51), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[1], _GLF_FUZZED(-2.0), _GLF_FUZZED(2.7)), bvec4(false, true, false, false)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[0], _GLF_FUZZED(1.7), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[2], (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[3]), vec4(_GLF_FUZZED(65.51), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[1], _GLF_FUZZED(-2.0), _GLF_FUZZED(2.7)), bvec4(false, true, false, false)))), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[0], _GLF_FUZZED(1.7), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[2], (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[3]), vec4(_GLF_FUZZED(65.51), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[1], _GLF_FUZZED(-2.0), _GLF_FUZZED(2.7)), bvec4(false, true, false, false)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[0], _GLF_FUZZED(1.7), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[2], (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[3]), vec4(_GLF_FUZZED(65.51), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[1], _GLF_FUZZED(-2.0), _GLF_FUZZED(2.7)), bvec4(false, true, false, false)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[0], _GLF_FUZZED(1.7), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[2], (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[3]), vec4(_GLF_FUZZED(65.51), (vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, log(1.0)))[1], _GLF_FUZZED(-2.0), _GLF_FUZZED(2.7)), bvec4(false, true, false, false))))))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
             barrier();
           }
           mat2x4 _GLF_SWITCH_1_29v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(true)
            {
             ;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             vec4 _GLF_SWITCH_1_30v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             num_workgroup;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             vec3(-5484.8586, 435.901, _GLF_IDENTITY(438.608, min(_GLF_IDENTITY(438.608, max(438.608, 438.608)), 438.608)));
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
              barrier();
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x > injectionSwitch.y)) || (_GLF_DEAD(false)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || (_GLF_DEAD(false))))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               mat3(_GLF_IDENTITY(_GLF_IDENTITY(1347.2110, (1347.2110) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1347.2110, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(1.0, 1.0)), 1.0, 1.0), (mat3(1347.2110, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1347.2110, max(_GLF_IDENTITY(1347.2110, clamp(1347.2110, 1347.2110, 1347.2110)), 1347.2110)), (1347.2110) - abs(0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-29590))), bool(false)))), float(_GLF_FUZZED(47.29)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - log(exp(0.0))), 0.0, 1.0, 1.0, 1.0)), float(mat3(1347.2110, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), clamp((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), clamp((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))))).x) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), float(_GLF_IDENTITY(vec4(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), abs(0.0), 0.0, 0.0), _GLF_IDENTITY(vec4(mat3(vec4(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), abs(0.0), 0.0, 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(vec4(mat3(vec4(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), abs(0.0), 0.0, 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), vec4(mat3(vec4(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), abs(0.0), 0.0, 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), vec4(mat3(vec4(clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), abs(0.0), 0.0, 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))), sqrt(0.0), 0.0, 1.0, 1.0, 1.0)), float(mat3(1347.2110, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0))))), 1.5, 6.8, -188.986, -1.8, 8.0, -60.42, -6893.8050, -7.4);
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             mat3x2 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v;
             mat3x2 _GLF_SWITCH_1_34v[73], _GLF_SWITCH_1_35v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat2x4 _GLF_SWITCH_1_36v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(false)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               barrier();
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           while(true)
            {
             (true == _GLF_IDENTITY((! true), bool(_GLF_IDENTITY(bool((! true)), false || (bool((! true)))))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8630.5160)), vec2(_GLF_FUZZED((true ? 2.9 : (+ 9.6))), (injectionSwitch)[1]), bvec2(false, true))).y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           if((vec3(9986.4968, _GLF_IDENTITY(8964.3696, float(_GLF_IDENTITY(vec4(8964.3696, 0.0, 0.0, sqrt(0.0)), mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))) * (vec4(8964.3696, 0.0, 0.0, sqrt(0.0)))))), -34.98) != pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 37:
               mat3x4(1.2, -35.64, 8.5, -46.33, -930.822, 887.063, 1774.6535, 7716.2279, -15.55, -3.3, -1230.4479, 90.96);
               if(_GLF_DEAD(false))
                barrier();
               case 0:
               case 88:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               case 84:
               ;
               mat3x4(27.65, _GLF_IDENTITY(-933.605, clamp(-933.605, -933.605, -933.605)), _GLF_IDENTITY(9.2, float(_GLF_IDENTITY(vec2(9.2, 0.0), _GLF_IDENTITY((vec2(9.2, 0.0)) * vec2(1.0, 1.0), max((vec2(9.2, 0.0)) * vec2(1.0, 1.0), (vec2(9.2, 0.0)) * vec2(1.0, 1.0)))))), 1.2, 5.2, _GLF_IDENTITY(7021.3444, max(7021.3444, 7021.3444)), -592.406, 4.1, 2638.3150, 0.5, -6395.4209, 9.4);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 68:
               vec4 _GLF_SWITCH_1_37v[46], _GLF_SWITCH_1_38v, _GLF_SWITCH_1_39v[63];
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                  barrier();
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9679.8815) : injectionSwitch.y))))))))))) && true))
                barrier();
               (_GLF_SWITCH_1_28v ^ subgroup_size);
               if(_GLF_DEAD(false))
                barrier();
               mat4x3(-6.2, 7.9, 14.34, _GLF_IDENTITY(9.2, mix(float(_GLF_IDENTITY(_GLF_FUZZED(291.286), min(_GLF_IDENTITY(_GLF_FUZZED(291.286), clamp(_GLF_FUZZED(291.286), _GLF_FUZZED(291.286), _GLF_FUZZED(291.286))), _GLF_FUZZED(291.286)))), float(9.2), bool(true))), _GLF_IDENTITY(3.6, max(3.6, 3.6)), -56.26, 912.615, 9379.9004, -3434.4453, 2199.3362, -77.98, -1990.0884);
               case 66:
               if(_GLF_DEAD(false))
                barrier();
               case 50:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 87:
               case 65:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), _GLF_IDENTITY(true, ! (! (true))), true, true)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 51:
               mat3(_GLF_IDENTITY(_GLF_IDENTITY(vec3(2.2, 1.0, 61.60), clamp(vec3(2.2, 1.0, 61.60), vec3(2.2, 1.0, 61.60), vec3(2.2, 1.0, 61.60))), min(_GLF_IDENTITY(vec3(2.2, 1.0, 61.60), clamp(vec3(2.2, 1.0, _GLF_IDENTITY(61.60, min(61.60, 61.60))), vec3(2.2, 1.0, 61.60), vec3(2.2, 1.0, 61.60))), _GLF_IDENTITY(vec3(2.2, 1.0, 61.60), clamp(vec3(2.2, 1.0, 61.60), vec3(2.2, 1.0, 61.60), vec3(2.2, 1.0, _GLF_IDENTITY(61.60, mix(float(61.60), float(_GLF_FUZZED(-1.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), vec3(3.7, -67.13, 7.3), vec3(239.019, 2.1, _GLF_IDENTITY(-0.9, min(_GLF_IDENTITY(-0.9, 1.0 * (-0.9)), _GLF_IDENTITY(-0.9, mix(float(-0.9), float(_GLF_FUZZED(1.3)), bool(false)))))));
               mat3x2 _GLF_SWITCH_1_40v[85], _GLF_SWITCH_1_41v[22];
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
                    barrier();
                   return;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
                barrier();
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 61:
               mat3x4(5.0, -8835.3658, -92.70, -9466.1686, 0.2, -9767.3085, 3255.7104, 622.125, 7878.3834, -7016.0614, -52.63, -490.947);
               case 70:
               vec4 _GLF_SWITCH_0_0v;
               default:
               1;
              }
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true)))))) && ((false))), true && (true && (false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 40:
       if(all(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, true && (false))), true))), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(true, false), true, true)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(true, false), true, true)), false)))))))))))))), bool(bvec2(! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))) || false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       default:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       1;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     break;
     default:
     if(_GLF_DEAD(false))
      barrier();
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}
