#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id;
 mat2x3 _f0;
} ;

struct _GLF_struct_27 {
 float _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat2 _f3;
 ivec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
} ;

struct _GLF_struct_26 {
 int _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_29 {
 uint _f0;
 vec2 _f1;
 ivec3 _f2;
 uint _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_28 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_24 {
 mat2x4 _f0;
 mat2x4 _f1;
 int _injected_loop_counter;
} ;

struct _GLF_struct_22 {
 bool _f0;
 bvec3 _f1;
 int _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
} ;

struct _GLF_struct_25 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 uint virtual_gid;
 _GLF_struct_19 _f2;
 mat4x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_21 {
 mat3x4 _f0;
 _GLF_struct_20 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 bool _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 mat4 _f1;
 uint _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 ivec4 _f1;
 uint subgroup_size;
 vec4 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 mat4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 _GLF_struct_10 _f1;
 bool _f2;
 mat3x4 _f3;
 float _f4;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_15 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 uint next_virtual_gid;
 mat3x2 _f1;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat3x4 _f1;
 bool _f2;
 mat4x3 _f3;
 uvec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 float _f1;
 _GLF_struct_6 _f2;
 mat3 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 vec3 _f1;
 uvec2 _f2;
 mat2x4 _f3;
 mat4x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat4x3 _f1;
 int _f2;
 ivec2 _f3;
 float _f4;
 vec4 _f5;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bvec3 _f1;
 mat3 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_0 _f0;
 _GLF_struct_5 _f1;
 uint _f2;
 _GLF_struct_8 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, sqrt(0.0), 1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))), ! (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), true, true)))))))))), false, true), true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false))))), false, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))), false)))))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))))), true, false, false))))))), false, true), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0)))) < injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_30 _GLF_struct_replacement_30;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 0, (0 >> _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))) >> _GLF_IDENTITY(int(1), int(1)))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 0, (0 >> _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))) >> _GLF_IDENTITY(int(1), int(1))))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) >> 0)); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)), (false ? _GLF_FUZZED(-56191) : _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)), (false ? _GLF_FUZZED(-56191) : _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --))))))) / 1), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))), ((~ (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(0, 0 ^ (0)) + (_injected_loop_counter --))))) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(74.00, -4077.5516)) : injectionSwitch)).y)))) >> 0)) >> 0)))
        {
         barrier();
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id));
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(uvec2(1u), _GLF_struct_11(bvec2(true), _GLF_struct_10(bvec2(true), mat4(1.0), vec3(1.0)), true, mat3x4(1.0), 1.0), _GLF_struct_13(mat4x3(1.0), _GLF_struct_12(mat4x2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), ivec4(1), gl_SubgroupSize, vec4(1.0), mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_struct_15(_GLF_struct_14(ivec3(_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1))))), 0)))), true, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) || false))), true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) || false), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)) || false), true, true, false))))))))), mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1u, mat4x2(1.0)), mat3x4(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, false))))))
  barrier();
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.x = num_workgroup;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(1u, vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - 0)), ((_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) - 0))) - 0)) ^ 0)))))), 1u, _GLF_struct_26(1, gl_WorkGroupSize.x), _GLF_struct_28(_GLF_struct_27(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1785.3490) : 1.0)), ivec4(1), uvec2(1u), _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), ivec4(1), vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), vec2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       for(_GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_23(_GLF_struct_22(true, bvec3(true), 1, bvec4(true))), _GLF_struct_24(mat2x4(1.0), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_struct_replacement_25._f1._injected_loop_counter != (0 ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))), true && (_GLF_struct_replacement_25._f1._injected_loop_counter != (0 ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))))))); _GLF_struct_replacement_25._f1._injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (bool(bool(false)))))), true, true), true)), true)))), false)))))), bool(bool(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, true), _GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, true), _GLF_IDENTITY(true, ! (! (true))))), true)), true))))), false))))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               do
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, sin(0.0), 0.0, 1.0, 0.0)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z = workgroup_id;
  }
 uint workgroup_base = _GLF_struct_replacement_29._f4.workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, clamp(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, _GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, _GLF_IDENTITY(0u | (_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z), max(0u | (_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) * uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) * uvec4(1u, 1u, 1u, 1u)))) - 0u))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, (_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id) | (_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id)), _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id))) | uvec3(0u, 0u, 0u)).z)))), _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z)), uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, clamp(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, _GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, _GLF_IDENTITY(0u | (_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z), max(0u | (_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) * uvec4(1u, 1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) * uvec4(1u, 1u, 1u, 1u)))) - 0u))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, max(_GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id, (_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id) | (_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id)), _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id))) | uvec3(0u, 0u, 0u)).z)))), _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.z)), 0u, 0u)));
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), 0 ^ (int(8))), int(8)))))); _injected_loop_counter --)
  {
   GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
    }
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(mat3x4(1.0), _GLF_struct_20(_GLF_struct_17(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_18(mat4x2(1.0), mat4x3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u)), (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u))) / uvec2(1u, 1u))), (uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u)), (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u))) / uvec2(1u, 1u)))) | (uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u)), (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u))) / uvec2(1u, 1u)))))), _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size), ~ (~ (max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size)))))) / 1u))), ~ (~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u)), (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u))) / uvec2(1u, 1u))), (uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u)), (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u))) / uvec2(1u, 1u)))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size)), ((0u ^ 0u) & 54622u)), (uvec2(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, ((0u ^ 0u) & 54622u))) / uvec2(1u, 1u)))))), _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size), ~ (~ (max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size)))))) / 1u)))))), min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, ~ (~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base))).x * _GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) >> 0u, min(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)) - 0u) >> 0u, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) - 0u), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) | 0u))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)))) * _GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)))).y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) >> 0u, min(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), min(~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), ~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base))))).x)) - _GLF_IDENTITY(0u, (0u) / 1u)) >> 0u, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) >> _GLF_IDENTITY(0u, (103826u & 0u) ^ (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) - 0u), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, uint(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 1u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) >> 0u))) * _GLF_struct_replacement_16._f2._f1.subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)))).y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) >> 0u, min(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), min(~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base), ~ (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base))))).x)) - _GLF_IDENTITY(0u, (0u) / 1u)) >> 0u, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) >> _GLF_IDENTITY(0u, (103826u & 0u) ^ (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) - 0u), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, uint(uvec3(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 1u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) >> 0u))) * _GLF_struct_replacement_16._f2._f1.subgroup_size))) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) >> 0u, min(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base)))).x)) - 0u) >> 0u, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) / uvec2(1u, 1u)).x) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x) - 0u), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)), max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x))) | 0u))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x, 0u + (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x)))) * _GLF_struct_replacement_16._f2._f1.subgroup_size)))) + GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, _GLF_struct_19(uvec4(_GLF_IDENTITY(1u, 0u | (1u))), mat2x3(1.0)), mat4x3(1.0), vec2(1.0)), mat4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_0(vec2(1.0)), _GLF_struct_5(_GLF_struct_1(true, bvec3(true), mat3(1.0), mat2x3(1.0), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) && true)), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_struct_2(uvec4(1u)), _GLF_struct_3(ivec4(1), mat4x3(1.0), 1, ivec2(1), 1.0, vec4(1.0)), _GLF_struct_4(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec3(1.0), uvec2(1u), mat2x4(1.0), mat4x3(1.0), uvec2(_GLF_IDENTITY(1u, 0u + (1u))))), _GLF_IDENTITY(1u, (1u) + 0u), _GLF_struct_8(uvec4(1u), 1.0, _GLF_struct_6(mat4x2(1.0), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), 1.0 * (1.0 * (1.0))))), true, mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(ldexp(_GLF_IDENTITY(-8.2, 0.0 + (-8.2)), -33450)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))) / 1.0), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-885.491, (false ? _GLF_FUZZED(-75.71) : -885.491)))), bool(false)))), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-885.491), min(_GLF_FUZZED(-885.491), _GLF_FUZZED(-885.491)))), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(_GLF_IDENTITY(false, ! (! (false))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(_GLF_IDENTITY(false, (false) || false)))))))), 1.0))), clamp((false ? _GLF_FUZZED(ldexp(-8.2, _GLF_IDENTITY(-33450, (-33450) - 0))) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (! (bool(false))))))), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))), 1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(ldexp(-8.2, -33450)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))))), 1.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-3.8) : (false ? _GLF_FUZZED(ldexp(-8.2, -33450)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))))))), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-885.491, _GLF_IDENTITY(float(vec4(-885.491, 1.0, 0.0, 1.0)), 1.0 * (float(vec4(-885.491, 1.0, 0.0, 1.0))))))), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(abs(58.35)) : 0.0)), min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))), 1.0))), min(false ? _GLF_FUZZED(-3.8) : (false ? _GLF_FUZZED(ldexp(-8.2, -33450)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-885.491), float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-885.491), clamp(_GLF_IDENTITY(_GLF_FUZZED(-885.491), float(mat4x2(_GLF_FUZZED(-885.491), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-885.491), max(_GLF_FUZZED(-885.491), _GLF_FUZZED(-885.491))), _GLF_FUZZED(-885.491))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0)))), bool(false)), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-885.491, _GLF_IDENTITY(float(vec4(-885.491, 1.0, 0.0, 1.0)), 1.0 * (float(vec4(-885.491, 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(bool(false), (bool(false)) || false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))), 1.0))), false ? _GLF_FUZZED(-3.8) : (false ? _GLF_FUZZED(ldexp(-8.2, -33450)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-885.491, clamp(_GLF_IDENTITY(-885.491, float(vec4(-885.491, 0.0, 1.0, log(1.0)))), -885.491, -885.491)))), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-885.491, _GLF_IDENTITY(float(vec4(-885.491, 1.0, 0.0, 1.0)), 1.0 * (float(vec4(-885.491, 1.0, 0.0, 1.0))))))), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))), 1.0))))))), (false ? _GLF_FUZZED(ldexp(-8.2, -33450)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))), mix(float(min(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)))), float(_GLF_FUZZED((-6.2 * 1.4))), bool(false))))))), (false ? _GLF_FUZZED(43.90) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(-885.491), max(_GLF_FUZZED(-885.491), _GLF_FUZZED(-885.491)))), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false)), min(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, abs(1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, abs(1.0)))) + (float(1.0))), float(_GLF_FUZZED(-885.491)), bool(false)), float(mat3(mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(_GLF_IDENTITY(false, bool(bool(false))))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0))), mix(float(1.0), float(_GLF_FUZZED(-885.491)), bool(false))))))))), 1.0))))))), uvec2(1u), bvec3(true)), mat3(1.0), _GLF_struct_7(uvec3(_GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y) ^ 0u) + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x * _GLF_struct_replacement_16._f2._f1.subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x) - 0u)) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(52465)))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (1) * 1)) % _GLF_struct_replacement_16._f2._f1.subgroup_size), (((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(1, 1)), 1, 1)))) % _GLF_struct_replacement_16._f2._f1.subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), mat3x2(1.0))));
 uint read = atomicLoad(buf[_GLF_struct_replacement_21._f1.virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(39.87), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), bvec2(true, false))).y)))))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.y = read, (_GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.y = read) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_9._f3._f4.next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) * 1), _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-7776)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base, uvec2(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base[0], GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base[1])), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base)).x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)) < _GLF_struct_replacement_16._f2._f1.subgroup_size, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x) << 0u) + 1 < _GLF_IDENTITY(_GLF_struct_replacement_16._f2._f1.subgroup_size, max(_GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_struct_replacement_16._f2._f1.subgroup_size)), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1 < _GLF_IDENTITY(_GLF_struct_replacement_16._f2._f1.subgroup_size, (true ? _GLF_IDENTITY(_GLF_struct_replacement_16._f2._f1.subgroup_size, (_GLF_struct_replacement_16._f2._f1.subgroup_size) - 0u) : _GLF_FUZZED(atomicCompSwap(workgroup_base, workgroup_id, workgroup_id))))) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED((_GLF_IDENTITY(float(188214u), mix(float(_GLF_FUZZED(9.5)), float(float(188214u)), bool(true))) * 0.0))), bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16._f2._f1.subgroup_size, max(_GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_struct_replacement_16._f2._f1.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16._f2._f1.subgroup_size, max(_GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_struct_replacement_16._f2._f1.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_16._f2._f1.subgroup_size, max(_GLF_struct_replacement_16._f2._f1.subgroup_size, _GLF_struct_replacement_16._f2._f1.subgroup_size))) >> 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1 < _GLF_struct_replacement_16._f2._f1.subgroup_size) || false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1) | 0u) < _GLF_struct_replacement_16._f2._f1.subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, min(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x))) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, (true ? GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x : _GLF_FUZZED(_GLF_IDENTITY(read, (read) | (read))))))), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x)) + 1, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(57710))), 0u | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1)))) < _GLF_struct_replacement_16._f2._f1.subgroup_size) || false))) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(checker[_GLF_struct_replacement_21._f1.virtual_gid], _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.y, 4, 64, 4);
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     subgroupAll(false);
    }
   else
    {
     atomicStore(buf[_GLF_struct_replacement_21._f1.virtual_gid], _GLF_struct_replacement_30.GLF_merged3_0_1_13_1_1_4_2_1_12num_workgroupreadworkgroup_id.y, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), ~ (~ (0 | (4))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), 0 ^ (0 | (4))))) / 1));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) && _GLF_IDENTITY(true, bool(bool(true))), bool(bvec3((true) && _GLF_IDENTITY(true, bool(bool(true))), false, false))), (_GLF_IDENTITY((true) && _GLF_IDENTITY(true, bool(bool(true))), bool(bvec3((true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), false, false)))) && true))))
      {
       subgroupAll(true);
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
