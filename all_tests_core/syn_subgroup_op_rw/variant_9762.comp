#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat4x3 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_10 {
 float _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 bvec4 _f1;
 mat3 _f2;
 uvec2 _f3;
 ivec2 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 ivec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat2x4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 vec4 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat3x2 _f1;
 mat2 _f2;
 mat2x4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 vec3 _f1;
 vec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 bvec4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 vec2 _f4;
 mat3x2 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 ivec4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_9 _f4;
 mat4 _f5;
 uint num_workgroup;
 _GLF_struct_11 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x3(1.0), ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 + ((1))) | (1), (0 ^ 0) | (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) << 0) | (1)))), 1, 1)), 1))), _GLF_struct_3(mat4x3(1.0), bvec4(true), _GLF_struct_0(_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, exp(0.0), tan(0.0), 0.0, 1.0, 1.0)))), _GLF_IDENTITY(vec4(mat2x3(vec4(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, 0.0)), clamp(vec4(mat2x3(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 0.0)), vec4(mat2x3(vec4(1.0), 0.0, 0.0)), vec4(mat2x3(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.5)), float(1.0), bool(true)))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(-5.7, -5.4, -84.17, -0.0)))))), vec2(1.0)), _GLF_struct_1(uvec3(1u), vec3(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, sqrt(1.0))))), vec2(1.0), ivec2(1)), vec2(1.0), mat3x2(1.0), _GLF_struct_2(1u, mat3x2(1.0), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2x4(1.0), mat4x3(1.0))), _GLF_struct_6(mat2(1.0), _GLF_struct_4(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.3)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false)))), bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), true))))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))), (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), true, true))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, false || ((false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false)))), bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), true))))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))), (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), true, true)))))) || false)))))), mat3x4(1.0)), _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), (ivec4(1)) + _GLF_IDENTITY(ivec4(0, 0, 0, 0), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1))) - ivec4(0, 0, 0, 0)))) << ivec4(0, 0, 0, 0))) | (ivec4(1))), _GLF_IDENTITY((ivec4(1)) | (ivec4(1)), ((ivec4(1)) | (ivec4(1))) - (ivec4(-91920, 83263, 75397, -95094) & ivec4(0, 0, 0, 0))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))), _GLF_struct_9(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), (mat3x2(mat2(1.0))) * mat3(1.0)))), _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))), _GLF_struct_7(1.0, mat2x4(1.0), mat4x2(1.0)), _GLF_struct_8(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), ivec3(1), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec2(1), true), mat2(1.0)), mat4(1.0), gl_NumWorkGroups.x, _GLF_struct_11(uvec3(1u), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)))) && true), true, true, true))))), mat3(1.0), uvec2(1u), ivec2(1), _GLF_struct_10(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9)))))))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(65.21))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(1.0, 1.0))) / 1.0, ((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, float(mat2x4((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, float(mat2x4((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, float(mat2x4((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, float(mat2x4((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, float(mat2x4((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, float(mat2x4((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, float(mat2x4((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))))), mix(float((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), float(_GLF_FUZZED((+ -98.19))), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(583.839)), bool(false)))))) / 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(65.21))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(65.21))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)), clamp(float(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(65.21))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)), float(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(65.21))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)), float(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(65.21))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) : _GLF_FUZZED(65.21))), max((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (true ? 1u : _GLF_FUZZED(subgroup_size)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-553.703)), float(injectionSwitch.y), bool(true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat4x3(1.0), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, clamp(_GLF_struct_replacement_13.workgroup_id, _GLF_struct_replacement_13.workgroup_id, _GLF_struct_replacement_13.workgroup_id))), ~ (~ ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u))))))) * 1u), min(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u))))))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))), _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(workgroup_base))) + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), 0u | ((~ (subgroup_local_id))))), clamp(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), min((~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(4380.2771)), bool(false))))))), true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0))) * 1.0)), 0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0))) * 1.0)), 0.0, 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0))) * 1.0)), 0.0, 1.0, 0.0)))) : _GLF_FUZZED(mat2x4(83.83, 33.09, 9390.3895, -148.950, -69.97, -1792.4876, 0.8, -2771.7145)))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (1) << 0))) << 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(34.06)), bool(false))))), 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(2.7, -542.857, 4.2, 16.05, -112.014, -46.87, 114.778, 83.53)) : mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(34.06)), bool(false))))), 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.7)), bool(false))))) > injectionSwitch.y))))))), true && (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (false)))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) ^ 0u) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) | ((subgroup_size) | 0u))))
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, cos(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (true ? vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, cos(abs(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec2(-71.96, -461.193))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), 0.0)), min(float(vec2(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), 0.0)), float(vec2(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(injectionSwitch.x), float(injectionSwitch.x))), 0.0))))))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(degrees(vec2(-681.657, -562.603))) : injectionSwitch)).y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.y))))))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) - log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(sqrt(vec2(1.0, 1.0)))).y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, true))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
