#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(927.273)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false || ((! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(8.3), _GLF_FUZZED(169.900)), bvec2(false, false))), vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(207.215)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id.z, (workgroup_size * GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id.z) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(6.5)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(6.5), max(_GLF_IDENTITY(_GLF_FUZZED(6.5), mix(float(_GLF_FUZZED(6.5)), float(_GLF_FUZZED(-9.8)), bool(false))), _GLF_FUZZED(6.5))), _GLF_FUZZED(6.5), _GLF_FUZZED(6.5)))), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(6.5), max(_GLF_IDENTITY(_GLF_FUZZED(6.5), mix(float(_GLF_FUZZED(6.5)), float(_GLF_FUZZED(-9.8)), bool(false))), _GLF_FUZZED(6.5))), _GLF_FUZZED(6.5), _GLF_FUZZED(6.5)))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(6.5), max(_GLF_IDENTITY(_GLF_FUZZED(6.5), mix(float(_GLF_FUZZED(6.5)), float(_GLF_FUZZED(-9.8)), bool(false))), _GLF_FUZZED(6.5))), _GLF_FUZZED(6.5), _GLF_FUZZED(6.5)))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(6.5)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (subgroup_id)))) * subgroup_size) - 0u)) << 0u);
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(clamp(subgroup_size, subgroup_size, bitfieldInsert(subgroup_local_id, subgroup_id, 89969, 45322))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) / 1u)), clamp(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u)))), ~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) / 1u)), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))))), (~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u), 0u + (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), max(_GLF_IDENTITY(0u | (subgroup_base), 1u * (0u | (subgroup_base))), 0u | (subgroup_base))))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(clamp(subgroup_size, subgroup_size, bitfieldInsert(subgroup_local_id, subgroup_id, 89969, 45322))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) / 1u)), clamp(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u, 0u | ((workgroup_base) / 1u)))), ~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) / 1u)), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) + (0u | 0u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u), 0u + (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), max(0u | (subgroup_base), 0u | (subgroup_base))))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(clamp(subgroup_size, subgroup_size, bitfieldInsert(subgroup_local_id, subgroup_id, 89969, 45322))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))), max((_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(clamp(subgroup_size, subgroup_size, bitfieldInsert(subgroup_local_id, subgroup_id, 89969, 45322))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(clamp(subgroup_size, subgroup_size, bitfieldInsert(subgroup_local_id, subgroup_id, 89969, 45322))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))))) / 1u)), clamp(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u)))), ~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) / 1u)), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))) - 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) / 1u))))))), 1u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))) - 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) / 1u))))))), 1u, 0u)))))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))) - 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) / 1u))))))), 1u, 0u)))))))))) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u) : _GLF_FUZZED((subgroup_id - subgroup_size))))))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u), 0u + (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), max(0u | (subgroup_base), 0u | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | (_GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))))))))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u))), 1u * (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(clamp(subgroup_size, subgroup_size, bitfieldInsert(subgroup_local_id, subgroup_id, 89969, 45322))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) / 1u)), clamp(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u)))), ~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) / 1u)), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) - 0u)), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) - 0u)), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) - 0u))))) | (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) - 0u))))))))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u | 0u))) / 1u))))))), 1u, 0u))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u)) / 1u)))))), 0u + (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), max(0u | (subgroup_base), 0u | (subgroup_base))))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u)))))))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(clamp(subgroup_size, subgroup_size, bitfieldInsert(subgroup_local_id, subgroup_id, 89969, 45322))) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) / 1u)), clamp(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, 0u | ((workgroup_base) / 1u)))), ~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) / 1u)), 0u ^ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) / 1u)))), 0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), 0u + (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + (0u | 0u)), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (1u) | 0u))), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), (~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))) << 0u)), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ~ (~ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), 1u, 0u))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (subgroup_base) >> 0u)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u), 0u + (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), max(0u | (subgroup_base), 0u | (subgroup_base)))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), max(0u | (subgroup_base), 0u | (subgroup_base))))))) + 0u)), max((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))))) / 1u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-71.66) : injectionSwitch.y)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-71.66) : injectionSwitch.y)), false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u)))))), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) + ((1u ^ 1u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u)))) | (uint(8u))), uint(8u)))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))) + 0u) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ 0u), 0u, (1u ^ 0u), 1u), (true ? uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ 0u), 0u, (1u ^ 0u), 1u) : _GLF_FUZZED(uvec4(126495u, 50561u, 109223u, 135673u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ 0u), 0u, (1u ^ 0u), 1u), (true ? uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ 0u), 0u, (1u ^ 0u), 1u) : _GLF_FUZZED(uvec4(126495u, 50561u, 109223u, 135673u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ 0u), 0u, (1u ^ 0u), 1u), (true ? uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ 0u), 0u, (1u ^ 0u), 1u) : _GLF_FUZZED(uvec4(126495u, 50561u, 109223u, 135673u)))))))));
 GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(69.70) : injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(69.70) : injectionSwitch.y))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(69.70) : injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(69.70) : injectionSwitch.y))))), true, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id.y = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sin(vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(sin(vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat2x4(sin(vec2(0.0, 0.0)), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0), mat2x4(mat3x4(mat2x4(sin(vec2(0.0, 0.0)), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0)))))), sin(vec2(0.0, 0.0)), sin(vec2(0.0, 0.0))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(mat4x3(-5081.7240, 3.1, -11.81, -5.8, -989.026, -19.03, 89.52, 753.694, -78.02, -31.98, 883.290, 7.5))))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(! (false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), 0.0))))), sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), 0.0))))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), 0.0))))))))))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), 0.0))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, true, false)))))), false || (false || (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), true)), false))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, _GLF_IDENTITY(78.64, mix(float(78.64), float(_GLF_FUZZED(_GLF_IDENTITY(-0.0, float(_GLF_IDENTITY(mat4(-0.0, 0.0, 0.0, exp(0.0), 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (mat4(-0.0, 0.0, 0.0, exp(0.0), 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), sqrt(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * mat4(1.0)))))), bool(false))), 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), 0.0)))))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.4)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0)))), bool(true))) < injectionSwitch.y) || false), false, true, false))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-83.80)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, true, false)))))) || false)))), false || (false || (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), 0.0)))))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, true, false)))))), false || (false || (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))).x : _GLF_FUZZED(-5.6))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, -4.5, -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(-1.2) : injectionSwitch.y)) : _GLF_FUZZED(4.9))), 0.0)))))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(68.35, -362.088, 7.3, 78.64, 70.29, -427.063, 64.98, _GLF_IDENTITY(-4.5, float(mat2x4(-4.5, determinant(mat3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, exp(0.0))), 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0))), -84.09))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.5) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(-1.2) : injectionSwitch.y)) : _GLF_FUZZED(4.9))), 0.0)))))))), true))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || false), false, true, false)))))), false || (false || (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))) && true)))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, true && ((subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) - 0)))) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, 0))) ^ 0))), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0))))) ^ 0)))))), (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | (22224 & 0)))))))) ^ 0))), true && (_GLF_IDENTITY((subgroup_local_id % 2) == 0, true && _GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) - 0)))) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(1, (1) ^ 0), 1))), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0, 0))) ^ 0)))))), (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ _GLF_IDENTITY(0, ~ (~ (0))))))) ^ 0)), (_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) - 0)))) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ _GLF_IDENTITY(0, ~ (~ (0))))), ~ (~ (clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ _GLF_IDENTITY(0, ~ (~ (0)))))))))) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), (0 << _GLF_IDENTITY(int(5), int(5))) | ((~ (0))))))), ~ (~ (clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ _GLF_IDENTITY(0, ~ (~ (0)))))))))) ^ 0))))), ! (! (((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(max(2, _GLF_IDENTITY(2, (2) - 0)), max(max(2, _GLF_IDENTITY(2, (2) - 0)), max(2, _GLF_IDENTITY(2, (2) - 0))))), max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) - 0))), (subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) - 0)))) | (subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) - 0))))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-30559) : 2)), (_GLF_IDENTITY(2, (2) ^ 0)) - 0)))))) == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))))), (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))))))) ^ 0)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))), (bool(bool((false)))) || false)))), (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2063.3585) : injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), false || (true && (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(59.51, -2897.4824))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   atomicStore(buf[GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id.x], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id) | (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id)))).x, min(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id) | (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id)))).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id) | (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id)))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id) | (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id)))).x, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id) | (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id)))).x) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id, (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id) | (GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id)))).x)))))))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch)))))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], GLF_merged3_0_1_16_1_1_4_2_1_12next_virtual_gidreadworkgroup_id.y, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
