#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x3((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, sqrt(0.0))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)) || false))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) - 0.0) / 1.0)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), _GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(packSnorm2x16(vec2(6245.1489, -4.9))) : (workgroup_size))), (workgroup_size)))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(_GLF_IDENTITY(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))))))), (uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))) + 0u))), clamp(_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))))))))), _GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u ^ 0u))), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u, clamp((_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u, (_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u, clamp((_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u, ((_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u) >> 0u), (_GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size))))), uint(uint(((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) - 0u)))), ((workgroup_size)) | ((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))))) >> 0u))))))) | 0u)) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.5)), float(0.0), bool(true))), 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-526.974 * vec4(911.792, 449.770, 3993.9871, 8.6)).t)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), log(sqrt(1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(-2.3, max(-2.3, -2.3)), (false ? _GLF_FUZZED(-6603.5537) : _GLF_IDENTITY(-2.3, (true ? _GLF_IDENTITY(-2.3, max(-2.3, -2.3)) : _GLF_FUZZED(-0.0))))), -18.99, _GLF_IDENTITY(5.7, (false ? _GLF_FUZZED(normalize(-4.0)) : 5.7)), 4.9, -787.705, -5.3, 5566.0365, -953.825)) : mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 0.0, log(sqrt(1.0)), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9495.7855)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-9.9)), bool(false))))), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.5)), float(0.0), bool(_GLF_IDENTITY(true, true && (true))))), 0.0)), 1.0, 0.0, log(sqrt(1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-2.3, (false ? _GLF_FUZZED(-6603.5537) : _GLF_IDENTITY(-2.3, (true ? _GLF_IDENTITY(-2.3, max(-2.3, -2.3)) : _GLF_FUZZED(_GLF_IDENTITY(-0.0, max(-0.0, -0.0))))))), -18.99, 5.7, 4.9, -787.705, -5.3, 5566.0365, -953.825)) : mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false))), 1.0, 0.0, 1.0, 0.0, log(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float((~ -13641)))), bool(false))))), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], float(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], 0.0))), injectionSwitch[1])).y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), true), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.5)), float(0.0), bool(true))), 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(-2748.8686))), 0.0, log(sqrt(1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-2.3, (false ? _GLF_FUZZED(-6603.5537) : _GLF_IDENTITY(-2.3, (true ? _GLF_IDENTITY(-2.3, max(_GLF_IDENTITY(-2.3, min(-2.3, _GLF_IDENTITY(-2.3, (-2.3) - 0.0))), -2.3)) : _GLF_FUZZED(-0.0))))), -18.99, 5.7, 4.9, -787.705, -5.3, 5566.0365, -953.825)) : mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 0.0, log(sqrt(1.0)), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), true), false), true)), false))))), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-16.10)), vec2(_GLF_FUZZED(2955.7415), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.5)), float(0.0), bool(true))), 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-526.974 * vec4(911.792, 449.770, 3993.9871, 8.6)).t)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), log(sqrt(1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(-2.3, max(-2.3, -2.3)), (false ? _GLF_FUZZED(-6603.5537) : _GLF_IDENTITY(-2.3, (true ? _GLF_IDENTITY(-2.3, max(-2.3, -2.3)) : _GLF_FUZZED(-0.0))))), -18.99, _GLF_IDENTITY(5.7, (false ? _GLF_FUZZED(normalize(-4.0)) : 5.7)), 4.9, -787.705, -5.3, 5566.0365, -953.825)) : mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 0.0, log(sqrt(1.0)), 1.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9495.7855)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-9.9)), bool(false))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), clamp(clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9495.7855)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), clamp(clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9495.7855)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9495.7855)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9495.7855)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), (false ? _GLF_FUZZED(length(vec4(7989.4267, 69.49, -2391.5473, 55.66))) : clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-9495.7855)), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-9.9)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-9.9)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-9.9)), bool(false))))))) : _GLF_FUZZED(-1.8))), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))))) : _GLF_FUZZED(max(2.8, 392.061)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.5)), float(0.0), bool(_GLF_IDENTITY(true, true && (true))))), 0.0)), 1.0, 0.0, log(sqrt(1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-2.3, (false ? _GLF_FUZZED(-6603.5537) : _GLF_IDENTITY(-2.3, (true ? _GLF_IDENTITY(-2.3, max(-2.3, -2.3)) : _GLF_FUZZED(_GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat3x4(-0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), -0.0))))))), -18.99, 5.7, 4.9, -787.705, -5.3, 5566.0365, -953.825)) : mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false))), 1.0, 0.0, 1.0, 0.0, log(sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float((~ -13641)))), bool(false))))), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], float(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 + (0))], (true ? injectionSwitch[_GLF_IDENTITY(0, 0 + (0))] : _GLF_FUZZED(mod(-827.689, -9.1)))), 0.0))), injectionSwitch[1])).y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), true), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), float(injectionSwitch.x), bool(true))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.5)), float(0.0), bool(true))), 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2(float(mat3x2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.5) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)))) : _GLF_FUZZED(-2748.8686))), 0.0, log(sqrt(1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-2.3, (false ? _GLF_FUZZED(-6603.5537) : _GLF_IDENTITY(-2.3, (true ? _GLF_IDENTITY(-2.3, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.3, mix(float(-2.3), float(_GLF_FUZZED(5.2)), bool(false))), min(-2.3, _GLF_IDENTITY(-2.3, (-2.3) - 0.0))), -2.3)) : _GLF_FUZZED(-0.0))))), -18.99, 5.7, 4.9, -787.705, -5.3, 5566.0365, -953.825)) : mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5037.1324)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)))), min(float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)))), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)))))), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0, 0.0, 1.0, 0.0, log(sqrt(1.0)), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), true), false), true)), false))))), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(78881u) : subgroup_local_id)), subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))), ((bool(bvec4(false, true, false, true)))) || false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), (bool(bvec4(false, true, false, true))) && true), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false, true)), (bool(bvec4(false, true, false, true))) && true)) || false)) && true))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) || false))), true && (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), (false) || false)))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true))) && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))), false, true)), ! (! (bool(bvec4(bool(bvec4(false, true, false, true)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ((bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))))), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true))))))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat2(-7.3, -1622.7869, -403.371, -226.704)[1]))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(false, false || (false)), true)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, true))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (1) * 1)])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x2((injectionSwitch), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, 1.0, 1.0)), vec2(mat2(vec2(mat4x2((injectionSwitch), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, 1.0, 1.0)), 0.0, 1.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(log(_GLF_IDENTITY(-6.1, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(-6.1, min(-6.1, -6.1))), bool(true))))))), 1.0)))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-9.3) : 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-9.3) : 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-9.3) : 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-9.3) : 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), mix(float(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-8035.8490)), bool(false))))))))) > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true, true))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true, true))), false)), false)))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.7)), bool(false))))), mix(vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1], min((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1], (vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1]))), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(5.8)), bvec2(false, false))))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true))))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true, true)))))) || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false)))) || false)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))) || false, ! (! ((_GLF_IDENTITY(true, bool(bool(true)))) || false))))))), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false))))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true))))) || false), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true))))) || false), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true))))) || false), false, false), false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false))), false)))))))))))))) || false)))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (false ? _GLF_FUZZED(7.0) : _GLF_FUZZED(5.3)))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true, true))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true, true))), false)), false)))))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-751.831), _GLF_FUZZED(8.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0), (mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(vec4(_GLF_IDENTITY(mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0), (mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0), (mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0), (mat2x4(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), max(vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), (vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1])) * vec2(1.0, 1.0)))), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.7)), bool(false))))), mix(vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(-7.4, 1054.2991, -6437.3148, 1.1, -3.1, 43.03)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1], 0.0 + (_GLF_IDENTITY((vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(-7.4, 1054.2991, -6437.3148, 1.1, -3.1, 43.03)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1], _GLF_IDENTITY(float(mat2((vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(-7.4, 1054.2991, -6437.3148, 1.1, -3.1, 43.03)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1], 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), (true ? float(mat2((vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, 65.64)))), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(-7.4, 1054.2991, -6437.3148, 1.1, -3.1, 43.03)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1], 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(-6.2)))))), min((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1], (vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(ldexp(-35.93, 45438), min(ldexp(-35.93, 45438), ldexp(-35.93, 45438)))) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[1]))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.3), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-1.3), sin(0.0), 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(-1.3), sin(0.0), 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0))))), _GLF_FUZZED(5.8)), bvec2(false, false))))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true))))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))), bool(bvec4(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))), false, true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true))))))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((_GLF_IDENTITY(bool(true), bool(bvec3(bool(_GLF_IDENTITY(true, (true) || false)), false, false)))), ((_GLF_IDENTITY(bool(true), bool(bvec3(bool(_GLF_IDENTITY(true, (true) || false)), false, false))))) || false) || false)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))) || false, ! (! ((_GLF_IDENTITY(true, bool(bool(true)))) || false))))))), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false))))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(bvec2(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), false)))))), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), (mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(61.94)), bool(false))) > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(_GLF_IDENTITY(-35.93, mix(float(_GLF_FUZZED((70.92 - 784.771))), float(-35.93), bool(true))), 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))) + log(vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true))), min(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true))))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (false))))), ((bool(_GLF_IDENTITY(false, ! (! (false)))))) || false) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-5.3), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), clamp((vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), ((vec2(vec4(injectionSwitch, 0.0, 1.0)))) * mat2(1.0)), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), clamp((vec2(vec4(injectionSwitch, 0.0, 1.0))), (vec2(vec4(injectionSwitch, 0.0, 1.0))), (vec2(vec4(injectionSwitch, 0.0, 1.0)))))))[1]), (vec2(_GLF_FUZZED(-5.3), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), clamp((vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), ((vec2(vec4(injectionSwitch, 0.0, 1.0)))) * mat2(1.0)), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0))), clamp((vec2(vec4(injectionSwitch, 0.0, 1.0))), (vec2(vec4(injectionSwitch, 0.0, 1.0))), (vec2(vec4(injectionSwitch, 0.0, 1.0)))))))[1])) / cos(vec2(0.0, 0.0))), bvec2(false, true)))).y)))))), false, true))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], max((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 0.0, 1.0)))[0])), _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0) - 0.0))), 1.0))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), mix(vec2((mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], (mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[1]), vec2(_GLF_FUZZED(-15.05), _GLF_FUZZED(9494.7527)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))))), false, true))))) || false), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(_GLF_IDENTITY(-35.93, clamp(-35.93, -35.93, -35.93)), 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2(((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true))))))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true))))))), true, true), false))))))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), min(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0)))))))), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true))))))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true)), ! (! (bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true, true))))))), true, true), false))))))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), min(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0)))))))), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y)))))), false, true))) || false)))) || false), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(atan(vec2(2430.6481, -2.9))) : vec2(vec4(injectionSwitch, 0.0, 1.0)))), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(6360.0329), _GLF_FUZZED(2.8)), vec2((_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), clamp((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), (vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))), (vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))))[0], ((vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), 1.0))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-35.93, 45438)) : 0.0))), float(_GLF_FUZZED(8.2)), bool(false))), 1.0)))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-94.24) : float(mat4(_GLF_IDENTITY(_GLF_FUZZED(5.3), (_GLF_FUZZED(5.3)) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(false, true)))).y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(-5.3), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true)))).y)))))), false, true))))) || false), false, false), false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, _GLF_IDENTITY(true, true && (true))), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true)))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true)))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false), (bool(false)) && true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true))))))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, true), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false), false)))))), false))), false, false))), false)))))))))))))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(vec2(-7.2, 100.469)))))))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) + tan(vec2(0.0, 0.0))).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0) + (4), (0 + (4)) / 1)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(67.48) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-61.42) : injectionSwitch.y))))), false, false, true)), ! (! (bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, false, true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((+ -9112.7284)) : _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.7))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(42.22))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))), false, false, true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(42.22))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) && true), true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(42.22))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))), false)), true, true, true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), bool(bool(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(vec2(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0))))))), determinant(mat2(1.0, 0.0, 1.0, cos(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(vec2(normalize(vec2(1.0, 1.0))))))), determinant(mat2(1.0, 0.0, 1.0, cos(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(vec2(normalize(vec2(1.0, 1.0))))))), determinant(mat2(1.0, 0.0, 1.0, cos(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))).y)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) || false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     atomicStore(buf[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)), bool(bvec2(! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)), true)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false))), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), true), true), false)))))), false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
