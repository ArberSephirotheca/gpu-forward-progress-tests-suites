#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(74.67, 98.38)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0), float(_GLF_FUZZED(3.7)), bool(false))), 1.0)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.x, 0.0, 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, false)))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))), ! (! (false)))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y))), gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y))), gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))), _GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))), false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (true) || false)))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, true && (true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_IDENTITY(false, (false) || false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (true) || false)))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, true && (true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true)))), true, false, false)))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true))))), true, true))))))), _GLF_IDENTITY(false, (false) || false))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, false || ((true) || false))) || false))))), ! _GLF_IDENTITY((! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, true && (true)), true))))), false || ((! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, true && (true)), true))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))))))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false))), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_IDENTITY(false, (false) || false))))))))))), true))), true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), false || (bool(bvec4((! (false)), false, true, true))))))))), true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))), true, true, true)))))), bool(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, false || (false))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true))))))))))), true, false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)), _GLF_IDENTITY(true, true && (true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_IDENTITY(false, (false) || false))))))))), true))), true)), false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), false || (bool(bvec4((! (false)), false, true, true))))))))), true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))), true, true, true)))))), bool(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, false || (false))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true))))))))))), true, false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)), _GLF_IDENTITY(true, true && (true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_IDENTITY(false, (false) || false))))))))), true))), true)), false)), bool(bvec4(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), false || (bool(bvec4((! (false)), false, true, true))))))))), true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))), true, true, true)))))), bool(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, false || (false))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true))))))))))), true, false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)), _GLF_IDENTITY(true, true && (true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_IDENTITY(false, (false) || false))))))))), true))), true)), false)), true, true, true))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), false || (bool(bvec4((! (false)), false, true, true))))))))), true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))), true, true, true)))))), bool(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, false || (false))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true))))))))))), true, false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)), _GLF_IDENTITY(true, true && (true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_IDENTITY(false, (false) || false))))))))), true))), true)), false)), bool(bvec4(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), false || (bool(bvec4((! (false)), false, true, true))))))))), true, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))), true, true, true)))))), bool(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, false || (false))))))), true, true, true))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), true, true, true))))))))))), true, false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)), _GLF_IDENTITY(true, true && (true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)))))))), ! (! (bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))), _GLF_IDENTITY(false, (false) || false))))))))), true))), true)), false)), true, true, true))), true, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true, true, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-11.06, 9.6).x)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), _GLF_IDENTITY(true, true && (true)) && (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false)))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))) > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false)))))), true))))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), _GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! ((! (_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))), true))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))) > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false)), bool(bvec4(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(5.2, -66.86)), vec2(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(vec2(5.2, -66.86)), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-5.7, -5.7, -2108.2698, -24.90, -72.31, 85.91)) : mat3x2(_GLF_FUZZED(vec2(5.2, -66.86)), 1.0, 0.0, 1.0, 1.0))))) : min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(13.23)), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))))), min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(1.0), 1.0, 1.0))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))), 0u))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), _GLF_IDENTITY(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY(uint(uvec3(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), 0u, 0u)), (uint(uvec3(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), 0u, 0u))) | (uint(uvec3(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), 0u, 0u))))))), ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), _GLF_IDENTITY(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), _GLF_IDENTITY(uint(uvec3(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), 0u, 0u)), (uint(uvec3(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), 0u, 0u))) | (uint(uvec3(max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id), 0u, 0u)))))))) | 0u)), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), 1u, 0u, 1u))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base)), ~ (~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base)))))))) + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))), uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) | (subgroup_base)) + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u), workgroup_base + subgroup_base)) + subgroup_local_id, 1u, 0u))), max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 1u))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, uint(uvec4(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, 0u + (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u)))))))) + subgroup_base + subgroup_local_id) ^ 0u), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id))))) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base + subgroup_local_id))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id))), max(uint(uint((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id))), uint(uint((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u))))) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))) + subgroup_local_id))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), 0u, 0u), clamp(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), 0u, 0u), clamp(uvec3((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), 0u, 0u), uvec3((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), 0u, 0u), uvec3((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), 0u, 0u))), uvec3((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), 0u, 0u), uvec3((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, max(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))), 0u, 0u)))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_base + subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_base + subgroup_local_id, 1u, 0u))), max(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ~ (~ ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base))))) + subgroup_base + subgroup_local_id))))))) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true)) && ((injectionSwitch.x > injectionSwitch.y))))), true, false))) || false))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), (((subgroup_local_id + 1) % subgroup_size)) >> 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-74.87)), bool(false)))), vec2(_GLF_FUZZED(-7929.9225), _GLF_FUZZED(646.768)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), max(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))))), _GLF_IDENTITY(64, ~ (~ (64))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), ~ (~ (_GLF_IDENTITY(64, ~ (~ (64)))))), max(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))))), _GLF_IDENTITY(64, ~ (~ (64)))))) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))), 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (_GLF_IDENTITY(~ (~ (subgroup_local_id)), (_GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) / 1u)) | (~ (~ (subgroup_local_id))))) / (0u ^ 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), min((~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), 0u ^ ((~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u))))) ^ 0u) % 2) : _GLF_IDENTITY(_GLF_FUZZED(4824u), (_GLF_IDENTITY(_GLF_FUZZED(4824u), max(_GLF_FUZZED(4824u), _GLF_FUZZED(4824u)))) | (_GLF_FUZZED(4824u))))) == _GLF_IDENTITY(0, (0) | (0)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(34.48)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)))), true, false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))), false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && (false)))), true && (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && (false))))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), false, true))) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, true, false), false)), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(length(injectionSwitch)))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-391.869 - vec2(-9.2, -5.4))))) : _GLF_FUZZED((vec3(-1369.6309, -7237.2731, 4.3) * mat2x3(-49.75, -6.4, 5.5, -97.48, -0.4, 28.06))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-391.869 - vec2(-9.2, _GLF_IDENTITY(-5.4, float(float(_GLF_IDENTITY(-5.4, min(-5.4, -5.4)))))))))) : _GLF_FUZZED((vec3(-1369.6309, -7237.2731, 4.3) * mat2x3(-49.75, -6.4, 5.5, -97.48, -0.4, 28.06))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(true, true)))), ! (! (bool(bool(bool(bvec2(true, true))))))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(true, true)))), ! (! (bool(bool(bool(bvec2(true, true))))))))))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(true, true)))), ! (! (bool(bool(bool(bvec2(true, true))))))))))))))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(true, true)))), ! (! (bool(bool(bool(bvec2(true, true))))))))))))))))), false, false)), true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), float(float(tan(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(39.42) : _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), float(float(tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), float(float(tan(0.0)))), (false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(tan(0.0), float(float(tan(0.0))))))) * 1.0))), 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(79778))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) && true)), ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) && true)), ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) && true)), ! (! (false))))) || false)) && true))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), true && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.2)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.2)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) > injectionSwitch.y))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.2)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) > injectionSwitch.y))), false, false, false)))))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.46), _GLF_FUZZED(4877.8598)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))) || (false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))) || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, true))), false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))) || (false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))) || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, true))), false))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))) || (false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), true && (! (! (bool(false)))))))) || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, true))), false))))))))))))), true, true)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(44.33), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3((injectionSwitch), 0.0, sqrt(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 0.0, tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), mat4x3(mat4(mat4x3((injectionSwitch), 0.0, sqrt(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), exp(0.0), 1.0, 0.0, tan(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-227.456)), bvec2(true, false))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(613.433))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(44.33), mix(float(_GLF_FUZZED(44.33)), float(_GLF_FUZZED(-0.2)), bool(false))), (false ? _GLF_FUZZED(_GLF_IDENTITY(3021.8596, float(mat3x4(_GLF_IDENTITY(3021.8596, clamp(3021.8596, 3021.8596, _GLF_IDENTITY(3021.8596, float(float(3021.8596))))), 0.0, sqrt(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) : _GLF_FUZZED(44.33))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-227.456)), bvec2(true, false))).y))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))))), _GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(asin(vec4(-38.37, 967.874, -381.774, -2.2))) : _GLF_IDENTITY(vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0))), clamp(vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0))), vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0))), vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0))))))))))).y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(bool(! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))))), _GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, true, false)))))), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(1650.7573)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))) / vec2(1.0, 1.0)).x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, (false ? _GLF_FUZZED(-20.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.7, 9.5)) : injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))) : _GLF_FUZZED(0.0)), mix(float(_GLF_FUZZED(9.3)), float((true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))) : _GLF_FUZZED(0.0))), bool(true)))), injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))) || false), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))) && true))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false || (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-642.718), _GLF_FUZZED(52.05)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), true, true)))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), clamp(float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(9237.8425)), bool(false))), 1.0) * (injectionSwitch)).y))) || false))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * cos(vec2(0.0, 0.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), true, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((read) - 0u, 1u * ((read) - 0u))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), min((4), (4))))) << 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true)))))) || false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), ! (! ((false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) || _GLF_IDENTITY(false, false || (false))))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))), (false) || _GLF_IDENTITY(false, false || (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))), (false) || _GLF_IDENTITY(false, false || (false))))))) && true)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
