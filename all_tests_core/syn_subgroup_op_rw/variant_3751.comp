#version 460
struct _GLF_struct_4 {
 vec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_5 {
 uint workgroup_size;
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 ivec3 _f1;
 bool _f2;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_3 {
 int _f0;
 _GLF_struct_0 _f1;
 ivec4 _f2;
 _GLF_struct_1 _f3;
 mat2x3 _f4;
 uint _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(1, _GLF_struct_0(uvec4(1u), bvec3(true)), ivec4(1), _GLF_struct_1(1u, mat2(1.0), uvec4(1u)), mat2x3(1.0), 1u, _GLF_struct_2(ivec3(1), ivec3(1), true)), _GLF_struct_5(gl_WorkGroupSize.x, _GLF_struct_4(vec3(1.0), true)));
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z = _GLF_struct_replacement_6._f1.workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y + 1) % subgroup_size);
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x], uint(1), 4, 64, 4);
 if(GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
