#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2x3 _f0;
 bvec3 _f1;
 vec3 _f2;
 mat3x2 _f3;
 bvec3 _f4;
 uint _f5;
 vec3 _f6;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 vec2 _f1;
 uvec3 _f2;
 float _f3;
 _GLF_struct_0 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(bvec2(true), vec2(1.0), uvec3(1u), 1.0, _GLF_struct_0(mat2x3(1.0), bvec3(true), vec3(1.0), mat3x2(1.0), bvec3(true), 1u, vec3(1.0))), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_2.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_struct_replacement_2.subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((_GLF_struct_replacement_2.subgroup_local_id % 2) == 0)
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 61:
     {
      for(mat4x3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; true; atomicAdd(workgroup_size, workgroup_size))
       {
        {
         mat3x2(48.67, 23.59, -9643.1378, 7.5, 2991.7830, -8268.3010);
         false;
         -64692;
         ;
         (vec4(74.01, 837.623, 2.5, -3.7) , vec2(2.4, -4231.6747));
         uvec4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
         ;
        }
        while((mat3x2(7220.8178, 1.7, -6072.2048, 9.1, 951.278, 4.4) == mat3x2(2.0, 94.29, 35.26, -4333.1212, -781.814, 2.1)))
         {
          mat3x2(-821.958, -69.88, -9032.9321, 9005.7268, 0.9, 1.2);
          bvec4 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[39];
          (mat3(-2.1, -4.3, 4352.7755, 4.3, -59.06, -29.46, 9.4, 5.6, -7262.6182) , _GLF_SWITCH_0_0v);
          mat2x4 _GLF_SWITCH_0_8v[17], _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[31];
         }
        if(false)
         {
          mat3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v[91];
          ;
          (ivec2(-41023, 76511) << 75501);
          (mat3x4(33.46, 7065.7373, 92.98, -2.8, 7380.1850, 9.5, 5292.8617, -271.516, 2024.2848, 4.2, 73.57, -96.46) , mat4(-6.3, -345.871, 1.1, -9.8, -79.28, -820.151, -355.663, 7431.8277, -5.5, -9265.0485, -54.21, -7.8, -7395.0419, 304.421, 5.2, 677.510));
          2.8;
          (~ uvec3(25708u, 110035u, 161079u));
          36997;
          uvec4(uvec2(183869u, 53957u), uvec2(172363u, 140035u));
         }
        else
         {
          uvec3 _GLF_SWITCH_0_13v[88], _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
          ;
          workgroup_base;
          0.4;
          ivec4(-23974, -60304, -36781, -17372);
          mat2x3(-479.183, -60.71, -3735.2230, -91.92, 47.27, 78.32);
          int _GLF_SWITCH_0_16v[84], _GLF_SWITCH_0_17v[95], _GLF_SWITCH_0_18v[99];
         }
        uint _GLF_SWITCH_0_19v;
       }
      {
       for(bvec4 _GLF_SWITCH_0_20v[38], _GLF_SWITCH_0_21v; false; notEqual(injectionSwitch, (injectionSwitch * mat2(8714.2672, -864.931, -292.375, -1.3))))
        {
         mat3x2(2.4, 294.721, 9.9, -33.71, -8124.1711, -43.82);
         ivec4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[2];
        }
       mat4x2(mat2x3(-423.800, 0.8, 7882.6062, 5.2, -880.546, 2.0));
       {
        ;
        mat3x4(7827.5235, 3822.1069, -78.09, -2.4, 1.2, -78.83, 3025.0270, 0.0, 4009.6540, 9.9, 975.633, 3.3);
        3.6;
        (uvec4(135193u, 129939u, 186967u, 14504u) != uvec4(106250u, 197979u, 52681u, 124723u));
        uint _GLF_SWITCH_0_24v;
       }
       (uvec3(189880u, 197742u, 65946u) & uvec3(13654u, 58397u, 125818u));
       ;
       if(false)
        {
        }
       if(true)
        {
         mat4x2(mat4(876.797, -6173.3099, -109.873, 632.127, 116.270, -24.50, 9.4, 77.95, -790.050, -872.261, -73.99, 6.0, 921.948, 3.0, 87.31, -3.8));
         ((-756.320 - 5.6) + mat3x4(-3.8, -68.47, 258.313, -555.938, -4754.6927, -734.990, -2647.8784, 6.4, -8.3, -8.0, 7.6, 70.23));
         ;
         ivec3(-72091, 34992, 13607);
         ivec3 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
         mat4(-5.2, -7247.2878, -9.5, 85.57, -743.704, 6246.0339, 267.392, -5.8, -66.20, -5979.9964, 5818.1532, 280.403, 9.7, 4.7, 0.4, -9036.0809);
         vec2(4.1, -440.111);
        }
       else
        {
         mat3x4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
         int _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[37];
         mat4x3(26.16, -716.645, -610.804, 1491.3627, -685.040, 3942.2324, 5625.4547, -331.217, -53.90, 285.522, -2.1, -1.3);
        }
       {
        int _GLF_SWITCH_0_32v;
        mat2(33.51, -5.5, -80.01, -223.767);
        ;
        bvec4(true, false, true, false);
        mat2x4(-5.0, -7.9, 646.119, 172.889, 57.36, 31.45, 5.4, -171.745);
       }
      }
      {
       if(true)
        {
         ;
         int _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
         lessThanEqual(ivec3(-76105, 81578, 47139), ivec3(54731, 92751, 76942));
         uvec4 _GLF_SWITCH_0_35v[84], _GLF_SWITCH_0_36v[5];
         lessThanEqual(ivec3(-19194, -57982, 54433), ivec3(-24405, -30683, 97036));
         mat2x4 _GLF_SWITCH_0_37v[34], _GLF_SWITCH_0_38v;
        }
       ivec2 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
       ivec4 _GLF_SWITCH_0_42v;
       _GLF_SWITCH_0_42v;
      }
      bvec2(false, false);
      if(true)
       {
       }
      (uvec2(2938u, 158890u) << uvec2(43339u, 51255u));
     }
     case 0:
     case 59:
     case 3:
     subgroupAll(false);
     case 44:
     case 48:
     case 41:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     case 46:
     bvec4(true, false, false, false);
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 18:
     if(((372.989 / mat2x3(579.550, 268.324, -7793.6184, 93.30, 5.3, 8.1)) != mat2x3(3190.6305, 3.4, 78.58, 2.2, -4.3, -1.3)))
      {
       while((mat2x4(57.63, -9.2, 1753.1488, -2300.6286, 64.89, -68.84, -431.444, -813.396) == mat2x4(666.470, 9.2, 99.52, -2.8, -6.1, -4.1, -9.4, -219.357)))
        {
         ivec3 _GLF_SWITCH_1_0v[39];
         for(         (ivec3(-41657, 85641, -58795) != (-22292 % ivec3(-12992, 61594, -34212)));
 (bvec2(false, true) != bvec2(false, false)); tan(vec2(-23.16, 7.2)))
          {
           bvec3 _GLF_SWITCH_1_1v;
           vec2 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[2];
           ;
          }
         while(true)
          {
           ;
           vec4(3.0, -8.5, -48.69, 2.7);
           ;
           vec4 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
           ;
           mat2(-4.3, -3.0, -8.8, 450.469);
           ivec2 _GLF_SWITCH_1_7v[18];
           mat2x3(-723.404, -695.445, -2.7, 70.92, -58.81, -0.3);
          }
        }
       vec4(18.89, 34.33, 858.700, 5.0);
       mat2(7314.1759, -91.80, -713.675, -9.3);
       bvec2 _GLF_SWITCH_1_8v;
       do
        {
         uvec3 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v[75];
         {
          ivec4 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
          step(vec3(9812.2087, 1.9, 2.4), vec3(824.723, -2.9, -2626.7474));
          mat3(-7.4, -9.9, -42.28, 8.1, -40.81, -11.02, -2.1, -4.9, 8640.1516);
          bvec4(false, true, false, false).t;
          vec4(79.64, 65.39, -326.441, -1.9);
          greaterThan(vec3(4.7, 4.9, -5.9), vec3(181.257, -6107.2699, -6.9));
         }
         read;
         {
         }
         ivec4 _GLF_SWITCH_1_15v[12];
         ivec3 _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
         {
          ;
          mat3x2(-9164.8228, 201.125, -3704.7617, -5.5, 7.1, -72.91);
         }
        }
       while(true);
      }
     case 0:
     case 46:
     case 60:
     subgroupAll(false);
     case 92:
     case 14:
     case 65:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     case 83:
     mat4x3 _GLF_SWITCH_1_18v;
     case 72:
     ivec3 _GLF_SWITCH_1_19v;
     default:
     1;
    }
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}
