#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-4485.1924)), float(mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), bool(true)))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))), mix(vec2(_GLF_FUZZED(-510.111), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))))[1], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[1]) : _GLF_FUZZED(-84.19))) / 1.0)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, abs(0.0), 0.0))))[0], _GLF_FUZZED((6.4 / float(false)))), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (transpose(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(95.45) : 0.0)), 1.0, tan(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0, 0.0, 0.0, 0.0))) / mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-4.7))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, abs(0.0), 0.0))), mix(vec2(_GLF_FUZZED(-510.111), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9661.3623) : _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[1], ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true)), min(mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true)))), mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-71.93)), bool(false))))), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[1]) / 1.0)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(acosh(-2.8)) : 0.0)), mix(float(_GLF_FUZZED(6.4)), _GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[0], _GLF_FUZZED((6.4 / float(false)))), bvec2(true, false)))) + vec2(0.0, 0.0)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, max(_GLF_IDENTITY(6.4, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.5), clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5)))), _GLF_IDENTITY(float(6.4), mix(float(float(6.4)), float(_GLF_FUZZED(-3.0)), bool(false))), bool(true))), 6.4)))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)), (vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.4, max(_GLF_IDENTITY(6.4, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), mix(float(_GLF_FUZZED(-275.216)), float(float(_GLF_FUZZED(-0.5))), bool(true))), float(6.4), bool(true))), 6.4)))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))) + vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(-510.111), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[1], _GLF_IDENTITY(float(vec3((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6.4)), mix(float(float(_GLF_FUZZED(6.4))), float(_GLF_FUZZED(-3.2)), bool(false))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[1], 1.0, 0.0)), (false ? _GLF_FUZZED(-13.25) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))))[1], 1.0, 0.0), max(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))))[1], 1.0, 0.0), vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.4), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3(1.0) * (mat2x3(_GLF_FUZZED(6.4), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) - 0.0))), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, length(0.0), 1.0, 1.0, cos(0.0), 1.0, 0.0, abs(1.0))))), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0), (mat3x2(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))))[1], 1.0, 0.0))))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? abs(0.0) : _GLF_FUZZED(-6850.1205))), 0.0))))[1]), (((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), bool(true))), 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? abs(0.0) : _GLF_FUZZED(-6850.1205))), 0.0))))[1])) / 1.0) / 1.0)), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false)))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[0], _GLF_FUZZED(_GLF_IDENTITY((6.4 / float(false)), float(mat4x2((6.4 / float(false)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, determinant(mat2(1.0, abs(0.0), abs(0.0), 1.0))))))), vec2(mat4x2(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.4)), float(0.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || false)))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(0.0), 0.0))))[0], _GLF_FUZZED(_GLF_IDENTITY((6.4 / float(false)), float(mat4x2((6.4 / float(false)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, determinant(mat2(1.0, abs(0.0), abs(0.0), 1.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))).y))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 0.0, 1.0, abs(1.0), 0.0)))), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-0.4, (-0.4) / 1.0), 3.3, 3.0, -35.17).w)), bool(false)))), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(vec4(-0.4, 3.3, 3.0, -35.17).w)), bool(false)))), 1)), int(ivec4(int(ivec2(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8033.8842)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2560.0884) : 1.0)))), injectionSwitch.y)), float(_GLF_FUZZED(vec4(-0.4, 3.3, 3.0, -35.17).w)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))), 1)), 0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), (int(int(int(6)))) << 0)))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (0 >> _GLF_IDENTITY(int(2), int(2))) + (_injected_loop_counter --)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
          {
           for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, _GLF_IDENTITY(~ (~ ((1) | 0)), (~ (~ (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), int(ivec3(_GLF_IDENTITY((1), ((1)) | ((1))), 0, 1))), (1))) | 0))) | (~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)) | 0))))))) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(_injected_loop_counter))))), 0 ^ ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(_injected_loop_counter))))))) | 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-61909)))))))), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) != (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0))))), 0, 1, 1), (ivec4(1, 1, 1, 1) & ivec4(1, 1, 1, 1)) * (ivec4(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0))))), 0, 1, 1)))))) | (8))), int(8)))), (false ? _GLF_FUZZED(int(subgroup_size)) : _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, _GLF_IDENTITY(0, 0 | (0)))))))) | (8))), int(8))), (_GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))) | (8))), (int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))) | (8)))) + 0), int(8)))) | (_GLF_IDENTITY(int(8), clamp(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))) | (8))), int(8))))))))) >> _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), _GLF_IDENTITY(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), max(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))))), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))))) | (8))), int(8))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0))))), 0 + ((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, 8)), 8))), clamp(_GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), 0 ^ (int(8))))), int(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), _GLF_IDENTITY(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), max(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))))), max((_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), _GLF_IDENTITY(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), max(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))))), (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), _GLF_IDENTITY(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), max(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))))))) | (8))), int(8))), max(_GLF_IDENTITY(int(8), clamp(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, clamp(8, 8, _GLF_IDENTITY(8, clamp(8, 8, 8))))) | (8)), int(_GLF_IDENTITY(ivec3(8, 0, 0), _GLF_IDENTITY(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), max(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)))))))) | (8))), int(8))), _GLF_IDENTITY(int(8), clamp(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, 0, 0), _GLF_IDENTITY(clamp(ivec3(8, 0, 0), ivec3(8, 0, 0), ivec3(8, 0, 0)), max(clamp(ivec3(8, 0, 0), ivec3(8, 0, _GLF_IDENTITY(0, (0) | 0)), ivec3(8, 0, 0)), clamp(ivec3(8, 0, 0), ivec3(8, 0, _GLF_IDENTITY(0, int(ivec4(0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))), ivec3(8, 0, 0)))))))) | (8))), int(8))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | 0)))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0)))))))), int(_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED((_injected_loop_counter / _injected_loop_counter)))))) >> 0)))))) / 1))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))) || false)), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(false))))))), false)))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), false), true)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), false), true)))))))), false || (bool(bool((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), false), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), false), true)))))))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))) && true, bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))) && true, ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), ! (! (bool(bvec2(! (_GLF_DEAD(false)), false)))))))) && true) || false))))), bool(bvec3(! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))) && true, bool(bool((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))));
      }
     else
      {
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u), 0u)) + (0u))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) << 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), 0u ^ _GLF_IDENTITY(((subgroup_local_id)), max(((subgroup_local_id)), ((subgroup_local_id))))) >> 0u);
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - (80826u & 0u)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (false ? _GLF_FUZZED(uvec2(22060u, 33677u).s) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))) ^ 0u, _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (subgroup_local_id) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (subgroup_local_id) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (subgroup_local_id) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (subgroup_local_id) << 0u)))) ^ 0u)), (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u), 0u + ((subgroup_local_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY((~ (0u)), 0u | ((~ (0u))))) | 0u))) / 1u)))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(150855u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((false ? _GLF_FUZZED(150855u) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) | 0u)) << 0u)))) >> 0u)))))), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(150855u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((false ? _GLF_FUZZED(150855u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) >> 0u))))))) >> 0u))) ^ 0u))) | (~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), uint(uvec3(true ? 0u : _GLF_FUZZED(workgroup_base), (0u | 0u), (0u | 0u)))), true ? 0u : _GLF_FUZZED(workgroup_base))))), 0u)) : _GLF_FUZZED(subgroup_id))))) ^ 0u)))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))) % _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 0, 1, 0))), ~ (~ (_GLF_IDENTITY(4, int(ivec4(4, 0, 1, 0)))))), 4)), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, max(1, 1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, 0 ^ (64)))), 0 + (int(int(_GLF_IDENTITY(64, 0 ^ (64))))))), 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 1u, 0u, 0u))) + 1 < subgroup_size)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false, (false) || false), false)))))))
            {
             atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (0u | 0u) | (virtual_gid)), (virtual_gid) | (virtual_gid)), virtual_gid))))], _GLF_IDENTITY(_GLF_IDENTITY(read, (read) - 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), ~ (_GLF_IDENTITY(~ (0u ^ (read)), ~ (~ (~ (0u ^ (read)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / 1u), 0u ^ (read))), clamp((_GLF_IDENTITY(read, 0u ^ (read))), _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), max((_GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, min(read, read))))), (_GLF_IDENTITY(read, 0u ^ (read))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(read, 0u ^ (read))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (false ? _GLF_FUZZED(num_workgroup) : 0u ^ (read)))), _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u)), (uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u))) - (0u & 2515u))))) / 1u), 0u, 1u, 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(read, 0u ^ (read))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (false ? _GLF_FUZZED(num_workgroup) : 0u ^ (read)))), _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u)), (uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u))) - (0u & 2515u))))) / 1u), 0u, 1u, 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(read, 0u ^ (read))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (false ? _GLF_FUZZED(num_workgroup) : 0u ^ (read)))), _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u)), (uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u))) - (0u & 2515u))))) / 1u), 0u, 1u, 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(read, 0u ^ (read))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (false ? _GLF_FUZZED(num_workgroup) : 0u ^ (read)))), _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u)), (uint(uvec3((_GLF_IDENTITY(read, 0u ^ (read))) | 0u, 0u, 0u))) - (0u & 2515u))))) / 1u), 0u, 1u, 0u)))))) : _GLF_FUZZED(workgroup_id))))) - 0u), (_GLF_IDENTITY(read, _GLF_IDENTITY((read), min((read), _GLF_IDENTITY((read), max((read), (_GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, 0u | (read))))))))) - 0u)) | (_GLF_IDENTITY(read, (read) - 0u))), _GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((read) - 0u, min(_GLF_IDENTITY((read) - 0u, clamp((read) - 0u, (read) - 0u, (read) - 0u)), (read) - 0u)), (_GLF_IDENTITY((read) - 0u, min(_GLF_IDENTITY((read) - 0u, clamp((read) - 0u, (read) - 0u, _GLF_IDENTITY((read) - 0u, ((read) - 0u) >> 0u))), (read) - 0u))) - 0u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | 0u), 0u ^ _GLF_IDENTITY((read), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((read), 0u, 0u), (uvec3((read), 0u, 0u)) >> uvec3(0u, 0u, 0u))), 0u | (_GLF_IDENTITY(uint(uvec3((read), 0u, 0u)), (uint(uvec3((read), 0u, 0u))) | (uint(uvec3((read), 0u, 0u)))))))), (read) - 0u), (_GLF_IDENTITY(read, _GLF_IDENTITY((read), min((read), _GLF_IDENTITY(_GLF_IDENTITY((read), _GLF_IDENTITY(((read)) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (((read)) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (((read)) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), max((read), (read))))) - 0u)) | (_GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((workgroup_base ^ subgroup_id)))), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ _GLF_IDENTITY((read), _GLF_IDENTITY(uint(uvec3((read), 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3((read), 0u, 0u)), (uint(uvec3((read), 0u, 0u))) | (uint(uvec3((read), 0u, 0u)))))))), (read) - 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ _GLF_IDENTITY((read), _GLF_IDENTITY(uint(uvec3((read), 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3((read), 0u, 0u)), (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read, ~ (~ (read)))), 0u, 0u), (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read, ~ (~ (read)))), 0u, 0u), (uvec3((_GLF_IDENTITY(read, ~ (~ (read)))), 0u, 0u)) | (uvec3((_GLF_IDENTITY(read, ~ (~ (read)))), 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))) | (uint(uvec3((read), 0u, 0u)))))))), (read) - 0u))), (_GLF_IDENTITY(read, _GLF_IDENTITY((read), min((read), _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max((read), (read))))) - 0u)) | (_GLF_IDENTITY(read, (read) - 0u)))) ^ 0u), _GLF_IDENTITY(read, (read) - 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ _GLF_IDENTITY((read), min((read), (read)))), (_GLF_IDENTITY(read, 0u ^ _GLF_IDENTITY((read), min((read), (read))))) | (_GLF_IDENTITY(read, 0u ^ _GLF_IDENTITY((read), min((read), (read)))))), (read) - 0u), (_GLF_IDENTITY(read, _GLF_IDENTITY((read), min((read), _GLF_IDENTITY(_GLF_IDENTITY((read), max((read), (read))), (_GLF_IDENTITY(_GLF_IDENTITY((read), ~ (~ ((read)))), max((read), (read)))) * 1u))) - 0u)) | (_GLF_IDENTITY(read, (read) - 0u))), _GLF_IDENTITY(read, (read) - 0u))) - 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) + 0))), 4);
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     subgroupAll(false);
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))), false, true, true)))) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, true))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), (! ((true) && true)) && true))))))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true))))), true && ((! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true)))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), bool(bool(! ((! (_GLF_WRAPPED_IF_FALSE(false))))))))), false, false, false))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true))))), true && ((! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.3)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true)))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), bool(bool(! ((! (_GLF_WRAPPED_IF_FALSE(false))))))))), false, false, false))))))))))))), _GLF_IDENTITY(false, ! (! (false))), true)))))) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))) && (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))))))))))))) && true)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false))))) && (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))))))) || false)))))))))))))) && true)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false))))) && (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))))))) || false)))))))))))))) && true)), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false))))) && (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))))))) || false)))))))))))))) && true)), false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4((! (_GLF_WRAPPED_IF_FALSE(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false))))) && (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)))))))))) || false)))))))))))))) && true)), false)), false, true)), false, true))))))))))) || false)) && true))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), (_GLF_WRAPPED_IF_FALSE(false)) || false))), bool(bvec4((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), (_GLF_WRAPPED_IF_FALSE(false)) || false))), true, false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_IDENTITY(false, true && (false)))))), (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))) || false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))) || false))))))), ! (! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, true && ((_GLF_WRAPPED_IF_FALSE(false)) || false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, true && ((_GLF_WRAPPED_IF_FALSE(false)) || false))))))))), (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))) || false))))) || false))))))))) || _GLF_IDENTITY(false, (false) || false)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true))), (true) && true)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, cos(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), (float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0))) * sqrt(1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0)), (float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0))) * sqrt(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0)), (float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0))) * sqrt(1.0))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0)), (float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0))) * sqrt(1.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0)), (float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0))) * sqrt(1.0))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, cos(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (float(mat2(injectionSwitch.y, cos(0.0), 1.0, 1.0))) * sqrt(1.0)))) / 1.0)))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) > 0); _injected_loop_counter --)
        {
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) | 0u) ^ (virtual_gid), ~ (~ (0u ^ (virtual_gid)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) ^ (virtual_gid), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), _GLF_IDENTITY((0u ^ (virtual_gid)) ^ 0u, ~ (~ ((0u ^ _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 1u, 1u)))) ^ 0u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))), (virtual_gid), (virtual_gid)))))) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u)))) ^ 0u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u)))) ^ 0u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), 1u, 0u))) ^ 0u)))) ^ 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (virtual_gid), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ (0u ^ 0u)), (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ (0u ^ 0u))) ^ 0u), 0u ^ _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) + (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))))) ^ 0u)))) ^ 0u), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), log(1.0), 0.0)))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u)))) ^ 0u), 1u * (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), _GLF_IDENTITY((0u ^ (virtual_gid)) ^ 0u, 0u | ((0u ^ (virtual_gid)) ^ 0u)))))) ^ 0u))), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), 0u | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) ^ (virtual_gid), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), _GLF_IDENTITY((0u ^ (virtual_gid)) ^ 0u, ~ (~ ((0u ^ _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 1u, 1u)))) ^ 0u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ _GLF_IDENTITY((virtual_gid), max((virtual_gid), _GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))), (virtual_gid), (virtual_gid)))))) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u)))) ^ 0u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u)))) ^ 0u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), 1u, 0u))) ^ 0u)))) ^ 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (virtual_gid), max(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ (0u ^ 0u)), (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ (0u ^ 0u))) ^ 0u), 0u ^ _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) + (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))))) ^ 0u)))) ^ 0u), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), log(1.0), 0.0)))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u)))) ^ 0u), 1u * (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) ^ (virtual_gid), (0u ^ (virtual_gid)) ^ 0u))), ((~ (_GLF_IDENTITY(0u ^ (virtual_gid), _GLF_IDENTITY((0u ^ (virtual_gid)) ^ 0u, 0u | ((0u ^ (virtual_gid)) ^ 0u)))))) ^ 0u))), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))) - (_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u))))], read, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_injected_loop_counter))), 64, 4);
        }
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)), true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true)))))), false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), true))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) || _GLF_IDENTITY(false, false || (false))), false)), (bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))
        {
         subgroupAll(true);
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7584.9986)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + sin(0.0)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7584.9986)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + sin(0.0)) > injectionSwitch.y)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
      }
    }
  }
 else
  {
  }
}
