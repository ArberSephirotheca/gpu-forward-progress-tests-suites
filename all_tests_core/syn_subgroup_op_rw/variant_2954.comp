#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 uvec3 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 float _f3;
} ;

struct _GLF_struct_7 {
 bool _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 vec4 _f1;
 _GLF_struct_8 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 float _f5;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 mat2x3 _f1;
 mat2 _f2;
 uvec2 _f3;
 mat2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 mat2x3 _f1;
 mat4 _f2;
 bvec2 _f3;
 uvec4 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
} ;

struct _GLF_struct_2 {
 float _f0;
 vec3 _f1;
 uint _f2;
 bool _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 ivec4 _f1;
 mat2 _f2;
 uint subgroup_size;
 float _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 mat3x2 _f1;
 mat2 _f2;
 int _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat2 _f2;
 bvec3 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 int _f2;
 _GLF_struct_9 _f3;
 float _f4;
 vec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, exp(0.0), 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 1.0, exp(0.0), 1.0, 0.0))) / vec2(1.0, 1.0)))) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y)))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)))).x < injectionSwitch.y))))))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_4(_GLF_struct_0(vec3(1.0), mat3x2(1.0), mat2(1.0), 1), _GLF_struct_1(mat3x2(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec2(-93452, 62234)) : ivec2(1, 0)), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(4), ivec2(4))) + ((false ? _GLF_FUZZED(ivec2(-93452, 62234)) : ivec2(1, 0)))))), min(ivec2(1, 1) * (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1)), 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec2(-93452, 62234)) : ivec2(1, 0), ivec2(0, 0) + (false ? _GLF_FUZZED(ivec2(-93452, 62234)) : ivec2(1, 0)))))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1, 0), (false ? _GLF_FUZZED(ivec2(-93452, 62234)) : ivec2(1, 0))))))), (_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1))))), 1), ivec2(1, 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 1), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, 1), 0, 1)), (ivec2(ivec4(ivec2(1, 1), 0, 1))) / ivec2(1, 1))))) * _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ivec2(0, 0) | _GLF_IDENTITY(((ivec2(1, 0))), (true ? ((ivec2(1, 0))) : _GLF_FUZZED(ivec2(98790, -8665))))), _GLF_IDENTITY((ivec2(1, 1) * (ivec2(1, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ~ (_GLF_IDENTITY(~ (ivec2(1, 1)), (false ? _GLF_FUZZED(ivec2(7271, -3079)) : ~ (ivec2(1, 1)))))) * _GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039)))) - ivec2(0, 0)))))) << (ivec2(0, 0) & ivec2(-70830, 53912))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))), max(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), (ivec2(1, 1) * (ivec2(1, 0))) ^ ivec2(0, 0)), 1, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1, 1) * (ivec2(1, 0)), 1, 1))))), ivec2(1, 1) * (ivec2(1, 0)))), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), (~ (_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | ivec2(0, 0)), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)), 0)))))) | ivec2(0, 0))))), min(_GLF_IDENTITY((ivec2(1, 1) * (ivec2(1, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ~ (_GLF_IDENTITY(~ (ivec2(1, 1)), (false ? _GLF_FUZZED(ivec2(7271, -3079)) : ~ (ivec2(1, 1)))))) * _GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039)))) - ivec2(0, 0)))))) << (ivec2(0, 0) & ivec2(-70830, 53912))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))), max(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), (ivec2(1, 1) * (ivec2(1, 0))) ^ ivec2(0, 0)), 1, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1, 1) * (ivec2(1, 0)), 1, 1))))), ivec2(1, 1) * (ivec2(1, 0)))), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), (~ (_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | ivec2(0, 0)), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)), 0)))))) | ivec2(0, 0))))), ivec2(ivec2((ivec2(1, 1) * (ivec2(1, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ~ (_GLF_IDENTITY(~ (ivec2(1, 1)), (false ? _GLF_FUZZED(ivec2(7271, -3079)) : ~ (ivec2(1, 1)))))) * _GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039)))) - ivec2(0, 0)))))) << (ivec2(0, 0) & ivec2(-70830, 53912))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))), max(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), (ivec2(1, 1) * (ivec2(1, 0))) ^ ivec2(0, 0)), 1, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1, 1) * (ivec2(1, 0)), 1, 1))))), ivec2(1, 1) * (ivec2(1, 0)))), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), (~ (_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | ivec2(0, 0)), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)), 0)))))) | ivec2(0, 0)))))))), (ivec2(1, 1) * (ivec2(1, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ~ (_GLF_IDENTITY(~ (ivec2(1, 1)), (false ? _GLF_FUZZED(ivec2(7271, -3079)) : ~ (ivec2(1, 1)))))) * _GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039))), (_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) << ((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) & ivec2(-64160, 64039)))) - ivec2(0, 0)))))) << (ivec2(0, 0) & ivec2(-70830, 53912))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))), max(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), (ivec2(1, 1) * (ivec2(1, 0))) ^ ivec2(0, 0)), 1, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1, 1) * (ivec2(1, 0)), 1, 1))))), ivec2(1, 1) * (ivec2(1, 0)))), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), (~ (_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), max(_GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | ivec2(0, 0)), _GLF_IDENTITY(clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)), (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))) | (clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)), 0)))))) | ivec2(0, 0)))))))), (false ? _GLF_FUZZED(ivec2(62905, _GLF_IDENTITY(-49433, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false, true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, false, true))))) && true))) ? _GLF_FUZZED(86988) : -49433, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false, true)))))) ? _GLF_FUZZED(86988) : -49433) ^ 0))))) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (1) ^ 0)) * (ivec2(1, 0)), (ivec2(1, 1) * (ivec2(1, 0))) | (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | 0), 1))) * (ivec2(1, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))), (_GLF_IDENTITY(max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))), ~ (~ (max(ivec2(1, 1) * _GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) / ivec2(1, 1)), ivec2(1, 1) * (ivec2(1, 0))))))) / ivec2(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), max(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))) | (1))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))))), clamp(_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), max(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), _GLF_IDENTITY(ivec2(1, 1), max(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), min(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1))), ivec2(1, 1))))) * (ivec2(1, 0)))))), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))))), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), _GLF_IDENTITY(max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))), ivec2(0, 0) ^ (_GLF_IDENTITY(max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))), max(max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))), _GLF_IDENTITY(max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))), ivec2(ivec4(max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))), 0, 1)))))))))), max(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(int(1), int(1))))), 0)))))))), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), max(ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), clamp(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)), _GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), clamp(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)) * (ivec2(_GLF_IDENTITY(1, (1) | 0), 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, min(1, 1))))) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), max((_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), (_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))))))) | ((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), max((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1)))))) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))))))), ivec2(ivec2((_GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 0)), max(ivec2(1, 1) * (ivec2(1, 0)), ivec2(1, 1) * (ivec2(1, 0))))))))))) | ivec2(0, 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), 1) * (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-79661) : 1)), 0)), max(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) * 1)), 1) * (ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-79661) : 1)), 0)), ivec2(_GLF_IDENTITY(1, (1) >> 0), 1) * (ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-79661) : 1)), 0)))), (ivec2(1, 1) * _GLF_IDENTITY((ivec2(1, 0)), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))), max((ivec2(1, 0)), _GLF_IDENTITY((ivec2(1, 0)), ~ (~ ((ivec2(1, 0)))))))) / (ivec2(1, 1) | ivec2(0, 0)))) | (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(6290) : (~ (1)))) + 0), ~ (1), _GLF_IDENTITY(~ (1), (~ (1)) >> 0)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(1, 0), ivec2(1, 0))), clamp(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(1, 0), ivec2(1, 0))), _GLF_IDENTITY(ivec2(1, 0), min(ivec2(1, 0), ivec2(1, 0))), _GLF_IDENTITY(ivec2(1, 0), min(ivec2(1, 0), ivec2(1, 0)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), (false ? _GLF_FUZZED(ivec2(ivec3(27928, 12948, 79020))) : _GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1))))) * (ivec2(1, 0)), max(ivec2(1, 1) * _GLF_IDENTITY(_GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) - 0), 0))))) * ivec2(1, 1)), ((ivec2(1, _GLF_IDENTITY(0, 0 | (0))))) | ((ivec2(1, 0)))), ivec2(1, _GLF_IDENTITY(1, (1) ^ 0)) * (ivec2(1, 0))))), (~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-86109) : 1)), _GLF_IDENTITY(1, max(1, 1))) * (ivec2(1, 0)), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) ^ 0), 1) * (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))), 0), clamp(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))), 0), clamp(ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))), 0), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))), (min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))) << 0)), 0), ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 | (_GLF_IDENTITY(1, (1) | (1))))))))), 0))), ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) | (1)))), clamp(~ (~ (_GLF_IDENTITY(1, (1) | (1)))), ~ (~ (_GLF_IDENTITY(1, (1) | (1)))), ~ (~ (_GLF_IDENTITY(1, (1) | (1))))))))), 0)))), _GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), ivec2(_GLF_IDENTITY(ivec3(ivec2(1, 1), 0), (ivec3(ivec2(1, 1), 0)) | (ivec3(ivec2(1, 1), 0))))))) * (ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(abs(-50289)))), 0)))))) | ivec2(0, 0))))))) - ivec2(0, 0)))))) / ivec2(1, 1)), (ivec2(_GLF_IDENTITY(1, (1) << 0), 0)) << ivec2(0, 0))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), 0 | ((_GLF_IDENTITY(1, min(1, 1)))))) | ((_GLF_IDENTITY(1, min(1, 1))))) ^ 0), 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0)), (ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0))))), 1, 0))) << ivec2(0, 0)))), ~ (~ ((ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(65298) : (0))) * 1), 0 + (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (0)))))))))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))) ^ 0)))))))))))))) << ivec2(0, 0), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0)), (ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, min(0, 0)) + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0))) << ivec2(0, 0)))), ~ (~ ((ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), 0 + (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (0)))))))))), ivec2(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-53176)))) << (1 ^ 1))) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) >> 0), 0, _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0))))) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ _GLF_IDENTITY((~ ((0))), ((~ ((0)))) >> 0))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), 0 | ((0)))) << 0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), ~ (~ (clamp(0, 0, 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) << _GLF_IDENTITY(ivec2(0, 0), (ivec2(13175, 1845) & ivec2(0, 0)) ^ (_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) ^ (ivec2(0, 0))))), ((_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), (0 ^ 1)))), ivec2(0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (true ? _GLF_IDENTITY(0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))), (0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))) * 1) : _GLF_FUZZED(ivec3(28585, -37643, 85893)[2]))))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0)), (ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0))) << ivec2(0, 0)))), ~ (~ ((ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), 0 + (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0)), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)))), clamp(vec2(mat2x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)))), vec2(mat2x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)))), vec2(mat2x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0))))))).x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (0)))))))))), ivec2(0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), (_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) / ivec2(1, 1))) - ivec2(0, 0)), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))))))) << ivec2(0, 0)) | ((_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), _GLF_IDENTITY(ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0)), _GLF_IDENTITY((ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0))), (false ? _GLF_FUZZED(ivec2(-4603, 10747)) : _GLF_IDENTITY((ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0))), max((ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0))), (ivec2(ivec4(ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))), 1, 0))))))) << ivec2(0, 0)))), ~ (~ ((ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), 0 + (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (0)))))))))), _GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) | (_GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))), min(_GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))), (ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))))))) >> ivec2(0, 0)), _GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0))))))))))), (ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) ^ _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0))))))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0)))))))))))) << ivec2(0, 0)))))))))) << ivec2(0, 0)))) * ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), int(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)), ((ivec2(1, 0))) | ((ivec2(1, 0)))) << ivec2(0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3(mat2(1.0)), mat3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1448.4606)), bool(false))), 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))), 0.0, 0.0, 0.0) + (mat3(mat2(1.0)))))), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0)))), mat2(mat3x4((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))))), transpose(transpose(transpose(transpose(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0)))), mat2(mat3x4((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))))))))), gl_SubgroupSize, 1.0, mat2x3(1.0)), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), true && (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), true))) ? _GLF_FUZZED(mat2(8.8, -3.5, 720.483, 294.931)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))), bvec3(true), _GLF_struct_2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(mat2x4((1.0), 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))) / 1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(max(vec3(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(73.35)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) - vec3(0.0, 0.0, 0.0))), min(max(_GLF_IDENTITY(vec3(1.0), vec3(mat3x4(vec3(1.0), 0.0, 1.0, abs(0.0), determinant(mat2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0)), length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), max(vec3(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + sqrt(tan(vec3(0.0, 0.0, 0.0))))) - vec3(0.0, 0.0, 0.0)))))), 1u, true, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) << 0)), (ivec3(_GLF_IDENTITY(1, (1) << 0))) >> ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(-380.955)), bvec2(false, false))))), injectionSwitch)), injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((7.2 + -646.675))), vec2(_GLF_FUZZED(-51.48), (injectionSwitch)[1]), bvec2(false, true))))) / vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(331.650)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) : _GLF_FUZZED(sqrt(normalize(injectionSwitch)))))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), injectionSwitch.x)))), _GLF_struct_3(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))), ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY((uvec3(2u)) >> uvec3(0u, 0u, 0u), ((uvec3(2u)) >> uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(22108u, 19882u, 136785u)) : _GLF_IDENTITY(uvec3(2u), (uvec3(2u)) >> uvec3(0u, 0u, 0u)))))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(uvec3(1u))))))))) | (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u))))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u))))))) | (0u)), 0u))), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u))))) | (0u)), 0u))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) / 1u))))) | (0u)), 0u))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), 0u | (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u))))) | (0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u))) | (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) / 1u))))) | (0u))) - 0u), 0u))))) ^ uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | 0u), 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u), (((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), ((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))))))) | ((_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? uvec3(1u) : _GLF_FUZZED(uvec3(146289u, 130488u, 71854u)))))))) | _GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), min((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(35465u, 50321u, 147572u)) : uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))) ^ uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))))) << uvec3(0u, 0u, 0u))))))))), _GLF_struct_6(vec3(1.0), mat2x3(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(3416u)))), min(1.0, 1.0))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(3416u)))), min(1.0, 1.0))))), bvec2(true), uvec4(1u), _GLF_struct_5(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mat2(mat3x4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(65.08, 2.8, 8.7, -6.2)) : mat2(1.0)))))), uvec2(1u), mat2(1.0), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-38258), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-38258), (_GLF_FUZZED(-38258)) ^ 0))) : _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) | 0))) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (1)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) | (0 ^ 0))))))), min((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1))))))))), (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (1)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) | (0 ^ 0))))))), min((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))))))) | (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (1)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) | (0 ^ 0))))))), min((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))))))))), _GLF_struct_9(_GLF_struct_7(true), vec4(1.0), _GLF_struct_8(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), ~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), ~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (0u | 0u) ^ (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))))) >> 0u)), mat4x2(1.0), mat4x3(1.0), 1.0), mat3x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), determinant(mat4(0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), log(1.0)))), (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(827.884), (_GLF_IDENTITY(true ? _GLF_FUZZED(827.884) : _GLF_FUZZED(-82.74), max(true ? _GLF_FUZZED(827.884) : _GLF_FUZZED(-82.74), _GLF_IDENTITY(true ? _GLF_FUZZED(827.884) : _GLF_FUZZED(-82.74), (true ? _GLF_FUZZED(827.884) : _GLF_FUZZED(-82.74)) / 1.0))))))), 1.0))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))), 1.0), 1.0, vec4(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), gl_NumWorkGroups))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), max(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(118952u, _GLF_IDENTITY(150078u, (true ? _GLF_IDENTITY(150078u, 0u ^ (150078u)) : _GLF_FUZZED(47847u))), 33830u)))).x) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), max(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(118952u, _GLF_IDENTITY(150078u, (true ? _GLF_IDENTITY(150078u, 0u ^ (150078u)) : _GLF_FUZZED(47847u))), 33830u)))).x) << 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), max(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(118952u, _GLF_IDENTITY(150078u, (true ? _GLF_IDENTITY(150078u, 0u ^ (150078u)) : _GLF_FUZZED(47847u))), 33830u)))).x) << 0u)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), false, true, false))) || false)))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_10._f0._f1.subgroup_size, max(_GLF_struct_replacement_10._f0._f1.subgroup_size, _GLF_struct_replacement_10._f0._f1.subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_10._f0._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 ^ (int(8))), (_GLF_IDENTITY(int(8), _GLF_IDENTITY(0, min(0, 0)) ^ (int(8)))) | 0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(ivec2(-18186, 28176), ivec2(0, 0) + (ivec2(-18186, 28176))).s) : _GLF_IDENTITY((1) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8)))), (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8))))) / 1), min(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), 0 | (int(8)))) | (_GLF_IDENTITY(int(8), min(int(8), int(8)))), (_GLF_IDENTITY((_GLF_IDENTITY(int(8), 0 | (int(8)))) | (_GLF_IDENTITY(int(8), min(int(8), int(8)))), ((_GLF_IDENTITY(int(8), 0 | (int(8)))) | (_GLF_IDENTITY(int(8), min(int(8), int(8))))) ^ 0)) >> 0)), _GLF_IDENTITY(int(8), 0 ^ (int(8)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8)))), (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), clamp(~ (int(8)), ~ (int(8)), ~ (int(8)))))), _GLF_IDENTITY(int(8), 0 ^ (int(8))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8)))), (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 ^ (int(8))))) << 0))), 0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 ^ _GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(int((int(8))), (int((int(8)))) >> 0)), min(int(_GLF_IDENTITY(int((int(8))), (int((int(8)))) >> 0)), int(_GLF_IDENTITY(int((int(8))), (int((int(_GLF_IDENTITY(8, (8) + 0))))) >> _GLF_IDENTITY(0, clamp(0, 0, 0)))))))))))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))) * ((1) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(42467) : int(8)))) | (int(8)))) - 0), _GLF_IDENTITY(int(8), 0 ^ (int(8))))))))))) % _GLF_struct_replacement_10._f0._f1.subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) | ((1)), max(((1)) | ((1)), ((1)) | ((1))))) / 1), 1)), _GLF_IDENTITY((1), ((1)) | ((1))) >> (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(8), 0 ^ (int(8))))))) % _GLF_struct_replacement_10._f0._f1.subgroup_size, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false)))) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))).y))), (uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) / 1), 1)), (1) >> (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToInt(412.084)) : 8, (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 1) | (false ? _GLF_FUZZED(floatBitsToInt(412.084)) : 8))))), 0 ^ (int(8)))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(((_GLF_IDENTITY(1, ~ (~ (1))))), 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(1, ~ (~ (1))))), (((_GLF_IDENTITY(1, ~ (~ (1)))))) | (((_GLF_IDENTITY(1, ~ (~ (1)))))))))) / 1), 1)), (1) >> (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY(int(_GLF_IDENTITY(int(8), (int(8)) ^ 0)), int(ivec3(int(int(_GLF_IDENTITY(8, (0 | 0) ^ (8)))), 0, 0)))), (false ? _GLF_FUZZED(floatBitsToInt(412.084)) : 8))), 0 ^ (int(8))))))) / 1u)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f0._f1.subgroup_size, uint(uvec4(_GLF_struct_replacement_10._f0._f1.subgroup_size, 0u, (0u | 0u), 1u))), _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_10._f0._f1.subgroup_size, 0u, 0u)), (uint(uvec3(_GLF_struct_replacement_10._f0._f1.subgroup_size, 0u, 0u))) << ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))), mat2(_GLF_IDENTITY(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286)))), (mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[0], clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))), mat2(_GLF_IDENTITY(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286)))), (mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[0], float(_GLF_IDENTITY(mat4((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))), mat2(_GLF_IDENTITY(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286)))), (mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[0], 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, cos(0.0)), (mat4((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))), mat2(_GLF_IDENTITY(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286)))), (mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[0], 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, cos(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))), mat2(_GLF_IDENTITY(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286)))), (mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))), mat2(_GLF_IDENTITY(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286)))), (mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, 0.0, sqrt(0.0), 1.0) : _GLF_FUZZED(inverse(mat2(929.893, -8.4, 0.8, 947.286))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[0])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), (mat2(1.0, 1.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? -3.4 : float(true)))), float(0.0), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[1], (false ? _GLF_FUZZED(-8463.3234) : (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))))[1]))), vec2(_GLF_FUZZED(-7968.9230), _GLF_FUZZED(90.84)), bvec2(false, false))).y)))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) / uvec3(1u, 1u, 1u)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.6) : injectionSwitch.x)) < injectionSwitch.y)) ? uvec3((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))) ^ 0), (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-2.9) : cos(0.0)))), (false ? _GLF_FUZZED(mat2(636.528, _GLF_IDENTITY(_GLF_IDENTITY(-56.55, (-56.55) - 0.0), max(-56.55, -56.55)), -804.826, -278.038)) : mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))))))))))), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))) ^ (int(8)))), int(int(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0)), (false ? _GLF_FUZZED(mat2(636.528, -56.55, -804.826, _GLF_IDENTITY(-278.038, clamp(-278.038, -278.038, -278.038)))) : mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0))))))))), _GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), 0 | (int(8)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0)), (false ? _GLF_FUZZED(mat2(636.528, -56.55, -804.826, _GLF_IDENTITY(-278.038, clamp(-278.038, -278.038, -278.038)))) : mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0))))))))), _GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), 0 | (int(8))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0)), (false ? _GLF_FUZZED(mat2(636.528, -56.55, -804.826, _GLF_IDENTITY(-278.038, clamp(-278.038, -278.038, -278.038)))) : mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0))))))))), _GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), 0 | (int(8)))))))))))))) % _GLF_struct_replacement_10._f0._f1.subgroup_size, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.8)), float(1.0), bool(true)))), (false ? _GLF_FUZZED(mat2(-4816.2853, -3.5, 2206.8553, -4.7)) : mat2(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.8)), float(1.0), bool(true)))))), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.2, 0.3, 95.60, 3751.3569)))) * _GLF_IDENTITY((transpose(mat2(1.0, 0.0, sqrt(0.0), 1.0))), (false ? _GLF_FUZZED(mat2(3121.8575, 38.04, -6.6, -304.710)) : (transpose(mat2(1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 1.0))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0)))).y))) : _GLF_FUZZED((uvec3(5270u, 124984u, 154337u) / workgroup_id)))))));
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))) : _GLF_FUZZED(workgroup_id)))], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) << 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2((injectionSwitch) * mat2(1.0), 1.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-422.164, 3475.5448)) : injectionSwitch)).y)), false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  return;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, 1 * (7))), int(7))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false), true))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(((! (_GLF_WRAPPED_IF_FALSE(false)))) || false, (((! (_GLF_WRAPPED_IF_FALSE(false)))) || false) || false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(ivec4(_GLF_IDENTITY(4, (4) | (4)), 0, 0, 1))))), 64, 4);
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0))))).y)))))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) << (178903u & 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, _GLF_IDENTITY(1u * ((subgroup_local_id) - 0u), max(1u * ((subgroup_local_id) - 0u), _GLF_IDENTITY(1u * ((subgroup_local_id) - 0u), (1u * ((subgroup_local_id) - 0u)) >> 0u))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) - 0u)))) - 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, 1u * ((subgroup_local_id) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_size))))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) - 0u))))) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, 1u * ((subgroup_local_id) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))), max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) - 0u))))), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, 1u * (_GLF_IDENTITY((subgroup_local_id) - 0u, (_GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))) + 0u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) - 0u)))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) - 0u)))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) - 0u)))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) - 0u)))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) - 0u)))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u ^ (0u)))))))) - 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, 1u * ((subgroup_local_id) - 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) - 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, 1u * ((subgroup_local_id) - _GLF_IDENTITY(0u, 0u ^ (0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)), max((subgroup_local_id) - 0u, (subgroup_local_id) - _GLF_IDENTITY(0u, (0u) | (0u)))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, (true ? (subgroup_local_id) - 0u : _GLF_FUZZED(next_virtual_gid))))))) - 0u)))))))) - 0u) + 1 < _GLF_struct_replacement_10._f0._f1.subgroup_size)
      {
       atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), clamp(min(64, 64), min(64, 64), min(64, 64)))), 4);
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           subgroupAll(false);
          }
         else
          {
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))))))))))));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, length(0.0), 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               break;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, false, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, false, true)))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))), false, false, true))))) || false))), true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, false || (true)))))))));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && true))), (((_GLF_IDENTITY(false, (false) && true)))) || false) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (false)), false || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))), (((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))) || false) && true))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))
              return;
             break;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), true, true))))) : _GLF_FUZZED(injectionSwitch), vec2(mat2x3(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), false)), true, true))))))), true, true))))) : _GLF_FUZZED(injectionSwitch), 0.0, 1.0, 0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))))
            return;
           atomicStore(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.2) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(16.32), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-41.27)), bvec2(true, false)))), (((injectionSwitch))) * mat2(1.0)))) * mat2(1.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))))) || false)))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              continue;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))));
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), true, false)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, false || ((injectionSwitch.x > injectionSwitch.y) && true)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false))))) && true))) && true)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? (- -5267.4869) : 9.0))), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? (- -5267.4869) : 9.0))), float(injectionSwitch.y), bool(true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false), true))))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false), true))))), false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false), true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) || false)), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, (true) || false)), true)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) || false)), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, (true) || false)), true))))))))))) || false)) && true), false, false))))) && true))) && true)) && true)) && true))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         subgroupAll(true);
        }
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
}
