#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 ivec2 _f0;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 uvec3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_16 {
 bool _f0;
 _GLF_struct_15 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 mat2 _f1;
 uvec4 _f2;
 vec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 ivec3 _f1;
 bvec2 _f2;
 int _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 mat4x3 _f2;
 mat4 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_20 {
 _GLF_struct_14 _f0;
 _GLF_struct_16 _f1;
 mat4x3 _f2;
 _GLF_struct_19 _f3;
 uint workgroup_id;
 mat2 _f4;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 uint num_workgroup;
 float _f1;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 uint _f3;
 ivec3 _f4;
 int _f5;
 vec4 _f6;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat4x3 _f1;
 bool _f2;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 mat3x2 _f1;
 uvec4 _f2;
 bvec2 _f3;
 mat4x2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 bvec4 _f1;
 vec2 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 mat4x3 _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uvec3 _f1;
 int _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_2 {
 uint workgroup_size;
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat2x3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(_GLF_struct_4(bvec2(true), mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), mat4x2(1.0), vec2(1.0)), bvec4(_GLF_IDENTITY(true, false || (true))), vec2(1.0), _GLF_struct_5(1, mat4x3(1.0), true), _GLF_struct_6(mat3x4(1.0), ivec2(1), mat4x3(1.0), 1u, ivec3(1), _GLF_IDENTITY(1, (1) ^ 0), vec4(1.0))), mat4x3(1.0), gl_SubgroupID);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(bvec2(true), _GLF_struct_9(uvec3(1u), gl_NumWorkGroups.x, 1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), clamp(~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x), ~ (gl_WorkGroupSize.x)))))) | 0u), mat2x4(1.0), _GLF_struct_0(mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), clamp(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + 0u))) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), ~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), _GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) | (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))) | (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))))))))), ~ (~ (uvec3(1u)))), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(135225u, 26916u, 19778u)) : uvec3(1u))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), clamp(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + 0u))) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), ~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), _GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) | (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))) | (~ (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))))))))), ~ (~ (uvec3(1u)))), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(135225u, 26916u, 19778u)) : uvec3(1u))))), 0u))), 1, mat3x4(1.0)), _GLF_struct_1(bvec3(true), mat3x2(1.0), mat4x2(1.0), 1u), mat2x3(1.0), mat2x3(1.0)), mat2x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_14(_GLF_struct_11(mat2x4(1.0), ivec3(1)), _GLF_struct_12(bvec2(true), ivec3(1), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true)), 1, uvec4(1u)), mat4x3(1.0), mat4(1.0), _GLF_struct_13(mat4x2(1.0), mat2(1.0), uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), uvec4(1u))), _GLF_struct_16(true, _GLF_struct_15(mat3x2(1.0), uvec3(1u), bvec3(true)), mat4x2(1.0)), mat4x3(1.0), _GLF_struct_19(_GLF_struct_17(mat2(1.0), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(-4611.3250)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_struct_18(ivec2(1)), mat2x4(1.0)), gl_WorkGroupID.x, mat2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))), bool(bvec4(_GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))), false || (false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_FUZZED(0.2)), bool(false)))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))))), true, false, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))), bool(bvec4(_GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))), false || (_GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))), bool(_GLF_IDENTITY(bvec3(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))), true, false), bvec3(bvec4(bvec3(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))), true, false), false))))))), true, false, false)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))))))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, _GLF_IDENTITY(true, false || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))))), false || (false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), true, true))))), true, false, false))))))) && true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), false, false))), true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-6.1, 1231.0439, -19.88, 0.7, -519.457, 4081.2224, 3895.9688, 4.2)) : mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-6.1, 1231.0439, -19.88, 0.7, -519.457, 4081.2224, 3895.9688, 4.2)) : mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))) + 0.0)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), true, false, true))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_3._f0.workgroup_size * _GLF_struct_replacement_20.workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-502.845)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size, 0u ^ (workgroup_base + _GLF_struct_replacement_8.subgroup_id * subgroup_size))) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(0, 0), clamp(_GLF_IDENTITY(ivec2(0, 0), ~ (~ (_GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) ^ (ivec2(0, 0)))))), ivec2(0, 0), ivec2(0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) ^ 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) ^ 0, max((_GLF_IDENTITY(0, (0) | (0))) ^ 0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0)), (_GLF_IDENTITY(0, (0) | (0))) ^ 0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0)))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) << (0 | 0)) ^ (0))) << 0)) | (0))), ~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) << 0)) | (0)))))) ^ 0))), 0))) | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 1 * (_GLF_IDENTITY(0, 0 ^ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 1 * (_GLF_IDENTITY(0, 0 ^ (0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 1 * (_GLF_IDENTITY(0, 0 ^ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 1 * (_GLF_IDENTITY(0, 0 ^ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 1 * (_GLF_IDENTITY(0, 0 ^ (0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(0, 0 ^ (0))))))) / 1))))) ^ 0), _GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, 0 ^ (0))))))))))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(1), 4, _GLF_IDENTITY(64, (64) - 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | (read)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), true, false, true)))))))))), false))), false))), bvec2(bvec4(bvec2(false, true), true, true)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec3(bvec2(false, true), true))), true, true)), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) - 0.0)))) + 0.0)))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))), _GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true, false))), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true, false))), true, false)), false, true, false)), (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true, false))), ! (! (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))), bool(bvec4(((! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), true), bvec2(bvec2(bvec2(false, true)))), true, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true, false)))))))), true, false)), false, true, false))) && true))) || false), true, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-85.59)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-85.59)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-85.59)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).y))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.2) : 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(748.541)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(false))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.2) : 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(748.541)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(false))), injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) / 1.0)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.8)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((8824.3828))), bool(false))), mix(float(_GLF_FUZZED(-1745.4613)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))))))), bool(true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), true && (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), true && (! (false)))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), true && (! (false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))))), true && (! (false))))))))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), true && (_GLF_IDENTITY(true && (! (false)), ! (! (_GLF_IDENTITY(true && (! (false)), false || (true && (! (false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.1), min(_GLF_IDENTITY(_GLF_FUZZED(-5.1), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(-5.1), min(_GLF_FUZZED(-5.1), _GLF_IDENTITY(_GLF_FUZZED(-5.1), (_GLF_FUZZED(-5.1)) / 1.0))) : _GLF_FUZZED(97.66), max(true ? _GLF_IDENTITY(_GLF_FUZZED(-5.1), min(_GLF_FUZZED(-5.1), _GLF_IDENTITY(_GLF_FUZZED(-5.1), (_GLF_FUZZED(-5.1)) / 1.0))) : _GLF_FUZZED(97.66), true ? _GLF_IDENTITY(_GLF_FUZZED(-5.1), min(_GLF_FUZZED(-5.1), _GLF_IDENTITY(_GLF_FUZZED(-5.1), (_GLF_FUZZED(-5.1)) / 1.0))) : _GLF_FUZZED(97.66))))), _GLF_FUZZED(-5.1))), _GLF_FUZZED((+ -32.13))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))
  barrier();
}
