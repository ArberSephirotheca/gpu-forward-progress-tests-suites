#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).y))) || false)) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))), min(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))), (false ? _GLF_FUZZED(vec4(-844.947, 6462.5637, 77.67, 41.19)) : mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0)), min(float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0)), float(mat2x4(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0))))), 1.0), clamp(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).y))) || false)) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), (_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(114523u, 78156u, 145409u)) : min(gl_NumWorkGroups, gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-73.84), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(384.147)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0)).y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true, false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(clamp(subgroup_size, subgroup_id, workgroup_size)))), (subgroup_id * subgroup_size) | 0u)) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), min(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))) << 0u))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), min(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))) << 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), min(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))) << 0u))))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), min(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))) << 0u)))))))))))))], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((mat3x2(48.37, -7.4, 73.13, -9.6, 5978.6918, -640.772) * vec3(8.9, -828.132, -34.84))))).y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(((subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), min(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (0) + 0)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) + 0)), ! (! (_GLF_IDENTITY(((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) + 0)), (((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) + 0))) || false)))) && true), bool(bvec4(! (((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) + 0)) && true), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), true, false), true))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))), false, true)))))) || false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4)), _GLF_IDENTITY(4, (4) >> 0), 4)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(_GLF_IDENTITY(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0), (ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0)) - ivec3(0, 0, 0)))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(max(~ (4), ~ (4)), 0 | (max(~ (4), ~ (4)))))))))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, ~ (~ (4)))), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(45375) : 4))), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ (4), (~ (4)) << 0)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ((_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))) - _GLF_IDENTITY(0, 0 ^ (0))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))) << 0), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(int(~ (4))), (true ? int(int(~ (4))) : _GLF_FUZZED(-65420))))))))))))))))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) + 0), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))), clamp((~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))), (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))), (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(ivec2(7984, 47636)[0]) : (4))))))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), 0 | (~ (4))), ~ (4), ~ (4))), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))) * 1)), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ (4), ~ (~ (~ (4)))))), max(~ (4), ~ (4)))))))))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))))))))) << ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))), int(int(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), max(~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4))))), ~ (4)))), min((_GLF_IDENTITY(~ (4), max(~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4))))), ~ (4)))), (_GLF_IDENTITY(~ (4), max(~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, 4))))), ~ (4)))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))))))))))) | (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ _GLF_IDENTITY((4), min((4), (4)))))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (~ (_GLF_IDENTITY(4, 0 | (4)))) / 1) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597)))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))))) - 0)), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))))))))))))) << 0), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, (4) | (4)))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), min(0 | (4), 0 | (4))))) : _GLF_IDENTITY(_GLF_FUZZED(-60597), (_GLF_IDENTITY(_GLF_FUZZED(-60597), (_GLF_FUZZED(-60597)) | 0)) << 0))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))), int(int(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 | (4))), (true ? ~ (_GLF_IDENTITY(4, 0 | (4))) : _GLF_FUZZED(-60597))))), 4)))))), int(ivec3(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), 1, 0))))), ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4)))))))))))))))))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch, injectionSwitch)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch, injectionSwitch)).y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch, injectionSwitch)).y)))))) || false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-5884.9422), _GLF_FUZZED(-651.079)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8285.3960), _GLF_FUZZED(-3.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2245.0145, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-2245.0145, clamp(-2245.0145, -2245.0145, _GLF_IDENTITY(-2245.0145, max(_GLF_IDENTITY(-2245.0145, (true ? -2245.0145 : _GLF_FUZZED(-0.8))), -2245.0145)))) : _GLF_FUZZED((+ -41.76)))))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4498.5140)), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), (true ? true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-0.9, -75.17)))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), _GLF_IDENTITY(bool(bool(bool(bvec2((false), true)))), true && (bool(bool(bool(bvec2((false), true)))))))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))))))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), true, true, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)) || false)), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), true, true, false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(true && (false || (_GLF_IDENTITY(false, ! (! (false))))), (true && (false || (_GLF_IDENTITY(false, ! (! (false)))))) && true))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))), true && ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), true, true, false))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false))))) || false)), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (false))), (((! (false)))) || false) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(((! (false))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), true, true, false)))), _GLF_IDENTITY(false, false || (false)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), false, false)))))), _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))) || false, ((_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))) && true)))) || false) && true))), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), true, true, false))))))), false, false)), (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true, false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), (false || (_GLF_IDENTITY(false, ! (! (false))))) || false)), ! (! (false))), true, true, false))))))), false, false))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), ! (! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true))))))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), (! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false))))) && true)), ((_GLF_IDENTITY(! (! (true)), (! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-79.72)), bool(false)))) - 0.0)), float(_GLF_FUZZED(-3957.1490)), bool(false))))))), false, true)))))))), true, true))), true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true))))))), true, true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
