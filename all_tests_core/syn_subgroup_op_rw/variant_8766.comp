#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(6.8)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), false, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(252.965) : 1.0)), 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-5.3, 33.31, -44.97, -2685.3010, 104.590, 1310.2056, -41.99, -893.232, _GLF_IDENTITY(-7449.9275, max(-7449.9275, -7449.9275)), -7509.1322, -5495.0260, -535.198)) : mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0), exp(0.0), exp(0.0))), 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-5.3, 33.31, -44.97, -2685.3010, 104.590, 1310.2056, -41.99, -893.232, -7449.9275, -7509.1322, -5495.0260, -535.198)) : mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * exp(0.0)), 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-5.3, 33.31, -44.97, -2685.3010, 104.590, 1310.2056, -41.99, -893.232, -7449.9275, -7509.1322, -5495.0260, -535.198)) : mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0)))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.5) : 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0), (_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(mat4x3(-5.3, 33.31, -44.97, -2685.3010, 104.590, 1310.2056, -41.99, -893.232, -7449.9275, -7509.1322, -5495.0260, -535.198)) : mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.6))), cos(0.0), tan(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), float(vec2(cos(0.0), 0.0))), _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0), cos(0.0))) : _GLF_FUZZED(42.88))), 1.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat3(1.0)))), 0.0)))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-5.3, 33.31, -44.97, -2685.3010, 104.590, 1310.2056, -41.99, -893.232, -7449.9275, -7509.1322, -5495.0260, -535.198)) : mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, exp(0.0), 0.0, 0.0)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-6306.5071)), bool(false)), (_GLF_IDENTITY(mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-6306.5071)), bool(false)), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-6306.5071)), bool(false))) / 1.0)) + 0.0)) - 0.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u))))))))) | (uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupID) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (uvec3(uvec3((gl_WorkGroupID) / uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u))))))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(gl_WorkGroupID), max(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID))), _GLF_IDENTITY(uvec3(gl_WorkGroupID), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED((subgroup_local_id --)))))), 0u, 0u) | (uvec3(gl_WorkGroupID)), (uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID))) | (uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupID)))))))))), max(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupID)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) * 1u), 0u, 0u)), uvec3(gl_WorkGroupID)), (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))) * uvec3(1u, 1u, 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupID)), (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), uvec3(gl_WorkGroupID))) * uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupID)), (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), uvec3(gl_WorkGroupID)), (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), uvec3(gl_WorkGroupID)), min(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), uvec3(gl_WorkGroupID)), min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)), uvec3(gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupID)), (min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (uvec3(gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), uvec3(gl_WorkGroupID))) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED(uvec3(191431u, 1759u, 80636u))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.3) : _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)), length(0.0), 0.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-747.306, -5.8, 1834.7900, 9.6)) : mat2(1.0))) * (injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), injectionSwitch))) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-747.306, -5.8, 1834.7900, 9.6)) : mat2(1.0))) * (injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), injectionSwitch))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-747.306, -5.8, 1834.7900, 9.6)) : mat2(1.0))) * (injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), injectionSwitch))) + vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], (false ? _GLF_FUZZED(5760.8507) : (_GLF_FUZZED(injectionSwitch))[0])), _GLF_FUZZED(-9.2)), vec2(_GLF_FUZZED(8.6), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), float(float(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))))), 0.0))) > injectionSwitch.y))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0))))), min(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0))))), mix(float(_GLF_FUZZED(-347.947)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)))))), bool(true)))))) : _GLF_FUZZED(8867.6469)))) - 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8867.6469)))) - 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y))))), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), true, false, false)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true)))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (181543u & 0u)) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (181543u & 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (181543u & 0u)), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (181543u & 0u)), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (181543u & 0u)))), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (181543u & 0u)))) - 0u, (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (181543u & 0u)) - 0u) - 0u)) * 1u))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.4), _GLF_FUZZED(8.3)), bvec2(false, false))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.4), _GLF_FUZZED(8.3)), bvec2(false, false))).x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), 685.450)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false)))), clamp(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), 685.450)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false)))), mix(vec2(_GLF_FUZZED(74.57), _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), clamp(_GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), clamp(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), (((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false)))))) - vec2(0.0, 0.0)))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), max(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450))), (vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, 1.0 * (685.450)))) - vec2(0.0, 0.0))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false)))))))))[1]), vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, -794.081))), bool(true))), 685.450)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false)))))[0], _GLF_FUZZED(8799.9714)), bvec2(true, false))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(-794.081, -794.081, _GLF_IDENTITY(-794.081, float(mat2x3(-794.081, 0.0, sqrt(1.0), 0.0, 0.0, cos(0.0))))))), bool(true))), 685.450)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(0.8), min(_GLF_FUZZED(0.8), _GLF_IDENTITY(_GLF_FUZZED(0.8), float(float(_GLF_FUZZED(0.8)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], _GLF_FUZZED(8590.6263)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-794.081, 685.450)), max(_GLF_FUZZED(vec2(-794.081, 685.450)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-794.081, mix(float(_GLF_FUZZED(-95.89)), float(_GLF_IDENTITY(-794.081, clamp(_GLF_IDENTITY(-794.081, mix(float(-794.081), float(_GLF_FUZZED(-274.972)), bool(false))), -794.081, -794.081))), bool(true))), _GLF_IDENTITY(685.450, max(685.450, _GLF_IDENTITY(685.450, mix(float(685.450), float(_GLF_FUZZED(-1.2)), bool(false))))))))) : _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2(mat3x2(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(8590.6263)), bvec2(true, false))))))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (64) + 0)), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 1)), (_GLF_IDENTITY(int(ivec3(64, 1, 1)), (int(ivec3(64, 1, 1))) / 1)) | (int(ivec3(64, 1, 1))))), (64) - 0)) - 0)) + 0)))), 0)), 0 ^ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), max((_GLF_IDENTITY(64, (64) + 0)), (_GLF_IDENTITY(64, (64) + 0)))), 0), (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), max((_GLF_IDENTITY(64, (64) + 0)), (_GLF_IDENTITY(64, (64) + 0)))), 0)) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), max((_GLF_IDENTITY(64, (64) + 0)), (_GLF_IDENTITY(64, (64) + 0)))), 0), max(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), (false ? _GLF_FUZZED(-54077) : _GLF_IDENTITY(64, (64) + 0)))), max((_GLF_IDENTITY(64, (64) + 0)), (_GLF_IDENTITY(64, (64) + 0)))), 0), ivec2(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), max((_GLF_IDENTITY(64, (64) + 0)), (_GLF_IDENTITY(64, (64) + 0)))), 0))))))))) / 1), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_FUZZED(-71.56)), vec2(_GLF_FUZZED(-4144.0104), (injectionSwitch)[_GLF_IDENTITY(1, (1) * 1)]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(-0.0), _GLF_FUZZED(-9021.8137)), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) << 0) | (_GLF_IDENTITY(0, (0) ^ 0)))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0)), max(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0)))), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(194764u))), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))).x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), (true ? mat2(mat4x2(mat2(1.0))) : _GLF_FUZZED(mat2(56.25, 0.2, 6952.2389, 5448.7409))))) * (injectionSwitch)).y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5818.2457), _GLF_FUZZED(-5954.2600)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0)))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5818.2457), _GLF_FUZZED(-5954.2600)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(sqrt(0.0)), 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) - 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), dot(vec3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 1.0, abs(0.0)))))[1]), bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))), true))), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-5818.2457), _GLF_FUZZED(-5954.2600)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (mix(vec2(_GLF_FUZZED(-5818.2457), _GLF_FUZZED(-5954.2600)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) + vec2(0.0, 0.0))), injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)), false), true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
