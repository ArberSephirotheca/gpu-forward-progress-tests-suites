#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 vec2 _f0;
 mat3x2 _f1;
 int _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 uint subgroup_base;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 vec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 _GLF_struct_8 _f1;
 mat3x2 _f2;
 vec4 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 vec3 _f1;
 ivec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uint _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 uvec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_1 {
 int _f0;
 uint _f1;
} ;

struct _GLF_struct_0 {
 float _f0;
 int _f1;
 vec2 _f2;
 ivec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint subgroup_size;
 uint _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 _GLF_struct_5 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4(1.0), _GLF_struct_5(_GLF_struct_0(1.0, 1, vec2(1.0), ivec2(1), ivec4(1)), _GLF_struct_1(1, 1u), gl_SubgroupSize, 1u, _GLF_struct_2(uvec3(1u), uvec2(1u), ivec4(1)), _GLF_struct_3(mat4x2(1.0), 1u, mat2x4(1.0)), _GLF_struct_4(uvec3(1u), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3x2(mat3(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)))))) - 0.0), mix(float(_GLF_FUZZED(-5.0)), float(1.0), bool(true)))), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x))), int(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ ((1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), (1 & 1), 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(20641) : 1)))))))), min(1, 1))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)))))) << 0, (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0)), ~ (~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0)), max((0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0)), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0)))))))), min(1, 1)))) << 0, _GLF_IDENTITY(int(ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)))) << 0, 0, (0 << _GLF_IDENTITY(int(4), int(4))), 0)), 0 ^ (int(ivec4(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0))), min(1, 1))) << 0))))) << 0, 0, (0 << _GLF_IDENTITY(int(4), int(4))), 0)))))) ^ 0)) << 0)), mat4x2(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))), uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (0u))))), 0u) + (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(44336u, 4046u, _GLF_IDENTITY(166273u, (166273u) | (_GLF_IDENTITY(166273u, (166273u) - 0u)))) >> uvec3(68306u, 135534u, 5492u))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (true ? uint(uvec2(0u, 1u)) : _GLF_FUZZED(subgroup_id)))))), 0u)))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(uvec3(1u), _GLF_struct_8(_GLF_struct_7(bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))), true && ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), true && ((true)))), false || (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))))), vec3(1.0), _GLF_IDENTITY(mat4(1.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY((mat4(1.0)), (true ? (mat4(1.0)) : _GLF_FUZZED(mat4(2.2, 3.4, -999.683, 59.88, -75.97, 6.3, -0.0, -9.7, -57.59, 2473.1976, -319.277, -5114.5099, -102.360, 95.57, -671.806, 5.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), mat3x2(1.0), vec4(1.0), _GLF_struct_10(_GLF_struct_9(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, sin(0.0) + (1.0)))), float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-538.348)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), tan(0.0), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0))), clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.9)))) * 1.0))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(_GLF_IDENTITY(0.0, 1.0 * (0.0))) + _GLF_IDENTITY((0.0), mix(float(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0)))), float(_GLF_FUZZED(63.08)), bool(false)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(float((0.0)), mix(float(_GLF_FUZZED(-6.3)), float(float((0.0))), bool(true)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), min(min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), clamp(_GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY((min(0.0, 0.0)), ((min(0.0, 0.0))) + log(1.0)) / 1.0), min(0.0, 0.0), min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.8) : 0.0)), 0.0)))))))), tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2220.1815)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), bool(true)))) - 0.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(837.310) : float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(695.892)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(837.310) : float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(695.892)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)))))) / 1.0))), float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 0.0, 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(-5.5) : clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), (false ? _GLF_FUZZED(-848.950) : tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(88.00)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 0.0, 0.0), mat2(1.0) * (mat4x2(0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0))))), 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9481.6267)), float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), bool(true)))) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED((+ -8.5))), bool(false)))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))), float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(840.214)), float(1.0), bool(true))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat4(-255.987, -671.900, -396.916, -0.4, -23.28, -10.70, 70.95, -8.8, -7.1, 63.92, -6.8, 28.49, -1.5, 971.469, -3.9, -6926.4342)) : transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, round(length(normalize(1.0))), 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, round(length(normalize(1.0))), 1.0))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, round(length(normalize(1.0))), 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, round(length(normalize(1.0))), 1.0))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))))), clamp(0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))))))))), abs(1.0), abs(1.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, abs(0.0), 1.0, abs(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.7)))))), mat3x2(1.0), 1), subgroup_id * _GLF_struct_replacement_6._f1.subgroup_size));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-8951.2176, mix(float(_GLF_FUZZED(-1.2)), float(_GLF_IDENTITY(-8951.2176, float(vec2(-8951.2176, 0.0)))), bool(true)))), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_IDENTITY(_GLF_FUZZED(616.750), min(_GLF_FUZZED(616.750), _GLF_FUZZED(616.750)))), bool(false))), float(mat3(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), log(1.0), 0.0, exp(0.0), 1.0, 0.0, 0.0, determinant(mat3(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, sin(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat4x3(mat4(_GLF_IDENTITY(mat4x3(1.0, 1.0, sin(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(1.0, 1.0, sin(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))))), abs(1.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, abs(1.0))), 1.0))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(-93954))), _GLF_IDENTITY(0, (0) * 1)))]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), true, false)), bool(bvec4(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), true, false)), true, true, false))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(4244.1029), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(43.55)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))))).x > injectionSwitch.y)))), true, false)), bool(bvec4(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))))))).x > injectionSwitch.y)))), true, false)), true, true, false))))), false, true, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(-93954))), _GLF_IDENTITY(0, (0) * 1)))]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), true, false)), bool(bvec4(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), true, false)), true, true, false))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(4244.1029), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(43.55)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))))).x > injectionSwitch.y)))), true, false)), bool(bvec4(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))))))).x > injectionSwitch.y)))), true, false)), true, true, false))))), false, true, false))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(-93954))), _GLF_IDENTITY(0, (0) * 1)))]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), true, false)), bool(bvec4(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))), true, false)), true, true, false))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(4244.1029), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_FUZZED(43.55)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), bool(false))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))))).x > injectionSwitch.y)))), true, false)), bool(bvec4(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8951.2176), _GLF_FUZZED(-58.43)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(616.750)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))))))).x > injectionSwitch.y)))), true, false)), true, true, false))))), false, true, false))), false, false))), true)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_11._f4.subgroup_base, (workgroup_base + _GLF_struct_replacement_11._f4.subgroup_base) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_11._f4.subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % _GLF_struct_replacement_6._f1.subgroup_size), (true ? ((subgroup_local_id + 1) % _GLF_struct_replacement_6._f1.subgroup_size) : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), injectionSwitch.y)), float(float(injectionSwitch.y))), injectionSwitch.y)))), true && (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))), _GLF_IDENTITY(! (! (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))), false || (! (! (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))))
            {
            }
           else
            {
             barrier();
            }
          }
         atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch)))).y))), float(_GLF_IDENTITY(_GLF_FUZZED(192.827), clamp(_GLF_FUZZED(192.827), _GLF_IDENTITY(_GLF_FUZZED(192.827), mix(float(_GLF_FUZZED(9.5)), float(_GLF_FUZZED(192.827)), bool(true))), _GLF_FUZZED(192.827)))), bool(false)))))))
          barrier();
         subgroupAll(_GLF_IDENTITY(false, false || (false)));
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) - 0)), 0 ^ (min(1, _GLF_IDENTITY(1, (1) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))))), clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) >> 0))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))), int(ivec3(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))), (0 & 98282), 0))))))) - 0)) >> 0, 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-42982))), 1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) ^ (1 ^ 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(ivec4(1, 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0))))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))))))))) - 0)) >> 0)))), 4, 64, 4);
         if(_GLF_DEAD(false))
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_FUZZED((88.59 + 2.4))), bvec2(false, false))).x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (false))) && true))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), true, true, true)), (bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), true, true, true))) || false)))))))), ((! (false))) && true))) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), false || (_GLF_IDENTITY(bool(bvec2(! (! (false)), true)), ! (! (bool(bvec2(! (! (false)), true))))))))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (false))), false || (((! (false))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)))))))))))))) || false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), (true) && true)) && true) && (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) || false))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))), false, false, true))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true)))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))) || false)) || false)), true && (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))))))) || false)))), false || (bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))))), false, false, true))))))))), false, true, true))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))) && true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), ((! (false))) && true)))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))) && (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))))), ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))) || false))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))) && (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))))), ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))))))) || _GLF_IDENTITY(false, ! (! (false)))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), bool(bvec4(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), false, false, false)))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupBarrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (4) << 0), 64, 4);
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))), (true ? float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))) : _GLF_FUZZED(5.7)))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))), (true ? float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))) : _GLF_FUZZED(5.7)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))), (true ? float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))) : _GLF_FUZZED(5.7)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))), (true ? float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, tan(tan(0.0)), 1.0, 0.0, 0.0, exp(0.0), length(vec2(0.0, 0.0)), 0.0)))))))) : _GLF_FUZZED(5.7))))) || false), false, true)))))))))
  barrier();
}
