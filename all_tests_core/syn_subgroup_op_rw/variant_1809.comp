#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) / 1))) + (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)))))), bool(bool(_injected_loop_counter != 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bool(! ((! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))))))) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))), ! (! ((! _GLF_IDENTITY((false), bool(bvec3((false), true, true))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), bool(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), false)))) && true)), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), bool(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), false)))) && true)), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))))), false || (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(false || (bool(! (false))), ! (_GLF_IDENTITY(! (false || (bool(! (false)))), bool(bvec4(! (false || (bool(! (false)))), false, true, false))))))), ! (! (bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(false || (bool(! (false))), ! (_GLF_IDENTITY(! (false || (bool(! (false)))), bool(bvec4(! (false || (bool(! (false)))), false, true, false))))))))))))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), bool(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))))), false)))) && true)), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(30162))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0, abs(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), abs(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.6), mix(float(_GLF_FUZZED(9.6)), float(_GLF_FUZZED(-7.3)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), abs(1.0), 1.0, 1.0, abs(abs(0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9081.8901) : 1.0)), 1.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(687.289)), float(float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), abs(1.0), 1.0, 1.0, abs(abs(0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9081.8901) : 1.0)), 1.0)), 1.0, 0.0, 1.0))), bool(true))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0, abs(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), (clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)) - 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))))), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0, abs(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 1.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(9611.9636)), min(float(_GLF_FUZZED(_GLF_IDENTITY(9611.9636, min(9611.9636, 9611.9636)))), float(_GLF_FUZZED(9611.9636)))), bool(false))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 0.0 + (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))), float(_GLF_FUZZED(-696.618)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 0.0 + (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(2410.2931))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-429.821)), float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(true))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-429.821)), float(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), bool(true))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-9126.9930)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) || false, ((false) || false) || false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))).x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) | (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) | (gl_WorkGroupSize))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize)), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))) | (gl_WorkGroupSize)))))))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : workgroup_base)), 0u, 1u, 1u))) + _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true)))) && true)) ? _GLF_FUZZED(workgroup_size) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u))) + subgroup_id * subgroup_size) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), (1u & 1u) * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))))))), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : workgroup_base)), 0u, 1u, 1u))) + _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true)))) && true)) ? _GLF_FUZZED(workgroup_size) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))), (1u & 1u) * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))), max(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))), _GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), uint(uvec3((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))))))), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), 1u))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u) * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u))))))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size), 1u)))), max(uint(_GLF_IDENTITY(uvec2((workgroup_base + subgroup_id * subgroup_size), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))), uint(_GLF_IDENTITY(uvec2((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (0u | 0u) + (subgroup_id * subgroup_size))), 1u), (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)) | (uvec2((workgroup_base + subgroup_id * subgroup_size), 1u)))))))) / 1u))))))) - 0u) + subgroup_local_id, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 1u), ((false ? _GLF_FUZZED(num_workgroup) : 1u)) | ((false ? _GLF_FUZZED(num_workgroup) : 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u)), max(1u, 1u)))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)))) * subgroup_size) + 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size)))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)))) * subgroup_size) + 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)))) * subgroup_size) + 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)))) * subgroup_size) + 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size))))) / 1u))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), 0u, 1u, 1u))))) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (99535u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))) ^ (subgroup_id)))) * subgroup_size) + 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size)))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * (1u | 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)))) * subgroup_size) + 0u), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size)), clamp(uint(uint(workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * subgroup_size)), (uint(uint(workgroup_base + subgroup_id * subgroup_size))) << 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id))) | 0u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id))) | 0u)) + 0u)) >> 0u))) * subgroup_size) + 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (99535u & 0u) ^ (subgroup_id)))) * subgroup_size) + 0u), uint(uint(workgroup_base + subgroup_id * subgroup_size))))) / 1u))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), 0u, 1u, 1u))))) + subgroup_local_id))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))))) | (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))))) | (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u)), 0u)) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) / 1u)), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))))) | (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))))) | (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u)), 0u)) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) / 1u))) ^ 0u))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))))))) | (((subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))))))) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), min(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 & -80053) ^ (1), ((0 & -80053) ^ (1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), max(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))) + 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), min(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 & -80053) ^ (1), ((0 & -80053) ^ (1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), max(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))) + 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))))))))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), min(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 & -80053) ^ (1), ((0 & -80053) ^ (1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), max(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))) + 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))))))))) * 1u)) | (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), min(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((0 & -80053) ^ (1), ((0 & -80053) ^ (1)) | (0 << _GLF_IDENTITY(int(1), int(1))))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), max(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), (((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))))) + 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))))))))))) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))), 0u + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1))), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))))))), min(((subgroup_local_id + _GLF_IDENTITY(1, (0 & _GLF_IDENTITY(-80053, (_GLF_IDENTITY(-80053, clamp(-80053, -80053, _GLF_IDENTITY(-80053, (-80053) | (-80053))))) / _GLF_IDENTITY(1, min(1, 1)))) ^ (1)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 & _GLF_IDENTITY(-80053, (_GLF_IDENTITY(-80053, (-80053) - 0)) >> 0)) ^ (1)), (subgroup_local_id + _GLF_IDENTITY(1, (0 & _GLF_IDENTITY(-80053, (_GLF_IDENTITY(-80053, (-80053) - 0)) >> 0)) ^ (1))) * 1u))), _GLF_IDENTITY(clamp(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(0 & -80053, 0 | (0 & -80053))) ^ (1))))), (_GLF_IDENTITY(clamp(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(0 & -80053, 0 | (0 & -80053))) ^ (1))))), (true ? _GLF_IDENTITY(clamp(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(0 & -80053, 0 | (0 & -80053))) ^ (1))))), 0u ^ (clamp(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(0 & -80053, 0 | (0 & -80053))) ^ (1))))))) : _GLF_FUZZED(workgroup_id)))) >> (0u | 0u))))))) % subgroup_size), (~ (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (0 & _GLF_IDENTITY(-80053, max(-80053, -80053))) ^ (1)), (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))))), min(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (0 & -80053) ^ (1)))), clamp(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | 0))), (0 & -80053) ^ _GLF_IDENTITY((1), ~ (~ ((1))))))), ((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (1)))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (0 & -80053) ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, _GLF_IDENTITY(1, (1) | (1)))))))), min(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-36129, 59519, 44311, 12530)[2]) : 1)), (0 & -80053) ^ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) | (1))))))), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | _GLF_IDENTITY((1), 0 | ((1)))))))))), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)), ~ (~ (int(ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)))))) >> 0)) & -80053) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, _GLF_IDENTITY(1, (1) | (1)))))) | ((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, _GLF_IDENTITY(1, (1) | (1))))))), int(ivec2((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec3(1, 0, 1))), 1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(ivec4((1), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(0, 0 | (0)))))))))))))))) % subgroup_size)) / 1u))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1)))), (0u ^ 0u) | (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1))))))) | (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1))))))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))))) + 1)))))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1))))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))) | (subgroup_local_id)) + 1)))))) | 0u)) - 0u, max((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1))))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))) | (subgroup_local_id)) + 1)))))) | 0u)) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1))))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))) | (subgroup_local_id)) + 1)))))) | 0u)) - 0u, 0u | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), clamp(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) | (subgroup_local_id)) + 1))))), (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), clamp(~ ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), ~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id, ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))) | (subgroup_local_id)) + 1)))))) | 0u)) - 0u)))))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ uvec4(0u, 0u, 0u, 0u)))))), min(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)))), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) << 0u) | ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)))))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)))), ((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))))) + 0u))))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))));
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) >> (_GLF_IDENTITY(1 ^ 1, max(_GLF_IDENTITY(1 ^ 1, (1 ^ 1) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-26088) : 1))))))), 1 ^ 1)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true)), true)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(true, false || (true)), false))) || false))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, _GLF_IDENTITY((0u | 1u) * ((virtual_gid) >> 0u), max(_GLF_IDENTITY((0u | 1u) * ((virtual_gid) >> 0u), clamp((0u | 1u) * ((virtual_gid) >> 0u), (0u | 1u) * ((virtual_gid) >> 0u), (0u | 1u) * ((virtual_gid) >> 0u))), _GLF_IDENTITY((0u | 1u) * ((virtual_gid) >> 0u), ((0u | 1u) * ((virtual_gid) >> 0u)) / 1u))))))))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))) || false)))))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (1u ^ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u)))))), uint(4u)), 0u, 0u)))), clamp(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u), (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u)) | (uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u))))))))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) >> (0u & 38197u)), uint(4u)))))) ^ (_GLF_IDENTITY(read, 0u ^ (read)))), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec3(false, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), false, false)), ! (! (bool(bvec3(false, false, false)))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))) && true)), false)), _GLF_IDENTITY(! (! (bool(bvec3(false, false, false)))), false || (! (! (bool(bvec3(false, false, false)))))))))))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
