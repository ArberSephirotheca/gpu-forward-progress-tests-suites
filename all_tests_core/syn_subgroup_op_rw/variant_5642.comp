#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 ivec3 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 ivec3 _f3;
 mat2x3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_20 {
 uvec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_19 {
 ivec3 _f0;
 vec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_18 {
 bool _f0;
 mat3x2 _f1;
 vec2 _f2;
 float _f3;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 uint workgroup_size;
 _GLF_struct_21 _f3;
 vec2 _f4;
 mat4x3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 vec3 _f1;
 int _f2;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 bvec2 _f1;
 uvec3 _f2;
 mat4 _f3;
 uint _f4;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 mat2 _f4;
 uvec2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
 _GLF_struct_14 _f1;
 int _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 vec2 _f1;
 mat3x2 _f2;
 vec3 _f3;
 uvec4 _f4;
 ivec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_10 {
 int _f0;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 uvec4 _f1;
 vec4 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 vec4 _f1;
 ivec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 ivec4 _f4;
 uvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 bvec4 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 vec3 _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat4x3 _f1;
 bool _f2;
 ivec4 _f3;
 float _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat4 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_1 {
 uint _f0;
 uint subgroup_id;
 vec2 _f1;
 ivec2 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat4x2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 mat3x2 _f2;
 float _f3;
 ivec4 _f4;
 _GLF_struct_1 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_13 _f4;
 bvec2 _f5;
 _GLF_struct_16 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.5)), bool(false))), injectionSwitch.y))) + 0.0)))))), true, false))))))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.5)), bool(false))), injectionSwitch.y))) + 0.0)))))), true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 | (0))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       do
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_3(_GLF_struct_0(mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), max(ivec3(1), _GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)))) >> ivec3(0, 0, 0)))), _GLF_IDENTITY(ivec3(1), ivec3(1, 1, 1) * (ivec3(1)))))), _GLF_IDENTITY(vec2(1.0), vec2(0.0, 0.0) + (vec2(1.0))), mat3x2(1.0), 1.0, _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(1, 1, 1, 1))))) / ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1), (false ? _GLF_FUZZED(ivec4(3117, -62481, -9897, -11560)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1), (ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1)) << ivec4(0, 0, 0, 0)))), min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1), (false ? _GLF_FUZZED(ivec4(3117, -62481, -9897, -11560)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1), (ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1), (false ? _GLF_FUZZED(ivec4(3117, -62481, -9897, -11560)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1), (ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1)) << ivec4(0, 0, 0, 0)))))) << _GLF_IDENTITY(ivec4(3), ivec4(3)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1), ~ (~ ((1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))) >> 0), max(~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), ~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), 1 * (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))) >> 0), max(~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), ~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))))))))), 1, 1, _GLF_IDENTITY(1, ~ (~ (1)))) << _GLF_IDENTITY(ivec4(3), ivec4(3)), max(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << 0), 1, 0)))) - 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << 0), 1, 0)))) - 0)))), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))), 1, 1, 1) << _GLF_IDENTITY(ivec4(3), ivec4(3)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, int(int(1))))), 0 + (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(int(1))))))))), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, int(int(1))))))))), (false ? _GLF_FUZZED(-12534) : _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, int(int(1))))))))), 1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))) << 0)), clamp(min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))) << 0)), min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))) << 0)), min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))) << 0)))))) << _GLF_IDENTITY(ivec4(3), ivec4(3))))) << ivec4(0, 0, 0, 0))) >> _GLF_IDENTITY(ivec4(3), ivec4(_GLF_IDENTITY(3, (3) | (3))))))) - ivec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(0.8)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_1(1u, gl_SubgroupID, vec2(1.0), ivec2(1), bvec4(true), vec4(1.0)), _GLF_struct_2(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec3(13604, -18684, 20059)) : _GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(35839, -41154, -99566)) : _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1))))), min(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(13604, -18684, _GLF_IDENTITY(20059, (20059) | 0)), clamp(ivec3(13604, -18684, _GLF_IDENTITY(20059, (20059) | 0)), _GLF_IDENTITY(ivec3(13604, -18684, _GLF_IDENTITY(20059, (20059) | 0)), ~ (_GLF_IDENTITY(~ (ivec3(13604, -18684, _GLF_IDENTITY(20059, _GLF_IDENTITY((20059), ((20059)) << 0) | 0))), (~ (ivec3(13604, -18684, _GLF_IDENTITY(20059, (20059) | 0)))) / ivec3(1, 1, 1)))), ivec3(13604, -18684, _GLF_IDENTITY(_GLF_IDENTITY(20059, (20059) | 0), (_GLF_IDENTITY(20059, (20059) | 0)) ^ (0 | 0)))))) : ivec3(1), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec3(13604, -18684, 20059)) : _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ~ (~ (_GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, 0, 0))))), min(ivec3(1), ivec3(1)))) / ivec3(1, 1, 1)))))), 1)), ivec3(ivec4(ivec3(ivec4(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec3(_GLF_IDENTITY(13604, max(13604, _GLF_IDENTITY(13604, max(13604, _GLF_IDENTITY(13604, ~ (~ (13604))))))), -18684, 20059)) : ivec3(1), min(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec3(13604, -18684, _GLF_IDENTITY(20059, (20059) << 0))) : ivec3(1), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), false || (! (! (_GLF_IDENTITY(false, true && (false))))))) ? _GLF_FUZZED(ivec3(13604, -18684, 20059)) : _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), ~ (~ (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))))))) / ivec3(1, 1, 1)))))), 1)), 1)))), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat2x4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0)), float(mat2x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), float(mat2x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED((-664.568 / -24.89))), mix(float((_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED((-664.568 / _GLF_IDENTITY(-24.89, (_GLF_IDENTITY(-24.89, (false ? _GLF_FUZZED(4.6) : -24.89))) - 0.0))))), float(_GLF_FUZZED(7.7)), bool(false))))), float(_GLF_FUZZED(5.0)), bool(false)))) + 0.0)), mat2x4(1.0), mat2x3(1.0))), ivec3(1), _GLF_struct_6(_GLF_struct_4(bvec3(true), mat4x3(1.0), true, _GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), 1.0), _GLF_struct_5(uvec2(1u), ivec4(1), mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)), (true ? vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)) : _GLF_FUZZED(vec3(9.1, -343.324, 9.8))))) / vec3(1.0, 1.0, 1.0)), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(97.34)))), 0.0, 0.0)), mix(vec3(_GLF_FUZZED(-858.159), _GLF_FUZZED(5.2), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))[2]), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(0.0, (0.0) / 1.0))))) - 0.0)), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))[0], (_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(780.891)), bool(false))), (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(1.0, 1.0))), clamp(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(1.0, 1.0))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(1.0, 1.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(1.0, 1.0))), (true ? vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(1.0, 1.0))) : _GLF_FUZZED(vec3(939.277, -13.16, 298.836))))))) - vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))[1], _GLF_FUZZED(_GLF_IDENTITY(-1.6, float(mat3(-1.6, 1.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))), bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))), (false ? _GLF_FUZZED(vec3(-42.25, _GLF_IDENTITY(81.47, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(81.47, 0.0, 1.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), transpose(transpose(mat4(81.47, 0.0, 1.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_FUZZED(466.473), (_GLF_IDENTITY(_GLF_FUZZED(466.473), mix(float(_GLF_FUZZED(466.473)), float(_GLF_FUZZED(308.424)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(81.47, 0.0, 1.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), transpose(transpose(mat4(81.47, 0.0, 1.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), float(vec4(float(_GLF_IDENTITY(mat4(81.47, 0.0, 1.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), transpose(transpose(mat4(81.47, 0.0, 1.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), 0.0, 1.0, 0.0)))))), 5812.5126)) : _GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0)), max(mat3(1.0) * (vec3(1.0)), mat3(1.0) * (vec3(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? -186.295 : -364.303))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0)))), 0.0, 0.0)), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? -186.295 : -364.303))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0)))), 0.0, 0.0)))))))), 1u, uvec3(1u)), ivec2(1)), _GLF_struct_9(_GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), (ivec2(1)) | ivec2(0, 0)), mat2x4(1.0), mat3x2(1.0), uvec4(1u), ivec4(1), uvec3(1u), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), bvec4(true), _GLF_struct_8(bvec3(true), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0), vec4(mat2x3(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(((- -5613.2460)))), (true ? float(_GLF_FUZZED(((- -5613.2460)))) : _GLF_FUZZED(5.5))), bool(false)))), 1.0, 0.0))), 0.0, 0.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(vec4(1.0), vec4(1.0))) * mat4(1.0))) - vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.3)), bool(false)))), float(_GLF_FUZZED(-2083.7763)), bool(false))), 0.0, 0.0)), (max(vec4(1.0), vec4(1.0))) * mat4(1.0)), max(vec4(1.0), vec4(1.0))), min(min(_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(vec4(1.0), vec4(1.0))) * mat4(1.0)), max(vec4(1.0), vec4(1.0))), min(_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(vec4(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(7.4, 8351.9847, -6024.2982, -678.048, 8.1, -5178.1860, -573.150, 2.8, 20.95, 8.8, -3.3, 6912.5032, -80.59, -39.02, -0.1, -22.77)) : mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)))), vec4(1.0))) * mat4(1.0)), max(vec4(1.0), vec4(1.0))))))), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, (_GLF_IDENTITY((1) * 1, (true ? _GLF_IDENTITY((1) * 1, ~ (~ ((1) * 1))) : _GLF_FUZZED(46216)))) | 0))), ivec2(1))), _GLF_struct_13(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), (true ? vec4(1.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(-2.8, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-2.8, mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), mix(float(_GLF_IDENTITY(-2.8, mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), float(_GLF_FUZZED(90.76)), bool(false)))), ((_GLF_IDENTITY(-2.8, _GLF_IDENTITY(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), (mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true, false)))))) / 1.0)))) + 0.0) - 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-2.8, mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), mix(float(_GLF_IDENTITY(-2.8, mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), float(_GLF_FUZZED(_GLF_IDENTITY(90.76, float(_GLF_IDENTITY(mat3x2(90.76, 1.0, 0.0, tan(0.0), 1.0, 1.0), transpose(transpose(mat3x2(90.76, 1.0, 0.0, tan(0.0), 1.0, 1.0)))))))), bool(false)))), ((_GLF_IDENTITY(-2.8, _GLF_IDENTITY(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true, false))))), _GLF_IDENTITY(float(mat3(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true, false))))), 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))), 1.0, 1.0)), clamp(float(mat3(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true, false))))), 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))), 1.0, 1.0)), _GLF_IDENTITY(float(mat3(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true, false))))), 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))), 1.0, 1.0)), (float(mat3(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true, false))))), 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))), 1.0, 1.0))) + 0.0), float(mat3(mix(float(_GLF_FUZZED(411.998)), float(-2.8), bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), true, false))))), 0.0, 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0))), 1.0, 1.0)))))) / 1.0)))) + 0.0) - 0.0))), 1.0, 490.181, 89.27)))), max(_GLF_IDENTITY(vec4(1.0), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(157754u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + _GLF_IDENTITY((float(vec4(1.0, 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY((float(vec4(1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY((float(vec4(1.0, 1.0, 1.0, 1.0))), 1.0 * ((float(vec4(1.0, 1.0, 1.0, 1.0)))))) / 1.0), (float(vec4(1.0, 1.0, 1.0, 1.0))), (float(vec4(1.0, 1.0, 1.0, 1.0))))))), 490.181, 89.27)), mix(vec4((_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[0], (_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[1], (_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[2], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[3], max((_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[3], (_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[3])), (_GLF_IDENTITY((_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), clamp(float(vec4(1.0, 1.0, 1.0, 1.0)), float(vec4(1.0, 1.0, 1.0, 1.0)), float(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0 + (float(vec4(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2490.2371))))), 1.0, 1.0))))), 490.181, 89.27)))[3], max((_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[3], (_GLF_FUZZED(vec4(-2.8, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, 1.0, 1.0)), 0.0 + (float(vec4(1.0, 1.0, 1.0, 1.0))))), 490.181, 89.27)))[3]))) + 0.0)), vec4(_GLF_FUZZED(float(66117u)), _GLF_IDENTITY(_GLF_FUZZED(float(1118u)), max(_GLF_IDENTITY(_GLF_FUZZED(float(1118u)), (true ? _GLF_FUZZED(float(1118u)) : _GLF_FUZZED(-69.08))), _GLF_IDENTITY(_GLF_FUZZED(float(1118u)), (_GLF_FUZZED(float(1118u))) + 0.0))), _GLF_FUZZED(9.4), _GLF_FUZZED(2269.0158)), bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)), (_GLF_IDENTITY(true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)), (false ? _GLF_FUZZED((mat2x4(-41.88, 2.9, -423.791, -1.3, -0.7, 28.96, 428.764, -6.4) * injectionSwitch)) : true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27))))) * sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), mix(vec4(_GLF_FUZZED(-37.37), _GLF_FUZZED(-5.6), _GLF_FUZZED(21.38), (_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 4.6)), _GLF_FUZZED(73.86)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))) ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)), mix(vec4((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))[0], _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? vec4(1.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(-58.38) : _GLF_IDENTITY(-2.8, float(mat2x3(-2.8, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 490.181, 89.27)))[1], _GLF_IDENTITY(float(mat4((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? vec4(1.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(-58.38) : _GLF_IDENTITY(-2.8, float(mat2x3(-2.8, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 490.181, 89.27)))[1], sqrt(0.0), determinant(mat2(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(-7.6) : float(mat4((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? vec4(1.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(-58.38) : _GLF_IDENTITY(-2.8, float(mat2x3(-2.8, 0.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 490.181, 89.27)))[1], sqrt(0.0), determinant(mat2(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? vec4(1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)), mix(vec4((_GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))[0], (_GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))[1], (_GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))[2], _GLF_FUZZED((false ? vec4(1815.1428, -66.29, -546.811, -37.89).g : 76.65))), vec4(_GLF_FUZZED(-3.5), _GLF_FUZZED(-5226.3959), _GLF_FUZZED(2.5), (_GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))[3]), bvec4(false, false, false, true))))[2], _GLF_FUZZED((- -97.32))), vec4(_GLF_FUZZED(4.6), _GLF_FUZZED(-94.21), _GLF_FUZZED(-7393.4047), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))[3]), bvec4(false, false, false, true)))) * vec4(1.0, 1.0, 1.0, 1.0)), max(true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, _GLF_IDENTITY(490.181, _GLF_IDENTITY(float(mat3x4(490.181, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), max(float(mat3x4(490.181, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), float(mat3x4(490.181, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 89.27)), true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0)), min(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), transpose(transpose(transpose(mat4(1.0))))))) * (vec4(1.0)), mat4(1.0) * (vec4(1.0))))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))))[_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) + 0), 0, 1, 0)))], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(length(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(min(10.49, 6.1)) : 0.0))), float(_GLF_FUZZED(4.8)), bool(false))), 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-9276.6178)), float(length(vec4(0.0, 0.0, 0.0, 0.0))), bool(true))), 0.0)))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))))[1], (_GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(-2.8, 1.0, 490.181, 89.27)))))[2], _GLF_FUZZED(-7022.8768)), bvec4(true, true, true, false))))), _GLF_struct_10(1), _GLF_struct_11(vec3(1.0), vec2(1.0), mat3x2(1.0), vec3(1.0), uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (ivec3(1))), ivec3(1), ivec3(1))), (ivec3(1)) << (_GLF_IDENTITY(ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8)), _GLF_IDENTITY(ivec3(ivec3(ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8)))), (ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8))))) >> ivec3(0, 0, 0))))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(17.28, -610.724, 2.2, -23.33)) : mat2(1.0)))) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_struct_12(uvec3(1u))), bvec2(true), _GLF_struct_16(vec4(1.0), _GLF_struct_14(ivec2(1), mat4x3(1.0), mat2x3(1.0), bvec4(true), mat2(1.0), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(1u), 1u), (uvec3(uvec2(1u), 1u)) ^ uvec3(0u, 0u, 0u)))))), mat2x3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), clamp(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(0.0)))))), 1, _GLF_struct_15(bvec4(true), bvec2(true), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u))), mat4(1.0), 1u)));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, true, false))), false, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec2(bool(bvec4(false, true, true, false)), false))))), ((false)) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))))), (bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))))) || false))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, false))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), false || ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true, false))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false))))))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ 0))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, _GLF_IDENTITY(1, (1) | 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, _GLF_IDENTITY(1, (1) | 0))), 0 ^ (_GLF_IDENTITY(int(ivec2(0, _GLF_IDENTITY(1, (1) | 0))), max(int(ivec2(0, _GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(int(ivec2(0, _GLF_IDENTITY(1, (1) | 0))), 0 ^ (int(ivec2(0, _GLF_IDENTITY(1, (1) | 0))))))))))) | (_GLF_IDENTITY(0, int(ivec2(0, _GLF_IDENTITY(1, (1) | 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), 0 ^ (0 << _GLF_IDENTITY(int(4), int(4))))))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_22(_GLF_struct_18(true, mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-7.6, min(-7.6, _GLF_IDENTITY(-7.6, (-7.6) + 0.0)))) : max(1.0, 1.0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-7.6) : max(1.0, 1.0), (false ? _GLF_FUZZED(-7.6) : max(1.0, 1.0)) / 1.0), false ? _GLF_FUZZED(-7.6) : max(1.0, 1.0)))))), log(1.0), 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, log(1.0), 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, log(1.0), 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0) : _GLF_FUZZED(mat4(-5.1, -50.89, 2616.8856, 0.8, -91.77, 42.81, 0.1, -4163.0613, 7.2, -4.5, -162.932, -4.9, 371.348, 544.149, 720.539, 3676.5737))))))), clamp(max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true)))), max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true)))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true)))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))), max(max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true)))), max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(true))))))) - 0.0)))), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), 0.0 + (max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0)))) / 1.0), 1.0, 1.0, determinant(mat3(determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, length(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0))), 1.0, 0.0, 0.0))), max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0))) - 0.0), 1.0, 0.0, 0.0, 0.0))))), log(1.0), 0.0, 1.0, 0.0, 0.0))))))), vec2(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(1.0, 1.0)) : _GLF_FUZZED(18.48)))) * _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (true ? max(0.0, 0.0) : _GLF_FUZZED(-8680.2588)))), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y)), (vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y))) - sqrt(vec3(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, sqrt(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), vec3(0.0, 0.0, 1.0))))), _GLF_struct_19(ivec3(1), vec2(1.0), mat4x2(1.0)), _GLF_struct_20(uvec3(1u), mat2x4(1.0)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, _GLF_struct_21(ivec3(_GLF_IDENTITY(1, 0 + (1))), bvec3(true), mat4x3(1.0), ivec3(1), mat2x3(1.0), mat2x3(1.0)), vec2(1.0), mat4x3(1.0), bvec4(_GLF_IDENTITY(true, true && (true)))), vec3(1.0), 1);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_struct_replacement_23._f0.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((63.75)), (_GLF_IDENTITY(_GLF_FUZZED((63.75)), min(_GLF_FUZZED((63.75)), _GLF_FUZZED((63.75))))) / 1.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.8)), bool(false)), min(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.8)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.8)), bool(false)) : _GLF_FUZZED(726.626))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.8)), bool(false))))), false, true), true))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_17._f0._f5.subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_17._f0._f5.subgroup_id * subgroup_size, 1u * (_GLF_struct_replacement_17._f0._f5.subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(98151u))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (! (true && (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)), 0.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 1.0, 0.0)) - mat4(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                    }
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true))))))))))), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true))))))))))), true, false, true))))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), clamp((4), (4), (4))))) >> 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 0, (0 ^ 1))), 0 + (int(ivec3(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(0, 0 ^ (0)), (0 ^ 1)))))), 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(sign(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) : _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), int(int((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5))), int(5)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))) || false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), _GLF_IDENTITY(uint(1), max(uint(1), uint(1)))), (min(uint(1), _GLF_IDENTITY(uint(1), max(uint(1), uint(1))))) - 0u)), 4, 64, 4);
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, true)))))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(uvec2(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 1u)), min(uint(uvec2(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 1u)), uint(uvec2(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 1u)))))))), 1u), min(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) ^ 0u))), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), _GLF_IDENTITY(1u, (1u) ^ 0u)), uvec3(uvec3(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), 0u ^ (clamp(subgroup_size, subgroup_size, subgroup_size)))) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) - 0u)))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u)))))))), ~ (~ _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) - 0u))), max(~ ((subgroup_size)), ~ ((subgroup_size)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u), 1u, 1u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u), 1u, 1u, 1u))))))))) - 0u))), max(~ ((subgroup_size)), ~ ((subgroup_size))))) + 0u))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               return;
              }
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) >> 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(0.0), 1.0))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(0.0), 1.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(0.0), 1.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(0.0), 1.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(0.0), 1.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))) + 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))) + 0.0) > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))) + 0.0) > injectionSwitch.y)))), false, false, true))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))), injectionSwitch.x))) + 0.0) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))))) + 0.0) > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))))) + 0.0) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
              continue;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
          }
         else
          {
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.2)), bool(false)))), float(_GLF_FUZZED(-70.87)), bool(false))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, abs(0.0)))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.2)), bool(false)))), float(_GLF_FUZZED(-70.87)), bool(false))), 0.0), clamp(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.2)), bool(false)))), float(_GLF_FUZZED(-70.87)), bool(false))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.2)), bool(false)))), float(_GLF_FUZZED(-70.87)), bool(false))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.2)), bool(false)))), float(_GLF_FUZZED(-70.87)), bool(false))), 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), 0.0, 0.0))), 0.0), (clamp(0.0, 0.0, 0.0)) - 0.0), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) + 0.0)))));
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        continue;
       atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read, 1u * (_GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, (read) | (read)))))))), ~ (~ (_GLF_IDENTITY(~ (~ (read)), _GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((~ (read)), ((~ (read))) + 0u))), clamp(_GLF_IDENTITY(~ (~ (~ (~ (read)))), (~ (~ (~ (~ (read))))) >> 0u), ~ (~ (~ (~ (read)))), ~ (~ (~ (~ (read))))))))))), 4, 64, 4);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))));
     if(_GLF_DEAD(false))
      break;
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), (bool(bvec4(false, true, false, false))) || false))))
              continue;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (false), true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (false), true)))))), false || (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (false), true))))))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6897.8038) : injectionSwitch.x)))), 1.0, 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-3.0)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) / 1.0) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x, mix(float(_GLF_FUZZED(-395.696)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0))))))).x), float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0))))))).x), (true ? float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0))))))).x) : _GLF_FUZZED(-59.65))), 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) * cos(0.0)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), mix(float(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))), float(_GLF_FUZZED(-398.902)), bool(false))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), bool(true))))), 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(7.9)), bool(false))), float(_GLF_FUZZED(-4898.6584)), bool(false))), 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-2784.6020 - 9112.1975)) : 1.0)), sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(17.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0, sqrt(1.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0)))), bool(true))))), min(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8648.6113) : 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), log(1.0), log(1.0))), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((log(1.0)), mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY((log(1.0)), max((log(1.0)), (log(1.0))))), bool(true))) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), (_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), cos(0.0) * (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))))))), log(1.0))), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.6)), bool(false)))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))))), exp(sin(0.0)), 1.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), mix(float(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))), float(_GLF_FUZZED(-398.902)), bool(false))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), bool(true))))), 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(7.9)), bool(false))), float(_GLF_FUZZED(-4898.6584)), bool(false))), 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-2784.6020 - 9112.1975)) : 1.0)), sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(17.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0, sqrt(1.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0)))), bool(true))))), min(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8648.6113) : 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), log(1.0), log(1.0))), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((log(1.0)), mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY((log(1.0)), max((log(1.0)), (log(1.0))))), bool(true))) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), (_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), cos(0.0) * (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))))))), log(1.0))), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.6)), bool(false)))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))))), exp(sin(0.0)), 1.0)) * mat3(1.0))), mix(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0), 1.0, sqrt(1.0), log(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4450.7584) : _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.4) : 0.0)), 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)))), mix(float(_GLF_FUZZED(4.6)), float(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))))), bool(true))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), min(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), 1.0 * (dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0))))) * abs(vec2(1.0, 1.0)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), min(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))))), dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), max(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + 0.0))))), 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + 0.0))))), 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0))))) * abs(vec2(1.0, 1.0)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0) : _GLF_FUZZED(mat4(-8581.8916, _GLF_IDENTITY(-45.47, clamp(_GLF_IDENTITY(-45.47, sqrt(0.0) + (-45.47)), _GLF_IDENTITY(-45.47, (-45.47) / 1.0), -45.47)), -4450.5098, 18.90, -9.2, _GLF_IDENTITY(9.6, min(9.6, 9.6)), 4.6, -8192.4163, 1.0, 7.5, 4.6, -76.01, 5.0, -6.2, -731.107, -25.38))))) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), min(float(float(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), float(float(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), clamp(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0), float(mat4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))) * 1.0))), 0.0)), 0.0)), length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED((2.9 * 2009.8088))), float(log(1.0)), bool(true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))))), exp(sin(0.0)), 1.0))), float(_GLF_FUZZED(49.88)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), true, false))))))))) > injectionSwitch.y, true, _GLF_IDENTITY(true, (true) && true))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6897.8038) : injectionSwitch.x)))), 1.0, 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-3.0)), _GLF_IDENTITY(bool(false), (bool(false)) || false))))) / 1.0) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x, mix(float(_GLF_FUZZED(-395.696)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0))))))).x), float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0))))))).x), (true ? float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(vec4((injectionSwitch) / sqrt(vec2(1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0), 0.0, 0.0))))))).x) : _GLF_FUZZED(-59.65))), 0.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) * cos(0.0)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), mix(float(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))), float(_GLF_FUZZED(-398.902)), bool(false))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), bool(true))))), 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(7.9)), bool(false))), float(_GLF_FUZZED(-4898.6584)), bool(false))), 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-2784.6020 - 9112.1975)) : 1.0)), sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(17.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0, sqrt(1.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0)))), bool(true))))), min(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8648.6113) : 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), log(1.0), log(1.0))), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((log(1.0)), mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY((log(1.0)), max((log(1.0)), (log(1.0))))), bool(true))) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), (_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), cos(0.0) * (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))))))), log(1.0))), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.6)), bool(false)))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))))), exp(sin(0.0)), 1.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), mix(float(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))), float(_GLF_FUZZED(-398.902)), bool(false))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), bool(true))))), 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED(7.9)), bool(false))), float(_GLF_FUZZED(-4898.6584)), bool(false))), 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-2784.6020 - 9112.1975)) : 1.0)), sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(17.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0, sqrt(1.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0)))), bool(true))))), min(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8648.6113) : 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), log(1.0), log(1.0))), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((log(1.0)), mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY((log(1.0)), max((log(1.0)), (log(1.0))))), bool(true))) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), max(_GLF_IDENTITY(log(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false))), (_GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-251.592)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), cos(0.0) * (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), vec3(mat3(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), 1.0, 1.0, log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))))))), log(1.0))), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.6)), bool(false)))), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))))), exp(sin(0.0)), 1.0)) * mat3(1.0))), mix(float(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0), 1.0, sqrt(1.0), log(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4450.7584) : _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.4) : 0.0)), 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)))), mix(float(_GLF_FUZZED(4.6)), float(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))))), bool(true))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), min(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), 1.0 * (dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0))))) * abs(vec2(1.0, 1.0)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), min(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))))), dot(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), max(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + 0.0))))), 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + 0.0))))), 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0, 0.0))))) * abs(vec2(1.0, 1.0)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0) : _GLF_FUZZED(mat4(-8581.8916, _GLF_IDENTITY(-45.47, clamp(_GLF_IDENTITY(-45.47, sqrt(0.0) + (-45.47)), _GLF_IDENTITY(-45.47, (-45.47) / 1.0), -45.47)), -4450.5098, 18.90, -9.2, _GLF_IDENTITY(9.6, min(9.6, 9.6)), 4.6, -8192.4163, 1.0, 7.5, 4.6, -76.01, 5.0, -6.2, -731.107, -25.38))))) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), min(float(float(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), float(float(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0)))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), clamp(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0), float(mat4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))) * 1.0))), 0.0)), 0.0)), length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), log(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED((2.9 * 2009.8088))), float(log(1.0)), bool(true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))) ? 0.0 : _GLF_FUZZED(8.0))), 0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) : _GLF_FUZZED(-2.9))))), exp(sin(0.0)), 1.0))), float(_GLF_FUZZED(49.88)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), true, false))))))))) > injectionSwitch.y, true, _GLF_IDENTITY(true, (true) && true))))))))))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, ((0) / 1) - 0)), 0 ^ (0 | _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, ((0) / 1) - 0)))))); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))) && true), _GLF_IDENTITY(bool(bvec2((bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)), injectionSwitch)).y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))), true, false, true)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))), _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)) && true))), (_GLF_WRAPPED_LOOP(false)) || false))), bool(bvec4(! (! (_GLF_WRAPPED_LOOP(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))) || false))))))));
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), false))))));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))));
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - abs(0.0)), injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - abs(0.0)), injectionSwitch.y))), true, true)), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - abs(0.0)), injectionSwitch.y))), true, true))) && true)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), int(ivec2(1 << _GLF_IDENTITY(int(3), int(3)), 1))))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
}
