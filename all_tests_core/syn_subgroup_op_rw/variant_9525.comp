#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 bvec4 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 uint workgroup_id;
 bvec3 _f2;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 _GLF_struct_1 _f1;
 mat3x4 _f2;
 uint _f3;
 mat2x4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec3(_GLF_IDENTITY(bool(false), false || (bool(false))), true, true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))), bool(bvec3((! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))), true, false))))))))))), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))), bool(bvec3((! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))), true, false))))))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))), bool(bvec3((! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))), true, false))))))))))), true))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), true, true))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), true, true)))))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((139882u * 36261u)))), vec2(_GLF_FUZZED(-91.39), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((139882u * 36261u)))), vec2(_GLF_FUZZED(-91.39), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((139882u * 36261u)))), vec2(_GLF_FUZZED(-91.39), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((139882u * 36261u)))), vec2(_GLF_FUZZED(-91.39), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((139882u * 36261u)))), vec2(_GLF_FUZZED(-91.39), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 1))]))), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((139882u * 36261u)))), vec2(_GLF_FUZZED(-91.39), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat4(1.0), _GLF_struct_1(_GLF_struct_0(bvec4(true)), mat4(1.0), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, bvec3(true)), mat3x4(1.0), 1u, mat2x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_2._f1.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, false, true))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), false, false, true))), true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)) || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec3(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) - 0u) + (subgroup_base)), 1u, 0u))) + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u)) ^ 0u) : _GLF_FUZZED(bitfieldReverse(workgroup_base))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base), 0u | (min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base), 0u | (min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u), workgroup_base), 0u | (min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base))))) / 1u)))))), 0u | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), workgroup_base)), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base))), (workgroup_base))) >> 0u), workgroup_base)))))), clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))), uint(uvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_base)), 0u, 1u))))), min(~ (_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))))))))))), false || (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false), bvec2(bvec2(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false)))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))))))))))), false || (injectionSwitch.x < injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)))) && true)) ? workgroup_base : _GLF_FUZZED(workgroup_base)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_base)))))))), uint(uvec4(workgroup_base, 0u, 0u, 0u))), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | (workgroup_base)), workgroup_base)))) + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))) + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, clamp(2, 2, 2)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(log(1.0), 1.0)), dot(vec2(1.0, 0.0), vec2(log(1.0), 1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 0u), min(uvec2(subgroup_local_id % 2, 0u), uvec2(subgroup_local_id % 2, 0u))), max(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), min(uvec2(subgroup_local_id % 2, 0u), uvec2(subgroup_local_id % 2, 0u))), _GLF_IDENTITY(uvec2(subgroup_local_id % 2, 0u), min(uvec2(subgroup_local_id % 2, 0u), uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2, 0u)))))))) ^ 0u)) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), ! (! (bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))), (bool(_GLF_IDENTITY(bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), ! (! (bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))) && true)), true && (false || (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))))) && true)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), ! (! (bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))), (bool(_GLF_IDENTITY(bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), ! (! _GLF_IDENTITY((bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))), false || ((bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))))) && true)), true && (false || (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))))) && true)))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), ! (! (bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))), (bool(_GLF_IDENTITY(bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), ! (! (bool(false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))) && true)), true && (false || (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))))) && true))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, cos(0.0), 0.0, 1.0, length(0.0), 0.0, 0.0, 1.0))), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0))), 1.0, 0.0))) - 0.0)) - 0.0)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(54.11), mix(float(_GLF_FUZZED(54.11)), float(_GLF_FUZZED(vec4(0.4, 364.088, -4.2, -4.7).t)), bool(false))) : 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 0.0))), (vec3(1.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-730.694)), (float(_GLF_FUZZED(-730.694))) + 0.0), bool(false))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-1.8))), 0.0))), 1.0, 0.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0))) - 0.0)) - 0.0)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (false) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y) || false), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y) || false), true, true, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, _GLF_IDENTITY(-822.617, (-822.617) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), (true ? _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))) : _GLF_FUZZED((-992.216)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8248.4484) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(57.24)))), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(57.24)))), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))) / vec2(1.0, 1.0))))).x > injectionSwitch.y) || false), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))))), 1.0, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9777.6410, -1.1, -5781.3956, 40.31, 71.88, 1.3, -3336.1085, 1.9, -9.3, -822.617, 5.6, -7772.7486)) : mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), 0.0, exp(0.0), 1.0, 1.0, 1.0))))))).x > injectionSwitch.y) || false), true, true, true))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) | (uint(1))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)), _GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)), _GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)), _GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (! (! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))) || false))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, false))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))) | (uint(1)))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(uint(1), 0u | (uint(1)))))), (true ? uint(uint((_GLF_IDENTITY(uint(1), 0u | (uint(1)))))) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(6u), uint(6u)))) | (uint(1)))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), _GLF_IDENTITY(uint(1), min(uint(1), uint(1))))), 0u | (uint(1)))))), (uint(uint((_GLF_IDENTITY(uint(1), 0u | (uint(1))))))) | (uint(uint((_GLF_IDENTITY(uint(1), 0u | (uint(1))))))))))), (_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), max(_GLF_IDENTITY(uint(1), 0u | (uint(1))), _GLF_IDENTITY(uint(1), 0u | (uint(1)))))), uint(uint((_GLF_IDENTITY(uint(1), 0u | (uint(1)))))))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u | (uint(1)))), uint(uint((_GLF_IDENTITY(uint(1), 0u | (uint(1))))))))), (_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (0u) | (0u)) | (uint(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)))))), uint(uint((_GLF_IDENTITY(uint(1), 0u | (uint(1)))))))))) << 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(742.261) : _GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)), 1u, 1u, (0u | 0u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(read) : subgroup_base))) : _GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20979) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))))))))), uint(1)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), (true ? _GLF_IDENTITY(uint(1), (uint(1)) | 0u) : _GLF_FUZZED(174397u)))) ^ 0u), uint(1), uint(1)))))) | (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, min(0u, 0u))), uint(1), uint(1)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20979) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))))), uint(1)), ~ (~ (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20979) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))))), uint(1))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))))), (uint(1)) | 0u), uint(1), uint(1)), ~ (~ (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)), (true ? clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)) : _GLF_FUZZED((++ subgroup_base)))))))))), uint(uint((_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20979) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))))), uint(1)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)), ~ (~ (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)))))) | (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)))))))))))) | ((_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20979) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))))), uint(1)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)), ~ (~ (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)))))) | (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20979) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))))), uint(1)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)), ~ (~ (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)))))) | (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)))))) | 0u)))))))), 1u, 1u, (0u | 0u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(read), (_GLF_FUZZED(read)) | 0u) : subgroup_base))) : _GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) / (1 ^ 0)) : _GLF_FUZZED(34613))), 1, 1))), 0u | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)), ~ (~ (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), uint(1), uint(1)))))) | (clamp(_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u))), uint(1), uint(1)))))))))), 1u, 1u, (0u | 0u))))) - 0u))))), min(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), (uint(1)) * 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 1u * (_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), 1u, 1u, (0u | 0u)))))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))), (_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(min((uint(1)), (uint(1))), (true ? min((uint(1)), (uint(1))) : _GLF_FUZZED(uvec3(61437u, 88857u, 54105u)[2]))))) - 0u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, max(1, 1))), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))), min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), uint(uvec2((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), 1u))), (~ (uint(1)))))), 1u, 1u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), uint(uvec2((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), 1u))), (~ (uint(1)))))), 1u, 1u, (0u | 0u)), (uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), uint(uvec2((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), 1u))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))) >> uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))), min(uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))), uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u)))))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))), min(uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) - 0u)))), min(~ (uint(1)), _GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) | (~ (uint(1)))))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))), min(uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(1)), max(~ (uint(1)), ~ (uint(1))))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u))), uint(uvec4(_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((~ (uint(1))), min((_GLF_IDENTITY(~ (uint(1)), max(_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))), ~ (uint(1))))), (~ (uint(1)))))), 1u, 1u, (0u | 0u)))))))))))))), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.7))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.7) : injectionSwitch.y))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, sqrt(1.0)), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat4x3(-24.60, -5.2, 886.790, -1.8, -52.79, 9.2, -8.4, -0.7, -48.20, -4038.8897, -9147.6057, -1.1)))))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
