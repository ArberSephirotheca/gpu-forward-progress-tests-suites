#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4163.9011), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).y, (injectionSwitch.x < injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-291.785)), float(injectionSwitch.x), bool(true)))) / 1.0) < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)), bvec2(false, false))).x < injectionSwitch.y) || false)))))), false || (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y) || false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(_GLF_FUZZED(9.1)), float(float(float(injectionSwitch.x))), bool(true))))), float(_GLF_FUZZED(85.03)), bool(false))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, ((injectionSwitch.x < injectionSwitch.y) || false) && true), true)))))), true)), (bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))) || false))), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), ! _GLF_IDENTITY((! ((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), false || ((! ((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))))), ! (! (_GLF_IDENTITY((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), ! (! ((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false || (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(1.0, 1.0) * (vec2(injectionSwitch)))), mat2(1.0) * (vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(1.0, 1.0) * (vec2(injectionSwitch))))))), injectionSwitch)).x < injectionSwitch.y) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4163.9011), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.4)))), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (injectionSwitch.x < injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-291.785)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), true && (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(0.0), 0.0))).x, mix(float(_GLF_FUZZED(-291.785)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-291.785)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))), float(mat3x4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-291.785)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-291.785)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))))))) / 1.0) / 1.0) < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)), max(vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-410.506), (_GLF_FUZZED(-410.506)) - 0.0), _GLF_FUZZED(5.8)), max(vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)), clamp(vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)), vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)), vec2(_GLF_FUZZED(-410.506), _GLF_FUZZED(5.8)))))))), bvec2(false, false))).x < injectionSwitch.y) || false)))))), false || (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-8.4), mix(float(_GLF_FUZZED(-554.603)), float(_GLF_IDENTITY(_GLF_FUZZED(-8.4), (_GLF_FUZZED(-8.4)) / 1.0)), bool(true)))), bool(false))), 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(-744.585)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-8.4)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-8.4)), (float(_GLF_FUZZED(-8.4))) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-8.4)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-8.4)), (float(_GLF_FUZZED(-8.4))) + 0.0), float(_GLF_FUZZED(-8.4)))))), bool(false))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), log(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-8.4), min(_GLF_IDENTITY(_GLF_FUZZED(-8.4), max(_GLF_FUZZED(-8.4), _GLF_FUZZED(-8.4))), _GLF_FUZZED(-8.4)))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-8.4), max(_GLF_FUZZED(-8.4), _GLF_FUZZED(-8.4)))), bool(false))))) : _GLF_FUZZED(-93.68))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x : _GLF_FUZZED(1.3))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) < injectionSwitch.y))) || false))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), (false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), true, false, false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), (false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))) || false), false || (_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), (false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))) || false)))) && true))))))) || false)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, false)), true, true, false))))) || false))))), _GLF_IDENTITY(! (! ((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), ! _GLF_IDENTITY((! (! (! ((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))), ! (_GLF_IDENTITY(! ((! (! (! ((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))))), (! ((! (! (! ((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))))) || false)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-252.464), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(329.598)), bvec2(true, false))).x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), tan(0.0), 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), ! (! ((bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) || false)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false || (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x < injectionSwitch.y) || false))))))))))))))))))), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), true && _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false))) && true) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))).y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), false)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), false))) || false))), false || (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y) || false))))), (_GLF_DEAD(false)) || false)))), false))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y))), false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(570.286, -97.36)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0)))), injectionSwitch)).y))), true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))), clamp(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), mix(vec2(_GLF_FUZZED(846.785), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))))[0], _GLF_FUZZED(82.84)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), false))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))))).x > injectionSwitch.y))), true), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), false))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))), true))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))), true))))), _GLF_IDENTITY(false, (false) && true))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) || false), true))) || _GLF_IDENTITY((false), true && ((false))))) || false), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || (false))) || false))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true, false))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true, false))), true, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (_GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! ((! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(739.781)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, abs(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true, true, true))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1719.5603) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) && true), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.3) : (injectionSwitch)[1]))) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(5.9)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec4(bool((false)), false, false, false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], sqrt(0.0), length(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-31.48))), 0.0, 0.0, 0.0)), 0.0), (mat2(injectionSwitch[0], sqrt(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)) * mat2(1.0)))), injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))), false)))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) && true)), false || (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) && true)))))), (bool(bvec3(_GLF_DEAD(false), true, false))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((_GLF_IDENTITY(false, true && (false))))))))))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), true, false))), bool(_GLF_IDENTITY(bool((bool(bvec3(_GLF_DEAD(false), true, false)))), (_GLF_IDENTITY(bool((bool(bvec3(_GLF_DEAD(false), true, false)))), false || (bool((bool(bvec3(_GLF_DEAD(false), true, false))))))) || false))) || false), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false)))) || false))) || false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))), true, true)))) && true))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false || _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))), true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))), false || (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))) || false)) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(15.07), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-635.516)), bvec2(true, false)))[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), bool(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), true, false))))))))), false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, 0.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(-62.75))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.2))) < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(47321u, 25313u, 38179u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(1.0))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, false || (true)))), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, true)))))))), ! (! (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))), bool(bool(_GLF_IDENTITY(bool(bvec3(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, false || (true)))), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, true)))))))), ! (! (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(58.04), float(vec3(_GLF_FUZZED(58.04), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_FUZZED(-969.731)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).y : _GLF_FUZZED(1.0))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)) && true))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, (true) && true))), true && (bool(! (_GLF_IDENTITY(true, (true) && true))))))))) && (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-8763.7934, 7.1, -125.311, -4.7).b), _GLF_FUZZED(6.6)), bvec2(_GLF_IDENTITY(false, false || (false)), false))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-8763.7934, 7.1, -125.311, -4.7).b), _GLF_FUZZED(6.6)), bvec2(false, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-8763.7934, 7.1, -125.311, -4.7).b), _GLF_FUZZED(6.6)), bvec2(false, false))).x) * determinant(mat4(1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-8763.7934, 7.1, -125.311, -4.7).b), _GLF_FUZZED(6.6)), bvec2(false, false))).x)) > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec2((_GLF_DEAD(false)) && true, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(124.443) : (injectionSwitch)[0], max(false ? _GLF_FUZZED(124.443) : (injectionSwitch)[0], false ? _GLF_FUZZED(124.443) : (injectionSwitch)[0])))), _GLF_FUZZED(-3.6)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! ((bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(124.443) : (injectionSwitch)[0], max(false ? _GLF_FUZZED(124.443) : (injectionSwitch)[0], false ? _GLF_FUZZED(124.443) : (injectionSwitch)[0])))), _GLF_FUZZED(-3.6)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))))), ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))).x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u)), 1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u))))) ^ 0u, min((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size))), clamp(~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size))), ~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size))), ~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), _GLF_IDENTITY(uvec2(subgroup_size, 0u), max(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(uvec4(uvec2(subgroup_size, 0u), 1u, 1u))), uvec2(subgroup_size, 0u))))))), subgroup_size)), max(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)))), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size))))) >> 0u)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)))), 1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(26836u) : 1u)), 1u, 1u)), 1u))))) ^ 0u, (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u)), _GLF_IDENTITY(1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u))), min(_GLF_IDENTITY(1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u))), (false ? _GLF_FUZZED(subgroup_size) : 1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u))))), _GLF_IDENTITY(1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u))), (_GLF_IDENTITY(1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u))), min(1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u))), 1u * (uint(uvec3(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), subgroup_size)), 1u, 1u)))))) << 0u))))) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, true, false))), true && (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (subgroup_base) | (subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uint(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), uint(5u))))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uint(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(5u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uint(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), uint(5u)))))))))), 0u)), clamp(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, min(5u, 5u))), uint(5u))), 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), clamp(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 1u * (5u))), clamp(uint(5u), uint(5u), uint(5u))), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), clamp(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(uvec4(uint(5u), 0u, 0u, 0u)), clamp(uint(uvec4(uint(5u), 0u, 0u, 0u)), uint(uvec4(uint(5u), 0u, 0u, 0u)), uint(uvec4(uint(_GLF_IDENTITY(5u, (5u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u, 0u, 0u))))), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))), 0u))))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (~ ((0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))), 0u)), clamp(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u), (uvec4(subgroup_local_id + _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(5), int(5))) + (1)), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u))), 0u)) - uvec4(0u, 0u, 0u, 0u)))))))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(5u, (true ? 5u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) * 1u))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(num_workgroup))), 1u))))))), uint(5u))), 0u)), clamp(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(uint(5u), uint(5u)))))), min(_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(uint(5u), uint(5u))))))))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u))) + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) << 0u)))), 0u)), clamp(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), max(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), max(uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))))), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u))))), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), clamp(uint(uvec4(subgroup_local_id + 1, _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, (0u | 0u)))), (0u) | (0u)))), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), uint(uvec4(subgroup_local_id + 1, 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u | (_GLF_IDENTITY(uint(5u), uint(5u))))), 0u)))))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))) + 1), ((subgroup_local_id + 1)) | 0u) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 1u * (_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 1u), (uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 1u)) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, _GLF_IDENTITY(1u, min(1u, 1u))), (uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 1u)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * 1u)))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) * 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), ~ (~ (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(clamp(subgroup_size, subgroup_size, subgroup_size), clamp(subgroup_size, subgroup_size, subgroup_size)))))), 0u, 1u), (uvec3(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 0u, 1u)) >> uvec3(0u, 0u, 0u)))))))) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))), (~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))) / 1u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) / (0u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))), (uint(5u)) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) | 0u))))))) + 0u))) * 1u));
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) << 0), 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) << 0), 2), uint(uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(0, max(0, 0)) ^ (4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) << 0), 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) << 0), 2)))), 1u, 1u)))) - 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch, injectionSwitch)).y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-297.821) : 0.0)), 0.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(false), false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, 0 | (2))))) == 0, bool(bvec3((subgroup_local_id % 2) == 0, _GLF_IDENTITY(false, ! (! (false))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), false || (_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5764.1088), _GLF_FUZZED(((uvec4(24304u, 114597u, 130602u, 35811u) == uvec4(10552u, 31587u, 142583u, 89165u)) ? 941.602 : -0.6))), bvec2(false, false))).y))))), false || (_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))))) > injectionSwitch.y))) && true, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))))) > injectionSwitch.y))) && true) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, bool(bool((_GLF_IDENTITY(false, bool(bool(false)))) && true))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), uint(uvec3(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), 0u, 1u)))))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - abs(vec2(0.0, 0.0))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - abs(vec2(0.0, 0.0))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - abs(vec2(0.0, 0.0))).y)))) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - abs(vec2(0.0, 0.0))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - abs(vec2(0.0, 0.0))).y)))) && true))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - abs(vec2(0.0, 0.0))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - abs(vec2(0.0, 0.0))).y)))) && true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.1) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), ! (! (bool(bvec2((false), true))))))) && true), (! (false)) && true), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true))))), _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-40.46) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)))))), true && (! (! (bool(bvec4(false, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))))))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, true && (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -264.445)), _GLF_FUZZED(854.590)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)) || false))))
  barrier();
}
