#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), true))))))), false || (bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)) && true))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), true))))))), false || (bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)) && true))), bool(bvec2((! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), true))))))), false || (bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)) && true))), false))), true, true, false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY((! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec2((! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true))) && true)) && true)) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), true)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ((bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(66.20, 9121.8641, -2248.0477, -36.10, 1225.5595, -4.7, -3.2, 257.660)[1]) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(66.20, 9121.8641, -2248.0477, -36.10, 1225.5595, -4.7, -3.2, 257.660)[1]) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(66.20, 9121.8641, -2248.0477, -36.10, 1225.5595, -4.7, -3.2, 257.660)[1]) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true))) || false))), false || (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(66.20, 9121.8641, -2248.0477, -36.10, 1225.5595, -4.7, -3.2, 257.660)[1]) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(66.20, 9121.8641, -2248.0477, -36.10, 1225.5595, -4.7, -3.2, 257.660)[1]) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true))) || false)))))))), (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true))))) && true)) && true)))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (false ? _GLF_FUZZED(subgroup_id) : 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), max(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), 0u, 0u)).x, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_size)))))))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) | 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED((subgroup_id + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)), gl_WorkGroupID)).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED((subgroup_id + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)), gl_WorkGroupID)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED((subgroup_id + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)), gl_WorkGroupID)).x))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED((subgroup_id + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)), gl_WorkGroupID)).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED((subgroup_id + subgroup_id)) : _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID)), gl_WorkGroupID)).x))));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) | _GLF_IDENTITY(0u, (0u) << 0u), 0u | ((workgroup_id) | 0u))), clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | 0u, ((workgroup_id) | 0u) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u ^ ((1u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(uint(0u), uint(0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 1u)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | 0u, ((workgroup_id) | 0u) | (_GLF_IDENTITY((workgroup_id) | 0u, min((workgroup_id) | 0u, _GLF_IDENTITY((workgroup_id) | 0u, 0u ^ ((workgroup_id) | 0u)))))))) >> 0u)) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(-534.114), (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(-4740.9692), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(((false ? 85.35 : -5.3) - -5876.6490))), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(1.0) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(vec4(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(4.1), _GLF_FUZZED(-58.33), _GLF_FUZZED(-48.94)), vec3((vec3(_GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0))), max(0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0))), max(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0))), mix(float(_GLF_FUZZED(93.22)), float(0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), bool(true))), 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.7)), bool(false))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))))))) + vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(1.0) * (vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.5))), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, sin(0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(-95.68)), float(float(mat2x4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.5))), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, sin(0.0))), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, sin(0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), 1.0, 0.0))), bool(true)))))), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch))) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-607.748)), float(0.0), bool(true))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(vec4(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6876.3129)), bool(false))), 0.0), mix(vec3(_GLF_FUZZED(4.1), _GLF_FUZZED(-58.33), _GLF_FUZZED(-48.94)), vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], (vec3(0.0, 0.0, 0.0))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))), 1.0, length(vec3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0)))), 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), max(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), mix(vec2(((injectionSwitch) + vec2(0.0, 0.0))[0], ((injectionSwitch) + vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-35.01)), bvec2(false, false)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))))))) + vec2(0.0, 0.0))).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(~ (~ ((subgroup_local_id))), 0u ^ (~ (~ ((subgroup_local_id)))))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) ^ 0u, (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) ^ 0u) >> 0u)) | 0u))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) ^ 0u))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) ^ 0u))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) ^ 0u))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), ~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u), (subgroup_size), (subgroup_size))) >> 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), ~ (~ _GLF_IDENTITY((64), 0 ^ ((64))))), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), true, false), true)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), true, false), true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), true, false), true)))), true)), true)))))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), true)))), _GLF_IDENTITY(true, (true) && true))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), true)), false))))), false)))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec4(bvec3(bvec3(false, true, false)), true)))))))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), true, false), true)))))))), (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))) || false))), bool(bvec2((! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))), true, false), true)))))))), (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))) || false))), false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))) && true) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(92.39), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 9.3))), bvec2(true, false))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(92.39, max(92.39, _GLF_IDENTITY(92.39, float(mat3x2(92.39, 1.0, 0.0, 1.0, 1.0, 0.0)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 9.3))), bvec2(true, false))).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true, false)))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, false || ((false) || false))), false || (bool(_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, false || ((false) || false))), false || (bool(_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, false || ((false) || false))), false || (bool(_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, true))), ! (! (_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, false || ((false) || false))), false || (bool(_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, false || ((false) || false))), false || (bool(_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, false || ((false) || false))), false || (bool(_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, true))), ! (! (_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) || false, false || ((false) || false))), false || (bool(_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-958.492))) > injectionSwitch.y))) || false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false)) || false)))), false || (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), ! (! (! (bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, false, false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-958.492))) > injectionSwitch.y))) || false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false)) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(1.9), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(6.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size)))), max(_GLF_IDENTITY(1u * (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size)))), clamp(1u * (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size)))), 1u * (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size)))), 1u * (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size)))))), 1u * (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size))))))) : _GLF_FUZZED(86168u))), clamp(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY((~ (virtual_gid)), uint(uint((~ (virtual_gid))))) * 1u), (false ? _GLF_FUZZED((12886u)) : _GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) * 1u))))), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), 0.0, 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) || false), false, false, false)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true)))) && true))), true))), false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), (! (_GLF_IDENTITY(true, bool(bool(true))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), (! (_GLF_IDENTITY(true, bool(bool(true))))) && true), false, true, _GLF_IDENTITY(true, true && (true)))), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true))))) && true), false, true, _GLF_IDENTITY(true, true && (true))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))) / 1.0, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)), min((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3617.7360)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.0) : injectionSwitch.y))), bool(true)))))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat4x3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), sin(0.0), abs(0.0), 1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))) / 1.0) - 0.0))), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(mat2(1.0, abs(1.0), 0.0, 1.0)), 1.0, sin(0.0), 1.0, 1.0))))).y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(mat2(1.0, abs(1.0), 0.0, 1.0)), 1.0, sin(0.0), 1.0, 1.0))))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(mat2(1.0, abs(1.0), 0.0, 1.0)), 1.0, sin(0.0), 1.0, 1.0))))).y), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(mat2(1.0, abs(1.0), 0.0, 1.0)), 1.0, sin(0.0), 1.0, 1.0))))).y), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, determinant(mat2(1.0, abs(1.0), 0.0, 1.0)), 1.0, sin(0.0), 1.0, 1.0))))).y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && (bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
