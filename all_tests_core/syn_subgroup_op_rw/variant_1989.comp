#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(835.559), _GLF_FUZZED(-4.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))), (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))), (injectionSwitch.x > injectionSwitch.y))))))))))), false || (bool((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u)) - 0u)) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size) * 1u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size) * 1u))))) * 1u)) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u)) - 0u)) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = _GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size))) * 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size) * 1u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size), 0u + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size))) * 1u))))) * 1u)) | 0u)) - 0u) ^ 0u);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)))), false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) ^ 0u)))), 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(1u, 1u, 1u) * (uvec3(6u))), uvec3(6u))) + (gl_NumWorkGroups)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), (uvec3(6u)) | uvec3(0u, 0u, 0u)), uvec3(6u))) + (gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), min(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, clamp(6u, 6u, _GLF_IDENTITY(6u, (6u) ^ 0u)))), uvec3(6u)), (_GLF_IDENTITY(uvec3(6u), uvec3(6u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(6u), uvec3(6u))))))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))) - uvec3(0u, 0u, 0u)) + (gl_NumWorkGroups)).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), min(uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u)))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (gl_NumWorkGroups)).x, _GLF_IDENTITY(0u | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u), clamp(0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((6u), ((6u)) >> 0u), ((6u)) + 0u), 0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u))))), uvec3(6u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), min(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), _GLF_IDENTITY(uvec3(6u), uvec3(uvec3(_GLF_IDENTITY(uvec3(6u), (uvec3(6u)) << uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(35484u, 23950u, 184575u)) : uvec3(0u, 0u, 0u))))), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), min(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))))), _GLF_IDENTITY(uvec3(6u), max(_GLF_IDENTITY(uvec3(6u), ~ (~ (uvec3(6u)))), uvec3(6u)))), max(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (((uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) - uvec3(0u, 0u, 0u), (true ? (uvec3(7u)) - uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(81633u, 110310u, 80396u))))))) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)))), uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) ^ 0u))), uvec3(6u))))))))), uvec3(uvec3((_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u), clamp(0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((6u), ((6u)) >> 0u), ((6u)) + 0u), 0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u))))), uvec3(6u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), min(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), _GLF_IDENTITY(uvec3(6u), uvec3(uvec3(_GLF_IDENTITY(uvec3(6u), (uvec3(6u)) << uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(35484u, 23950u, 184575u)) : uvec3(0u, 0u, 0u))))), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), min(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))))), _GLF_IDENTITY(uvec3(6u), max(_GLF_IDENTITY(uvec3(6u), ~ (~ (uvec3(6u)))), uvec3(6u)))), max(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (((uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) - uvec3(0u, 0u, 0u), (true ? (uvec3(7u)) - uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(81633u, 110310u, 80396u))))))) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)))), uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) ^ 0u))), uvec3(6u)))))))))))) + (gl_NumWorkGroups)).x), max(0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u))), uvec3(6u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), min(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), max(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (((uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) - uvec3(0u, 0u, 0u)))) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)))), uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) ^ 0u))), uvec3(6u))))))))) + (gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u), 0u + (0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u))))), uvec3(6u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), min(uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u), 0u, 0u))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), max(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (((uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) - uvec3(0u, 0u, 0u)))) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)))), uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) ^ 0u))), uvec3(6u))))))))) + (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u))), uvec3(6u))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), min(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), max(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (((uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) - uvec3(0u, 0u, 0u)))) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) ^ 0u))), uvec3(6u))))))))) + (gl_NumWorkGroups)))).x), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY((6u), ((6u)) + 0u))))), uvec3(6u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(35174u, 60505u, 85167u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(121503u, 191245u, 162210u)) : uvec3(0u, 0u, 0u))))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), min(uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), max(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)), (((_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))), max(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))), (true ? uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))) : _GLF_FUZZED(uvec3(71470u, 31288u, 118363u))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))), max(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))) ^ uvec3(0u, 0u, 0u)), uvec3(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) | uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) - uvec3(0u, 0u, 0u)))) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ (6u))), uvec3(6u)))), uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((6u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))), 0u)), clamp(uint(uvec2(_GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))), 0u)), uint(uvec2(_GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))), 0u)), uint(uvec2(_GLF_IDENTITY((6u), (false ? _GLF_FUZZED(subgroup_id) : (6u))), 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(6u, uint(uvec2(6u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY(6u, uint(uvec2(6u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u)))))) / 1u))) ^ 0u))), uvec3(6u))))))))) + (gl_NumWorkGroups)).x))))))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)).x) : _GLF_FUZZED(_GLF_IDENTITY(70834u, 0u + (70834u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) | 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec2((workgroup_size * workgroup_id), (_GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u)))))), 1u, 1u, 1u), ~ (~ (uvec4((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u)) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id))))), 1u, 1u, 1u)))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id, (workgroup_size * workgroup_id) >> 0u)) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, true))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (workgroup_base + subgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) >> 0u), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) >> 0u)))), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) ^ 0u)))) | (workgroup_base + subgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) >> 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, min(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y))))) << 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, max(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) << uvec2(0u, 0u)))).x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) - 0u, ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) - 0u) >> 0u))))))) + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), (workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), clamp(((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y))), (workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u ^ 0u)), max(workgroup_base, workgroup_base)) + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + _GLF_IDENTITY(1, 1 * (1))) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (max(_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) >> uvec2(0u, 0u)).x) - 0u)))))) + 1), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) * uvec2(1u, 1u))) * uvec2(1u, 1u)).x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) - 0u)))))) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) - 0u)))))) + 1) : _GLF_FUZZED((-- num_workgroup))))) + 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) * uvec2(1u, 1u))) * uvec2(1u, 1u)).x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) - 0u)))))) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, clamp(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) / 1u), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x) - 0u)))))) + 1) : _GLF_FUZZED((-- num_workgroup))))) + 0u) >> 0u)) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)), 0u | (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)), (~ (workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y))) + 0u)))))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << (0u | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, (true ? GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y : _GLF_FUZZED((false ? subgroup_local_id : workgroup_base)))), min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, (true ? GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y : _GLF_FUZZED((false ? subgroup_local_id : workgroup_base)))), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, (true ? GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y : _GLF_FUZZED((false ? subgroup_local_id : workgroup_base)))))))) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x % _GLF_IDENTITY(2, (2) | (2))) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(4667)) : injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(4667)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(4667)) : injectionSwitch.y))), true, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(4667)) : injectionSwitch.y))), true, true, true)))), ! (! (bool(bool(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(4667)) : injectionSwitch.y))), true, true, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.2) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.2) : injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.40))), ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2917.3055)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true, false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true))))))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.1, -42.39)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
}
