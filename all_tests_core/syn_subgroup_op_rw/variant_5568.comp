#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 ivec3 _f0;
 uint virtual_gid;
 mat3x2 _f1;
 bvec2 _f2;
 vec3 _f3;
 vec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 bvec4 _f1;
 mat3x4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 uvec2 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 vec2 _f1;
 bvec3 _f2;
 ivec2 _f3;
 bvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 mat4 _f1;
 vec3 _f2;
 _GLF_struct_0 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint workgroup_id;
 mat4x2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-65.29)), bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec4(1), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))) && (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))), ((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bool(_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bool(_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bool(_GLF_IDENTITY(! (false), true && (! (false))))))))))))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u))) | uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), uint(uvec4((0u) | (0u), 0u, 0u, 1u)))))))), 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))) | uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, min(0u, 0u))), min(min(0u, _GLF_IDENTITY(0u, min(0u, 0u))), min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))), 0u, 0u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize))))))), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)))).x, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))), min((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), (min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))))))))) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | _GLF_IDENTITY((min(gl_WorkGroupSize, gl_WorkGroupSize)), clamp((min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((min(gl_WorkGroupSize, gl_WorkGroupSize)), min((min(gl_WorkGroupSize, gl_WorkGroupSize)), (min(gl_WorkGroupSize, gl_WorkGroupSize)))), (min(gl_WorkGroupSize, gl_WorkGroupSize)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), (min(gl_WorkGroupSize, gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)), min((min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)), (min(gl_WorkGroupSize, gl_WorkGroupSize)) | (min(gl_WorkGroupSize, gl_WorkGroupSize)))))))) << uvec3(0u, 0u, 0u)))) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)).x))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)), min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))), 0u, 0u))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)), min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | uvec3(0u, 0u, 0u))).x) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))), min(gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0), (true ? mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat4x3(-5184.1154, 544.150, -326.916, -9954.9609, -8205.3046, -42.14, -6.8, 7517.8473, -881.772, 6.9, 9441.9340, 2.5))))))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * cos(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)).y) * cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * cos(0.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * _GLF_IDENTITY(cos(0.0), float(vec4(cos(0.0), cos(log(1.0)), 0.0, 0.0)))) / cos(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * cos(0.0))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), (! (true)) && true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false))))), true))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false)))), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sqrt(0.0)))).x > injectionSwitch.y)))) && true))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))), min(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0), min((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0)))))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, tan(0.0), 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(ivec3(1), _GLF_IDENTITY(mat4(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(-3276.7066, 810.473, 2078.5445, 2.3, 14.28, -198.343, 6148.1695, -51.01, -6.5, -289.695, -185.914, -3971.8004, 63.42, 67.44, 5466.6960, 1617.1286)) : mat4(1.0))), vec3(1.0), _GLF_struct_0(uvec4(1u), vec2(1.0), bvec3(true), ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(10034) : 1))), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), ivec3(1)), bvec4(true)), gl_WorkGroupID.x, mat4x2(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.z * _GLF_struct_replacement_2.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-377.718, 259.467)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) + 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true, true, true))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), abs(0.0))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), abs(0.0)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, sin(0.0), 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-628.781)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-628.781), min(_GLF_FUZZED(-628.781), _GLF_FUZZED(-628.781))))))), float(_GLF_FUZZED(-7854.3322)), bool(false))))), 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(825.329))), 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_6(_GLF_struct_4(vec3(1.0), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) && true)), mat3x4(1.0), uvec4(1u)), uvec2(1u), _GLF_struct_5(ivec3(1), GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, mat3x2(1.0), bvec2(true), vec3(1.0), vec2(1.0), mat4x3(1.0))), _GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, (1u) >> 0u))) << uvec3(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = _GLF_struct_replacement_7._f0._f2.virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (_GLF_DEAD(false)))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(faceforward(5.9, -9.7, -7.7)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 1.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(1.0), ((min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(1.0)) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(faceforward(5.9, -9.7, -7.7)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 1.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(1.0), ((min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(1.0)) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(faceforward(5.9, -9.7, -7.7)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 1.0))) > injectionSwitch.y)), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(1.0), ((min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(1.0)) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(faceforward(5.9, -9.7, -7.7)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 1.0))) > injectionSwitch.y)))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(faceforward(5.9, -9.7, -7.7)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 1.0))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, 0u ^ (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ((_GLF_IDENTITY(false, ! (! (false)))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(uint(uvec2(uint(uvec3(subgroup_size, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_IDENTITY(1u, (1u) << 0u))), (uint(uvec2(uint(uvec3(subgroup_size, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_IDENTITY(1u, (1u) << 0u)))) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size), max(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size), ~ (~ (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) % subgroup_size)))), GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_3.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_3.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size), 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_3.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_3.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id + 1, (true ? _GLF_struct_replacement_3.subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), (_GLF_struct_replacement_3.subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size))))), (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size)) - (0u | 0u))) * 1u, uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size, 0u | (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size)), clamp(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y)) + subgroup_id * subgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size) >> 0u))), GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size) >> 0u))) + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), uint(uint(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)))), max(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), uint(uint(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size)))), _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size), uint(uint(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size))))))) - (0u | 0u))) * 1u, uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : (_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : (_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size))), min(~ (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : (_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size))), ~ (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : (_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : (_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size))), (~ (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : (_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size)))) | (~ (_GLF_IDENTITY((_GLF_struct_replacement_3.subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : (_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size)))))))))), _GLF_IDENTITY((GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size)), ((GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size))) | ((GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_struct_replacement_3.subgroup_local_id + 1) % subgroup_size)))) - (0u | 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size) ^ 0u) + ((_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, 1u * (_GLF_struct_replacement_3.subgroup_local_id))), ~ (~ (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, 1u * (_GLF_struct_replacement_3.subgroup_local_id))), (0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, 1u * (_GLF_struct_replacement_3.subgroup_local_id)))) | 0u))))))) + 1) % subgroup_size), (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.y + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, (_GLF_struct_replacement_3.subgroup_local_id) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-26192)))) | 0)) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) - (0u | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))))) * 1u, 0u))), (166975u & 0u), (0u | 0u), (1u ^ 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-651.113)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-651.113)), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-651.113)), float(injectionSwitch.y), bool(true)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(clamp(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), min(uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))), _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (true ? GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size : _GLF_FUZZED(uvec3(180343u, 78008u, 184179u)))), GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x))), (clamp(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), min(uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))), _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x, (GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size, (true ? GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size : _GLF_FUZZED(uvec3(180343u, 78008u, 184179u)))), GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))).x)))) ^ 0u))], _GLF_IDENTITY(4, (4) + 0), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) ^ 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_struct_replacement_3.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(degrees(vec2(9694.7786, -432.729))))).y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x], read, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true))))) && true), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true))))) && true), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true))))) && true), false)), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true))))) && true), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, (false) || false))), false)))), true))))) && true), false)), false, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size.x], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(sqrt(vec2(0.0, 0.0))) + (injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true)), true, true))), true))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true)), true, true))), true))), false, false)), true, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), true, true)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), true, true)))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), true, true)))))))), true))))), false), false, false)))), false))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
