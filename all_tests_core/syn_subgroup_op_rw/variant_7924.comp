#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5774.5298))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(5774.5298)), mix(float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(5774.5298)), ((true ? injectionSwitch.y : _GLF_FUZZED(5774.5298))) / cos(0.0))), float(_GLF_FUZZED((-2749.9998))), bool(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.2)), bool(false))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(858.724) : injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(858.724) : injectionSwitch.y))))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(858.724) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(858.724) : injectionSwitch.y))) / 1.0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), min(vec4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))), false, false))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), true && (bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true, false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true, false)))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))), true, false)))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec3(! (false || (_GLF_IDENTITY(false, false || (false)))), true, false)), bool(bvec2(bool(bvec3(! (false || (_GLF_IDENTITY(false, false || (false)))), true, false)), false))))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, false || (false))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false))), true && (_GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)))), bool(bvec4(bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false))))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 1.0, 1.0))) < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)))), (mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))))) * mat2(1.0)))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)))), (mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))))) * mat2(1.0)))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)))), (mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))))) * mat2(1.0)))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(float(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-7.2) : _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, sqrt(1.0))), (vec2(mat3x2(injectionSwitch, 0.0, length(vec2(0.0, 0.0)), 0.0, sqrt(1.0)))) - vec2(0.0, 0.0))))).y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, bool(bvec2((injectionSwitch.x < injectionSwitch.y) && true, false))))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-1.8, -7.4)) : injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))) * sqrt(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + _GLF_ZERO(0.0, injectionSwitch.x))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + _GLF_ZERO(0.0, injectionSwitch.x))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / cos(vec2(0.0, 0.0))), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)) * mat2(1.0))) * sqrt(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-3.9)), _GLF_IDENTITY(float(vec4(float(_GLF_FUZZED(-3.9)), 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x3(float(vec4(float(_GLF_FUZZED(-3.9)), 1.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat4x3(float(vec4(float(_GLF_FUZZED(-3.9)), 1.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + _GLF_ZERO(0.0, injectionSwitch.x))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(0.8)), float(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + _GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(52.90)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0)), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6718.0055)), float(injectionSwitch.x), bool(true))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), tan(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))).x)), 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 1.0))))))), max(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0)))) + (mat2(injectionSwitch, 1.0, 1.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 1.0))))))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) << 0u), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(1 * _GLF_IDENTITY((2), clamp((2), (2), (2))), 0 | (1 * (2)))), _GLF_IDENTITY(2, ~ (~ (2))), 2)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0), int(_GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, 2)), (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, 2))) / 1)), (int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, 2)))) * 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(0, 0, 0) | (ivec3(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(77488)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(2))), int(2)), 1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), (true ? _GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(-54109, -50410, -86165))))))))) >> 0)) | (0 >> _GLF_IDENTITY(int(2), int(2)))))), (ivec2(64, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(1 * (2), 0 | (1 * (2)))), _GLF_IDENTITY(2, ~ (~ (2))), 2)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 >> _GLF_IDENTITY(int(2), int(2))) | (2))), int(2)), int(_GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, 2))), (int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), 2, 2)))) * 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), int(int(0)))))) | (ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0), 0, 1, 0)))), (true ? _GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec3(0 >> _GLF_IDENTITY(int(2), int(2)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec3(0, 0, 0)) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-54109, -50410, -86165)), (_GLF_FUZZED(ivec3(-54109, -50410, -86165))) >> _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | ivec3(0, 0, 0)))))))))) >> 0)) | (0 >> _GLF_IDENTITY(int(2), int(2))))))) << _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0))), _GLF_IDENTITY((ivec2(64, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))), int(int(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95868) : 2))), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))))))) / 1)))), (true ? _GLF_IDENTITY((ivec2(64, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))), int(int(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95868) : 2))), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))))))) / 1)))), (false ? _GLF_FUZZED(ivec2(40204, 21343)) : (ivec2(64, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))), int(int(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-95868) : 2))), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), ~ (~ (int(2)))) : _GLF_FUZZED(-31992)))))))) / 1)))))) : _GLF_FUZZED(ivec2(45338, 3622)))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, (0 >> _GLF_IDENTITY(int(2), int(2)))), ~ (~ (ivec2(64, (0 >> _GLF_IDENTITY(int(2), int(2))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(64, (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(64, (0 >> _GLF_IDENTITY(int(2), int(2))))), max((ivec2(64, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), min(0 >> _GLF_IDENTITY(int(2), int(2)), 0 >> _GLF_IDENTITY(int(2), int(2))))) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))), (ivec2(64, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))))))))) ^ ivec2(0, 0)), (_GLF_IDENTITY((ivec2(64, (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ _GLF_IDENTITY((~ (64)), ((~ (64))) * 1), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), min((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), 0 | (_GLF_IDENTITY(min(64, 64), min(min(64, 64), min(64, 64)))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (_GLF_IDENTITY(~ (~ (64)), (true ? ~ (~ (64)) : _GLF_FUZZED(-72673)))) << (0 >> _GLF_IDENTITY(int(2), int(2)))), (~ (~ _GLF_IDENTITY((64), _GLF_IDENTITY(((64)), 0 | (((64)))) * 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ _GLF_IDENTITY((64), ((64)) | ((64)))), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) / 1)) << 0), (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) ^ 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), min((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), (0 >> _GLF_IDENTITY(int(2), int(2))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | 0))))))))) / ivec2(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) / 1)) << 0), (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) ^ 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), min((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), (0 >> _GLF_IDENTITY(int(2), int(2))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | 0))))))))) / ivec2(1, 1)), min(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) / 1)) << 0), (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) ^ 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), min((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), (0 >> _GLF_IDENTITY(int(2), int(2))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | 0))))))))) / ivec2(1, 1)), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) / 1)) << 0), (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) ^ 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), min((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), (0 >> _GLF_IDENTITY(int(2), int(2))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | 0))))))))) / ivec2(1, 1)))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) / 1)) << 0), (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) ^ 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), min((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), (0 >> _GLF_IDENTITY(int(2), int(2))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | 0))))))))) / ivec2(1, 1)), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) / 1)) << 0), (0 >> _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) ^ 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(2))))), min((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), 1))))))), 1, 0)) >> ivec3(0, 0, 0))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec2(~ (~ (64)), _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), (0 >> _GLF_IDENTITY(int(2), int(2))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), min(64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))), int(ivec2(~ (~ (64)), 1))))) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | 0))))))))) / ivec2(1, 1))))))) | (ivec2(0, 0) << _GLF_IDENTITY(ivec2(5), ivec2(5))))) | ivec2(0, 0)), ((ivec2(64, (0 >> _GLF_IDENTITY(int(2), int(2)))))) >> ivec2(0, 0)) >> _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) | ivec2(0, 0))))))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))), true, true))))))))), _GLF_IDENTITY(false || (bool(bvec2(false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (bool(bvec2(false, true))), false || (false || (bool(bvec2(false, true)))))), bool(bvec4(bool(_GLF_IDENTITY(false || (bool(bvec2(false, true))), false || (false || (bool(bvec2(false, true)))))), true, false, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || ((! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY((! (false)), true && ((! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(log(1.0)), abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x), 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED((mat4(6.8, -431.872, 2.2, 1704.8982, 1.7, -608.595, 19.39, 7256.6012, 4689.8653, -36.54, -253.173, -8.7, 617.742, 4032.8050, 85.10, 1829.5344) - mat4(4.4, 9.1, -3.6, 3.2, 8.2, -992.611, 2940.1961, -0.2, -337.469, 449.523, -678.996, _GLF_IDENTITY(491.167, mix(float(_GLF_FUZZED(-32.52)), float(491.167), bool(true))), 11.23, 4.0, -6.3, 621.032))) : mat4(injectionSwitch.x, abs(log(1.0)), abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(4937.5643)))), float(_GLF_FUZZED(5204.9324)), bool(false))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.3) : injectionSwitch.y))), float(_GLF_FUZZED(5.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, cos(0.0)))), 0.0)).x < injectionSwitch.y))), true)))))), ! (! (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(log(1.0)), _GLF_IDENTITY(abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), min(abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))), abs(determinant(mat2(1.0, 0.0, 1.0, 1.0))))), 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.3)), bool(false))), 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.4)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0, 0.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false)), 0.0 + (_GLF_IDENTITY(mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), float(_GLF_FUZZED(-5.4)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false)), mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(-5.4)), bool(false))))))))), 1.0, 0.0), clamp(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0, 0.0))), vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0, 0.0)))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED((_GLF_IDENTITY(mat4(6.8, -431.872, 2.2, 1704.8982, 1.7, _GLF_IDENTITY(-608.595, (-608.595) - tan(0.0)), 19.39, 7256.6012, 4689.8653, -36.54, -253.173, -8.7, 617.742, 4032.8050, 85.10, 1829.5344) - mat4(4.4, 9.1, -3.6, 3.2, 8.2, -992.611, 2940.1961, -0.2, -337.469, 449.523, -678.996, 491.167, 11.23, 4.0, _GLF_IDENTITY(-6.3, (true ? _GLF_IDENTITY(-6.3, mix(float(_GLF_FUZZED(-3.6)), float(_GLF_IDENTITY(-6.3, 1.0 * (-6.3))), bool(true))) : _GLF_FUZZED(53.45))), 621.032), transpose(_GLF_IDENTITY(transpose(mat4(6.8, -431.872, 2.2, 1704.8982, _GLF_IDENTITY(1.7, clamp(1.7, 1.7, 1.7)), -608.595, 19.39, 7256.6012, 4689.8653, -36.54, -253.173, -8.7, _GLF_IDENTITY(617.742, mix(float(617.742), float(_GLF_FUZZED(-617.913)), bool(false))), 4032.8050, 85.10, 1829.5344) - mat4(4.4, 9.1, -3.6, 3.2, 8.2, -992.611, _GLF_IDENTITY(2940.1961, min(2940.1961, _GLF_IDENTITY(2940.1961, min(2940.1961, 2940.1961)))), -0.2, -337.469, 449.523, _GLF_IDENTITY(-678.996, min(-678.996, -678.996)), 491.167, 11.23, 4.0, -6.3, 621.032)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(transpose(mat4(6.8, -431.872, 2.2, 1704.8982, 1.7, -608.595, 19.39, 7256.6012, 4689.8653, -36.54, -253.173, -8.7, 617.742, 4032.8050, 85.10, 1829.5344) - mat4(_GLF_IDENTITY(4.4, 1.0 * (4.4)), _GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(5.6)), float(9.1), bool(true))), -3.6, 3.2, 8.2, -992.611, 2940.1961, -0.2, -337.469, 449.523, -678.996, 491.167, 11.23, _GLF_IDENTITY(4.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(4.0, abs(0.0) + (4.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), sqrt(0.0)), (mat3x2(4.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-24.60)), bool(false))), 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-96.08) : 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), sqrt(0.0))) - mat3x2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), _GLF_IDENTITY(-6.3, mix(float(-6.3), float(_GLF_FUZZED(5520.6173)), bool(false))), 621.032)), mat4(1.0) * (transpose(mat4(6.8, -431.872, 2.2, 1704.8982, 1.7, -608.595, 19.39, 7256.6012, 4689.8653, -36.54, -253.173, -8.7, 617.742, 4032.8050, 85.10, 1829.5344) - mat4(4.4, 9.1, -3.6, 3.2, 8.2, -992.611, 2940.1961, -0.2, -337.469, 449.523, -678.996, 491.167, 11.23, 4.0, -6.3, 621.032)))))))))) : mat4(injectionSwitch.x, abs(log(1.0)), abs(determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.0)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(_GLF_FUZZED(-9.0)), bool(false))) : _GLF_FUZZED(-759.632))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.0)), bool(false)))))))), 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0), vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-7.3))), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, length(0.0), 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true)), true, true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), true && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), true))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), true))), false))))) || false), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), true))), false)))), true, true)), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))), _GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), false), true))), false)))), true, true))) && true))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || false))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true)))), false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true)))), false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true)))), false))), false))), true)))))), _GLF_IDENTITY(true, (true) || false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (false), true && (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                return;
              }
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             return;
            }
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.8), _GLF_FUZZED(175.636)), bvec2(false, false))).y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), true && (bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), true && (false)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_DEAD(false), false, true, true))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec3(bvec2(false, false), false)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-359.204)), _GLF_FUZZED(-38.85)), bvec2(false, false))).y)), true)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), (! (bool(bool(_GLF_DEAD(false))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(-8.1)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-928.737)))) + 0.0)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-686.075), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-37.47 / 6692.1930))), bvec2(true, false))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
}
