#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_29 {
 vec3 _f0;
 uint subgroup_size;
 bvec3 _f1;
} ;

struct _GLF_struct_27 {
 int _f0;
 vec4 _f1;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
 vec4 _f1;
 uvec2 _f2;
 float _f3;
} ;

struct _GLF_struct_28 {
 vec3 _f0;
 ivec4 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 ivec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_23 {
 mat3x2 _f0;
 int _f1;
 vec3 _f2;
 mat4 _f3;
 uvec4 _f4;
 int _f5;
} ;

struct _GLF_struct_22 {
 uvec4 _f0;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 bool _f2;
 uint _f3;
} ;

struct _GLF_struct_20 {
 vec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 bvec2 _f1;
 bvec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_21 {
 ivec4 _f0;
 _GLF_struct_19 _f1;
 bvec3 _f2;
 mat2x3 _f3;
 mat4 _f4;
 _GLF_struct_20 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 uint _f3;
 mat2 _f4;
 float _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 bvec4 _f1;
 uvec4 _f2;
 ivec2 _f3;
 ivec3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 bvec4 _f1;
 ivec4 _f2;
 mat2x3 _f3;
 bvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 mat2x3 _f1;
 ivec3 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 ivec4 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_18 _f0;
 _GLF_struct_21 _f1;
 ivec2 _f2;
 uint virtual_gid;
 uint _f3;
 mat4x2 _f4;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 vec4 _f1;
 ivec2 _f2;
 bool _f3;
 ivec2 _f4;
 mat2x4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 uvec4 _f1;
 bvec4 _f2;
 bvec4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 bvec2 _f1;
 mat4 _f2;
 uvec4 _f3;
 mat4 _f4;
 mat2x3 _f5;
 bool _f6;
} ;

struct _GLF_struct_9 {
 int _f0;
 bvec4 _f1;
 uvec2 _f2;
 bvec4 _f3;
 bvec4 _f4;
 uint _f5;
 mat2 _f6;
} ;

struct _GLF_struct_8 {
 int _f0;
 vec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 mat4x3 _f2;
 ivec2 _f3;
 vec2 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 int _f1;
 uint workgroup_size;
 mat4x2 _f2;
 ivec3 _f3;
 int _f4;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 mat2x3 _f1;
 mat2 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 uint _f1;
 mat4x3 _f2;
 bvec3 _f3;
 float _f4;
 mat4x3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 bool _f1;
 mat3x4 _f2;
 uvec2 _f3;
 mat2x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 uvec4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_11 _f2;
 mat4 _f3;
 _GLF_struct_13 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_28(vec3(1.0), ivec4(1), _GLF_struct_26(mat4x3(1.0), vec4(1.0), uvec2(1u), 1.0), _GLF_struct_27(1, vec4(1.0)), ivec3(1), uvec3(1u)), _GLF_struct_29(vec3(1.0), gl_SubgroupSize, bvec3(true)), mat4x2(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_4(_GLF_struct_0(mat3x4(1.0), true, mat3x4(1.0), uvec2(1u), mat2x3(1.0), mat2x4(1.0)), _GLF_struct_1(mat2x4(1.0), 1u, mat4x3(1.0), bvec3(true), 1.0, mat4x3(1.0), vec2(1.0)), _GLF_struct_2(vec3(1.0)), _GLF_struct_3(ivec2(1), 1u), uvec4(1u), uvec3(1u)), _GLF_struct_6(bvec2(true), mat2x3(1.0), mat2(1.0), _GLF_struct_5(mat4(1.0), 1, gl_WorkGroupSize.x, mat4x2(1.0), ivec3(1), 1)), _GLF_struct_11(_GLF_struct_7(bvec3(true), uvec4(1u), mat3x2(1.0), ivec4(1)), _GLF_struct_8(1, vec2(1.0), mat4x2(1.0)), mat4x3(1.0), ivec2(1), vec2(1.0), _GLF_struct_9(1, bvec4(true), uvec2(1u), bvec4(true), bvec4(true), 1u, mat2(1.0)), _GLF_struct_10(uvec2(1u), bvec2(true), mat4(1.0), uvec4(1u), mat4(1.0), mat2x3(1.0), true)), mat4(1.0), _GLF_struct_13(_GLF_struct_12(mat4x2(1.0), vec4(1.0), ivec2(1), true, ivec2(1), mat2x4(1.0), uvec4(1u)), uvec4(1u), bvec4(true), bvec4(true), uvec4(1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_14._f1._f3.workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_30._f1.subgroup_size;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_18(ivec2(1), mat2x3(1.0), ivec3(1), _GLF_struct_15(vec3(1.0), bvec4(true), ivec4(1), mat2x3(1.0), bvec4(true), vec3(1.0)), _GLF_struct_16(bvec4(true), bvec4(true), uvec4(1u), ivec2(1), ivec3(1), ivec3(1)), ivec4(1), _GLF_struct_17(vec2(1.0), mat3x4(1.0), mat4x3(1.0), 1u, mat2(1.0), 1.0, uvec4(1u))), _GLF_struct_21(ivec4(1), _GLF_struct_19(vec2(1.0), bvec2(true), bvec2(true), vec2(1.0)), bvec3(true), mat2x3(1.0), mat4(1.0), _GLF_struct_20(vec2(1.0), uvec3(1u)), uvec3(1u)), ivec2(1), workgroup_base + subgroup_base + subgroup_local_id, 1u, mat4x2(1.0), _GLF_struct_24(_GLF_struct_22(uvec4(1u)), _GLF_struct_23(mat3x2(1.0), 1, vec3(1.0), mat4(1.0), uvec4(1u), 1), true, 1u));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_30._f1.subgroup_size);
 uint read = atomicLoad(buf[_GLF_struct_replacement_25.virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   subgroupAll(false);
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 subgroupBarrier();
 do
  {
   atomicStore(buf[_GLF_struct_replacement_25.virtual_gid], read, 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
}
