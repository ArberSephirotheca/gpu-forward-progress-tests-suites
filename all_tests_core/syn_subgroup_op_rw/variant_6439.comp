#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 bvec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 mat4x3 _f1;
 float _f2;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 ivec4 _f1;
 mat2 _f2;
 mat2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 ivec2 _f1;
 _GLF_struct_10 _f2;
 vec4 _f3;
 uint virtual_gid;
 mat4x2 _f4;
 _GLF_struct_11 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 int _f4;
 float _f5;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec4 _f1;
 vec3 _f2;
 mat4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 ivec2 _f1;
 uvec3 _f2;
 ivec3 _f3;
 bvec3 _f4;
 bool _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4x3 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 mat4 _f4;
 bool _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 mat4x2 _f4;
 float _f5;
 mat3 _f6;
} ;

struct _GLF_struct_1 {
 int _f0;
 ivec4 _f1;
 mat3 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))))), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(-84.76)), bool(_GLF_IDENTITY(false, true && (false))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups.x)), gl_NumWorkGroups.x));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(884.533), _GLF_FUZZED(_GLF_IDENTITY(-5.0, float(vec4(-5.0, log(1.0), 0.0, 0.0))))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false)))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2((false), true)), ! (! (bool(bvec2((false), true))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec2((false), true)), ! (! (bool(bvec2((false), true))))), false))))))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (uvec3(158455u, 94102u, 105813u)) | (uvec3(_GLF_IDENTITY(158455u, (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (~ (7u)))))) ^ (158455u)), 94102u, 105813u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (uvec3(158455u, 94102u, 105813u)) | (uvec3(158455u, 94102u, 105813u)))), ((_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (uvec3(158455u, 94102u, 105813u)) | (uvec3(158455u, 94102u, 105813u))))) ^ uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * uvec3(1u, 1u, 1u)), uvec3(158455u, 94102u, 105813u))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(158455u, uint(_GLF_IDENTITY(uvec3(158455u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(158455u, 1u, 1u))))), (true ? _GLF_IDENTITY(158455u, uint(_GLF_IDENTITY(uvec3(158455u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(158455u, 1u, 1u))))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(158455u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(158455u, 1u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(158455u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(7043u, 140985u, 185273u)) : uvec3(158455u, 1u, 1u)))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(158455u, 1u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(158455u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(7043u, 140985u, 185273u)) : uvec3(158455u, 1u, 1u)))))), 1u)))))) | 0u), 94102u, 105813u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY((uvec3(158455u, 94102u, _GLF_IDENTITY(105813u, (105813u) | 0u))) / uvec3(1u, 1u, 1u), min(_GLF_IDENTITY((uvec3(158455u, 94102u, _GLF_IDENTITY(105813u, (105813u) | 0u))) / uvec3(1u, 1u, 1u), ((uvec3(158455u, 94102u, _GLF_IDENTITY(105813u, (105813u) | 0u))) / uvec3(1u, 1u, 1u)) + (uvec3(16965u, 78134u, 112149u) & uvec3(0u, 0u, 0u))), (uvec3(158455u, 94102u, _GLF_IDENTITY(105813u, (105813u) | 0u))) / uvec3(1u, 1u, 1u))))) | _GLF_IDENTITY((uvec3(158455u, 94102u, 105813u)), min((uvec3(158455u, 94102u, 105813u)), (uvec3(158455u, 94102u, 105813u)))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(158455u, max(158455u, 158455u)), 94102u, 105813u), (uvec3(158455u, 94102u, _GLF_IDENTITY(105813u, (105813u) | 0u))) / uvec3(1u, 1u, 1u))) | (uvec3(158455u, 94102u, 105813u))))))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(158455u, _GLF_IDENTITY(94102u, ~ (_GLF_IDENTITY(~ (94102u), (~ (94102u)) | 0u))), 105813u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), ~ (_GLF_IDENTITY(~ (uvec3(158455u, 94102u, 105813u)), (~ (uvec3(158455u, 94102u, 105813u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(_GLF_IDENTITY(158455u, max(158455u, _GLF_IDENTITY(158455u, ~ (~ (158455u))))), 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u))))) / uvec3(1u, 1u, 1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))) | (uvec3(158455u, 94102u, 105813u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), ~ (_GLF_IDENTITY(~ (uvec3(158455u, 94102u, 105813u)), (~ (uvec3(158455u, 94102u, 105813u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(_GLF_IDENTITY(158455u, max(158455u, _GLF_IDENTITY(158455u, ~ (~ (158455u))))), 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u))))) / uvec3(1u, 1u, 1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))) | (uvec3(158455u, 94102u, 105813u)), ((_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), ~ (_GLF_IDENTITY(~ (uvec3(158455u, 94102u, 105813u)), (~ (uvec3(158455u, 94102u, 105813u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(_GLF_IDENTITY(158455u, max(158455u, _GLF_IDENTITY(158455u, ~ (~ (158455u))))), 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u))))) / uvec3(1u, 1u, 1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))) | (uvec3(158455u, 94102u, 105813u))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), ~ (_GLF_IDENTITY(~ (uvec3(158455u, 94102u, 105813u)), (~ (uvec3(158455u, 94102u, 105813u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(_GLF_IDENTITY(158455u, max(158455u, _GLF_IDENTITY(158455u, ~ (~ (158455u))))), 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u))))) / uvec3(1u, 1u, 1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))) | (uvec3(158455u, 94102u, 105813u)), (true ? (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), ~ (_GLF_IDENTITY(~ (uvec3(158455u, 94102u, 105813u)), (~ (uvec3(158455u, 94102u, 105813u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(_GLF_IDENTITY(158455u, max(158455u, _GLF_IDENTITY(158455u, ~ (~ (158455u))))), 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u))))) / uvec3(1u, 1u, 1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))) | (uvec3(158455u, 94102u, 105813u)) : _GLF_FUZZED(uvec3(188536u, 118550u, 153469u)))), (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), (_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), _GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), ~ (_GLF_IDENTITY(~ (uvec3(158455u, 94102u, 105813u)), (~ (uvec3(158455u, 94102u, 105813u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(_GLF_IDENTITY(158455u, max(158455u, _GLF_IDENTITY(158455u, ~ (~ (158455u))))), 94102u, 105813u))), 1u), (uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(_GLF_IDENTITY(uvec3(158455u, 94102u, 105813u), max(uvec3(158455u, 94102u, 105813u), uvec3(158455u, 94102u, 105813u))), 1u))))) / uvec3(1u, 1u, 1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))) | (uvec3(158455u, 94102u, 105813u)))))))) * (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)))) << uvec3(181100u, 198786u, 143711u))) : gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))), false, true, false)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (((injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false))), 0.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)) * (0.0))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))))))))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(872.406) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(10.11)), float(injectionSwitch.y), bool(true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (false)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(399.309))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec3(-4.2, 2170.6017, -8.2))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(399.309))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(vec3(-4.2, 2170.6017, -8.2))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(399.309))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(length(vec3(-4.2, 2170.6017, -8.2)))), mix(float((true ? injectionSwitch.y : _GLF_FUZZED(length(vec3(-4.2, 2170.6017, -8.2))))), float(_GLF_FUZZED(4845.7138)), bool(false))))) && true))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false), true)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(80.37)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true))))))
    barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0)), mat2x4(1.0), _GLF_struct_1(1, ivec4(_GLF_IDENTITY(1, (1) >> (1 ^ (1 & 1)))), mat3(1.0), _GLF_struct_0(mat3x4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), ivec3(_GLF_IDENTITY(1, max(1, 1))), mat2x3(1.0), uvec4(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))))))))), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((mat3(1.0)) + mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-84.55, -0.9, 6811.3767, 7147.4286, -83.62, 4.0, -9.0, 23.14, 1.8)) : _GLF_IDENTITY((mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), ((mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)))) + mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, cos(log(1.0)), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, tan(0.0), 0.0)), sqrt(abs(1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(log(1.0), 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(log(1.0), 1.0, 0.0))), length(vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat3(mat3(_GLF_IDENTITY(_GLF_IDENTITY((mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0), ((mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(3476.6342) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat3(-84.55, -0.9, 6811.3767, 7147.4286, _GLF_IDENTITY(-83.62, (true ? -83.62 : _GLF_FUZZED(2.2))), 4.0, -9.0, 23.14, 1.8)) : _GLF_IDENTITY((mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat3(1.0)) + mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3((mat3(1.0)) + mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat3((mat3(1.0)) + mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(mat3(-6.3, 195.057, 22.50, -1.8, 161.949, -546.239, -3796.3756, 0.6, -3.0)) : mat3(_GLF_IDENTITY(mat3((mat3(1.0)) + mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(mat3((mat3(1.0)) + mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))) - mat3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), mat4x3(1.0), _GLF_struct_8(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), mix(float(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), float(_GLF_FUZZED(-384.770)), bool(_GLF_IDENTITY(false, (false) && true)))))), _GLF_struct_2(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), _GLF_struct_3(1.0, mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(trunc(-129.411)) : 1.0, clamp(false ? _GLF_FUZZED(trunc(-129.411)) : 1.0, false ? _GLF_FUZZED(trunc(-129.411)) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(trunc(-129.411)) : 1.0, mix(float(_GLF_FUZZED(-45.68)), float(false ? _GLF_FUZZED(trunc(-129.411)) : 1.0), bool(true)))))), clamp((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(trunc(-129.411)) : 1.0), (false ? _GLF_FUZZED(trunc(-129.411)) : 1.0), (false ? _GLF_FUZZED(trunc(-129.411)) : 1.0)))), 1.0))), ivec2(1), mat3x4(1.0), mat4(1.0), true), _GLF_struct_4(mat3x2(1.0), _GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), uvec3(1u), ivec3(1), bvec3(true), true, mat2(1.0)), _GLF_struct_5(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 1u * (uint(uint(1u))))), 1u, 1u)), 1u, 1u)), 1u), 0u + (clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u)), 1u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u), uint(uint(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), _GLF_IDENTITY((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) | (clamp(1u, 1u, 1u)))), 1u)) ^ (0u ^ 0u), ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)) | ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u))))), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), _GLF_IDENTITY((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) | (clamp(1u, 1u, 1u)))), 1u)) ^ (0u ^ 0u), ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)) | ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)))))))))), 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), 0u + (clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) - 0u)) | (_GLF_IDENTITY(clamp(1u, 1u, 1u), max(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))), 1u))) : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), _GLF_IDENTITY(uint(uint(clamp(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), ~ (~ (uint(uint(clamp(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), _GLF_IDENTITY((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u), ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)) | ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), max(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))) | (clamp(1u, 1u, 1u)))), 1u)) ^ (0u ^ 0u))))))))))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), 0u + (clamp(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u))), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) ^ 0u)), 1u))) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), 0u + (clamp(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u))), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, 1u, 1u)) ^ 0u)), 1u))) : _GLF_FUZZED(subgroup_id)))) ^ 0u)) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), uint(uint(clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), 0u + (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) << 0u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), max(min(1u, 1u), min(1u, 1u))), (min(1u, 1u)) - 0u), 1u, 1u, (0u | 0u))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), _GLF_IDENTITY(_GLF_IDENTITY((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u))) | 0u)), ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)) | ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u))), min(_GLF_IDENTITY((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))))), clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u), ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)) | ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u), ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)) | (139473u & 0u)), ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u)) | ((clamp(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) ^ (0u ^ 0u))))))))))))), vec4(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))), vec3(1.0), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(vec2(521.509, -6.0).g)), float(cos(0.0)), bool(true))), 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat4(cos(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0), (mat4(cos(0.0), 1.0, 1.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) + mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(_GLF_IDENTITY(0.0, (0.0) / exp(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.1)), float(0.0), bool(true)))) - sqrt(0.0))) / exp(0.0)), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.1)), float(0.0), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false)))) - sqrt(0.0))) / _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + (float(mat2(1.0, determinant(mat4(cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) * exp(0.0)))), mix(float(_GLF_FUZZED(5.5)), float(float(_GLF_IDENTITY(1.0, float(float(1.0))))), bool(true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-9068.8556)))))))), mix(float(_GLF_FUZZED(5.5)), float(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), min(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), (_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9)))) / 1.0))))))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))), min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-9068.8556)))))))), mix(float(_GLF_FUZZED(5.5)), float(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), min(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), (_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9)))) / 1.0))))))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-9068.8556)))))))), mix(float(_GLF_FUZZED(5.5)), float(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), min(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9))), (_GLF_IDENTITY(float(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(1.0) : _GLF_FUZZED(-5.9)))) / 1.0))))))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), 0.0 + (float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(float(1.0)))), mix(float(_GLF_FUZZED(5.5)), float(float(_GLF_IDENTITY(1.0, float(float(1.0))))), bool(true)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (false ? _GLF_FUZZED(-900.672) : _GLF_IDENTITY(1.0, float(float(1.0)))))), mix(float(_GLF_FUZZED(5.5)), float(float(_GLF_IDENTITY(1.0, float(float(1.0))))), bool(true))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(735.958), float(vec2(_GLF_FUZZED(735.958), 1.0)))), mix(float(_GLF_FUZZED(1.7)), float((_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(735.958), float(vec2(_GLF_FUZZED(735.958), 1.0))))), bool(true)))), exp(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2164.3939) : 1.0)), 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, log(1.0), 0.0, 1.0)), 1.0, sqrt(0.0))))))), ivec2(1)), _GLF_struct_6(mat2x4(1.0), mat4x3(1.0), mat3x2(1.0), mat3x4(1.0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - _GLF_IDENTITY(0, max(0, 0))), 1.0), _GLF_struct_7(mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), min((1), (1))), (1))) | (1))))), _GLF_struct_12(_GLF_struct_9(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), ivec4(1), mat2(1.0), mat2(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ _GLF_IDENTITY((uvec3(137222u, 198473u, _GLF_IDENTITY(13536u, (_GLF_IDENTITY(13536u, _GLF_IDENTITY(~ (~ (13536u)), ~ (~ (~ (~ (13536u))))))) >> 0u)) & uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4((uvec3(137222u, 198473u, _GLF_IDENTITY(13536u, (_GLF_IDENTITY(13536u, ~ (~ (13536u)))) >> 0u)) & uvec3(0u, 0u, 0u)), 0u), (uvec4((uvec3(137222u, 198473u, _GLF_IDENTITY(13536u, (_GLF_IDENTITY(13536u, ~ (~ (13536u)))) >> 0u)) & uvec3(0u, 0u, 0u)), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), ivec2(1), _GLF_struct_10(vec2(1.0), mat4x3(1.0), 1.0), vec4(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, mat4x2(1.0), _GLF_struct_11(bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))) && true))), mat4x3(1.0)), mat4(1.0)));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u | (uint(uint(subgroup_id))))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) << 0u)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), min(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))) - _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, uint(uvec2(0u, (1u | 1u)))), 1u))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_13._f5.virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y), 0.0 + ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y))) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) || false)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(9679.8330)), vec2(_GLF_FUZZED(781.213), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
 if(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(true)))))) || false))))
    barrier();
   atomicStore(checker[_GLF_struct_replacement_13._f5.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) + (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_size)))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u, _GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u), 0u + ((((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u))) | (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 6u))), uint(6u))) ^ 1u, (((_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u ^ (1u)) : _GLF_FUZZED((-- workgroup_size)))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 1u) >> 0u))))), (_GLF_IDENTITY(read, (read) - 0u)) / 1u), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1, 0 | (1))), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1), (true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.46)), float(injectionSwitch.y), bool(true))))), 1), (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) | (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0)), _GLF_IDENTITY(1, (1) / (1 & ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), (ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (false ? _GLF_FUZZED(ivec3(-47854, 81601, -44401)) : ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))) | ivec3(0, 0, 0))) >> ivec3(_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0, _GLF_IDENTITY(((0 & -5660) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))), int(8))), (((0 & -5660) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))), int(8)))) | (((0 & -5660) << _GLF_IDENTITY(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))), int(8))))) ^ (0)), 0)), 1)) * ivec4(1, 1, 1, 1)) : _GLF_FUZZED(ivec4(-20485, -91549, 77542, -30308))))), max(ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (_GLF_IDENTITY(ivec3(4, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 1), (false ? _GLF_FUZZED(ivec3(2721, -29217, 51880)) : ivec3(4, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 1)))) >> ivec3(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), 0 | (~ (_GLF_IDENTITY(0, (0) >> 0)))))))), 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1), (ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1)) * ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1), (ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1)) * ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1), (ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1)) * ivec4(1, 1, 1, 1)))))) : _GLF_FUZZED(ivec4(-20485, -91549, 77542, -30308))))), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1), (true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)) >> ivec3(0, 0, 0)), 1), (ivec4(_GLF_IDENTITY(ivec3(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(4, int(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), injectionSwitch.y)), 1)) >> ivec3(0, 0, 0)), 1)) * ivec4(1, 1, 1, 1)) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(-20485, -91549, 77542, -30308), max(ivec4(-20485, -91549, 77542, _GLF_IDENTITY(-30308, min(-30308, -30308))), _GLF_IDENTITY(ivec4(-20485, -91549, 77542, -30308), max(_GLF_IDENTITY(ivec4(-20485, -91549, 77542, -30308), (true ? ivec4(_GLF_IDENTITY(-20485, ~ (_GLF_IDENTITY(~ (-20485), (~ (-20485)) << 0))), -91549, _GLF_IDENTITY(77542, int(ivec4(77542, 0, 1, 1))), -30308) : _GLF_FUZZED(ivec4(-14461, -46599, 31733, 35489)))), ivec4(-20485, -91549, 77542, -30308)))))))))))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5097.0603)))), clamp(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-5097.0603, max(-5097.0603, -5097.0603)))))), _GLF_IDENTITY((0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5097.0603))))), mix(float((0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5097.0603)))))), float(_GLF_FUZZED(-873.226)), bool(false))) - 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5097.0603)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5097.0603)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, clamp(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid))) | 0u))), min(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid))) | 0u))), _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_13._f5.virtual_gid)))))), (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid))) | 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, clamp(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, (_GLF_struct_replacement_13._f5.virtual_gid) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), _GLF_struct_replacement_13._f5.virtual_gid)))), (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, clamp(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid))) | 0u))), min(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid), (min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid)) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid))) | 0u))), _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid)), (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, min(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_struct_replacement_13._f5.virtual_gid))) | 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, clamp(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, max(_GLF_struct_replacement_13._f5.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, (_GLF_struct_replacement_13._f5.virtual_gid) + 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), _GLF_struct_replacement_13._f5.virtual_gid))))) * 1u)], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
