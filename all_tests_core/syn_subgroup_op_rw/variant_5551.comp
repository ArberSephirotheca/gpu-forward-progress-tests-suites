#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6808.4198), _GLF_FUZZED(-9.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-688.590) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false))), (injectionSwitch.x > injectionSwitch.y)))))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.0, -5.2)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(150623u, 191599u, 170161u)) : uvec3(gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.2))), (_GLF_IDENTITY(false ? _GLF_FUZZED(34.47) : injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (false ? _GLF_FUZZED(34.47) : injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(_GLF_IDENTITY(bvec2(! (bool(bool(false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (bool(bool(false))), true), bvec2(bvec4(bvec2(! (bool(bool(false))), true), false, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 1u))) * (gl_WorkGroupID)).x, (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)).x : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))) || false)))), false, false, false))) || false))) || false) && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, cos(0.0), 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, false))))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / sqrt(vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / sqrt(vec2(1.0, 1.0))) - vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)), (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(float((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), (true ? _GLF_IDENTITY(float(float((injectionSwitch.x))), float(mat3x4(float(float((injectionSwitch.x))), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))), 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), 1.0, 0.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(73.40), (false ? _GLF_FUZZED(determinant(mat2(4.4, 3862.8379, -3770.5624, -2924.0081))) : _GLF_FUZZED(73.40))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.3) : _GLF_FUZZED(6.9)))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(float((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), (true ? _GLF_IDENTITY(float(float((injectionSwitch.x))), float(mat3x4(float(float((injectionSwitch.x))), 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0)), dot(vec2(log(1.0), 1.0), vec2(1.0, 0.0))), 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), 1.0, 0.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(73.40), (false ? _GLF_FUZZED(determinant(mat2(4.4, 3862.8379, -3770.5624, -2924.0081))) : _GLF_FUZZED(73.40)))))))), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(float((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))))), (true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.0) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.0) : 0.0))) + 0.0) + _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(float((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x))))), (true ? _GLF_IDENTITY(float(float((injectionSwitch.x))), max(float(float((injectionSwitch.x))), float(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x))))) : _GLF_FUZZED(_GLF_IDENTITY(73.40, mix(float(_GLF_FUZZED(-486.901)), float(73.40), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) - 0.0))), (true ? _GLF_IDENTITY(float(float((injectionSwitch.x))), max(float(float((injectionSwitch.x))), float(float((injectionSwitch.x))))) : _GLF_FUZZED(73.40))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.9), (_GLF_FUZZED(-3.9)) / 1.0), _GLF_FUZZED(-8.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY((true ? float(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(8353.6462), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(8794.8138)), bvec2(true, false))).x))) : _GLF_FUZZED(73.40)), clamp((true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40)), (true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40)), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40), mix(float(_GLF_FUZZED((- 2149.6507))), float(true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40)), bool(true)))), mix(float((_GLF_IDENTITY(true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40), mix(float(_GLF_FUZZED((- 2149.6507))), float(true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40)), bool(true))))), float(_GLF_FUZZED(-5.3)), bool(false)))))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(float(87319u))), bvec2(false, false))), injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(float(87319u))), bvec2(false, false))), injectionSwitch)), 0.0, 1.0, 1.0, sin(0.0)), (mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(5.4, clamp(5.4, _GLF_IDENTITY(5.4, min(5.4, 5.4)), 5.4))), _GLF_FUZZED(float(87319u))), bvec2(false, false))), injectionSwitch)), 0.0, 1.0, 1.0, sin(0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(float(87319u))), bvec2(false, false))), injectionSwitch)), 0.0, 1.0, 1.0, sin(0.0)), (mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(float(87319u))), bvec2(false, false))), injectionSwitch)), 0.0, 1.0, 1.0, sin(0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).x), _GLF_IDENTITY(float(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x))))), (true ? float(float((injectionSwitch.x))) : _GLF_FUZZED(73.40))))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) ^ (0 | 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) | 0), (0) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) ^ (0 | 0))))) & _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) | 0))) | (1)), min(1, 1)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (0) ^ (0 | 0))) & 1, (_GLF_IDENTITY((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (0) ^ (0 | 0))) & 1, ~ (~ ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (0) ^ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, max(0, 0)))) | 0))) & _GLF_IDENTITY(1, ~ (~ (1))))))) - 0)))) && true); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), false || (! (! (bool(bvec2(false, true)))))))))), ! (! (bool(bvec2(false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) + 0)], mix(float(injectionSwitch[_GLF_IDENTITY(1, (1) + 0)]), float(_GLF_FUZZED(-5129.8653)), bool(false))))), injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED((-8.2)), _GLF_FUZZED(_GLF_IDENTITY(-28.43, 0.0 + (-28.43)))), bvec2(false, false)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), float(mat4x2(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), max((true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, cos(0.0), 0.0), vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(1.0, cos(0.0), 0.0), vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), 0.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(638.662)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), (true ? injectionSwitch.y : _GLF_FUZZED(-3.8)))))), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(638.662)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), (true ? injectionSwitch.y : _GLF_FUZZED(-3.8)))))), true, true, true)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, false || (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), true, false, true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], (((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0]) - 0.0), _GLF_FUZZED(8008.8564)), vec2(_GLF_FUZZED(-5.7), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), max(uint(uvec2(workgroup_base, 0u)), uint(uvec2(workgroup_base, 0u)))), (_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) / 1u)) - 0u)) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), int(ivec3(max(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) + (1)), _GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(max(_GLF_IDENTITY(0, 1 * (0)), 0), min(max(_GLF_IDENTITY(0, 1 * (0)), 0), max(_GLF_IDENTITY(0, 1 * (0)), 0)))), 1)))) << 0))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))), int(ivec3(max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, max((1) ^ 0, (1) ^ 0)))), 0, 1))), min(_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))), int(ivec3(max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, max((1) ^ 0, (1) ^ 0)))), 0, 1))), _GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))), int(ivec3(max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, max((1) ^ 0, (1) ^ 0)))), 0, 1)))))) << 0)))))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)))[0], _GLF_FUZZED(float(155887u))), vec2(_GLF_FUZZED(9.9), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)))[1]), bvec2(false, true))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)), min(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)).y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), (true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), clamp(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)))) : _GLF_FUZZED(findMSB(ivec4(87752, -29790, -99160, 82823)))))))) >> (0 | 0)))), int(ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), (true ? _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), clamp(ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)), ivec4(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (4)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 & 1) ^ 0)))) : _GLF_FUZZED(findMSB(ivec4(87752, -29790, -99160, 82823)))))))) >> (0 | 0)))), 1, 0, 1)))) | (4)), 4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || _GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) * 1.0) > injectionSwitch.y))))), true))))), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), false || (! (bool(bvec3(false, false, true)))))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y))))), true))))), ! (! (bool(bvec3(false, false, true))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true)))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), false))))))))), ! (! (bool(bvec3(false, false, true)))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) / 1.0), 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-6453)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3((injectionSwitch)[0], 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3((injectionSwitch)[0], 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0)))))), _GLF_FUZZED(-258.402)), bvec2(true, false))).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-99.62, -6.4)) : _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y))), ! (! (! (((injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (((injectionSwitch.x > injectionSwitch.y)))))), false), false))))))) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u) < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ! (! (subgroup_local_id + 1 < subgroup_size))))
  {
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))], _GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), _GLF_IDENTITY(min(read, read), (min(read, read)) >> (0u | 0u))), read)), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) | ((_GLF_IDENTITY(4, clamp(4, 4, 4))))) : _GLF_FUZZED(-32792))))) + 0), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(1, (1) / 1) * (_GLF_IDENTITY(4, clamp(4, 4, 4))))) + 0))))) / 1)) | (4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false)))), bool(true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.1)), float(0.0), bool(true)))))))).x > injectionSwitch.y))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(read, (read) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(read, _GLF_IDENTITY((read), ((read)) - (1u ^ 1u)) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), uint(uvec4(_GLF_IDENTITY(read, (read) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(read, (read) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(read, (read) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)) : _GLF_FUZZED(virtual_gid)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(409.840)), vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), float(_GLF_FUZZED(2.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, length(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, 3579.2047)))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(9634.7837, min(9634.7837, 9634.7837)))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), bool(true))), 0.0), clamp(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, 3579.2047)))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(9634.7837, min(9634.7837, 9634.7837)))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), bool(true))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, 3579.2047))), max(_GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, 3579.2047))), _GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, 3579.2047)))))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(9634.7837, _GLF_IDENTITY(min(9634.7837, 9634.7837), mix(float(min(9634.7837, 9634.7837)), float(_GLF_FUZZED(-825.072)), bool(false)))))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), bool(true))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, _GLF_IDENTITY(3579.2047, min(3579.2047, _GLF_IDENTITY(3579.2047, mix(float(3579.2047), float(_GLF_FUZZED(915.207)), bool(false))))))))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(9634.7837, _GLF_IDENTITY(min(9634.7837, 9634.7837), clamp(min(9634.7837, 9634.7837), _GLF_IDENTITY(min(9634.7837, 9634.7837), mix(float(_GLF_FUZZED(3.1)), float(min(9634.7837, 9634.7837)), bool(true))), min(9634.7837, 9634.7837)))))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true))), true))))))))), 0.0))), max(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, 3579.2047)))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(9634.7837, min(9634.7837, 9634.7837)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (bool(false)))))), 0.0, 0.0))), bool(true))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3579.2047, min(3579.2047, 3579.2047)))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(9634.7837, min(9634.7837, 9634.7837)))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), bool(true))), 0.0)))), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(56.73)), _GLF_IDENTITY(bool(false), false || (bool(false))))), 0.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0, 1.0)))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), float(_GLF_FUZZED(2.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3579.2047)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(61.80)))))), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))))), 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), min(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), (float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (false) && true))))))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, _GLF_IDENTITY((9634.7837) * 1.0, clamp((9634.7837) * 1.0, (9634.7837) * 1.0, (9634.7837) * 1.0))), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0)))))) * 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), min(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), (float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (false) && true))))))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, _GLF_IDENTITY((9634.7837) * 1.0, clamp((9634.7837) * 1.0, (9634.7837) * 1.0, (9634.7837) * 1.0))), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0)))))) * 1.0)), float(_GLF_IDENTITY(mat2x4((_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), min(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), (float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (false) && true))))))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, _GLF_IDENTITY((9634.7837) * 1.0, clamp((9634.7837) * 1.0, (9634.7837) * 1.0, (9634.7837) * 1.0))), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0)))))) * 1.0)), 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x4((_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), min(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0))), (float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (false) && true))))))), 0.0, 0.0), clamp(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, _GLF_IDENTITY((9634.7837) * 1.0, clamp((9634.7837) * 1.0, (9634.7837) * 1.0, (9634.7837) * 1.0))), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837)))), mix(float(_GLF_FUZZED(-4727.7763)), float(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9634.7837, (9634.7837) * 1.0), min(9634.7837, 9634.7837))))), bool(true))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 0.0, 0.0)))))) * 1.0)), 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))))))) - 0.0) / 1.0), bool(true))), 0.0)), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(56.73)), bool(false))), 0.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0, 1.0)))))), true, true, false))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bool(false)))), false, true, false)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false, true))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(false, bool(bool(false)))))))) && _GLF_IDENTITY(true, false || (true))) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))), (bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, ! (! (false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, ! (! (false)))))), true, true, false))))), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.2)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, ! (! (false)))))), true, false))))))))), (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false, true, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false, true, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-688.378)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false, true, false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(30.60)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(30.60)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(30.60)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true, false)), bool(bool(bool(bvec3((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(30.60)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true, false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(30.60)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(30.60)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true, false)), bool(bool(bool(bvec3((_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(30.60)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true, false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true))), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(650.246) : injectionSwitch.y))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)), false, false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))), false, false)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) && true)), false, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false))), false || (! (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
}
