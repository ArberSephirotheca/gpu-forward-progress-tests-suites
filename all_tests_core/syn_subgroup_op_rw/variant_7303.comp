#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 vec3 _f0;
 mat4 _f1;
 mat4 _f2;
 mat4x2 _f3;
 mat3 _f4;
 ivec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_0 {
 bool _f0;
 int _f1;
 mat4x2 _f2;
 uint _f3;
 uvec2 _f4;
 vec4 _f5;
 uint workgroup_base;
} ;

struct _GLF_struct_2 {
 uint _f0;
 _GLF_struct_0 _f1;
 mat4 _f2;
 uvec4 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), max(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)))))))))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((! (false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || _GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(float(true)))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) / 1u))))))) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z = _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))), (gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID))))) + uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-932.944)), vec2(_GLF_FUZZED(433.768), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-932.944)), vec2(_GLF_FUZZED(433.768), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).y)))))), (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-932.944)), vec2(_GLF_FUZZED(_GLF_IDENTITY(433.768, clamp(433.768, 433.768, 433.768))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).y))))))) && true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED((-8911.4439 * -9.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true))), determinant(mat4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + tan(0.0)))), 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), true, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), true, false))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) || false), false)))), true, false))), false, false))) && true)))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), true, true)), true, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_DEAD(false), true, true)), true, true), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(1u, _GLF_struct_0(true, 1, mat4x2(1.0), 1u, uvec2(1u), vec4(1.0), GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z * workgroup_id), mat4(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), _GLF_struct_1(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec3(mat3(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec3(mat3(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-64.42)), bool(false))), 0.0, 0.0)) + (1.0))), vec3(mat3(vec3(1.0, 1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))), mat4(1.0), mat4(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))) + vec3(0.0, 0.0, 0.0)))), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0)))), 1.0)), mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) + vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))) : _GLF_FUZZED(2.8))), 1.0))), float(_GLF_FUZZED(-0.6)), bool(false))) : _GLF_FUZZED(2959.7083)))), mat3(1.0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1040))), 1, _GLF_IDENTITY(1, max(1, 1)))), 0 | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1040))), 1, _GLF_IDENTITY(1, max(1, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (false ? _GLF_FUZZED((76333 >> 84199)) : 1)) : _GLF_FUZZED(1040))), 1, _GLF_IDENTITY(1, max(1, 1)))), 0 | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1040))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, max(1, 1))))))) / (1 | 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), int(ivec3(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, max(1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), 0 ^ ((int(1)))) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)))), (ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(9299) : int(1))), (int(1)) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(9299) : int(1))), (int(1)) + 0)) / 1))), int(1))))) * ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | 0), 1, 1, 1))))), 0, 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(1040))), 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 1))), (clamp(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) : _GLF_FUZZED(1040))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))), _GLF_IDENTITY(1, max(1, 1)))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-21525)))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), max((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))), int(ivec3(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) / 1), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> _GLF_IDENTITY(int(1), int(1)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), _GLF_IDENTITY(int(1), 0 + (int(1)))))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1), max((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + _GLF_IDENTITY(0, 0 + (0))))), int(1))))) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (1) ^ 0))) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1), ivec4(0, 0, _GLF_IDENTITY(0, (0) / 1), 0) | (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, _GLF_IDENTITY(1, 0 ^ (1)), 1), ((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1)) | ((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1))))))))))), 0, 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0)))) >> 0), int(1)))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), int(ivec3(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, max(1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> _GLF_IDENTITY(int(1), int(1)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-28538) : 1)))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1), max((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0)), ~ (~ ((int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0)))))), int(1))))) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1), ((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, _GLF_IDENTITY(1, (1) | 0))) | ((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(int(int(7))))))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1))))))))))), 0, 0))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), min(int(1), int(1))), _GLF_IDENTITY(int(1), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), (int(1)) >> 0)))) >> 0), int(1)))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), int(ivec3(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, max(1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | 0), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> _GLF_IDENTITY(int(1), int(1)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), max(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), min(~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), max(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), max(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (int(1)) + 0))), int(1)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) ^ 0)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), max(1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-28538) : 1)))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1), max((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0)), ~ (~ ((int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0)))))), int(1))))) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))) / 1.0), injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) << 0)), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((_GLF_IDENTITY(int(1), (int(1)) + 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(int(1), (int(1)) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(int(1), (int(1)) + 0)), ((_GLF_IDENTITY(int(1), (int(1)) + 0))) - 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(int(1), (int(1)) + 0)), ((_GLF_IDENTITY(int(1), (int(1)) + 0))) ^ 0))), (_GLF_IDENTITY(int(1), (int(1)) + 0))))), int(1))))) * ivec4(1, 1, 1, 1), ((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, _GLF_IDENTITY(1, (1) | 0))) | ((ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(int(int(7))))))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), 0 + (~ (~ (_GLF_IDENTITY(int(1), clamp(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), int(1), int(1)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) + 0))), int(1))))) * ivec4(1, 1, 1, 1))))))))))), 0, 0))) : _GLF_FUZZED(38035)))))))))), bvec2(true))), mat3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_3._f0._f1.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, max(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size))) >> uvec3(0u, 0u, 0u)).y, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y))), (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 1.0, 0.0, sqrt(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_3._f0._f1.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) - 0u, ~ (~ ((GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) - 0u, ~ (~ ((GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) - 0u)))), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) - 0u, ~ (~ ((GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) - 0u))))) | 0u)) ^ 0u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y)) + ((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))) - 0u)) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))) - 0u)) >> 0u) >> (1u ^ 1u)))], (buf[virtual_gid]) | 0u), buf[virtual_gid])), 4, 64, 0);
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(75687) : 1))), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(75687) : 1)))) * 1u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), true && (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), _GLF_IDENTITY(true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), (_GLF_IDENTITY(true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), bool(bvec3(_GLF_IDENTITY(true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), ! (! (true && (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))), false, true)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y, (subgroup_local_id + 1 < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-552.154) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-552.154) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   atomicStore(checker[virtual_gid], GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))), true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x, 4, _GLF_IDENTITY(64, 0 | (64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-41.02)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))) && true)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-4.2))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
