#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 uvec4 _f0;
 mat3x4 _f1;
 vec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
 mat2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_25 {
 bvec3 _f0;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_22 {
 bvec4 _f0;
 ivec3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_21 {
 int _f0;
 ivec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_23 {
 uint virtual_gid;
 mat2x3 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 float _f3;
} ;

struct _GLF_struct_29 {
 bool _f0;
 _GLF_struct_23 _f1;
 mat4x3 _f2;
 _GLF_struct_26 _f3;
 mat4x3 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
 int _f1;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 mat4x3 _f1;
 vec4 _f2;
 int _f3;
 mat4x3 _f4;
 vec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 mat4x2 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 bool _f4;
} ;

struct _GLF_struct_15 {
 int _f0;
 mat2x4 _f1;
 mat2 _f2;
 bool _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_14 {
 mat3x2 _f0;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 vec4 _f3;
 mat3x2 _f4;
 mat3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_12 {
 int _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 bvec2 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 mat2x3 _f1;
 mat3 _f2;
 _GLF_struct_12 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 uint _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 mat2x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 bvec4 _f1;
 _GLF_struct_9 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
 uint _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_20 {
 _GLF_struct_10 _f0;
 uint num_workgroup;
 mat2 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_16 _f3;
 int _f4;
 _GLF_struct_19 _f5;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 bvec4 _f1;
 ivec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 _GLF_struct_4 _f1;
 mat3x4 _f2;
 ivec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat4x3 _f1;
 int _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uvec4 _f1;
 ivec4 _f2;
 vec2 _f3;
 mat4 _f4;
 bool _f5;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_5 _f3;
 bvec2 _f4;
 mat4 _f5;
 _GLF_struct_6 _f6;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), clamp(uint(uint(subgroup_id)), uint(uint(subgroup_id)), _GLF_IDENTITY(uint(uint(subgroup_id)), 1u * (uint(uint(subgroup_id)))))));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat4(1.0), _GLF_struct_1(uvec3(1u), _GLF_struct_0(mat4x2(1.0), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | ((1u))) ^ 0u)), ivec4(1), vec2(1.0), mat4(1.0), true)), _GLF_struct_3(_GLF_struct_2(mat3x2(1.0), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(1, max(1, 1)), mat2x4(1.0))), _GLF_struct_5(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, 0 + (1))))))) | (1))), _GLF_struct_4(ivec3(1), bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true)), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), mat3x2(1.0)), mat3x4(1.0), ivec2(1), true), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), mat4(1.0), _GLF_struct_6(ivec4(1), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(0, _GLF_IDENTITY(0, (0) | (0))) + (ivec2(1))), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 1))), 0)), 0, 0, 0) ^ (ivec4(1, _GLF_IDENTITY(1, ~ (~ (1))), 0, 0)))))) | (1))), (true ? ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(1, 1, 0, 0)))))) | (1))) : _GLF_FUZZED(ivec2(41562, -3241)))))), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (ivec2(1))))), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (1.0) + _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0)))))), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1))) != (_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, 3)), (false ? _GLF_FUZZED(_injected_loop_counter) : 3)), min(3, 3))), int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter))))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_10(_GLF_struct_8(bvec4(true), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), uvec3(_GLF_IDENTITY(1u, uint(uint(1u))))), bvec4(true), _GLF_struct_9(mat3x4(1.0), bvec3(true), mat2x4(1.0), 1u, mat2x4(1.0)), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, determinant(mat3(0.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, sqrt(1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.4, max(-4.4, -4.4)), 76.64).t, mix(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.4, max(-4.4, _GLF_IDENTITY(-4.4, (true ? -4.4 : _GLF_FUZZED(-7.7))))), 76.64).t, (true ? vec2(_GLF_IDENTITY(-4.4, max(-4.4, _GLF_IDENTITY(-4.4, mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(-5.5)), bool(false)))), bool(true))))), 76.64).t : _GLF_FUZZED(floor(_GLF_IDENTITY(334.849, (334.849) * 1.0)))))), float(_GLF_FUZZED(7.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), clamp(1.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.4)), vec2(_GLF_FUZZED(5689.6146), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * abs(exp(0.0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0 * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(675.970) : 1.0)), 1.0))))))) - 0.0), mix(float(_GLF_FUZZED(-2506.3746)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.2) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.2) : 1.0)))), (1.0) + log(1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false)))))), mat3x2(1.0), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), uvec3(1u)), gl_NumWorkGroups.x, mat2(1.0), _GLF_struct_13(_GLF_struct_11(mat4x2(1.0), bvec2(true), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec3(1u), uvec3(1u)), mat2x3(1.0), mat3(1.0), _GLF_struct_12(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0), _GLF_IDENTITY(uvec2(1u), min(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(clamp(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(min(uvec2(1u), uvec2(1u)), (min(uvec2(1u), uvec2(1u))) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))))), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u)))), (false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u))), uvec2(1u)), _GLF_IDENTITY(uvec2(uvec3(clamp(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), min(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | 0u)), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(138933u, 64872u)) : uvec2(1u)))))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u)))) >> uvec2(0u, 0u)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u), (false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u)) | (uvec2(0u, 0u) | uvec2(0u, 0u))))), uvec2(1u)), 1u)), (uvec2(_GLF_IDENTITY(uvec3(clamp(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), min(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u)), (uvec2(1u)) - uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) >> uvec2(0u, 0u)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(32285u, 102501u), (true ? uvec2(32285u, 102501u) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size)))) : uvec2(1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u)), ~ (~ ((false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u))))) | (uvec2(0u, 0u) | uvec2(0u, 0u))))), uvec2(1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(192109u) : 1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(clamp(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), min(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u)), (uvec2(1u)) - uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) >> uvec2(0u, 0u)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(32285u, 102501u), (true ? uvec2(32285u, 102501u) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size)))) : uvec2(1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u)), ~ (~ ((false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u))))) | (uvec2(0u, 0u) | uvec2(0u, 0u))))), uvec2(1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(192109u) : 1u))), (true ? uvec3(clamp(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), min(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u)), (uvec2(1u)) - uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) >> uvec2(0u, 0u)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(32285u, 102501u), (true ? uvec2(32285u, 102501u) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size)))) : uvec2(1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u)), ~ (~ ((false ? _GLF_FUZZED(uvec2(32285u, 102501u)) : uvec2(1u))))) | (uvec2(0u, 0u) | uvec2(0u, 0u))))), uvec2(1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(192109u) : 1u))) : _GLF_FUZZED(uvec3(175278u, 20294u, 37990u))))))))) | uvec2(0u, 0u))))))), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(vec2(5.8, _GLF_IDENTITY(8.8, (true ? _GLF_IDENTITY(8.8, clamp(8.8, 8.8, 8.8)) : _GLF_FUZZED(9285.8427))))))), vec2(1.0)))), _GLF_struct_16(bvec3(true), _GLF_struct_14(mat3x2(1.0)), _GLF_struct_15(1, mat2x4(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), true, bvec3(true)), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / sqrt(abs(1.0))))), mat3x2(1.0), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0))), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0))), (float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0)))) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0))), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), (true ? (float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))) : _GLF_FUZZED(-797.683))) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-706.390) : (1.0))), (1.0))), (1.0))) * 1.0), 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0))), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat2x3(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2951.3766)), float(1.0), bool(true))), 1.0, 0.0)) * mat2(1.0))), (float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat2x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0)))) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0))))))), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0)))), 1, _GLF_struct_19(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), (~ (ivec2(1))) | ivec2(0, 0)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) ^ ((0 | 0) & 23212))), (ivec2(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), (~ (ivec2(1))) | ivec2(0, 0)))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), (~ (ivec2(1))) | ivec2(0, 0)))))))), max(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), (~ (ivec2(1))) | ivec2(0, 0)))))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), (~ (ivec2(1))) | ivec2(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0))))))))) : _GLF_FUZZED((-24356 & ivec3(-87015, 26957, -45303)).tp))), mat4x2(1.0), _GLF_struct_17(uvec3(1u), mat4x3(1.0), vec4(1.0), 1, mat4x3(1.0), vec4(1.0), bvec3(true)), _GLF_struct_18(vec2(1.0), 1), true));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y = workgroup_size;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), clamp(0u ^ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), 0u ^ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), 0u ^ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y * workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(round(1.2)) : 1.0))) + 0.0), injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(+ -48916, ~ (_GLF_IDENTITY(~ (+ -48916), (~ (+ -48916)) << 0)))) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1, 1 * (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(int(int(5)), 0 ^ (int(int(5)))))))) / 1)) >> _GLF_IDENTITY(int(5), int(5))) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(true, false, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_IDENTITY(false, ! (! (false)))))), (bool((! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ! (! (bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), _GLF_IDENTITY((bool((! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))) || _GLF_IDENTITY(false, ! (! (false))), true && (((false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))))), ! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) && true)))))))))))))), _GLF_IDENTITY(bool(bvec4((bool((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(((false)) || _GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(((false)) || _GLF_IDENTITY(false, ! (! (false))), true && (((false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bool((! (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) && true)))), bool(bvec2(! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) && true)))), true))))))))))))), false, true, false)), bool(bvec4(bool(bvec4((bool((! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(((false)) || _GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((((false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) && true))))))), ((((false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true, false)), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(((false)) || false, (((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) && (true)))))), false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))) || false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), false || (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || false)))), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), false || (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || false)))), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), false || (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || false)))), true), bvec2(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), true && (! _GLF_IDENTITY((false), ((false)) || false))), false || (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || false)))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0))).x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) || false)))))))))))))) || false)))) && true)), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), ((false)) || false), false || (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), true)))))) || false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) && true), ! (! _GLF_IDENTITY(((false)), false || (((false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), false, true, true))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7202.2473, -2604.4177)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) && true), ! (! _GLF_IDENTITY(((false)), false || (((false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), false, true, true))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7202.2473, -2604.4177)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))), bvec3(bvec4(bvec3(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) && true), ! (! _GLF_IDENTITY(((false)), false || (((false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false || (true), true && (false || (true))), false, true, true))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7202.2473, -2604.4177)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))), false))), true)))))))))), bool(bvec2(bool((! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), false || (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) || false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true), bvec2(bvec2(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))))) || false), ((false)) || false)), true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true))))))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(true, _GLF_struct_23(workgroup_base + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (subgroup_size)), max(uint(~ (subgroup_size)), uint(~ (subgroup_size))))), _GLF_IDENTITY((uint(uint(~ (subgroup_size)))) | (uint(uint(~ (subgroup_size)))), _GLF_IDENTITY(clamp((uint(uint(~ (subgroup_size)))) | (uint(uint(~ (subgroup_size)))), _GLF_IDENTITY((uint(uint(~ (subgroup_size)))), clamp(_GLF_IDENTITY((uint(uint(~ (subgroup_size)))), min((uint(uint(~ (subgroup_size)))), (uint(uint(~ (subgroup_size)))))), _GLF_IDENTITY((uint(uint(~ (subgroup_size)))), 1u * ((uint(uint(~ (subgroup_size)))))), (uint(uint(~ (subgroup_size)))))) | (_GLF_IDENTITY(uint(uint(~ (subgroup_size))), ~ (~ (uint(uint(~ (subgroup_size))))))), (uint(uint(~ (subgroup_size)))) | (uint(uint(~ (subgroup_size))))), min(clamp((uint(uint(~ (subgroup_size)))) | (uint(uint(~ (subgroup_size)))), _GLF_IDENTITY((uint(uint(~ (subgroup_size)))), clamp(_GLF_IDENTITY((uint(uint(~ (subgroup_size)))), min((uint(uint(~ (subgroup_size)))), (uint(uint(~ (subgroup_size)))))), _GLF_IDENTITY((uint(uint(~ (subgroup_size)))), 1u * ((uint(uint(~ (subgroup_size)))))), (uint(uint(~ (subgroup_size)))))) | (_GLF_IDENTITY(uint(uint(~ (subgroup_size))), ~ (~ (uint(uint(~ (subgroup_size))))))), (uint(uint(~ (subgroup_size)))) | (uint(uint(~ (subgroup_size))))), clamp((uint(uint(~ (subgroup_size)))) | (uint(uint(~ (subgroup_size)))), _GLF_IDENTITY((uint(uint(~ (subgroup_size)))), clamp(_GLF_IDENTITY((uint(uint(~ (subgroup_size)))), min((uint(uint(~ (subgroup_size)))), (uint(uint(~ (subgroup_size)))))), _GLF_IDENTITY((uint(uint(~ (subgroup_size)))), 1u * ((uint(uint(~ (subgroup_size)))))), (uint(uint(~ (subgroup_size)))))) | (_GLF_IDENTITY(uint(uint(~ (subgroup_size))), ~ (~ (uint(uint(~ (subgroup_size))))))), (uint(uint(~ (subgroup_size)))) | (uint(uint(~ (subgroup_size))))))))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(497.383) : 0.0)), log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0)))))), injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))), _GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-378.568) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.0) : 0.0)))), 0.0)), injectionSwitch.x)))) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ _GLF_IDENTITY((uint(5u)), ((uint(5u))) | ((uint(5u)))))), 1u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))), 1u, 0u, 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, 0u | (0u)))) ^ (uint(5u)))), 1u, 0u, 0u))) | (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))), clamp(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))), clamp(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u)))))), 1u, 0u, 0u))))) | (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))), 0u ^ (uint(5u)))), 1u, 0u, 0u)))))))) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))) + _GLF_struct_replacement_7.subgroup_local_id, mat2x3(1.0), _GLF_struct_21(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-52686), (_GLF_FUZZED(-52686)) - 0) : 1)), int(ivec2(1, 1))), ivec3(1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))))))), _GLF_struct_22(bvec4(true), ivec3(1), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u) | ((_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u))))), 1.0), mat4x3(1.0), _GLF_struct_26(_GLF_struct_24(uvec3(1u)), _GLF_struct_25(bvec3(true)), uvec3(1u)), mat4x3(1.0), _GLF_struct_28(_GLF_struct_27(uvec4(1u), mat3x4(1.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-5012.8303), (_GLF_FUZZED(-5012.8303)) / 1.0))), 1.0))), 1u), mat2(1.0), mat4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id + 1, uint(uvec4(_GLF_struct_replacement_7.subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 1u, 0u))));
 uint read = atomicLoad(buf[_GLF_struct_replacement_29._f1.virtual_gid], 4, 64, 0);
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5655.5148))), injectionSwitch.x)) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec4(int(5), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, 0)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec4(int(5), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, 0)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec4(int(5), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 1, 0))))))) || false)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 4, 64, 4);
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_local_id, ~ (~ (_GLF_struct_replacement_7.subgroup_local_id))) + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-747.502)), vec2(_GLF_FUZZED(72.03), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-747.502)), vec2(_GLF_FUZZED(72.03), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y, true, true, true)))))))
        barrier();
      }
     else
      {
      }
     atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, max(_GLF_struct_replacement_29._f1.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) / 1u))), (_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)) : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)) : _GLF_FUZZED(workgroup_base))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_29._f1.virtual_gid, (_GLF_struct_replacement_29._f1.virtual_gid) | (_GLF_struct_replacement_29._f1.virtual_gid)) : _GLF_FUZZED(workgroup_base))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))))))) * 1u)))], read, 4, 64, 4);
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     do
      {
       atomicStore(buf[_GLF_struct_replacement_29._f1.virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-58837))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
}
