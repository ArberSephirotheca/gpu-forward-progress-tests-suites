#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9538.7602), _GLF_FUZZED(vec3(311.220, -5.6, 635.290).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, false)), true, true))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bool(bvec3(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)))), false)), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(8.7, min(8.7, 8.7)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(8.7, min(8.7, 8.7)), max(_GLF_IDENTITY(8.7, min(8.7, 8.7)), _GLF_IDENTITY(_GLF_IDENTITY(8.7, min(8.7, 8.7)), max(_GLF_IDENTITY(8.7, min(8.7, 8.7)), _GLF_IDENTITY(8.7, min(8.7, 8.7)))))) : _GLF_FUZZED(92.48)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(10.81)), bvec2(false, false))).x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1])), _GLF_IDENTITY((true ? (vec2(_GLF_FUZZED(_GLF_IDENTITY(8.7, 1.0 * (8.7))), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)), mix(vec2(((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[0], ((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-409.453), (_GLF_FUZZED(-409.453)) + sin(0.0)), _GLF_FUZZED((false ? 7.5 : -9.4))), bvec2(false, false))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-508.237, 6.2)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]))), 1.0, 1.0))), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-63.47, -8610.5802)) : _GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), max(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))))[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))))), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1])), _GLF_IDENTITY((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)), mix(vec2(((_GLF_IDENTITY(true, (true) || false) ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[0], ((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-409.453), min(_GLF_IDENTITY(_GLF_FUZZED(-409.453), clamp(_GLF_FUZZED(-409.453), _GLF_FUZZED(-409.453), _GLF_IDENTITY(_GLF_FUZZED(-409.453), 1.0 * (_GLF_FUZZED(-409.453))))), _GLF_FUZZED(-409.453))), _GLF_FUZZED((false ? 7.5 : -9.4))), bvec2(false, false))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-508.237, 6.2)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]))), 1.0, 1.0))), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-63.47, -8610.5802)) : _GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), max(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))))[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y)))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0)), (_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1])), _GLF_IDENTITY((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)), mix(vec2(((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[0], ((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_FUZZED(-409.453), _GLF_FUZZED((false ? 7.5 : -9.4))), bvec2(false, false))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-508.237, 6.2)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]))), 1.0, 1.0))), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-63.47, -8610.5802)) : _GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), max(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ (0 ^ 0))) / 1)], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y)))), true, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.7, min(8.7, 8.7))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])), (true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0)), (_GLF_IDENTITY((vec2(_GLF_FUZZED(8.7), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1])), _GLF_IDENTITY((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)), mix(vec2(((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[0], ((true ? (vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1])) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_FUZZED(-409.453), _GLF_FUZZED((false ? 7.5 : -9.4))), bvec2(false, false))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-508.237, 6.2)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]))), 1.0, 1.0))), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(-63.47, -8610.5802)) : _GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), max(true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch), true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ (0 ^ 0))) / 1)], _GLF_FUZZED(648.596)), bvec2(true, false))), injectionSwitch)).y)))), true, true), true)))))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.6)))) + _GLF_IDENTITY(dot(vec2(sqrt(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(sqrt(0.0), determinant(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- 1880.7159))), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0)), (false ? _GLF_FUZZED(-6.2) : dot(vec2(sqrt(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-837.993)), float(float(vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.6)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))) && true, true, _GLF_IDENTITY(true, (true) || false)), false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))))))) || false)), (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))), true && (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), false, false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), (! (true && (! (false)))) || false)))), (! (_GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), (! (true && (! (false)))) || false))))) && true)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))))), (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false))) && true), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0))), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0)))) + 0.0))))), false, false)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! (_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec4(! ((false)), true, false, false)), bool(bvec2(bool(bvec4(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), true, false, false)), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))))))), (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true))) || false)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))) || false), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))) || false), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))) || false), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))) || false), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))) || false), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))) || false), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))) || false), bool(bool(! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false)))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))), false || ((_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(1.0))) * (injectionSwitch.y)), injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-34.50) : injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-34.50) : injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-34.50) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-34.50) : injectionSwitch.y)))) || false))))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uvec4(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup))), (1u | _GLF_IDENTITY(1u, (1u) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * 1u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) * 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uvec4(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup))), (1u | 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * 1u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), (uint(uvec2(subgroup_id * subgroup_size, 0u))) ^ 0u)) << (0u ^ 0u))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) * 1u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uvec4(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(1u | 1u, 0u + (1u | 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * 1u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) * 1u))))) * 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uvec4(_GLF_IDENTITY((subgroup_local_id), (true ? (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) : _GLF_FUZZED(num_workgroup))), (1u | 1u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), (0u))) | 0u)))))) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) * 1u)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)))) / 1u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), uint(uvec4(_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(num_workgroup))), (1u | 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))), 0u + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u))), max(uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u))), uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u))))))), uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), (uint(uvec2(subgroup_id * subgroup_size, 0u))) - 0u)), 1u, 0u))))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))) * 1u))))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u, 1u))) + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) - 0, (((_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(49288) : 1)))) - 0) + (0 | 0)))))), (~ (1)) ^ 0), ~ (1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) - 0, (((_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(49288) : 1)))) - 0) + (0 | 0)))))), (~ (1)) ^ 0), ~ (1))))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) | ((subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, (64) >> 0)))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) | (uint(1))), min(uint(1), uint(1))), ~ (~ (_GLF_IDENTITY(uint(1), min(uint(1), uint(1))))))) | (uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.679), _GLF_FUZZED(-98.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), true))).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.679), _GLF_FUZZED(-98.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-641.679), _GLF_FUZZED(-98.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 1.0, 0.0, 0.0, 0.0, 1.0))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))), true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) / 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, max((4) << 0, _GLF_IDENTITY((4) << 0, min((4) << 0, (4) << 0))))), 4) : _GLF_FUZZED(-77808)))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2276.2304, (2276.2304) - 0.0))), float(injectionSwitch.x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(2276.2304, (2276.2304) - 0.0))), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(_GLF_IDENTITY(2276.2304, (2276.2304) - 0.0))), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2276.2304, (2276.2304) - 0.0))), float(injectionSwitch.x), bool(true)))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(2276.2304, (2276.2304) - 0.0))), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(_GLF_IDENTITY(2276.2304, (2276.2304) - 0.0))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) - 0.0)) * 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(-2146.4756), (_GLF_FUZZED(-2146.4756)) - abs(0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), vec2(mat4x2(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), injectionSwitch)).x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.8) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
