#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 uint num_workgroup;
 ivec4 _f0;
 uvec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 bvec4 _f1;
 float _f2;
 vec4 _f3;
 vec3 _f4;
 bvec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 bvec4 _f2;
 float _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 uvec2 _f1;
 int _f2;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_5 {
 uint _f0;
 mat4 _f1;
 mat3x4 _f2;
 int _f3;
 uint _f4;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat4 _f1;
 float _f2;
 ivec4 _f3;
 bvec3 _f4;
 uint _f5;
} ;

struct _GLF_struct_2 {
 float _f0;
 ivec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 vec4 _f1;
 mat3x2 _f2;
 bvec2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_15 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)))))) && true, bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(-69.42), (injectionSwitch)[1]), bvec2(false, true))).y)))))) && true, false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), tan(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(71.84) : 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-5.0)))), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), max(vec2(mat2x4(injectionSwitch, exp(0.0), 0.0, tan(0.0), length(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), 1.0)), vec2(mat2x4(injectionSwitch, exp(0.0), 0.0, tan(0.0), length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-35.21) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((+ -38.17), float(mat4x3((+ -38.17), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), float(float(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0 * (length(normalize(vec3(1.0, 1.0, 1.0))))))))), 0.0, 0.0, abs(abs(0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.3)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y)))), bool(true))) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * vec2(1.0, 1.0)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) * vec2(1.0, 1.0)).y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), true, true, false))), (bool(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), true, true, false)))) && true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, false, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.3)), vec2(_GLF_FUZZED(4.1), (injectionSwitch)[1]), bvec2(false, true))).y))), _GLF_struct_4(_GLF_struct_0(bvec4(true), vec4(1.0), mat3x2(1.0), bvec2(true), vec4(1.0)), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_1(bvec4(true)), _GLF_struct_2(1.0, ivec2(1), vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(min(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (min(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), min(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0))))), float(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - abs(abs(0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(-4571.6263)), vec2(_GLF_IDENTITY(_GLF_FUZZED((+ -8765.5730)), min(_GLF_FUZZED((+ -8765.5730)), _GLF_IDENTITY(_GLF_FUZZED((+ -8765.5730)), min(_GLF_FUZZED((+ -8765.5730)), _GLF_IDENTITY(_GLF_FUZZED((+ -8765.5730)), max(_GLF_FUZZED((+ -8765.5730)), _GLF_FUZZED((+ -8765.5730)))))))), (vec2(1.0, 0.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED((vec2(173.413, -5.1) * vec2(-764.199, -677.783))) : _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED((4.6 * 8.6)), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(-1.3)), bvec2(true, false))))), _GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0)), clamp((vec2(1.0, 0.0)), (vec2(1.0, 0.0)), (vec2(1.0, 0.0)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0)), clamp((vec2(1.0, 0.0)), (vec2(1.0, 0.0)), (vec2(1.0, 0.0))))), max(mat2(1.0) * (_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0)), clamp((vec2(1.0, 0.0)), (vec2(1.0, 0.0)), (vec2(1.0, 0.0))))), mat2(1.0) * (_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0)), clamp((vec2(1.0, 0.0)), (vec2(1.0, 0.0)), (vec2(1.0, 0.0)))))))) + vec2(0.0, 0.0)))))))))))), _GLF_struct_3(mat4x2(1.0), mat4(1.0), 1.0, ivec4(1), bvec3(true), _GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_struct_6(ivec2(1), _GLF_struct_5(1u, mat4(1.0), mat3x4(1.0), _GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, 0 ^ ((1) + 0))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))), _GLF_struct_10(ivec3(1), _GLF_struct_7(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec2(1u), 1), _GLF_struct_8(ivec2(1), uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u))), _GLF_struct_9(mat2x3(1.0), mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(882.272), (_GLF_FUZZED(882.272)) / 1.0)), float(mat2((true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(882.272), (_GLF_FUZZED(882.272)) / 1.0)), 1.0, 0.0, cos(0.0)))), (false ? _GLF_FUZZED(-751.445) : _GLF_IDENTITY((true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(882.272), (_GLF_FUZZED(882.272)) / 1.0)), float(mat2((true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(-5.6, -1.5, -6.0)[2]) : 1.0)), 1.0, 1.0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(882.272), (_GLF_FUZZED(882.272)) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(882.272), (_GLF_FUZZED(882.272)) / 1.0), (_GLF_IDENTITY(_GLF_FUZZED(882.272), (_GLF_FUZZED(882.272)) / 1.0)) / 1.0)) + 0.0)), 1.0, 0.0, cos(0.0)))))))) * 1.0)))), _GLF_struct_15(_GLF_struct_11(vec4(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-967.179) : 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-967.179) : 1.0))))))), _GLF_struct_12(ivec3(1), bvec4(true), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), float(_GLF_IDENTITY(vec4(_GLF_FUZZED(-8898.9170), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-438.711)), vec2(_GLF_FUZZED(4.6), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.4) : (injectionSwitch)[1]))), bvec2(false, true))), mix(vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(_GLF_IDENTITY(2.4, mix(float(_GLF_FUZZED(137.590)), float(2.4), bool(true))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, determinant(mat4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, length(vec2(0.0, 0.0)), sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), mix(float(float(mat3x2(injectionSwitch.y, 1.0, determinant(mat4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, length(vec2(0.0, 0.0)), sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-0.0)), bool(false)))))), true))).x)), (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED(vec4(1.8, 122.460, -7.1, -5.9)) : vec4(_GLF_FUZZED(-8898.9170), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), float(_GLF_FUZZED(-620.484)), bool(false))), min(_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (determinant(mat2(1.0, 0.0, 0.0, 1.0))) / 1.0) * (_GLF_FUZZED(-8898.9170))), _GLF_FUZZED(-8898.9170))), min(_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), clamp(_GLF_FUZZED(-8898.9170), _GLF_FUZZED(-8898.9170), _GLF_FUZZED(-8898.9170))), (_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), clamp(_GLF_FUZZED(-8898.9170), _GLF_FUZZED(-8898.9170), _GLF_FUZZED(-8898.9170)))) * _GLF_ONE(1.0, injectionSwitch.y))) + 0.0), determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.5)), float(1.0), bool(true))), 1.0, 1.0)), _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, log(1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0))), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))))), (true ? _GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat2(498.966, 88.91, -5320.8894, 46.08))))) * (_GLF_FUZZED(-8898.9170))), _GLF_FUZZED(-8898.9170))), _GLF_IDENTITY(_GLF_FUZZED(-8898.9170), min(_GLF_IDENTITY(_GLF_FUZZED(-8898.9170), determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (_GLF_FUZZED(_GLF_IDENTITY(-8898.9170, mix(float(_GLF_FUZZED(-6.7)), float(-8898.9170), bool(true)))))), _GLF_IDENTITY(_GLF_FUZZED(-8898.9170), float(mat2x3(_GLF_FUZZED(-8898.9170), cos(0.0), 0.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true))))), vec4(1.0), vec3(1.0), bvec4(true), mat3(1.0)), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))) / determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.3), (_GLF_FUZZED(8.3)) * cos(0.0))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))))))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))))))), (true ? min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))) - 0.0)), bool(true)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))), mix(float(_GLF_FUZZED((-6094.8733))), float(max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), false)))))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))))), bool(true))))))) : _GLF_FUZZED(-2.5)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2335.6928) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-24.17))))), 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + 0.0), mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))))))), (false ? _GLF_FUZZED(inversesqrt(57.85)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))))))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))))))), 1.0)))))))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.3, (8.3) / 1.0))), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true))) * 1.0), mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(8.3)), float(1.0), bool(true)))) : _GLF_FUZZED(-5130.1880)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.3, min(8.3, _GLF_IDENTITY(8.3, (8.3) - 0.0))))), float(1.0), bool(true))))))))))), _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(-1.3) : min(1.0, 1.0)))), _GLF_struct_13(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0)))))))), _GLF_struct_14(gl_NumWorkGroups.x, ivec4(_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u), (false ? _GLF_FUZZED(uvec3(58238u, 24514u, 69131u)) : (uvec3(1u)) ^ uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)))), mat2(1.0))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(usubBorrow(102284u, 3080u, subgroup_size)) : gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))) && true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(! ((false)), false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(! ((false)), false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(! ((false)), false), false, true)), true))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! ((false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(! ((false)), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY((false), true && ((false)))), false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(808.143, -7.5)))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))), injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(95.80)), vec2(_GLF_FUZZED(-7.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y) - 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x))), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), false, true, true))))))), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(tan(vec2(0.0, 0.0))) + (injectionSwitch)).y, (injectionSwitch.y) - 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * 1.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(192703u) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(73277u & _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u, 1u))), min(73277u & 0u, 73277u & _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (true ? ~ (~ (subgroup_id)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (true ? ~ (~ (subgroup_id)) : _GLF_FUZZED(workgroup_size))))) / 1u), min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) / 1u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), min(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), clamp(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))), ~ (subgroup_id * subgroup_size))))) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u)) << (0u & 103851u))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))), ((~ (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))))) | (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))), ((~ (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))))) | (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ (subgroup_id))))))) | ((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))), ((~ (_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))))) | (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ (subgroup_id)))))))) - 0u) * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))))) | (subgroup_local_id)))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) | (subgroup_local_id)) + 1) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec4((false) || _GLF_IDENTITY(false, ! (! (false))), false, true, true)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY((bool(bool((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((false)))))) || false)) && true)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false))))), false || (! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)), float(vec4(clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)), 0.0, length(0.0), 1.0)))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false)))))))) && true)))) && true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY((bool(bool((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((false)))))) || false)) && true)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false))))), false || (! (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-83.00)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)), float(vec4(clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)), 0.0, length(0.0), 1.0)))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || ((false)))))))) && true)))) && true)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) | (uint(_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm2x16(vec2(-7.4, -23.05))) : (uint(1)))))), max(~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), ~ (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))))))), (~ (_GLF_IDENTITY(uint(1), 0u | (uint(1))))) / 1u)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(next_virtual_gid))), min(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), uint(1)))))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) << 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) << 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) << 0u))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) << 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) << 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) << 0u)))))) * 1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), uint(1))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), uint(1))))), (_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), uint(1)))))) >> 0u))))))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) << 0u)), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)), (true ? int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)) : _GLF_FUZZED(51333)))) ^ 0))), min(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)), (true ? int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)) : _GLF_FUZZED(51333)))) ^ 0))), uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)), (true ? int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80755) : _GLF_IDENTITY(1, (1) * 1))), 0)) : _GLF_FUZZED(51333)))) ^ 0))))))), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) << 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) + 0u), 0u | (uint(1)))) << 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) << _GLF_IDENTITY(0u, 1u * (0u))))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, ~ (~ (4))))), 4), (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, ~ (~ (4))))), 4), 0 + (clamp(4, _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, ~ (~ (4))))), 4)))) / 1), _GLF_IDENTITY(int(ivec3(clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0 + (4), 0 + (0 + (4)))), 4), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-9189) : 0 >> _GLF_IDENTITY(int(0), int(0))))))), _GLF_IDENTITY(0 | (int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), ~ (~ ((4))))), 4), 0, (0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-72786))))))))), ~ (_GLF_IDENTITY(~ (0 | (int(ivec3(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), ~ (~ ((4))))), 4), min(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), ~ (~ ((4))))), 4), clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), ~ (~ ((4))))), 4))), 0, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))))))), (false ? _GLF_FUZZED(-48515) : ~ (_GLF_IDENTITY(0 | (int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), ~ (~ ((4))))), 4), _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(sign(-42544))) : 0)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), int(ivec4((0 >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))), (0 >> _GLF_IDENTITY(int(0), int(0)))))))), clamp(0 | _GLF_IDENTITY((int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), _GLF_IDENTITY(~ (~ ((4))), (_GLF_IDENTITY(~ (~ ((4))), (~ (~ ((4)))) << 0)) | (~ (~ ((4))))))), 4), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << 0)))), int(ivec4((0 >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))), (0 >> _GLF_IDENTITY(int(0), int(0)))))))), max((int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), _GLF_IDENTITY(~ (~ ((4))), (_GLF_IDENTITY(~ (~ ((4))), (~ (~ ((4)))) << 0)) | (~ (~ ((4))))))), 4), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << 0)))), int(ivec4((0 >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))), (0 >> _GLF_IDENTITY(int(0), int(0)))))))), (int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), _GLF_IDENTITY(~ (~ ((4))), (_GLF_IDENTITY(~ (~ ((4))), (~ (~ ((4)))) << 0)) | (~ (~ ((4))))))), 4), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << 0)))), int(ivec4((0 >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))), (0 >> _GLF_IDENTITY(int(0), int(0)))))))))), _GLF_IDENTITY(0 | (int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ~ (~ ((4))))), 4), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), min(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), 0 | (0 >> _GLF_IDENTITY(int(0), int(0)))))))))) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), int(ivec4((0 >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), int(0))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), int(0)))) * 1)))))), (0 | (int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), ~ (~ ((4))))), 4), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << (0 & 76210)))), _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(0), int(0)))), (((0 >> _GLF_IDENTITY(int(0), int(0))))) | 0) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), int(ivec4((0 >> _GLF_IDENTITY(int(0), int(0))), 1, 1, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(0, 0))))))), (0 >> _GLF_IDENTITY(int(0), int(0))))))))) << (0 & 92301)), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))) | (int(ivec3(clamp(4, _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), _GLF_IDENTITY(~ (~ ((4))), (~ (~ ((4)))) | (~ (~ ((4))))))), 4), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), int(ivec4((0 >> _GLF_IDENTITY(int(0), int(0))), 1, 1, 0))), (0 >> _GLF_IDENTITY(int(0), int(0)))))))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-60.92)), bool(false))) > injectionSwitch.y)))), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id))))), _GLF_IDENTITY((subgroup_local_id), uint(uvec3((subgroup_local_id), 0u, 1u))))) | 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 0u)), (uint(uvec2(subgroup_local_id, 0u))) | 0u))) | (subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), 0u ^ ((subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), (_GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), min(uvec3((subgroup_local_id), 0u, 1u), _GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), max(uvec3((subgroup_local_id), 0u, 1u), uvec3((subgroup_local_id), 0u, 1u)))))) + uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u), 0u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), min(uvec3((subgroup_local_id), 0u, 1u), _GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), max(uvec3((subgroup_local_id), 0u, 1u), uvec3((subgroup_local_id), 0u, 1u)))))) + uvec3(0u, 0u, 0u), max((_GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), min(uvec3((subgroup_local_id), 0u, 1u), _GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), max(uvec3((subgroup_local_id), 0u, 1u), uvec3((subgroup_local_id), 0u, 1u)))))) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), min(uvec3((subgroup_local_id), 0u, 1u), _GLF_IDENTITY(uvec3((subgroup_local_id), 0u, 1u), max(uvec3((subgroup_local_id), 0u, 1u), uvec3((subgroup_local_id), 0u, 1u)))))) + uvec3(0u, 0u, 0u))))))))))) | 0u)))) | _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u))), 1u, _GLF_IDENTITY(0u, (0u) | 0u), 1u))) + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), ivec2(0, 0) | (ivec2(64, 0))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bool(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, max(read, _GLF_IDENTITY(_GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, clamp(read, read, read)))), (_GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, clamp(read, read, read))))) - 0u))), _GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-43255) : 4)), 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(4, 4, 4)))));
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
}
