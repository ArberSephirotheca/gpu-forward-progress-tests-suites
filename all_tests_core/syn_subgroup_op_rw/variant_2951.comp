#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(5.4) : injectionSwitch.y), ((false ? _GLF_FUZZED(5.4) : injectionSwitch.y)) - 0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(ceil(-659.271)) : injectionSwitch.y)), injectionSwitch.y)))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(496.483))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (false ? _GLF_FUZZED(sign(_GLF_IDENTITY(vec3(-4.1, 673.976, 0.3), (vec3(-4.1, 673.976, 0.3)) * mat3(1.0))[_GLF_IDENTITY(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED(-37795))) ^ (0))])) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(152546u, 164154u, 39783u)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))).x, (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(152546u, 164154u, 39783u), (false ? _GLF_FUZZED(uvec3(171990u, 116137u, 45798u)) : uvec3(152546u, 164154u, 39783u)))) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(152546u, 164154u, 39783u)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)))).x)) << 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, 1u, 1u))) << 0u), uint(uvec3(subgroup_size, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), uint(uvec3(subgroup_size, 1u, 1u)))))), clamp((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, 1u, 1u))) << 0u), uint(uvec3(subgroup_size, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), uint(uvec3(subgroup_size, 1u, 1u)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, 1u, 1u))) << 0u), uint(uvec3(subgroup_size, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), uint(uvec3(subgroup_size, 1u, 1u)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, 1u, 1u))) << 0u), uint(uvec3(subgroup_size, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), uint(uvec3(subgroup_size, 1u, 1u)))))))) ^ 0u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ 0u) ^ 0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), _GLF_IDENTITY(uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))))), 1u)), 0u ^ (uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), 1u)))), uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), 1u)), _GLF_IDENTITY(uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), 1u)), (uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), 1u))) | (uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size))) ^ 0u, ((subgroup_size) ^ 0u) ^ 0u)))))), 1u)))))))) << 0u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) / 1u)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), ~ (~ ((subgroup_id * subgroup_size))))) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) - 0u))) / 1u), (false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(-86828, ~ (~ _GLF_IDENTITY((-86828), _GLF_IDENTITY(clamp(_GLF_IDENTITY((-86828), ((-86828)) | ((-86828))), (-86828), (-86828)), _GLF_IDENTITY((clamp(_GLF_IDENTITY((-86828), ((-86828)) | (_GLF_IDENTITY((-86828), ~ (_GLF_IDENTITY(~ ((-86828)), (~ ((-86828))) / 1))))), (-86828), (-86828))) * 1, clamp((clamp(_GLF_IDENTITY((-86828), ((-86828)) | (_GLF_IDENTITY((-86828), ~ (_GLF_IDENTITY(~ ((-86828)), (~ ((-86828))) / 1))))), (-86828), (-86828))) * 1, _GLF_IDENTITY((clamp(_GLF_IDENTITY((-86828), ((-86828)) | (_GLF_IDENTITY((-86828), ~ (_GLF_IDENTITY(~ ((-86828)), (~ ((-86828))) / 1))))), (-86828), (-86828))) * 1, int(int(_GLF_IDENTITY((clamp(_GLF_IDENTITY((-86828), ((-86828)) | (_GLF_IDENTITY((-86828), ~ (_GLF_IDENTITY(~ ((-86828)), (~ ((-86828))) / 1))))), (-86828), (-86828))) * 1, 0 ^ ((clamp(_GLF_IDENTITY((-86828), ((-86828)) | (_GLF_IDENTITY((-86828), ~ (_GLF_IDENTITY(~ ((-86828)), (~ ((-86828))) / 1))))), (-86828), (-86828))) * 1))))), (clamp(_GLF_IDENTITY((-86828), ((-86828)) | (_GLF_IDENTITY((-86828), ~ (_GLF_IDENTITY(~ ((-86828)), (~ ((-86828))) / 1))))), (-86828), (-86828))) * 1))))))), _GLF_IDENTITY(1u, (1u) - 0u) * (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-86828, max(-86828, -86828)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828)))), 0 ^ (~ (_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828))))))), (_GLF_IDENTITY(-86828, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828)))), ~ (~ ((_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828))))))))) | (_GLF_IDENTITY(-86828, ~ (_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828)))))))), min(uint(_GLF_IDENTITY(-86828, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (false ? _GLF_FUZZED(92819) : ~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))))) >> 0), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (false ? _GLF_FUZZED(92819) : ~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))))) >> 0)) | 0)))))), uint(_GLF_IDENTITY(-86828, ~ (~ (-86828)))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-86828, max(-86828, -86828)), ~ (_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828))))), (_GLF_IDENTITY(-86828, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828)))), ~ (~ ((_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828))))))))) | (_GLF_IDENTITY(-86828, ~ (_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828)))))))), min(uint(_GLF_IDENTITY(-86828, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (false ? _GLF_FUZZED(92819) : ~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))))) >> 0), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (false ? _GLF_FUZZED(92819) : ~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))))) >> 0)) | 0)))))), uint(_GLF_IDENTITY(-86828, ~ (~ (-86828)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-86828, max(-86828, -86828)), ~ (_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828))))), (_GLF_IDENTITY(-86828, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828)))), ~ (~ ((_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828))))))))) | (_GLF_IDENTITY(-86828, ~ (_GLF_IDENTITY(~ (-86828), (~ (-86828)) | (~ (-86828)))))))), min(uint(_GLF_IDENTITY(-86828, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (~ _GLF_IDENTITY((_GLF_IDENTITY(-86828, clamp(-86828, -86828, -86828))), 0 ^ ((-86828)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (false ? _GLF_FUZZED(92819) : ~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))))) >> 0), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (_GLF_IDENTITY(~ _GLF_IDENTITY((-86828), 0 ^ ((-86828))), (false ? _GLF_FUZZED(92819) : ~ _GLF_IDENTITY((-86828), 0 ^ ((-86828)))))) >> 0)) | 0)))))), uint(_GLF_IDENTITY(-86828, ~ (~ (-86828)))))))))), subgroup_id, num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0)), min(float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0)), mix(float(float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-8449.4088)), bool(false))))))))) - (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u)))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)), (((subgroup_id * subgroup_size))) | (((subgroup_id * subgroup_size)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id))))) + 0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | (((subgroup_id * subgroup_size)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (_GLF_IDENTITY(true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(uint(uvec4(true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id), 1u, 1u, 1u)), _GLF_IDENTITY(uint(uvec2(uint(uvec4(true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)), 1u)), (uint(uvec2(uint(uvec4(true ? _GLF_IDENTITY(uint(uint(1u)), uint(uvec3(_GLF_IDENTITY(uint(uint(1u)), max(_GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) * 1u), _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(subgroup_id), 1u, 1u, 1u)), 1u))) | (_GLF_IDENTITY(uint(uvec2(uint(uvec4(true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id), 1u, 1u, 1u)), 1u)), 0u | (uint(uvec2(uint(uvec4(true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id), 1u, 1u, 1u)), 1u)))))))))))) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | (((subgroup_id * subgroup_size)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(1u)), (true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(uint(uint(1u)), (true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id)))) + (0u | 0u))), 0u ^ (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | (((subgroup_id * subgroup_size)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (true ? uint(uint(1u)) : _GLF_FUZZED(subgroup_id))))))) + 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(1u & 1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(workgroup_size) : 1u & 1u))) | (1u & 1u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? 1u & 1u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(1u & 1u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? 1u & 1u : _GLF_FUZZED(workgroup_base))), max(_GLF_IDENTITY(1u & 1u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? 1u & 1u : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(1u & 1u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? 1u & 1u : _GLF_FUZZED(workgroup_base)))))) | 0u)), uint(uvec2((_GLF_IDENTITY(1u & 1u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(-232.163) : max(injectionSwitch.y, injectionSwitch.y)))))))) ? 1u & 1u : _GLF_FUZZED(workgroup_base)))), 1u))) >> 0u)) * (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size), ~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) + 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) << 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(int(0))), 0)));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(subgroup_local_id + 1 < subgroup_size)
    {
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) / _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))) | _GLF_IDENTITY((0 ^ 0), ~ (~ _GLF_IDENTITY(((0 ^ 0)), min(_GLF_IDENTITY(((0 ^ 0)), (((0 ^ 0))) / 1), _GLF_IDENTITY(((0 ^ 0)), 1 * (((0 ^ 0))))))))))), 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     subgroupAll(false);
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_DEAD(false))) || false)) || false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), mix(vec2((vec2(injectionSwitch.x, 0.0))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(vec2(-9920.2492, 1.7).g), (vec2(injectionSwitch.x, 0.0))[1]), bvec2(false, true)))), float(mat3x4(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), mix(vec2((vec2(injectionSwitch.x, 0.0))[0], _GLF_FUZZED(-5.2)), vec2(_GLF_FUZZED(vec2(-9920.2492, 1.7).g), (vec2(injectionSwitch.x, 0.0))[1]), bvec2(false, true)))), 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))))))), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(fma(injectionSwitch, round(injectionSwitch), vec2(5.1, 8549.8268))) : injectionSwitch), (true ? (false ? _GLF_FUZZED(fma(injectionSwitch, round(injectionSwitch), vec2(5.1, 8549.8268))) : injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, false), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true, false), false))))) && true))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((true ? _GLF_IDENTITY(read, 0u ^ (read)) : _GLF_FUZZED((workgroup_id << subgroup_size))), _GLF_IDENTITY(uint(uvec4((true ? _GLF_IDENTITY(read, 0u ^ (read)) : _GLF_FUZZED((workgroup_id << subgroup_size))), 0u, 1u, 1u)), 0u | (uint(uvec4((true ? _GLF_IDENTITY(read, 0u ^ (read)) : _GLF_FUZZED((workgroup_id << subgroup_size))), 0u, 1u, 1u))))))) | (_GLF_IDENTITY(read, max(read, read)))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y))))
      barrier();
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))) && true));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))), (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))) || false), true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
