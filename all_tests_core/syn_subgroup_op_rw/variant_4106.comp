#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_WRAPPED_LOOP(false))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u)))) | (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (true ? ~ (~ (subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))), subgroup_local_id, subgroup_local_id)) + 1))), (true ? _GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id)) + 1))) : _GLF_FUZZED(workgroup_id)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) - 0u)))))))), 0u | (uint(subgroup_local_id + 1))), 1u))))))), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1)))), clamp(uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u)))) | (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (true ? ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) : _GLF_FUZZED(subgroup_local_id)))), subgroup_local_id, subgroup_local_id)) + 1))), (true ? _GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id, subgroup_local_id)) + 1))) : _GLF_FUZZED(workgroup_id)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) - 0u)))))))), 0u | (uint(subgroup_local_id + 1))), 1u)))))))) - 0u)) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), max(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(0, max(0, 0)))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (0 << _GLF_IDENTITY(int(0), int(0))) + (_GLF_IDENTITY(1, ~ (~ (1))))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) + 0), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)))), 1))) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? 0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec2(int(3), 0), (true ? ivec2(int(3), 0) : _GLF_FUZZED(ivec2(-30728, -58552)))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(0 ^ (int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? 0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec2(int(3), 0), (true ? ivec2(int(3), 0) : _GLF_FUZZED(ivec2(-30728, -58552)))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? 0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec2(int(3), 0), (true ? ivec2(int(3), 0) : _GLF_FUZZED(ivec2(-30728, -58552)))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(0 ^ (int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? 0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec2(int(3), 0), (true ? ivec2(int(3), 0) : _GLF_FUZZED(ivec2(-30728, -58552)))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(_injected_loop_counter)))) / 1), _GLF_IDENTITY(0 ^ (int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? 0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec2(int(3), 0), (true ? ivec2(int(3), 0) : _GLF_FUZZED(ivec2(-30728, -58552)))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(_injected_loop_counter)))))), int(ivec4(_GLF_IDENTITY(int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(3), int(3)))) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(937.811)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))))))), _GLF_IDENTITY((true ? 0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(_injected_loop_counter)), ((true ? 0 ^ (int(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))) | (~ (0))))), 0)) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(0, (0) | (0))))), 0, 1, 1))), _GLF_IDENTITY(int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 + _GLF_IDENTITY((int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(((int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0, (((int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0) << 0))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(667))) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(ivec3(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (true ? 0 : _GLF_FUZZED(667))) >> _GLF_IDENTITY(int(3), int(3))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (true ? 0 : _GLF_FUZZED(667))) >> _GLF_IDENTITY(int(3), int(3))))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(667))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-61168) : int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(667))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(667))) >> _GLF_IDENTITY(int(3), int(3))) >> 0)) ^ 0)), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y))), ivec3(_injected_loop_counter, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))) ? 0 : _GLF_FUZZED(667))) >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0)), (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(5), int(5))) ^ (_GLF_IDENTITY(0, (0) | 0)))) | (0)), int(ivec2((int(ivec3(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0, 0))))) >> 0)) != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u | (next_virtual_gid), _GLF_IDENTITY(uint(uvec2(0u | (next_virtual_gid), 0u)), ~ (~ (uint(uvec2(0u | (next_virtual_gid), 0u)))))))))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))), uint(uvec4(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u, (_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u, (((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, _GLF_IDENTITY(1u, 0u | (1u)), 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), min(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)))))), uint(uvec4(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), min(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)))))), 1u, 1u, 0u))))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)))), 1u * (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) / 1u, min((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) / 1u, (next_virtual_gid) / 1u))), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))), (_GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))), min((uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) ^ 0u)))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | _GLF_IDENTITY((next_virtual_gid), min(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | ((next_virtual_gid))), _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) * 1u))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid)))) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), 0u | (min(next_virtual_gid, next_virtual_gid)))))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), uint(_GLF_IDENTITY(uvec3((next_virtual_gid), 0u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec3((next_virtual_gid), 0u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) | uvec3(0u, 0u, 0u)))))) >> 0u))), _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | 0u))))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), 0u)))))))), next_virtual_gid))) | (next_virtual_gid), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u, clamp(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u, ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u, ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)))) << 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) / (((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u, (((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u) * 1u)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), _GLF_IDENTITY((next_virtual_gid), (1u ^ 1u) | ((next_virtual_gid))) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)))) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), _GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))))), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)))) / 1u)) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) << 0u), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid))) | (next_virtual_gid))) >> _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (0u)), 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(workgroup_base)))) | 0u), min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u), max(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)))) << 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : next_virtual_gid)))) / 1u)) << 0u)), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), 0u + (_GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec3(next_virtual_gid, 1u, 0u)), 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec2(uint(uvec3(next_virtual_gid, 1u, 0u)), 1u))))))), _GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))), (_GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))), ((uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))) + 0u)) - 0u)))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)))))))) / 1u)))) | (1u ^ 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u))), _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))) : _GLF_FUZZED(subgroup_size)))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u))), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)), uint(uint((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) ^ 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))))), next_virtual_gid))) | (next_virtual_gid), clamp(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) ^ 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))))), next_virtual_gid))) | (next_virtual_gid), ~ (~ ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) ^ 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))))), next_virtual_gid))) | (next_virtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) ^ 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) ^ 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))))), next_virtual_gid))) | (next_virtual_gid)) / (1u & 1u)), (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))) ^ 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))))), next_virtual_gid))) | (next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), ~ (~ (~ (~ (next_virtual_gid)))))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)), uint(uint(((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid))))) / 1u)) << 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))))))), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)), max((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), (uint(uvec3(next_virtual_gid, 1u, 0u))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))) / 1u), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))))) | ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | (_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (next_virtual_gid) | (next_virtual_gid))) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)) : _GLF_FUZZED(workgroup_size))), next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 1u, 0u)), _GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))), 1u * (_GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))), uint(uvec2((uint(uvec3(next_virtual_gid, 1u, 0u))), 0u))))), (_GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))), 1u * (_GLF_IDENTITY((uint(uvec3(next_virtual_gid, 1u, 0u))), uint(uvec2((uint(uvec3(next_virtual_gid, 1u, 0u))), 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (uint(uvec3(next_virtual_gid, 1u, 0u)))))))), next_virtual_gid))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u)) / 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), clamp(_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (min(next_virtual_gid, next_virtual_gid)) | (143537u & 0u)), min(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (true ? min(next_virtual_gid, next_virtual_gid) : _GLF_FUZZED(subgroup_local_id)))) ^ 0u)))), min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid))) | (next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), min(~ (~ (next_virtual_gid)), ~ (~ (next_virtual_gid)))))))) | (next_virtual_gid), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) | (next_virtual_gid)) / 1u)) << 0u))))))], _GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), (true ? ~ (uint(1)) : _GLF_FUZZED(subgroup_id))))), 0u, 1u, 0u))), 4, 64, 4);
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(bool(bvec4(false, true, false, true)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), int(2))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1), 1)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec4(int(2), 0, 1, 1))), max(int(2), int(2))), int(2))), int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), (int(2)) | _GLF_IDENTITY((int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) - 0), (false ? _GLF_FUZZED(56199) : ~ (_GLF_IDENTITY(2, max(2, 2))))))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) - 0), (false ? _GLF_FUZZED(56199) : ~ (_GLF_IDENTITY(2, max(2, 2)))))))))), max(~ ((int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) - 0), (false ? _GLF_FUZZED(56199) : ~ (_GLF_IDENTITY(2, max(2, 2)))))))))), _GLF_IDENTITY(~ ((int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) - 0), (false ? _GLF_FUZZED(56199) : ~ (_GLF_IDENTITY(2, max(2, 2)))))))))), max(~ ((int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) - 0), (false ? _GLF_FUZZED(56199) : ~ (_GLF_IDENTITY(2, max(2, 2)))))))))), ~ ((int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) - 0), (false ? _GLF_FUZZED(56199) : ~ (_GLF_IDENTITY(2, max(2, 2))))))))))))))))), _GLF_IDENTITY(0, max(0, 0)) ^ (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec2(int(2), 1), (true ? ivec2(int(2), 1) : _GLF_FUZZED(ivec2(-99371, -69719)))))), min(_GLF_IDENTITY(int(2), (int(2)) / _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))), int(2)))) | 0))))))), _GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY((int(2)), min(_GLF_IDENTITY((int(2)), int(ivec4((int(2)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (1 ^ 0)))), (int(_GLF_IDENTITY(2, (2) | 0))))) ^ 0))))))), ~ (~ (int(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec2(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), 1))), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), (int(5)) / 1), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_injected_loop_counter)))))))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, 5))), ~ (~ (int(_GLF_IDENTITY(5, min(5, 5)))))), int(5))))), _GLF_IDENTITY(0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))))), int(ivec4(0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))))), 1, 0, 0)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, (5) | (5))))))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), 0, 1))))), (((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), min(int(5), int(5))), int(5)), 0, 1)))))) | 0) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))), (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5)))) << 0)))), int(5)), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))), (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5)))) << 0)))), int(5))) + 0)), (true ? (0 >> _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(_injected_loop_counter))))) | (int(2)))), clamp(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (_GLF_IDENTITY(5, max(5, 5))) | 0)) | 0))), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, min(5, 5))) ^ 0)), int(5), int(5)))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-14681) : _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), min(~ (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (false ? _GLF_FUZZED(32092) : 5))) << 0)), ~ (5))))), 5))), int(5))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(clamp(int(5), int(5), int(5)), 0 + (_GLF_IDENTITY(clamp(int(5), int(5), int(5)), (clamp(int(5), int(5), int(5))) | (clamp(int(5), int(5), int(5)))))))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) ^ 0)), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), 0, 1))))), (((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5))))), 0, 1)))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 ^ (_GLF_IDENTITY(~ (0), int(int(_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))))))))) | (0))) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), (true ? (0 >> _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(_injected_loop_counter))))) | (int(2)))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), (_GLF_IDENTITY(int(5), (int(5)) / 1)) | (_GLF_IDENTITY(int(5), (int(5)) / 1))))), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), int(5))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(_GLF_IDENTITY(5, (5) - 0))))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), int(5))))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), 0, 1))))), (((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), 0, 1)))))) | 0) | (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(7812))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, int(_GLF_IDENTITY(int(5), max(int(5), int(5))))), 5))))), (true ? (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(int(5), int(5))) / 1)) : _GLF_FUZZED(_injected_loop_counter))))) | (int(2)))), 1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(int(5), clamp(int(_GLF_IDENTITY(5, (5) + 0)), int(5), int(5)))), min((_GLF_IDENTITY(int(5), clamp(int(_GLF_IDENTITY(5, (5) + 0)), int(5), int(5)))), (_GLF_IDENTITY(int(5), clamp(int(_GLF_IDENTITY(5, (5) + 0)), int(5), int(5)))))) * _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1)) & 1), clamp((1 & 1), (1 & 1), (1 & 1)))), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5)))), _GLF_IDENTITY(int(5), int(5)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) * (1 & 1)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) ^ 0)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(int(5), clamp(int(_GLF_IDENTITY(5, (5) + 0)), int(5), int(5)))), min((_GLF_IDENTITY(int(5), clamp(int(_GLF_IDENTITY(5, (5) + 0)), int(5), int(5)))), (_GLF_IDENTITY(int(5), clamp(int(_GLF_IDENTITY(5, (5) + 0)), int(5), int(5)))))) * _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1)) & 1), clamp((1 & 1), (1 & 1), (1 & 1)))), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5)))), _GLF_IDENTITY(int(5), int(5))))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)), _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))), (((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((5), int(int(_GLF_IDENTITY((5), (_GLF_IDENTITY((5), clamp((5), (5), (5)))) - 0)))) + 0)))), int(5)), int(ivec3(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (5) >> 0))) | (int(5))), min(int(5), int(5))), int(5)), 0, 1)))))) | 0) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), (true ? (0 >> _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(_injected_loop_counter))))) | (int(2))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2)))) | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))), (_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(2)))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))))))), int(int(((1 << _GLF_IDENTITY(int(2), int(2))))))) | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | 0), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2)))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2))))) / 1) | ((1 << _GLF_IDENTITY(int(2), int(2))))))))))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 0); _injected_loop_counter --)
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   for(int _injected_loop_counter = ((0 ^ 0) ^ _GLF_IDENTITY((1 & 1), ((1 & 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec3(1, 1, 0))) : _GLF_FUZZED(-23898))) & 1), 0 + ((1 & 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) ^ 0), (_GLF_IDENTITY((0 ^ 0), ((_GLF_IDENTITY(0, min(0, 0)) ^ 0)) - 0)) >> _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 1 * (0)), 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(4))), int(4)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))), int(int(int(int(_GLF_IDENTITY(int(4), int(4)))))))))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), int(int(int(int(_GLF_IDENTITY(int(4), int(4))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ (int(4)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0 ^ (int(4))))), int(4)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), int(4)))))))), int(int(int(int(_GLF_IDENTITY(int(4), int(4)))))))))) * 1))) / _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))))); _injected_loop_counter --)
                                    {
                                     if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u ^ 0u)))) + 1 < subgroup_size)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y) || false))))))))
                                          {
                                          }
                                         else
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (64)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(64, 64)))), 0 | (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, clamp((64) + 0, (64) + 0, (64) + 0))), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), clamp(_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), clamp(clamp(64, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), (ivec2(64, 0)) / ivec2(1, 1)))), 64), clamp(64, 64, 64), clamp(_GLF_IDENTITY(64, (0 << _GLF_IDENTITY(int(4), int(4))) | (64)), 64, 64)))) << 0), _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) * 1), 64), (clamp(64, 64, 64)) | (clamp(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), clamp(~ ((64)), ~ ((64)), ~ ((64)))))))), 64, 64))), clamp(64, 64, 64)))), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), int(ivec2(_GLF_IDENTITY(64, clamp(64, 64, 64)), 1))), 64)), 4);
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                       else
                                        {
                                        }
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             subgroupAll(false);
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     else
                                      {
                                       do
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             do
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                {
                                                 if(_GLF_DEAD(false))
                                                  {
                                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                                                    {
                                                     barrier();
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                            }
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                       atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))], _GLF_IDENTITY(_GLF_IDENTITY(read, ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u) + (read)), (read) | (read)), 4, 64, 4);
                                       for(int _injected_loop_counter = _GLF_IDENTITY((1 & _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1, 0)), (int(ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1, 0))) | 0)))), 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 0)), 0 | (_GLF_IDENTITY(int(ivec2((0), 0)), clamp(int(ivec2((0), 0)), int(ivec2((0), 0)), int(ivec2((0), 0))))))) + 0), _GLF_IDENTITY(0, 0 ^ (0)))))), (false ? _GLF_FUZZED((_injected_loop_counter << _injected_loop_counter)) : (1 & _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))), 0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0), 0, 0))), _GLF_IDENTITY(int(ivec2((0), 0)), 0 | (_GLF_IDENTITY(int(ivec2((0), 0)), clamp(_GLF_IDENTITY(int(ivec2((0), 0)), (_GLF_IDENTITY(int(ivec2((0), 0)), (int(ivec2((0), 0))) << 0)) / 1), int(ivec2((0), 0)), int(ivec2((0), 0))))))) + 0), _GLF_IDENTITY(0, 0 ^ (0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), clamp(int(0), int(0), int(0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0), int(0)))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))), min((_GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(clamp(int(0), int(0), int(0)), (clamp(int(0), int(0), int(0))) | (0 >> _GLF_IDENTITY(int(0), int(0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) << 0))), min(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), int(ivec3(int(_GLF_IDENTITY(0, (0) << 0)), 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)), 0)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), 0 ^ (int(_GLF_IDENTITY(0, (0) << 0))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) << 0))), (0) << 0))))))) | (0))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) << 0))), min(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(_injected_loop_counter))) << 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), int(ivec3(int(_GLF_IDENTITY(0, (0) << 0)), 0, 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), 0 ^ (int(_GLF_IDENTITY(0, (0) << 0))))))), int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) << 0))))))) | (0)))), (~ (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) << 0))), min(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), int(ivec3(int(_GLF_IDENTITY(0, (0) << 0)), 0, 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), 0 ^ (int(_GLF_IDENTITY(0, (0) << 0))))))), int(int(_GLF_IDENTITY(0, (0) << 0))))))) | (0))))) + 0))), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))) | 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           do
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               if(_GLF_DEAD(false))
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
                                                  {
                                                   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)) ^ (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0) >> _GLF_IDENTITY(0, (0) >> 0)))), 0)), int(ivec4(0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0) | (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), _GLF_IDENTITY(0, (0) | 0))), max(~ (min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)), ~ (min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0))))))), 1, 1, 0)))), (1 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) : 0)), 0)), int(ivec4(0 ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)), 1, 1, 0))))) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           do
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               do
                                                                {
                                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))) | (1)), 1, 1, 1))), 0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1)))))))))) / 1), 1)), min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), min(~ ((1)), ~ ((1))))))) >> 0), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1))))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), min(~ ((1)), ~ ((1))))))) >> 0), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1)))))))) / 1)))) / 1), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1)))))))), (0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1))))))))) | (0 | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1)))))))))))) / 1), 1))))); _injected_loop_counter ++)
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                    {
                                                                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 + ((0))) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (false ? _GLF_FUZZED(_injected_loop_counter) : clamp(4, 4, 4))))))), ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, 4)))), (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, 4))))) >> 0))) * 1))), clamp(int(0), int(0), int(0)))))); _injected_loop_counter --)
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                                        {
                                                                        }
                                                                       else
                                                                        {
                                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))))
                                                                          {
                                                                          }
                                                                         else
                                                                          {
                                                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                                                                            {
                                                                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_TRUE(true), false), false))))))
                                                                              {
                                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                {
                                                                                }
                                                                               else
                                                                                {
                                                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                  {
                                                                                  }
                                                                                 else
                                                                                  {
                                                                                   do
                                                                                    {
                                                                                     do
                                                                                      {
                                                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).y : _GLF_IDENTITY(_GLF_FUZZED(-117.456), 0.0 + (_GLF_FUZZED(-117.456)))))))))
                                                                                        {
                                                                                        }
                                                                                       else
                                                                                        {
                                                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                          {
                                                                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                            {
                                                                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                              {
                                                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                {
                                                                                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter > 0, true, true, false)), true && _GLF_IDENTITY((bool(bvec4(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))))))))), ((bool(bvec4(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0)), true, true, _GLF_IDENTITY(false, true && (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))); _injected_loop_counter --)
                                                                                                  {
                                                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                    {
                                                                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                      {
                                                                                                      }
                                                                                                     else
                                                                                                      {
                                                                                                       return;
                                                                                                      }
                                                                                                    }
                                                                                                   else
                                                                                                    {
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                               else
                                                                                                {
                                                                                                }
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                         else
                                                                                          {
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                     while(_GLF_WRAPPED_LOOP(false));
                                                                                    }
                                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                                  }
                                                                                }
                                                                              }
                                                                             else
                                                                              {
                                                                              }
                                                                            }
                                                                           else
                                                                            {
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                   else
                                                                    {
                                                                    }
                                                                  }
                                                                }
                                                               while(_GLF_WRAPPED_LOOP(false));
                                                              }
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         subgroupAll(_GLF_IDENTITY(true, true && (true)));
                                        }
                                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-47.70)), vec2(_GLF_FUZZED(-5107.9687), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-47.70)), vec2(_GLF_FUZZED(-5107.9687), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, 1.0, 0.0)))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-47.70)), vec2(_GLF_FUZZED(-5107.9687), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-47.70)), vec2(_GLF_FUZZED(-5107.9687), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.3)), float(0.0), bool(true)))))))))) && true))
                                        {
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) >> 0))); _injected_loop_counter ++)
                                          {
                                           if(_GLF_DEAD(false))
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   do
                                                    {
                                                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                                                      {
                                                       barrier();
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))));
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))));
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
}
