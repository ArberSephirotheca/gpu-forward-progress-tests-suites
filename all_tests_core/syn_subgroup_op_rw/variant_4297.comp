#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_4num_workgroupread;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-64.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-64.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(-95.00, -9.9, 7430.3320, 7.0) * vec2(7163.1599, 9.7))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), false))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))), bool(bvec3(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false))))), true, false))))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz = GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), (_GLF_IDENTITY((! ((! (false)))), bool(bvec3((! ((! (false)))), false, true)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0)), mix(float(_GLF_FUZZED(1.8)), float(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0))), bool(true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), bool(bvec3(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, true)), true, true))))) || false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-0.4)), vec2(_GLF_FUZZED(-71.03), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-0.4)), vec2(_GLF_FUZZED(-71.03), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) / vec2(1.0, 1.0)).x)), injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, true && (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true))))) || false)), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (true))) || false)), false, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) + 0))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-72608) : 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ _GLF_IDENTITY(-3.8, mix(float(-3.8), float(_GLF_FUZZED(float(true))), bool(false)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-7.2, float(mat3(-7.2, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -3.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, true, true))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
      }
     return;
    }
   _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y = _GLF_IDENTITY(subgroup_size, (subgroup_size) - (57653u & 0u)), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y = _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))) - (57653u & 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y = _GLF_IDENTITY(subgroup_size, (subgroup_size) - (57653u & 0u)), 0u | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y = _GLF_IDENTITY(subgroup_size, (subgroup_size) - (57653u & 0u))))))) | 0u);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true))))))), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true))))))), (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(465.359)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(float(_GLF_FUZZED(465.359)), min(float(_GLF_FUZZED(465.359)), float(_GLF_FUZZED(465.359)))), _GLF_IDENTITY(dot(vec4(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)), mix(float(_GLF_FUZZED(-655.769)), float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(float(_GLF_FUZZED(465.359)), min(float(_GLF_FUZZED(465.359)), float(_GLF_FUZZED(465.359)))), _GLF_IDENTITY(dot(vec4(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)), float(mat3(float(vec3(_GLF_IDENTITY(float(_GLF_FUZZED(465.359)), min(float(_GLF_FUZZED(465.359)), float(_GLF_FUZZED(465.359)))), _GLF_IDENTITY(dot(vec4(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true)))), bool(false)))))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (bool(_GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && true)))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec3((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, true, false))), false, false))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec3((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, true, false))), false, false))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec3((! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, true, false))), false, false))))), true, false, true))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_4num_workgroupread.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.x = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_4num_workgroupread, (GLF_merged2_0_1_13_1_1_4num_workgroupread) | (GLF_merged2_0_1_13_1_1_4num_workgroupread)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED(16.24), (injectionSwitch)[1]), bvec2(false, true))))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), true && (bool(bvec3(_GLF_DEAD(false), false, false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (6))), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ (0 ^ 0))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true))), ((bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true)))) && true) || false)));
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-32.79)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x) + 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x) + 0.0))) > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), true)))))) || _GLF_IDENTITY(false, false || (false))), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0), min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0), min((clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(1.0))))))).y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), (_GLF_IDENTITY((1u) | (1u), max((1u) | (1u), _GLF_IDENTITY((1u) | (1u), max((1u) | (1u), (1u) | (1u)))))) ^ 0u))), workgroup_base)), (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, cos(log(1.0)), exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mix(vec3((vec3(1.0, 1.0, 0.0))[0], (vec3(1.0, 1.0, 0.0))[1], _GLF_FUZZED(-7.2)), vec3(_GLF_FUZZED((+ -0.2)), _GLF_FUZZED((- -55.44)), (vec3(1.0, 1.0, 0.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, 1), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, _GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1))), clamp(int(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, _GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1))), int(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, _GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1))), int(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, _GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1))))))), min(int(int(int(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, 1), ~ _GLF_IDENTITY((~ (ivec3(2, 0, 1))), ((~ (ivec3(2, 0, 1)))) ^ ivec3(0, 0, 0)))) / ivec3(1, 1, 1))))), int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, 1), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, 1), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1)), min(_GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, 1), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, 1), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(2, 0, 1), (_GLF_IDENTITY(ivec3(2, 0, 1), ~ (~ (ivec3(2, 0, 1))))) / ivec3(1, 1, 1)))))))))))]), bvec3(false, false, true))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), min(_GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), clamp(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)))), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0))))), 0.0, 0.0))) / 1.0)), 0.0, 1.0), mix(vec3((vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), min(_GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), clamp(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)))), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0))))), 0.0, 0.0))) / 1.0)), 0.0, 1.0))[0], (vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), min(_GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), clamp(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)))), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0))))), 0.0, 0.0))) / 1.0)), 0.0, 1.0))[1], (vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), min(_GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), clamp(float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0)))), float(mat3x2(0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0))))), 0.0, 0.0))) / 1.0)), 0.0, 1.0))[2]), vec3(_GLF_FUZZED(-70.30), _GLF_FUZZED((true ? -94.59 : -4314.3721)), _GLF_FUZZED(-29.06)), bvec3(false, false, false)))), dot(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0)))), _GLF_IDENTITY(transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((0.0), (true ? _GLF_IDENTITY((0.0), min((0.0), (0.0))) : _GLF_FUZZED(-2.2))) - 0.0, clamp(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, max((0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), float(_GLF_FUZZED(1.7)), bool(false))))))), (0.0) - 0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0, cos(log(1.0)), exp(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-85.03))))), 1.0)), float(vec2(dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-85.03))))), 1.0)), 0.0))), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.6)), float(1.0), bool(true))), 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(1.0, (1.0) + 0.0))))))))), (transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY((0.0) - 0.0, clamp(_GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), ((0.0)) / 1.0), (0.0))) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY((0.0) - _GLF_IDENTITY(0.0, (0.0) - 0.0), clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, cos(abs(0.0)) * (0.0)), 0.0)), _GLF_IDENTITY((0.0) - 0.0, clamp(_GLF_IDENTITY((0.0), (true ? (0.0) : _GLF_FUZZED(-2.8))) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0)))), float(_GLF_FUZZED(-1.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, ((0.0) - 0.0) / 1.0), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, cos(log(1.0)), exp(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0), _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(vec4(clamp(0.0, 0.0, 0.0), 0.0, 0.0, 0.0)))))) - 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-85.03))))), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.6)), float(1.0), bool(true))), 0.0), vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 1.0))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0)), vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.3) : 0.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(207.854)), float(0.0), bool(true))), 1.0, sqrt(1.0), 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))))).x), _GLF_IDENTITY(clamp(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(633.759)), bool(false))), (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(75.56)), float(_GLF_IDENTITY(clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) + 0.0)), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(75.56)), float(_GLF_IDENTITY(clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(dot(vec4(-697.211, 737.912, 9.7, 6038.6965), vec4(761.419, 3.2, -947.650, 6.8))) : _GLF_IDENTITY((0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max((0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (clamp(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(mat2(vec3(1.0, 0.0, 0.0), 0.0)), vec3(_GLF_IDENTITY(mat4(vec3(mat2(vec3(1.0, 0.0, 0.0), 0.0)), 0.0, 1.0, 1.0, abs(0.0), exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(vec3(mat2(vec3(1.0, 0.0, 0.0), 0.0)), 0.0, 1.0, 1.0, abs(0.0), exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(exp(0.0)), 1.0))), 0.0, 0.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(exp(0.0)), 1.0))), 0.0, 0.0), max(vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(exp(0.0)), 1.0))), 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(exp(0.0)), 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-3.7, 180.014, 8.9)) : vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(exp(0.0)), 1.0))), 0.0, 0.0))))), vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, log(1.0), determinant(mat3(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(exp(0.0)), 1.0))), 0.0, 0.0))))))) - 0.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + 0.0)), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(mat4x2(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), length(vec2(0.0, 0.0)), 0.0, 1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 0.0, 1.0, 0.0))) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(437.361) : 0.0)))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(75.56)), float(_GLF_IDENTITY(clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(4.0)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))) + (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z, uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))) + (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z, 1u, 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), (false ? _GLF_FUZZED(182145u) : ~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), 0u | (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)))) * (1u | 1u)), (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)) * 1u)) | (~ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)).xyz.z)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), 0u | (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)))) * (1u | 1u)), (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)) * 1u)) | (~ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)).xyz.z)), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), 0u | (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)))) * (1u | 1u)), (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)) * 1u)) | (~ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)).xyz.z)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), 0u | (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)))) * (1u | 1u)), (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)) * 1u)) | (~ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)).xyz.z))))) * 1u)))) + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) ^ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)).xyz.y + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, ~ (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread))), min(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(4u), uvec4(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(4u), uvec4(4u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec4(4u), uvec4(4u)), clamp(_GLF_IDENTITY(uvec4(4u), uvec4(4u)), _GLF_IDENTITY(uvec4(4u), uvec4(4u)), _GLF_IDENTITY(uvec4(4u), uvec4(4u)))) : _GLF_FUZZED(uvec4(127020u, 111974u, 162435u, 68861u)))), _GLF_IDENTITY(uvec4(4u), uvec4(4u))))) ^ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)))).xyz.z, _GLF_IDENTITY(0u, min(0u, 0u)) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, min(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u))) ^ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, min(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u))) ^ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)))), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, min(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u))) ^ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread))))) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)).xyz.z, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, min(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(_GLF_IDENTITY(4u, 0u + (4u))))) ^ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread)))).xyz.z, 0u | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z))))) - 0u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), mix(float(float(_GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(1.7)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(0u | (uint(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec3(0u | (uint(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 1u)))))), (subgroup_id * _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), mix(float(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), float(_GLF_FUZZED(1.7)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(0u | (uint(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec3(0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))))).xyz.y, _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * (1u & 1u)))), 1u))))))) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(uint(uint((~ (1u)))), (_GLF_IDENTITY(uint(uint((~ (1u)))), 0u ^ (uint(uint((~ (1u))))))) >> 0u)))) << 0u)) % GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, _GLF_IDENTITY(~ (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)), uvec3(0u, 0u, 0u) | (~ (~ (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)))))) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) | (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) + uvec4(0u, 0u, 0u, 0u)).xyz.z, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) + uvec4(0u, 0u, 0u, 0u)).xyz.z, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) + uvec4(0u, 0u, 0u, 0u)).xyz.z)), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) + uvec4(0u, 0u, 0u, 0u)).xyz.z, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread, (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread) + uvec4(0u, 0u, 0u, 0u)).xyz.z)), 0u))))))))) + subgroup_id * GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))))) % GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) * 1u)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1)) / 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | 0u)))), (~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | 0u))))) >> 0u))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), ((subgroup_local_id + 1))))) | 0u) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) / 1u))), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) / 1u))), clamp((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) / 1u))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) / 1u))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) / 1u))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) / 1u))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) / 1u))))))), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))))), ((subgroup_local_id + 1)) / 1u))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(uvec3(67784u, 90183u, 119350u).s) : subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, 1, 1))), ((subgroup_local_id + 1)) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, (((subgroup_local_id + 1)) / 1u) | (((subgroup_local_id + 1)) / 1u)), 1u * (((subgroup_local_id + 1)) / _GLF_IDENTITY(1u, (1u) - 0u))), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / 1u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), ((subgroup_local_id + 1)) / 1u)), 0u), (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)), 0u)) | (uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, (((subgroup_local_id + 1)) / 1u) ^ 0u)), (uint(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, (((subgroup_local_id + 1)) / 1u) ^ 0u))) << 0u)), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, (((subgroup_local_id + 1)) / 1u) ^ 0u)), (uint(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, (((subgroup_local_id + 1)) / 1u) ^ 0u))) << 0u))))))), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, clamp(((subgroup_local_id + 1)) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)) / 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((subgroup_local_id + 1)) / 1u : _GLF_FUZZED(workgroup_size))), 1u * (((subgroup_local_id + 1)) / 1u)), ((subgroup_local_id + 1)) / 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), 0u + (((subgroup_local_id + 1)))) / 1u))))))))) % GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z)), 0u, 1u), (uvec3(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z)), 0u, 1u)) | (uvec3(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz), min(uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz), uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)))).z)), 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), 1u))))))) + subgroup_id * GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + 1) * 1u))))), ((subgroup_local_id + 1)) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + 1) * 1u))))), ((subgroup_local_id + 1)) / 1u)) ^ 0u), _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))))), ~ (~ (max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) ^ 0))), min(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) ^ 0))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) ^ 0))))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))))))))) % GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y))) << 0u, uint(uvec3(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z)), 0u, 1u), (uvec3(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)).z)), 0u, 1u)) | (uvec3(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.z, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz), min(uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz), uvec3(1u, 1u, 1u) * (GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz)))).z)), 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec3(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), 1u))))))) + subgroup_id * GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + 1) * 1u))))), ((subgroup_local_id + 1)) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + 1) * 1u))))), ((subgroup_local_id + 1)) / 1u)) ^ 0u), _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1)) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))))), ~ (~ (max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) ^ 0))), min(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) ^ 0))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (1) ^ 0))))) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)))))))))) % GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y))) << 0u, 1u, 1u)))) ^ _GLF_IDENTITY(0u, 0u + (0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (true) && true))), ! (! ((! (false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.9))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.5)), bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.w = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 0, 0), (_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 0, 0), _GLF_IDENTITY((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0), ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)) >> ivec4(0, 0, 0, 0)))) << ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0)), 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 0, 0), _GLF_IDENTITY((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0), ~ (_GLF_IDENTITY(~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)), clamp(_GLF_IDENTITY(~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), ~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)), ~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)))))))), ((_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 0, 0), _GLF_IDENTITY((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0), ~ (_GLF_IDENTITY(~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)), clamp(_GLF_IDENTITY(~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)), (~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), ~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0)), ~ ((ivec4(_injected_loop_counter, 1, 0, 0)) >> ivec4(0, 0, 0, 0))))))))) + ivec4(0, 0, 0, 0)) << ivec4(0, 0, 0, 0)))) / 1)) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_1_13_1_1_4num_workgroupread.y = GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.w;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-97.90))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true), true)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(7), int(7))) ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) - 0)); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 + (~ (_injected_loop_counter))))) < _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), _GLF_IDENTITY((int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY((int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 ^ (7))) | (7)))) | (_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) | (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> 0)))), false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, 0 + (7))))))), int(int((_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6793.5625) : 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8642.6103, 745.789, 7.9, -1.2, 582.253, -4694.0201, 485.310, 108.289, 73.93)))))), 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1606.1177))), injectionSwitch.y)), (1 ^ _GLF_IDENTITY(0, (0) | (0))))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5)))))), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) | (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, (7) / 1), 1)))), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.32), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(886.066)), bvec2(true, false))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(13.00))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y)), (1 ^ 0)), (_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | ivec2(0, 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(1, max(1, 1)) ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7))))), ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))) | ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))))))))), ~ (~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3970.8040), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-389.192) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) * 1.0), 1.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, float(mat2x3(1.0, sqrt(0.0), sqrt(0.0), 0.0, 1.0, 0.0)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec2(int(7), 1)), int(_GLF_IDENTITY(ivec2(int(ivec2(int(7), 1)), 1), clamp(ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1))))))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(7), int(7))))))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 + (~ (_injected_loop_counter))))) < _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), _GLF_IDENTITY((int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY((int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 ^ (7))) | (7)))) | (_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) | (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> 0)))), false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, 0 + (7))))))), int(int((_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6793.5625) : 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8642.6103, 745.789, 7.9, -1.2, 582.253, -4694.0201, 485.310, 108.289, 73.93)))))), 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1606.1177))), injectionSwitch.y)), (1 ^ _GLF_IDENTITY(0, (0) | (0))))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5)))))), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) | (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, (7) / 1), 1)))), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.32), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(886.066)), bvec2(true, false))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(13.00))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y)), (1 ^ 0)), (_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | ivec2(0, 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(1, max(1, 1)) ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7))))), ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))) | ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))))))))), ~ (~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3970.8040), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-389.192) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) * 1.0), 1.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, float(mat2x3(1.0, sqrt(0.0), sqrt(0.0), 0.0, 1.0, 0.0)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec2(int(7), 1)), int(_GLF_IDENTITY(ivec2(int(ivec2(int(7), 1)), 1), clamp(ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1))))))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(7), int(7))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 + (~ (_injected_loop_counter))))) < _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), _GLF_IDENTITY((int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY((int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 ^ (7))) | (7)))) | (_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) | (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> 0)))), false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, 0 + (7))))))), int(int((_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6793.5625) : 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8642.6103, 745.789, 7.9, -1.2, 582.253, -4694.0201, 485.310, 108.289, 73.93)))))), 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1606.1177))), injectionSwitch.y)), (1 ^ _GLF_IDENTITY(0, (0) | (0))))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5)))))), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) | (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, (7) / 1), 1)))), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.32), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(886.066)), bvec2(true, false))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(13.00))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y)), (1 ^ 0)), (_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | ivec2(0, 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(1, max(1, 1)) ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7))))), ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))) | ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))))))))), ~ (~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3970.8040), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-389.192) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) * 1.0), 1.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, float(mat2x3(1.0, sqrt(0.0), sqrt(0.0), 0.0, 1.0, 0.0)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec2(int(7), 1)), int(_GLF_IDENTITY(ivec2(int(ivec2(int(7), 1)), 1), clamp(ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1))))))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(7), int(7))))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 0 + (~ (_injected_loop_counter))))) < _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), _GLF_IDENTITY((int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY((int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 ^ (7))) | (7)))) | (_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) | (1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) - 0), (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ _GLF_IDENTITY(((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)), 0 | (((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> 0)))), false ? _GLF_FUZZED(_GLF_IDENTITY((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter), 0 ^ ((false ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) : _injected_loop_counter)))) : (int(7)) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, 0 + (7))))))), int(int((_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6793.5625) : 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8642.6103, 745.789, 7.9, -1.2, 582.253, -4694.0201, 485.310, 108.289, 73.93)))))), 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1606.1177))), injectionSwitch.y)), (1 ^ _GLF_IDENTITY(0, (0) | (0))))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5)))))), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))) | (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec2(_GLF_IDENTITY(7, (7) / 1), 1)))), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.32), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(886.066)), bvec2(true, false))))).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(13.00))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0), 0.0, 1.0, 0.0)))) / 1.0), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y)), (1 ^ 0)), (_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | ivec2(0, 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(1, max(1, 1)) ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))) | (_GLF_IDENTITY(int(7), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7))))), ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))) | ((~ _GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), ~ (~ ((int(7))))), (int(7)))))))))))), ~ (~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), max(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3970.8040), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-389.192) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) * 1.0), 1.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, float(mat2x3(1.0, sqrt(0.0), sqrt(0.0), 0.0, 1.0, 0.0)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) | (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0)))), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 0))) + ivec2(0, 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec2(int(7), 1)), int(_GLF_IDENTITY(ivec2(int(ivec2(int(7), 1)), 1), clamp(ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1), ivec2(int(ivec2(int(7), 1)), 1))))))) | (_GLF_IDENTITY(int(7), ~ (~ (int(7)))))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(7), int(7))))))), false, true))))))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) - abs(vec2(0.0, 0.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)));
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))) && true))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0)))) / determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(54.81)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), bool(bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))), ! (! (true))) && (false)), _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(54.81)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), (_GLF_IDENTITY(true, ! (! (true))) && (false)) && true)), _GLF_IDENTITY((false), ! (! ((false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(subgroup_local_id + 1 < GLF_merged2_0_3_72_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_baseread.xyz.y)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.0) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(794.667)), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], GLF_merged2_0_1_13_1_1_4num_workgroupread.y, 4, 64, 4);
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(97431) : int(4))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min((1) | (1), _GLF_IDENTITY((1) | (1), ~ (~ ((1) | (1)))))))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), false, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), false, false, false)), true, false))))))) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, false, true), false)))))), _GLF_IDENTITY(true, false || (true))))))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true)))))) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false), false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))) && true), true)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-9.6)), bool(false))), log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(5.8) : 0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.8) : 0.0, float(mat3x4(false ? _GLF_FUZZED(5.8) : 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), clamp(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.8) : 0.0, float(mat3x4(false ? _GLF_FUZZED(5.8) : 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(vec2(float(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.8) : 0.0, float(mat3x4(false ? _GLF_FUZZED(5.8) : 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), 1.0))), float(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.8) : 0.0, float(mat3x4(false ? _GLF_FUZZED(5.8) : 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), float(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(5.8) : 0.0, float(mat3x4(false ? _GLF_FUZZED(5.8) : 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))), _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, sin(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, tan(0.0), 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-3.9)), bool(false)))), vec4(0.0, 0.0, 1.0, 0.0)))), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, cos(0.0), 0.0, 0.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, sin(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, tan(0.0), 1.0, sin(0.0)), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))))))))).y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))), false, true))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             break;
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x < injectionSwitch.y)))), false || (true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), cos(0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), cos(0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))), float(_GLF_FUZZED(0.5)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), cos(0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), cos(0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))), float(_GLF_FUZZED(0.5)), bool(false)))), bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), cos(0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), cos(0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))), float(_GLF_FUZZED(0.5)), bool(false)))), false, true)))) || false)) || false)))))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) || false, false, false)), bvec3(bvec3(bvec3(bvec3((false) || false, false, false))))))))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              continue;
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           break;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))) && (false)), false)))), bool(bvec3(bool(bool(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true) && (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), true, false))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[virtual_gid], GLF_merged2_0_1_13_1_1_4num_workgroupread.y, 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1 ^ _GLF_IDENTITY(1, 1 * (1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1 ^ 1)), clamp(_GLF_IDENTITY(1, (1) | (1 ^ 1)), _GLF_IDENTITY(1, (1) | (1 ^ 1)), _GLF_IDENTITY(1, (1) | (1 ^ 1)))), _GLF_IDENTITY(1, (1) | (1 ^ 1))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(96779) : int(0))))), (_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(96779) : int(0)))))) >> 0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << 0)))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(true);
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) || _GLF_IDENTITY((false), false || ((false))))))
        continue;
       break;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, _GLF_IDENTITY(true, ! (! (true))), false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch.y), bool(true))))), true)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.9) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch.y), bool(true)))))))), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2941.2470)), bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
    }
  }
}
