#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), clamp(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))))) : _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))), vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), float(mat2x3(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec4(5.6, 2.3, -46.25, 48.01)))) : _GLF_FUZZED(vec4(-8.3, -1.3, 7506.4470, -36.62)))))), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), clamp(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))))) : _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))), vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), float(mat2x3(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec4(5.6, 2.3, -46.25, 48.01)))) : _GLF_FUZZED(vec4(-8.3, -1.3, 7506.4470, -36.62)))))), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), clamp(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))))) : _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))), vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), float(mat2x3(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec4(5.6, 2.3, -46.25, 48.01)))) : _GLF_FUZZED(vec4(-8.3, -1.3, 7506.4470, -36.62)))))), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))))[1]), vec2(_GLF_FUZZED(float(-28559)), _GLF_FUZZED(58.37)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))) / vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), clamp(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), _GLF_FUZZED(ceil(_GLF_IDENTITY(vec4(190.493, -4.4, -4.2, -8670.2227), mix(vec4((vec4(190.493, -4.4, -4.2, -8670.2227))[0], _GLF_FUZZED(-21.79), (vec4(190.493, -4.4, -4.2, -8670.2227))[2], (vec4(190.493, -4.4, -4.2, -8670.2227))[3]), vec4(_GLF_FUZZED(1.0), (vec4(190.493, -4.4, -4.2, -8670.2227))[1], _GLF_FUZZED(vec2(6.2, -19.52).x), _GLF_FUZZED(6.4)), bvec4(false, true, false, false))))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))))) : _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) / abs(1.0))), (_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - abs(vec4(0.0, 0.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))))), min(float(mat3x2(0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))))), float(mat3x2(0.0, abs(0.0), sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))), vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8641.8797) : 1.0)), 1.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8641.8797) : 1.0)), 1.0, 1.0), 1.0, 0.0), transpose(transpose(mat2x3(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8641.8797) : 1.0)), 1.0, 1.0), 1.0, 0.0))))))), float(mat2x3(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? vec4(mat4x2(vec4(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec4(5.6, 2.3, -46.25, 48.01)))) : _GLF_FUZZED(vec4(-8.3, -1.3, 7506.4470, -36.62))), ((true ? _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (true ? vec4(mat4x2(vec4(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec4(5.6, 2.3, -46.25, 48.01)))) : _GLF_FUZZED(vec4(-8.3, -1.3, 7506.4470, -36.62)))) * vec4(1.0, 1.0, 1.0, 1.0))))), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), clamp(_GLF_IDENTITY(_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))), (_GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227)))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, _GLF_IDENTITY(-8670.2227, float(mat2x4(-8670.2227, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), 1.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(ceil(vec4(190.493, -4.4, -4.2, -8670.2227))))) : _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * exp(0.0))), float(_GLF_FUZZED(float(false))), bool(false))), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0), clamp(vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))), vec4(mat4x3(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-94.49) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), 0.0), min(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mix(vec4((vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0], _GLF_FUZZED(841.269), (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[2], (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[3]), vec4(_GLF_FUZZED(-327.892), (vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))[1], _GLF_FUZZED(1.2), _GLF_FUZZED(-7.1)), bvec4(false, true, false, false))))), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 1.0, 1.0)), float(mat2x3(dot(vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), 0.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(vec4(mat4x2(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, tan(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (true ? vec3(0.0, 0.0, 1.0) : _GLF_FUZZED(vec3(3.5, 6181.0336, -33.51))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), min(float(mat3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, tan(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, tan(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))))), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(true ? vec4(mat4x2(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8497.4563) : 1.0))), bool(true)))), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec4(5.6, 2.3, -46.25, 48.01), max(_GLF_IDENTITY(vec4(5.6, 2.3, -46.25, 48.01), (vec4(5.6, 2.3, -46.25, 48.01)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(5.6, 2.3, -46.25, 48.01)))), (_GLF_IDENTITY(true ? vec4(mat4x2(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8497.4563) : 1.0))), bool(true)))), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec4(5.6, 2.3, -46.25, 48.01), max(_GLF_IDENTITY(vec4(5.6, 2.3, -46.25, 48.01), (vec4(5.6, 2.3, -46.25, 48.01)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(5.6, 2.3, -46.25, 48.01)))), (true ? true ? vec4(mat4x2(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8497.4563) : 1.0))), bool(true)))), 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec4(5.6, 2.3, -46.25, 48.01), max(_GLF_IDENTITY(vec4(5.6, 2.3, -46.25, 48.01), (vec4(5.6, 2.3, -46.25, 48.01)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(5.6, 2.3, -46.25, 48.01)))) : _GLF_FUZZED(vec4(-9481.2142, 3.0, -9.4, -66.16))))) / vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec4(-8.3, -1.3, 7506.4470, _GLF_IDENTITY(-36.62, (-36.62) * 1.0))))))), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))))).x > injectionSwitch.y)))))) || false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), true)))))))) || false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false)))))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-111.600)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-824.902), _GLF_FUZZED(920.739)), bvec2(false, false)))[1], (true ? injectionSwitch[1] : _GLF_IDENTITY(_GLF_FUZZED(-727.678), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(-727.678), 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (true ? mat2x3(_GLF_FUZZED(-727.678), 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(mat2x3(6.9, -5.5, -5051.2402, 9850.0564, 7.1, 0.4))))), mix(float(_GLF_FUZZED(vec4(-34.70, -9.2, -0.2, -5.9).y)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(-727.678), 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (true ? mat2x3(_GLF_FUZZED(-727.678), 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(mat2x3(6.9, -5.5, -5051.2402, 9850.0564, 7.1, 0.4))))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-727.678), mix(float(_GLF_FUZZED(90.45)), float(_GLF_IDENTITY(_GLF_FUZZED(-727.678), (false ? _GLF_FUZZED(8454.0850) : _GLF_FUZZED(-727.678)))), bool(true))), 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-6.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (true ? mat2x3(_GLF_FUZZED(-727.678), 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(mat2x3(6.9, -5.5, -5051.2402, 9850.0564, 7.1, 0.4)))))) / 1.0)), bool(true)))))) : _GLF_FUZZED(12.92))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2847.3928, -0.8)) : injectionSwitch)))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))] : _GLF_IDENTITY(_GLF_FUZZED(-727.678), 0.0 + (_GLF_FUZZED(-727.678))))) : _GLF_FUZZED(12.92))))).x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-10.22)), bool(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), (bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) && true))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), (bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) && true))))), false, true)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), (bool((bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) && true))))), false, true)))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))).y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, round(length(normalize(vec2(1.0, 1.0)))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(_GLF_IDENTITY(float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(vec4(min(injectionSwitch.y, injectionSwitch.y), abs(1.0), 0.0, 1.0))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))), (float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))) * 1.0)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8.3) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8.3) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), true, true)))) ? _GLF_FUZZED(-1.1) : float((injectionSwitch)[0]))), float(_GLF_FUZZED(-7501.2419)), bool(false))), _GLF_FUZZED(25.65)), vec2(_GLF_FUZZED(-88.07), _GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), cos(0.0), 0.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, true))))))))).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9.7)), _GLF_FUZZED(float(146969u))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))))), bvec2(_GLF_IDENTITY(true, (true) || false), true))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((9.7)), _GLF_FUZZED(float(146969u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * vec2(1.0, 1.0))))[1], ((injectionSwitch)[1]) / _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) / 1.0))))), bvec2(_GLF_IDENTITY(true, (true) || false), true))).y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-291.587, (-291.587) / 1.0))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
          return;
         barrier();
        }
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(6.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(127622u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(127622u, (127622u) | (127622u)), 1u), (uvec2(_GLF_IDENTITY(127622u, (127622u) | (127622u)), 1u)) | (uvec2(_GLF_IDENTITY(127622u, (127622u) | (127622u)), 1u)))))))), float(1.0), bool(true))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8800.0731)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8800.0731)), bool(false))), 1.0)))))).y)) ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(127622u))), float(1.0), bool(true))))) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), true && (bool(true))))))), _GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), vec2(_GLF_FUZZED(-3.9), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.9), min(_GLF_FUZZED(-3.9), _GLF_FUZZED(-3.9))), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)) / vec2(1.0, 1.0))).y), _GLF_IDENTITY(1.0 * (injectionSwitch.y), (_GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(1.0 * (injectionSwitch.y), _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(1.0 * (injectionSwitch.y)), float(_GLF_FUZZED(99.41)), bool(false))), 1.0 * _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0)))) + sin(0.0)), 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0 * (injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) || false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             return;
            }
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x, float(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), round(length(normalize(1.0))), 1.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0))) < injectionSwitch.y)), false)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(-324.286), _GLF_FUZZED(-8768.3434)), vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[1], clamp((_GLF_FUZZED(injectionSwitch))[1], (_GLF_FUZZED(injectionSwitch))[1], (_GLF_FUZZED(injectionSwitch))[1]))), bvec2(true, true))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1])))).y, (false ? _GLF_FUZZED(3282.6299) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((561.923 / injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(76.24))), injectionSwitch.y, injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(5726) : 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((false ? _GLF_FUZZED(5726) : 0))))) ^ 0)], injectionSwitch[1])))).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(5726) : 0))) ^ 0)], injectionSwitch[1])))).y) - 0.0), (false ? _GLF_FUZZED(3282.6299) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(76.24, (false ? _GLF_FUZZED(9.7) : 76.24))))), injectionSwitch.y, injectionSwitch.y))))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (bool(bool(_GLF_DEAD(false)))) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bool(_GLF_DEAD(false)))) || false)), true, false, false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), float(_GLF_IDENTITY(vec4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0))))), mix(vec4((vec4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0))))))[0], _GLF_FUZZED(6.0), _GLF_FUZZED(-0.6), _GLF_FUZZED(6.1)), vec4(_GLF_FUZZED(7679.0630), (vec4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0))))))[1], (vec4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0))))))[2], (vec4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0))))))[3]), bvec4(false, true, true, true))))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))))))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((injectionSwitch - -1.9)) : vec2(0.0, 0.0))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true, true))), false, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false)), false || (bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)).x, 0u + _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u + _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u + _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), min(0u + _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), 0u + _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, sqrt(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0))), min(injectionSwitch.y, injectionSwitch.y)))), true)), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), false, false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), abs(1.0), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) || false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, false)))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 0.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(967.064), _GLF_FUZZED((3.6 - -3.1))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-641.128)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)))), vec2(_GLF_IDENTITY(mat3x4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(967.064), _GLF_FUZZED((3.6 - -3.1))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-641.128)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)))), sqrt(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat3x4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(967.064), _GLF_FUZZED((3.6 - -3.1))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-641.128)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)))), sqrt(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + vec2(0.0, 0.0)), vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))), 0.0)) * vec3(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, sin(0.0)), vec4(vec4(vec4(1.0, 0.0, 0.0, sin(0.0)))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(sign(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_FUZZED(sign(injectionSwitch)))) : vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8905.6835))))))), 0.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-5614.2502), _GLF_FUZZED((-8.1 * 64.09))), bvec2(false, false))) + vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), 0.0)) * vec3(1.0, 1.0, 1.0)))))).y, 1.0, 0.0)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-99.09, 4.2)) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), true, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | 0u))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0), (mat3(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) : subgroup_local_id + 1)) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))), ((_GLF_IDENTITY(64, max(64, 64)))) | ((_GLF_IDENTITY(64, max(64, 64))))))), ~ (_GLF_IDENTITY(~ (64), (~ (_GLF_IDENTITY(64, max(64, 64)))) << 0))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)))) || false), (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), true && ((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)))), false || _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat3x2(-4.8, -26.19, -48.92, 815.369, 131.657, 4083.1222)) : mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, true && (((false)) || false)))) || false), true, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), true))))))))))), true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
}
