#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), min((0u) | (0u), (0u) | (0u))))) | _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), min((0u), (0u))))))))))) : _GLF_FUZZED(workgroup_base)))));
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u) << 0u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((_GLF_IDENTITY(~ workgroup_size, clamp(~ workgroup_size, _GLF_IDENTITY(~ workgroup_size, clamp(~ workgroup_size, ~ workgroup_size, _GLF_IDENTITY(~ workgroup_size, min(~ workgroup_size, _GLF_IDENTITY(~ workgroup_size, min(_GLF_IDENTITY(~ workgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ workgroup_size)), ~ workgroup_size)))))), _GLF_IDENTITY(~ workgroup_size, (~ workgroup_size) | (~ workgroup_size)))))) : subgroup_size)), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((_GLF_IDENTITY(~ workgroup_size, clamp(_GLF_IDENTITY(~ workgroup_size, (~ workgroup_size) >> 0u), _GLF_IDENTITY(~ workgroup_size, clamp(~ workgroup_size, ~ workgroup_size, _GLF_IDENTITY(~ workgroup_size, min(~ workgroup_size, ~ workgroup_size)))), _GLF_IDENTITY(~ workgroup_size, (~ workgroup_size) | (~ workgroup_size)))))) : subgroup_size))) ^ 0u)), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY((~ workgroup_size), ((~ workgroup_size)) | (_GLF_IDENTITY((~ workgroup_size), min(_GLF_IDENTITY((~ workgroup_size), ((~ workgroup_size)) | ((~ workgroup_size))), (~ workgroup_size)))))) : _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), 0u | (uint(uvec2(0u, 0u)))))))))) >> 0u);
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(5), int(5))))) + _GLF_IDENTITY(0, int(ivec2(0, 0))))))) ^ (_GLF_IDENTITY(64, (64) | (64))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1), (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1)) | (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1)))) / ivec3(1, 1, 1)), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), min(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), _GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))))), _GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), max(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), _GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))))))), 0, 1))))), max(ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1), ivec3(0, 0, _GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(int(7), int(7))))) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (64) | (64)), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), (_GLF_IDENTITY((64) | (64), ((64) | (64)) << 0)) - 0)), int(ivec2(_GLF_IDENTITY(64, (64) | (64)), 0))), _GLF_IDENTITY(64, (64) | (64))))))), 0, 1))))), ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0), 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1))))))))))), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) * 1)) | (64))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1), min(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1), ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))))))) ^ (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), 0 + ((64))))), 0, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))))) ^ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(ivec2(64, (1 | 1))))))), 0, 1), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(64, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(64, 0)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(0, max(0, 0)))))), ~ (~ ((_GLF_IDENTITY(64, int(ivec2(64, 0)))))))))) | ((-92908 & 0) ^ 0)))) | (_GLF_IDENTITY(64, max(64, 64))))), 0, 1)), ~ (~ _GLF_IDENTITY(((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0)))))) | (64))), 0, 1))), (_GLF_IDENTITY(((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0)))))) | (64))), 0, 1))), max(((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0)))))) | (64))), 0, 1))), ((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0)))))) | (64))), 0, 1)))))) | (_GLF_IDENTITY(((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0)))))) | (64))), 0, 1))), (_GLF_IDENTITY(((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0)))))) | (64))), 0, 1))), (false ? _GLF_FUZZED(ivec3(-98730, -74587, 53802)) : ((ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92181)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0)))))) | (64))), 0, 1)))))) / ivec3(1, 1, 1)))))) | (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1)))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY(64, (64) + 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, 1 * (64)) : _GLF_FUZZED(-65907))), (64) | (64))), 0, 1)), min(ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY(64, (64) + 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, 1 * (64)) : _GLF_FUZZED(-65907))), (64) | (64))), 0, 1)), _GLF_IDENTITY(ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY(64, (64) + 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, 1 * (64)) : _GLF_FUZZED(-65907))), (64) | (64))), 0, 1)), ivec3(0, 0, 0) + (ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (_GLF_IDENTITY(64, (64) + 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, 1 * (64)) : _GLF_FUZZED(-65907))), (64) | (64))), 0, 1))))))))), max(ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))) ^ (_GLF_IDENTITY(64, (64) | (64))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))) ^ (_GLF_IDENTITY(64, (64) | (64))), 1, 1, 1)), ~ (~ (int(ivec4(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))) ^ (_GLF_IDENTITY(64, (64) | (64))), 1, 1, 1)))))), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), max(_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), max((64), (64)))) << 0) | (64)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), min(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), max(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64))))))), 0, 1))))), ivec3(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | 0) | (64))), _GLF_IDENTITY(0, int(ivec2(0, 1))), 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(0, ~ (~ (0))) ^ (_GLF_IDENTITY(64, (64) | (64))), 0, 1))))))))))), 2)) - 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, true, true)))))
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), bool(bvec3(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), false, false)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))) && _GLF_IDENTITY(true, ! (! (true))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(int(8), int(8))) | (_injected_loop_counter)) != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))) && true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true, false)))), (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true, false)))), (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true, false)))), (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))) && true)))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5465.9863) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true, false)))), (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false)))))) || false)))))))) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))), false), false)))), false, true, false)))), (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))) && true))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), false, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3((bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), false, true, false))))))), (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))) && true)))))))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, false, _GLF_IDENTITY(true, false || (true)), true)), false || (bool(bvec4(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (1)), false, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), false || (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), false || (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))) || false)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)))), true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)))), true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)))), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)))), true), false)))), false))))))))) && true))))))) && true)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(max(_injected_loop_counter, -25329)) : 0)) >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-84059) : _injected_loop_counter ++)))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0))), ((~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0)))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ~ (~ ((0)))), _GLF_IDENTITY((~ (0)), ((~ (0))) / 1) << 0))), ((~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0)))) >> 0))) << 0), 0, 0, (0 >> _GLF_IDENTITY(int(7), int(7)))), (false ? _GLF_FUZZED(ivec4(-36723, -86922, -69168, _GLF_IDENTITY(58028, (false ? _GLF_FUZZED(-30785) : 58028)))) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0)), (~ (~ _GLF_IDENTITY((0), _GLF_IDENTITY((_GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), int(int((0)))))))), ((_GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), int(int((0))))))))) / 1) / 1))) << 0), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int((~ (0))), max(int((~ (0))), int((~ (0)))))), (int(_GLF_IDENTITY(int((~ (0))), max(int((~ (_GLF_IDENTITY(0, 0 + (0))))), int((~ (0))))))) | (int(_GLF_IDENTITY(int((~ (0))), max(int((~ (0))), int((~ (0)))))))), 0 ^ (int(_GLF_IDENTITY(int((~ (0))), max(int((~ (0))), int((~ (0)))))))))) | ((~ (0)))), (~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), int(_GLF_IDENTITY(int((0)), clamp(int((0)), _GLF_IDENTITY(int((0)), clamp(int((0)), int((0)), int((0)))), _GLF_IDENTITY(int((0)), min(int((0)), int((0))))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((0), int(int((0))))), 0 + (~ (_GLF_IDENTITY((0), int(int((0))))))), ~ (_GLF_IDENTITY((0), int(int((0)))))))))) / 1))) << 0) : _GLF_FUZZED((clamp(-18675, 32328, -83364) * _injected_loop_counter)))), 0, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 7)))))))), _GLF_IDENTITY(0, max(0, 0)) + (_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), (int(7)) | (int(7))))))))) ^ 0), int(7)))), min(ivec4(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) << 0), _GLF_IDENTITY(0, 0 | (0)), 0, (0 >> _GLF_IDENTITY(int(7), int(7)))), ivec4(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) << 0), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((true ? int(7) : _GLF_FUZZED(_injected_loop_counter)), (_GLF_IDENTITY((true ? int(7) : _GLF_FUZZED(_injected_loop_counter)), min((true ? int(7) : _GLF_FUZZED(_injected_loop_counter)), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter))))) | ((true ? int(7) : _GLF_FUZZED(_injected_loop_counter))))), int(7))))))))))) : _GLF_FUZZED(-37843)), ((true ? _GLF_IDENTITY(0, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (0)), 1 * ((~ (0)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0))), ((~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 | (~ (0)))) << 0)))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ~ (~ ((0)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), _GLF_IDENTITY(((~ (0))), max(((~ (0))), _GLF_IDENTITY(((~ (0))), 0 ^ (((~ (0))))))) / 1), ~ (~ (_GLF_IDENTITY((~ (0)), ((~ (0))) / 1)))) << 0))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), int(int(~ (0)))), (~ (0)) << 0)))) >> 0))) << 0), 0, 0, (0 >> _GLF_IDENTITY(int(7), int(7)))), (false ? _GLF_FUZZED(ivec4(-36723, -86922, -69168, 58028)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0)), (~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), int(int((0)))))))) / 1))) << 0), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) / 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int((~ (0))), clamp(_GLF_IDENTITY(int((~ (0))), 0 | (int((~ (0))))), int((~ (0))), _GLF_IDENTITY(int((~ (0))), (int((~ (0)))) | (int((~ (0))))))), max(int((~ (0))), int((~ (0)))))), 0 ^ (int(_GLF_IDENTITY(int(_GLF_IDENTITY((~ (0)), int(ivec2((~ (0)), 0)))), max(int((~ (0))), int((~ (0)))))))))) | ((~ (0)))), (~ (~ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), int(int((0))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((0), int(int((0))))), 0 + (~ (_GLF_IDENTITY((0), int(int((0))))))), ~ (_GLF_IDENTITY((0), int(int((0)))))))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), int(int((0))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((0), int(int((0))))), 0 + (~ (_GLF_IDENTITY((0), int(int((0))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((0), int(int((0)))), max(_GLF_IDENTITY(_GLF_IDENTITY((0), int(int((0)))), (_GLF_IDENTITY((0), int(int((0))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY((0), int(int((0)))), max(_GLF_IDENTITY((0), int(int((0)))), _GLF_IDENTITY((0), int(int((0)))))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((0), int(int((0))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), int(int((0))))), 0 + (~ (_GLF_IDENTITY((0), int(int((0))))))), ~ (_GLF_IDENTITY((0), int(int((0))))))))) << 0), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1))) << 0) : _GLF_FUZZED((clamp(-18675, 32328, -83364) * _injected_loop_counter)))), 0, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))))), int(7)))), min(ivec4(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) << 0), _GLF_IDENTITY(0, 0 | (0)), 0, (0 >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) << 0), 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (~ (_GLF_IDENTITY(0, max(0, 0)))) >> 0)) << 0))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter))), int(7)))), max(ivec4(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) << 0), 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (~ (_GLF_IDENTITY(0, max(0, 0)))) >> 0)) << 0))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter))), int(7)))), ivec4(_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) << 0), 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (~ (_GLF_IDENTITY(0, max(0, 0)))) >> 0)) << 0))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter))), int(7))))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(-37843), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-37843), (_GLF_FUZZED(-37843)) >> 0), 1, 0), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_FUZZED(-37843), (_GLF_FUZZED(-37843)) >> 0), 1, 0), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(_GLF_FUZZED(-37843), (_GLF_FUZZED(-37843)) >> 0), 1, 0))), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-37843), (_GLF_FUZZED(-37843)) >> 0), 1, 0), ivec3(_GLF_IDENTITY(_GLF_FUZZED(-37843), (_GLF_FUZZED(-37843)) >> 0), 1, 0))))))) ^ 0)), 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(-37843, _GLF_IDENTITY((-37843) | (-37843), min((-37843) | (-37843), (-37843) | (-37843))))), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(_GLF_IDENTITY(-37843, _GLF_IDENTITY((-37843) | (-37843), min((-37843) | (-37843), (-37843) | (-37843))))), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), ~ (~ (0))) : _GLF_FUZZED(_GLF_IDENTITY(-37843, _GLF_IDENTITY(_GLF_IDENTITY((-37843) | (-37843), (0 ^ 0) ^ ((-37843) | (-37843))), min((-37843) | (-37843), (-37843) | (-37843))))), true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(_GLF_IDENTITY(-37843, _GLF_IDENTITY(_GLF_IDENTITY((-37843), ((-37843)) | 0) | (-37843), min((-37843) | (-37843), (-37843) | (-37843))))))), _GLF_IDENTITY(true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(_GLF_IDENTITY(-37843, _GLF_IDENTITY((-37843) | (-37843), min((-37843) | (-37843), (-37843) | (-37843))))), (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(_GLF_IDENTITY(-37843, _GLF_IDENTITY((-37843) | (-37843), min((-37843) | (-37843), (-37843) | (-37843)))))) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0)))))), ivec2(ivec3(ivec2(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(-37843))), 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | 0))))) / ivec2(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec4(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))))), 0 ^ (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(true, (true) || false) ? 0 : _GLF_FUZZED(-37843))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37843))))), (0 << _GLF_IDENTITY(int(4), int(4))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37843))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37843))))))), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             do
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))))); _injected_loop_counter --)
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 1 * (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             do
                                              {
                                               do
                                                {
                                                 do
                                                  {
                                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                    {
                                                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                      {
                                                       if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) == 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) == 0, ((subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) == 0) && true)), ! (! (! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) == 0, ((subgroup_local_id % _GLF_IDENTITY(2, min(2, 2))) == 0) && true))))))))
                                                        {
                                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(true, (true) && true) && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter --)
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                {
                                                                 subgroupAll(false);
                                                                }
                                                              }
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                          {
                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
                                                                {
                                                                 do
                                                                  {
                                                                   do
                                                                    {
                                                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                        {
                                                                        }
                                                                       else
                                                                        {
                                                                         do
                                                                          {
                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                            {
                                                                            }
                                                                           else
                                                                            {
                                                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), (float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))) * 1.0)) < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
                                                                              {
                                                                               do
                                                                                {
                                                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                  {
                                                                                  }
                                                                                 else
                                                                                  {
                                                                                   do
                                                                                    {
                                                                                     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) >> (0 ^ 0))), 4, 64, 4);
                                                                                    }
                                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                                  }
                                                                                }
                                                                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))));
                                                                              }
                                                                             else
                                                                              {
                                                                              }
                                                                            }
                                                                          }
                                                                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3x2(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.2)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(1549.5034, -7099.1172, 88.93, -747.766, -6.5, -15.66, -0.8, 24.69, -2.7, 4.5, -99.53, -729.956, -14.78, -3.3, 810.325, -1.9)) : mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))).x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))));
                                                                        }
                                                                      }
                                                                    }
                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                  }
                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                            }
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                       else
                                                        {
                                                         do
                                                          {
                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             do
                                                              {
                                                               for(int _injected_loop_counter = ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 ^ (1))), (~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), ((_GLF_IDENTITY(1, 0 ^ (1)))) - 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 ^ (1))), (~ (_GLF_IDENTITY(1, 0 ^ (1)))) | 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << 0), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED((_injected_loop_counter --)) : 6))), 0 ^ (int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED((_injected_loop_counter --)) : 6))))), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                {
                                                                 do
                                                                  {
                                                                   do
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                                      {
                                                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
                                                                        {
                                                                         do
                                                                          {
                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                            {
                                                                            }
                                                                           else
                                                                            {
                                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                                              {
                                                                              }
                                                                             else
                                                                              {
                                                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)), (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
                                                                                {
                                                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                  {
                                                                                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(7, int(ivec3(7, 0, 1)))))), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(7, (_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec2(7, 0)))))) | (7)), (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec2(7, 0)))))) | (7))) - 0)) - 0)), 0 | ((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec2(7, 0)))))) | (7))) - 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, ~ (~ (7)))) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) | (0)))), ((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))))) - 0), 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, _GLF_IDENTITY((7), (false ? _GLF_FUZZED(_injected_loop_counter) : (7))) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, _GLF_IDENTITY((_GLF_IDENTITY(7, 0 | (7))), (_GLF_IDENTITY((7), 0 ^ ((7)))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ((_GLF_IDENTITY(7, (7) - 0))) - 0), 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))) >> ivec2(0, 0))), ((~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) | ivec2(0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) + 0), (7) - 0)), 0), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) + 0), (7) - 0)), 0), (true ? ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) + 0), (7) - 0)), 0) : _GLF_FUZZED(ivec2(-37919, 30041)))), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) + 0), (7) - 0)), 0))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), clamp((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(7, (7) - 0))), max(_GLF_IDENTITY(int(int(_GLF_IDENTITY(7, (7) - 0))), ~ (~ (int(int(_GLF_IDENTITY(7, (7) - 0)))))), int(int(_GLF_IDENTITY(7, (7) - 0))))))) / 1)), 0)), _GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(ivec3((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, (7) - 0)))))) - 0)) / 1)), 0)), 1))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ivec2(ivec4(ivec2((_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) / 1) - 0)), 0), 1, 1))), ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) * _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(34375, -98068)), (_GLF_IDENTITY(true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(34375, -98068)), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(34375, -98068))) * ivec2(1, 1))) * ivec2(1, 1))))))))))) << ivec2(0, 0), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(7, _GLF_IDENTITY((7), (0 >> _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY((7), ~ (~ (_GLF_IDENTITY((7), ((7)) | ((7)))))))) - 0)) / 1)), 0), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY(_GLF_IDENTITY((7), ((7)) - 0), min(_GLF_IDENTITY((7), ((7)) - 0), _GLF_IDENTITY((7), ((7)) - 0))) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), clamp(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)))) | (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(7, 7))) / 1), (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), _GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), _GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), (ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0))) | (ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)))), (true ? _GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), _GLF_IDENTITY((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), ivec2(ivec4((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), ivec2(_GLF_IDENTITY(ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) * ivec2(1, 1)))))))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), 0, 0))) | (ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))), (true ? ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | _GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (_GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (false ? _GLF_FUZZED(ivec2(-98188, 15195)) : ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))))) >> ivec2(0, 0)), ((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) << ivec2(0, 0)), 0))) : _GLF_FUZZED(sign(ivec2(-35527, 88440))))), 0)))) : _GLF_FUZZED(ivec2(96077, 94))))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), (ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0))) | (ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)))), (true ? _GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), _GLF_IDENTITY((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), ivec2(ivec4((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), ivec2(_GLF_IDENTITY(ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) * ivec2(1, 1)))))))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), 0, 0))) | (ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))), (true ? ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | _GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (_GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (false ? _GLF_FUZZED(ivec2(-98188, 15195)) : ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))))) >> ivec2(0, 0)), ((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) << ivec2(0, 0)), 0))) : _GLF_FUZZED(sign(ivec2(-35527, 88440))))), 0)))) : _GLF_FUZZED(ivec2(96077, 94)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), (ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0))) | (ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)))), (true ? _GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), _GLF_IDENTITY((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), ivec2(ivec4((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), ivec2(_GLF_IDENTITY(ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) * ivec2(1, 1)))))))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), 0, 0))) | (ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))), (true ? ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | _GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (_GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (false ? _GLF_FUZZED(ivec2(-98188, 15195)) : ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))))) >> ivec2(0, 0)), ((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) << ivec2(0, 0)), 0))) : _GLF_FUZZED(sign(ivec2(-35527, 88440))))), 0)))) : _GLF_FUZZED(ivec2(96077, 94))))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), (ivec2(ivec3((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0))) | (ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, max(0, 0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)))), (true ? _GLF_IDENTITY(ivec2(ivec3((ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), 0)), _GLF_IDENTITY((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), ivec2(ivec4((ivec2(ivec3(_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), ivec2(_GLF_IDENTITY(ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (ivec2(~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) * ivec2(1, 1)))))))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) * 1)) ^ (0 | 0))) - 0)), 0)))) / ivec2(1, 1)), 0))), 0, 0))) | (ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))), (true ? ivec2(87926, 63614) & _GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | _GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (_GLF_IDENTITY(((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (false ? _GLF_FUZZED(ivec2(-98188, 15195)) : ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))))) >> ivec2(0, 0)), ((_GLF_IDENTITY(ivec2(87926, 63614) & ivec2(0, 0), (true ? ivec2(87926, 63614) & ivec2(0, 0) : _GLF_FUZZED(ivec2(22132, 75867))))) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) << ivec2(0, 0)), 0))) : _GLF_FUZZED(sign(ivec2(-35527, 88440))))), 0)))) : _GLF_FUZZED(ivec2(96077, 94)))))) / ivec2(1, 1)))) >> (ivec2(0, 0) & ivec2(-97342, -93321))))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))) << ivec2(0, 0), ivec2(ivec4((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), _GLF_IDENTITY(0, (0) | 0))), _GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), min((ivec2(87926, 63614) & ivec2(0, _GLF_IDENTITY(0, int(int(0))))) | ((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY((7), ((7)) >> 0) - 0)), 0))), _GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) ^ ivec2(0, 0))) | ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))))))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))), (false ? _GLF_FUZZED(ivec2(-73651, -7423)) : (~ _GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), _GLF_IDENTITY(0, (0) | 0))), _GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), min((ivec2(87926, 63614) & ivec2(0, _GLF_IDENTITY(0, int(int(0))))) | ((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY((7), ((7)) >> 0) - 0)), 0))), _GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), (_GLF_IDENTITY((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))) ^ ivec2(0, 0))) | ((ivec2(87926, 63614) & ivec2(0, 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))))))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))))) << ivec2(0, 0), 1, 1)))) << ivec2(0, 0))))))) / 1)), ~ (~ (int(_GLF_IDENTITY(7, _GLF_IDENTITY((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec2(7, 0)))))) | (7))) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))), 0)), (~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))), 0))) ^ ivec2(0, 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) ^ 0)) - 0)), 0), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) + 0), 0))))), ~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0)))))))), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, _GLF_IDENTITY((7) - 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((7) - 0)))) / 1)), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))) << ivec2(0, 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, _GLF_IDENTITY((7), ~ (~ (_GLF_IDENTITY((7), clamp(_GLF_IDENTITY((7), (false ? _GLF_FUZZED(_injected_loop_counter) : (7))), _GLF_IDENTITY((7), min((7), (7))), (7)))))) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))), 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | (0)))), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0))))), clamp(~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0))))), _GLF_IDENTITY(~ (~ (~ ((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, min(7, 7)), 7, _GLF_IDENTITY(7, (7) | (7))))) - 0))))), 0 | (~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0))))))), ~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0)))))))))), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))) << ivec2(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (0)))), 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), (true ? ~ ((_GLF_IDENTITY(7, (7) - 0))) : _GLF_FUZZED(_injected_loop_counter))))), ~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0)))))))), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, _GLF_IDENTITY((7) - 0, ((7) - 0) * 1))) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) | (7))) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(81.22) : injectionSwitch.x)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, 0 | (0)))))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))) << ivec2(0, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))), 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), ~ (~ (~ ((_GLF_IDENTITY(7, _GLF_IDENTITY((7), int(ivec3((7), 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) - 0)))))))), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, _GLF_IDENTITY((7) - 0, (_GLF_IDENTITY((7) - 0, clamp((7) - 0, (7) - 0, (7) - 0))) | (_GLF_IDENTITY((7) - 0, max((7) - 0, (7) - 0)))))) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)) | (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, min(0, 0)))), 0)))), (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, _GLF_IDENTITY((7) - 0, (_GLF_IDENTITY((7) - 0, clamp((7) - 0, (7) - 0, (7) - 0))) | (_GLF_IDENTITY((7) - 0, max((7) - 0, (7) - 0)))))) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)) | (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), min(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0), ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)))) - ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, min(0, 0)))), 0))))) ^ ivec2(0, 0))))) << ivec2(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) | (0)))), 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ivec2(0, 0) ^ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), ~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0)))))))), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), clamp((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)))), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(ivec2(0, 0)))), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) << 0), 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, _GLF_IDENTITY(63614, clamp(_GLF_IDENTITY(63614, (63614) | (63614)), 63614, 63614))) & ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-7189.2732)))) ^ (_GLF_IDENTITY(0, 0 | (0)))), min(_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-7189.2732)))) ^ (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-7189.2732)))) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-7189.2732)))) ^ (_GLF_IDENTITY(0, 0 | (0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-7189.2732)))) ^ (_GLF_IDENTITY(0, 0 | (0)))), ~ (~ (_GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-7189.2732)))) ^ (_GLF_IDENTITY(0, 0 | (0))))))))))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))) << ivec2(0, 0))))) << ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) ^ 0)) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, _GLF_IDENTITY((7), (true ? (7) : _GLF_FUZZED(_injected_loop_counter))) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, clamp(0, 0, 0)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0))))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0))))), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0))))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0))))), (((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0)))))) << 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), int(ivec2(_GLF_IDENTITY(7, (7) - 0), 0))), _GLF_IDENTITY(7, (7) - 0))), _GLF_IDENTITY(7, (7) - 0))))))), ~ (~ (~ ((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) / 1), 7))) - 0)))))))), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) * 1) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)))))), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) ^ 0)))), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0))))) | 0)))) / 1), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) * 1) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)))))), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) ^ 0)))), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0))))) | 0)))) / 1), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) * 1) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)))))), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) ^ 0)))), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0))))) | 0)))) / 1), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) * 1) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)))))), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)) ^ 0)))), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0))))) | 0)))) / 1), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))))) << ivec2(0, 0)))), ivec2(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(7, max(7, 7)), 1, 1)), ~ (~ (int(ivec3(_GLF_IDENTITY(7, max(7, 7)), 1, 1)))))), (_GLF_IDENTITY(7, int(int(_GLF_IDENTITY(7, ~ (~ (7))))))) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))), 0)))), max(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, 1 * (7)), (7) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ _GLF_IDENTITY((~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), ~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0)))))))), 0))), ivec2(0, 0) | ((~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), ~ (~ (~ ((_GLF_IDENTITY(7, (7) - 0)))))))), 0)))))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), _GLF_IDENTITY(0, 0 | (0))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)) | (_GLF_IDENTITY(7, (7) - 0)), ((_GLF_IDENTITY(7, (7) - 0)) | (_GLF_IDENTITY(7, (7) - 0))) >> 0))) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), _GLF_IDENTITY(1, 0 ^ (1)), 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (ivec2(87926, 63614) & ivec2(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, 0 | (0)))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, _GLF_IDENTITY((7), min((7), _GLF_IDENTITY((7), _GLF_IDENTITY(int(ivec4((7), 0, 1, 1)), (true ? int(ivec4((7), 0, 1, 1)) : _GLF_FUZZED(_injected_loop_counter)))))) - 0)), 0))))))) << ivec2(0, 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)))), 0)))), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (~ ((_GLF_IDENTITY(7, (7) - 0))))), 0), ~ (~ (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(7, (7) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(7, (7) - 0))), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(7, ~ (~ (7))), (7) - 0)))))))), 0)))), (_GLF_IDENTITY(ivec2((_GLF_IDENTITY(7, (7) - 0)), 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), ivec2(_GLF_IDENTITY(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), (true ? _GLF_IDENTITY(7, (7) - 0) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(7, (7) - 0)) / 1)), 0)), 1, 0), min(ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY((7), (_GLF_IDENTITY((7), ((7)) >> 0)) ^ 0) - 0), (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) - 0), 7))) - 0)) / 1)), 0)), 1, 0), ivec4((ivec2((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), (clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7, (7) - 0)) / _GLF_IDENTITY(1, (1) >> 0))), 0)), 1, 0))))), min(_GLF_IDENTITY((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)), (_GLF_IDENTITY(ivec2(87926, 63614), (ivec2(87926, 63614)) | (_GLF_IDENTITY(ivec2(87926, 63614), (ivec2(87926, 63614)) - ivec2(0, 0)))) & ivec2(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(0 | (0), 0 | (0), _GLF_IDENTITY(0 | (0), (0 | (0)) | (_GLF_IDENTITY(0 | (0), (0 | (0)) ^ 0)))))))), 0)) | ((ivec2((_GLF_IDENTITY(7, (7) - 0)), 0)))), (ivec2((_GLF_IDENTITY(7, (7) - 0)), 0))))))) << ivec2(0, 0)))))))) / 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                                                    {
                                                                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                                                                                      {
                                                                                       subgroupAll(false);
                                                                                      }
                                                                                     else
                                                                                      {
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                 else
                                                                                  {
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.3), _GLF_FUZZED(-418.046)), bvec2(false, false))))) : _GLF_FUZZED(floor(injectionSwitch)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.3), _GLF_FUZZED(-418.046)), bvec2(false, false))))) : _GLF_FUZZED(floor(injectionSwitch)))).y))))));
                                                                        }
                                                                       else
                                                                        {
                                                                        }
                                                                      }
                                                                     else
                                                                      {
                                                                      }
                                                                    }
                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                  }
                                                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))));
                                                                }
                                                              }
                                                             while(_GLF_WRAPPED_LOOP(false));
                                                            }
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(false));
                                                         do
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                                                            {
                                                             for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, (0) >> 0))) << 0)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))) << 0)), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY((int(0)) << 0, 0 + ((int(0)) << 0)), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) << 0)) << 0, 0 + ((int(0)) << 0))))))) / (1 | 1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(23.71), _GLF_FUZZED(74.86)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))); _injected_loop_counter ++)
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 for(int _injected_loop_counter = (0 & ((-35103 * -9647) + 61348)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | _GLF_IDENTITY(1, (1) / 1), clamp(0 | _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0 | _GLF_IDENTITY(1, (1) / 1), (0 | _GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(0 | _GLF_IDENTITY(1, (1) / 1), ~ (~ (0 | _GLF_IDENTITY(1, (1) / 1)))))), 0 | _GLF_IDENTITY(1, (1) / 1))))); _injected_loop_counter ++)
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                    {
                                                                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true))))
                                                                      {
                                                                       do
                                                                        {
                                                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
                                                                          {
                                                                          }
                                                                         else
                                                                          {
                                                                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) * 1))
                                                                            {
                                                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                                                                              {
                                                                               do
                                                                                {
                                                                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))))); _injected_loop_counter --)
                                                                                  {
                                                                                   do
                                                                                    {
                                                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                                                      {
                                                                                      }
                                                                                     else
                                                                                      {
                                                                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (true))))
                                                                                        {
                                                                                         do
                                                                                          {
                                                                                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                                            {
                                                                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                              {
                                                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                {
                                                                                                }
                                                                                               else
                                                                                                {
                                                                                                 do
                                                                                                  {
                                                                                                   do
                                                                                                    {
                                                                                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                                                                                                      {
                                                                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                                        {
                                                                                                        }
                                                                                                       else
                                                                                                        {
                                                                                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                          {
                                                                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                                            {
                                                                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
                                                                                                              {
                                                                                                              }
                                                                                                             else
                                                                                                              {
                                                                                                               atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 1 * (4)), 64, 4);
                                                                                                              }
                                                                                                            }
                                                                                                           else
                                                                                                            {
                                                                                                            }
                                                                                                          }
                                                                                                         else
                                                                                                          {
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                   while(_GLF_WRAPPED_LOOP(false));
                                                                                                  }
                                                                                                 while(_GLF_WRAPPED_LOOP(false));
                                                                                                }
                                                                                              }
                                                                                             else
                                                                                              {
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                         while(_GLF_WRAPPED_LOOP(false));
                                                                                        }
                                                                                       else
                                                                                        {
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                                                  }
                                                                                }
                                                                               while(_GLF_WRAPPED_LOOP(false));
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.0) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y))))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), _GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y)))))) && true) && _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, _GLF_IDENTITY(-4.3, clamp(-4.3, _GLF_IDENTITY(-4.3, max(-4.3, _GLF_IDENTITY(-4.3, mix(float(-4.3), float(_GLF_FUZZED(-1838.8689)), bool(false))))), -4.3)), 5.8, 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, -4.3, 5.8, 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : injectionSwitch.y))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, -4.3, _GLF_IDENTITY(5.8, max(_GLF_IDENTITY(5.8, min(5.8, 5.8)), _GLF_IDENTITY(5.8, max(5.8, 5.8)))), 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, -4.3, 5.8, 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : injectionSwitch.y)))))))))), false)))))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-38.86)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-38.86)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))))))))))), bool(bool((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), false), bvec2(bvec4(bvec2(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), false), true, true)))))))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))) && true)), false, _GLF_IDENTITY(false, (false) && true))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), _GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y))))), ((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y)))))) && true) && _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, _GLF_IDENTITY(-4.3, clamp(-4.3, _GLF_IDENTITY(-4.3, max(-4.3, _GLF_IDENTITY(-4.3, mix(float(-4.3), float(_GLF_FUZZED(-1838.8689)), bool(false))))), -4.3)), 5.8, 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, -4.3, 5.8, 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : injectionSwitch.y))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, -4.3, _GLF_IDENTITY(5.8, max(_GLF_IDENTITY(5.8, min(5.8, 5.8)), _GLF_IDENTITY(5.8, max(5.8, 5.8)))), 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(-8.6, -4.3, 5.8, 4.7, 1.6, -9807.7162, -5.7, -813.735, -3.4))) : injectionSwitch.y)))))))))), false)))))) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-38.86)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-38.86)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))))))))))), bool(bool((bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), false), bvec2(bvec4(bvec2(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.1))), injectionSwitch.y))), false), true, true)))))))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))) && true)), false, _GLF_IDENTITY(false, (false) && true))))))))))), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true)))));
                                                                      }
                                                                     else
                                                                      {
                                                                      }
                                                                    }
                                                                   else
                                                                    {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                        }
                                                      }
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(9.8, _GLF_IDENTITY(-2.8, (-2.8) + 0.0))) : vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))));
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false)) || false)));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     do
      {
       subgroupBarrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) * (0))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         do
          {
           atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, min(read, read)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 ^ (_GLF_IDENTITY(4, ~ (~ (4)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 ^ (_GLF_IDENTITY(4, ~ (~ (4))))))) / 1)))) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(false ? _GLF_FUZZED(-95004) : int(7), _GLF_IDENTITY(min(_GLF_IDENTITY(false ? _GLF_FUZZED(-95004) : int(7), (false ? _GLF_FUZZED(-95004) : int(7)) + 0), false ? _GLF_FUZZED(-95004) : int(7)), max(min(_GLF_IDENTITY(false ? _GLF_FUZZED(-95004) : int(7), (false ? _GLF_FUZZED(-95004) : int(7)) + 0), false ? _GLF_FUZZED(-95004) : int(7)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(-95004) : int(7), (false ? _GLF_FUZZED(-95004) : int(7)) + 0), false ? _GLF_FUZZED(-95004) : int(7)))))))), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(-95004) : int(7))))) ^ 0))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4))))), _GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, 0 | (64))), _GLF_IDENTITY(min(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - (0 | 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1, 1), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), 0, 1, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), (false ? _GLF_FUZZED(ivec4(-92963, -67223, 5950, 44589)) : ivec4((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-70409) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1))))))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), clamp((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), 64, 64)), 64, 64)), 64)), _GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))))))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-21655) : 0 << _GLF_IDENTITY(int(0), int(0))))))), 0, 1, 1))), ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), ivec4((_GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1))))))))), (min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), int(ivec3((~ (64)), 1, 1))))), (~ _GLF_IDENTITY((64), min((64), (64)))) >> 0))), _GLF_IDENTITY(0, (0) ^ 0) | (64)))) | 0), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) >> 0)), max(_GLF_IDENTITY(min(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - (0 | 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1, 1), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), 0, 1, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), (false ? _GLF_FUZZED(ivec4(-92963, -67223, 5950, 44589)) : ivec4((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-70409) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1))))))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), clamp((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), 64, 64)), 64, 64)), 64)), _GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))))))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-21655) : 0 << _GLF_IDENTITY(int(0), int(0))))))), 0, 1, 1))), ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), ivec4((_GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1))))))))), (min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), int(ivec3((~ (64)), 1, 1))))), (~ _GLF_IDENTITY((64), min((64), (64)))) >> 0))), _GLF_IDENTITY(0, (0) ^ 0) | (64)))) | 0), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) >> 0)), (min(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - (0 | 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1, 1), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), 0, 1, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), (false ? _GLF_FUZZED(ivec4(-92963, -67223, 5950, 44589)) : ivec4((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-70409) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1))))))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), clamp((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), 64, 64)), 64, 64)), 64)), _GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))))))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-21655) : 0 << _GLF_IDENTITY(int(0), int(0))))))), 0, 1, 1))), ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), ivec4((_GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1))))))))), (min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), int(ivec3((~ (64)), 1, 1))))), (~ _GLF_IDENTITY((64), min((64), (64)))) >> 0))), _GLF_IDENTITY(0, (0) ^ 0) | (64)))) | 0), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) >> 0))) | (min(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - (0 | 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1, 1), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), 0, 1, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), (false ? _GLF_FUZZED(ivec4(-92963, -67223, 5950, 44589)) : ivec4((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-70409) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1))))))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), clamp((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), 64, 64)), 64, 64)), 64)), _GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))))))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-21655) : 0 << _GLF_IDENTITY(int(0), int(0))))))), 0, 1, 1))), ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), ivec4((_GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1))))))))), (min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), int(ivec3((~ (64)), 1, 1))))), (~ _GLF_IDENTITY((64), min((64), (64)))) >> 0))), _GLF_IDENTITY(0, (0) ^ 0) | (64)))) | 0), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) >> 0)))), min(_GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - (0 | 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1, 1), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))))))), 0, 1, 1), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), (false ? _GLF_FUZZED(ivec4(-92963, -67223, 5950, 44589)) : ivec4((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (false ? _GLF_FUZZED(-70409) : _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), ((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1))))))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), clamp((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), 64, 64)), 64, 64)), 64)), _GLF_IDENTITY(64, int(ivec2(64, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec2(64, 1)))))))))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-21655) : 0 << _GLF_IDENTITY(int(0), int(0))))))), 0, 1, 1))), ivec4((_GLF_IDENTITY(64, (64) ^ (0 << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1), ivec4((_GLF_IDENTITY(64, (64) ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(0), int(0))))), 0, 1, 1))))))))), (min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), int(ivec3((~ (64)), 1, 1))))), (~ _GLF_IDENTITY((64), min((64), (64)))) >> 0))), _GLF_IDENTITY(0, (0) ^ 0) | (64)))) | 0), _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 | (64))), (min(64, _GLF_IDENTITY(64, 0 | (64)))) >> 0)))))), 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
}
