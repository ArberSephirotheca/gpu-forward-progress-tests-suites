#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), false || (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), false || (_GLF_IDENTITY(false, true && (false)))), false, false, false))) || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, false))), true, false)), false || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, length(0.0), 0.0, 0.0)), 1.0))), true, true, false)), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, length(0.0), 0.0, 0.0)), 1.0))), true, true, false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true, true, false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(true, (true) && true), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), false || (_GLF_IDENTITY(false, (false) && true))))), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), false)), false || (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), false))))))))), false, true)), false, true, _GLF_IDENTITY(true, ! (! (true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), 1u))), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> (0u | 0u)) - 0u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))) || false), false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) >> (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))) ? _GLF_FUZZED((+ workgroup_size)) : 0u | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), _GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (uint(uint(subgroup_local_id))))))), (subgroup_local_id) * 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * _GLF_IDENTITY(1u, (1u) | 0u))))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), 0u + (~ ((subgroup_local_id)))))) * 1u, clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, (true ? (subgroup_local_id) * 1u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) * 1u, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ ((uint(subgroup_local_id))), (~ ((uint(subgroup_local_id)))) - 0u))))))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), max(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, (true ? (subgroup_local_id) * 1u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) * 1u, (subgroup_local_id) * 1u))), 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, 0u + (1u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, (true ? (subgroup_local_id) * 1u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) * 1u, (subgroup_local_id) * 1u), (false ? _GLF_FUZZED(190681u) : clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, (true ? (subgroup_local_id) * 1u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) * 1u, (subgroup_local_id) * 1u))))), 1u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(47047u, 97660u, 95029u, 11450u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((subgroup_local_id) * 1u, (true ? (subgroup_local_id) * 1u : _GLF_FUZZED(workgroup_base))), (subgroup_local_id) * 1u, (subgroup_local_id) * 1u))), 1u, 0u, 1u)))))))))) : _GLF_FUZZED(virtual_gid)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) * 1u, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) * 1u))), (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) * 1u)) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) * 1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)))) + 0u) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id))) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))))), min(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u))) << 0u))) : _GLF_FUZZED(num_workgroup)))), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u))) << 0u))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u))) << 0u))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u))) << 0u))) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u))) << 0u))) : _GLF_FUZZED(num_workgroup))))) | (0u & 81759u))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint((subgroup_local_id)), (uint((subgroup_local_id))) | (uint((subgroup_local_id)))))) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), (bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))) || false)) ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) : _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) * 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) - 0u))) - 0u))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(subgroup_id) : (subgroup_local_id) | 0u)), (1u ^ 1u) + ((subgroup_local_id) | 0u)))) * 1u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))) * 1u)) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min(_GLF_IDENTITY((subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id))) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))))), min(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u))) << 0u))) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, _GLF_IDENTITY((true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)), ~ (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))), uint(uvec2(~ ((true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))), 1u)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), (bool(bool(_GLF_IDENTITY(true, false || (true))))) || false)) ? _GLF_IDENTITY((subgroup_local_id) * _GLF_IDENTITY(1u, min(1u, 1u)), min((subgroup_local_id) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) * 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)), subgroup_local_id, subgroup_local_id)), (subgroup_local_id) * 1u)) - 0u))) - 0u))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (1u ^ 1u) + ((subgroup_local_id) | 0u)))) * 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u)) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))))))), min(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (uint(uvec3(1u, 0u, 1u))) << 0u)), (subgroup_local_id) * 1u))) << 0u))) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (true ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), (bool(bool(_GLF_IDENTITY(true, false || (true))))) || false)) ? _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), (subgroup_local_id) * 1u)) : _GLF_FUZZED(num_workgroup))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) * 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) - 0u))) - 0u))))), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (1u ^ 1u) + ((subgroup_local_id) | 0u)))) * 1u))))))))))) - 0u) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) - 0), _GLF_IDENTITY(1, (1) - 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))))))), 1, 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u))) % subgroup_size)) >> 0u);
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))), virtual_gid, virtual_gid))], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-1.8) : injectionSwitch.x), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-1.8) : injectionSwitch.x), float(mat4x3((false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-1.8) : injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | 0), 4)), 0 | (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))))) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(-5.1)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))) / 1.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))), false)), false)))))), (_GLF_IDENTITY(false, false || (false))) || false)))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[virtual_gid], read, 4, 64, 4);
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), true, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), true, false, false)), false, false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(vec3(injectionSwitch, sin(0.0)), vec3(injectionSwitch, sin(0.0)))))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(vec3(injectionSwitch, sin(0.0)), vec3(injectionSwitch, sin(0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(vec3(injectionSwitch, sin(0.0)), vec3(injectionSwitch, sin(0.0)))))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), min(vec3(injectionSwitch, sin(0.0)), vec3(injectionSwitch, sin(0.0)))), (_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), min(vec3(injectionSwitch, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), sin(0.0)))), _GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), (vec3(injectionSwitch, sin(0.0))) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), min(vec3(injectionSwitch, sin(0.0)), _GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), mix(vec3(_GLF_FUZZED(-2.0), (vec3(injectionSwitch, sin(0.0)))[1], (vec3(injectionSwitch, sin(0.0)))[2]), vec3((vec3(injectionSwitch, sin(0.0)))[0], _GLF_FUZZED(899.251), _GLF_FUZZED(6.3)), bvec3(true, false, false))))), min(_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), (true ? vec3(injectionSwitch, sin(0.0)) : _GLF_FUZZED(vec3(21.35, -96.40, 4.5)))), vec3(injectionSwitch, sin(0.0)))))).y))))))
    return;
  }
}
