#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1)))), min(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1)))), 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1)))))))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))) && true))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))), clamp((_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))), (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))))) - 0u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 1u * (_GLF_IDENTITY(3u, clamp(3u, _GLF_IDENTITY(3u, (3u) | (3u)), 3u))))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))) + subgroup_id * subgroup_size + subgroup_local_id)));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (1u ^ 1u) + (subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) ^ 0u), 1u))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = ((0 | _GLF_IDENTITY(0, (0) >> 0)) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 53:
       mat3x4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
       case 85:
       uvec2(_GLF_IDENTITY(48869u, min(48869u, 48869u)), 161368u);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).y))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       case 0:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       case 75:
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       case 3:
       case 19:
       case 91:
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(876.145) : 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), float(mat4x3(_GLF_IDENTITY(float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(876.145) : 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)), (true ? float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(876.145) : 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0)) : _GLF_FUZZED(8.4))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))) ^ (int(2)), int(ivec2((0 << _GLF_IDENTITY(int(7), int(7))) ^ (int(2)), 0)))))), ~ (~ (((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ vec3(820.584, 4.3, 8990.4528)).r)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(float(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) - 0.0)), min(float(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) - 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) - 0.0)), clamp(float(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) - 0.0)), float(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) - 0.0)), float(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))) - 0.0)))))))), 0.0)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(7), int(7))) ^ (int(2)))))))) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), 0 ^ (0 >> _GLF_IDENTITY(int(6), int(6)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       case 39:
       case 71:
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
              return;
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       case 26:
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) - (0 ^ 0))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1))), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max((1), (1)))) - 0) | (1)))) + 0u), 0u + (uint(1))), 0u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u)))))))), _GLF_IDENTITY(0u | _GLF_IDENTITY((1u * (_GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (1))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1)))))) + 0u), 0u + (uint(1))), 0u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 1u)), max(uint(uvec4(1u, 1u, 0u, 1u)), uint(uvec4(1u, 1u, 0u, 1u))))), (1u) | (1u))))))))), ((1u * (_GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (1))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1)))))) + 0u), 0u + (uint(1))), 0u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 1u)), max(uint(uvec4(1u, 1u, 0u, 1u)), uint(uvec4(1u, 1u, 0u, 1u))))), (1u) | (1u)))))))))) | ((1u * (_GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (1))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | (1)))))) + 0u), 0u + (uint(1))), 0u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 1u)), max(uint(uvec4(1u, 1u, 0u, 1u)), uint(uvec4(1u, 1u, 0u, 1u))))), (1u) | (1u))))))))))), uint(uvec3(0u | (1u * (_GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (1))), (uint(_GLF_IDENTITY(1, (1) | (1)))) + 0u), 0u + _GLF_IDENTITY((uint(1)), ((uint(1))) << 0u)), 0u, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u, 0u)))))) + (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), _GLF_IDENTITY(uint(uvec2(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), 1u)), 0u | (uint(uvec2(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), 1u)))))), uint(7u)), uint(_GLF_IDENTITY(uvec2(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), _GLF_IDENTITY(uint(uvec2(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), 1u)), 0u | (uint(uvec2(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), 1u)))))), uint(7u)), 1u), (uvec2(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), _GLF_IDENTITY(uint(uvec2(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), 1u)), 0u | (uint(uvec2(clamp(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u)), 1u)))))), uint(7u)), 1u)) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))))))), 4, 64, 4);
       break;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
        return;
       default:
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), injectionSwitch, injectionSwitch)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))).x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), false || (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        break;
       1;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (-76343 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, exp(length(vec2(0.0, 0.0))), 1.0, 0.0, 0.0))).y))))))
    return;
   switch(_GLF_SWITCH(0))
    {
     case 0:
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, false)))))) && true)))), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = (1 | ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(_GLF_IDENTITY(5, 1 * (5)))) | 0, min((int(_GLF_IDENTITY(5, 1 * (5)))) | 0, (int(_GLF_IDENTITY(5, 1 * (5)))) | 0))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     switch(_GLF_SWITCH(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(37913) : 0))))
      {
       case 1:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         ivec3(46325, -85115, -11810);
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 0:
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), ~ (~ (int(2))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       case 44:
       if(_GLF_DEAD(false))
        return;
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       case 17:
       if(_GLF_DEAD(false))
        return;
       case 53:
       subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
       break;
       default:
       1;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            return;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197)), (true ? (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197)) : _GLF_FUZZED(_injected_loop_counter)))), min(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true))) ? _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), int(4))) : _GLF_FUZZED(49197))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 ^ (4))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197)) | (19243 & 0)))))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4))) + (1 ^ 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))), 1 * (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), int(int(min(int(4), int(4)))))) : _GLF_FUZZED(49197))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))) & -44544, ((0 >> _GLF_IDENTITY(int(0), int(0))) & -44544) << 0)) | (int(4))), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-2358))))))) ^ 0))), int(4))) : _GLF_FUZZED(49197))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), ((0 >> _GLF_IDENTITY(int(0), int(0))) & -44544) | (int(4))), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), int(4))) : _GLF_FUZZED(49197))), _GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544), clamp(_GLF_IDENTITY((_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544), clamp((_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544)))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))), int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) - (0 | 0)), int(0))), int(0))))))))) & -44544))) | (int(4))), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), min((int(4)), (int(4)))) ^ 0))), int(4))) : _GLF_FUZZED(49197))), _GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), ((0 >> _GLF_IDENTITY(int(0), int(0))) & -44544) | (int(4))), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1))))) : _GLF_FUZZED(49197))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(_GLF_IDENTITY(49197, clamp(49197, 49197, 49197))))), 1 * (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec2(int(4), int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(ivec2(int(4), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(int(4), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(int(4), int(_GLF_ONE(1.0, injectionSwitch.y))))))))) : _GLF_FUZZED(49197))))))))), clamp((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))), min(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), int(4)), (min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))), int(4))) >> 0)) : _GLF_FUZZED(49197))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))), 1 * (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197)))))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(75.04)), bool(false)))) * 1.0), injectionSwitch.x)) ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))), min(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - (0 ^ 0)), (int(4)) ^ 0))), int(4))) : _GLF_FUZZED(49197))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), min(int(4), int(4))) : _GLF_FUZZED(49197))), 1 * (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))))))))))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), 0 | ((4))))), (4), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((_GLF_IDENTITY(4, 1 * (4)))))) << 0)))), int(ivec3((~ _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), 0 | _GLF_IDENTITY(((4)), 0 ^ (((4))))))), (4), _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 | (4))))), (_GLF_IDENTITY((4), ((4)) | ((4)))) << 0)))), 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), ~ (~ (_GLF_IDENTITY(int(4), min(int(4), int(4)))))) : _GLF_FUZZED(49197))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (0 & (55273 ^ 63558)) ^ (_GLF_IDENTITY(int(4), (int(4)) + 0))), (true ? _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(bitCount(workgroup_base))))), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))), (ivec3(4, 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))))) - ivec3(0, 0, 0)))))) ^ 0))), int(4))) : _GLF_FUZZED(49197))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), (min(int(4), int(4))) | (min(int(4), int(4)))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(49197, (49197) * 1)))), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) * 1), 4))), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))))))))), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(int(4), int(4))) : _GLF_FUZZED(49197))), min(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), int(ivec3(int(4), 1, 1))))))))) ^ 0))), int(4))) : _GLF_FUZZED(49197))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), min(int(4), int(4))) : _GLF_FUZZED(49197))), 1 * _GLF_IDENTITY((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197)))), (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))))) : _GLF_FUZZED(49197)))), _GLF_IDENTITY(min((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197)))), (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197))))), clamp(min((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197)))), (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197))))), min((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197)))), (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197))))), min((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197)))), (_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4)))), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197)))), ((_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), _GLF_IDENTITY(min(int(4), int(4)), ~ (~ (min(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter)))))))) : _GLF_FUZZED(49197))))) + 0))))))))))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) / 1)))), int(4))), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), 0 | (int(4))), int(4))))), clamp(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), min(int(4), int(4))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), clamp(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), min(int(4), int(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4))))))))), 0, 1, 1))))) : _GLF_FUZZED(49197))), min(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (_GLF_IDENTITY(int(4), 0 + (int(4))))), (int(4)) ^ 0))), int(4))) : _GLF_FUZZED(49197))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) - 0), int(4))) : _GLF_FUZZED(49197))), 1 * (_GLF_IDENTITY(int(4), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), max(_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0)) ^ 0)))), min(int(4), int(4))) : _GLF_FUZZED(49197)), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), max(_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0)) ^ 0)))), min(int(4), int(4))) : _GLF_FUZZED(49197)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), max(_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0)) ^ 0)))), min(int(4), int(4))) : _GLF_FUZZED(49197)), 0 ^ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), max(_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0), _GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (_GLF_IDENTITY(clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (clamp(int(4), int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) - 0)) ^ 0)))), min(int(4), int(4))) : _GLF_FUZZED(49197)))))))))))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
            {
             return;
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     default:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     1;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8.7) : (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2425.2700), _GLF_FUZZED(-9120.8571)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, tan(abs(0.0)), exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0))), dot(vec4(0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0))))))))[0])), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(988.984), _GLF_FUZZED(-4.2)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
            return;
           return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 1:
     vec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))), (~ (_injected_loop_counter)) >> 0))))) > (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), 2))), clamp(int(2), int(2), int(2)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
          return;
         return;
        }
      }
     case 0:
     case 6:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 99:
     case 31:
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _injected_loop_counter --)
      {
       atomicStore(buf[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
      }
     case 66:
     if(_GLF_DEAD(false))
      return;
     case 61:
     case 59:
     case 20:
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     case 50:
     subgroupAll(true);
     break;
     default:
     1;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7)))))))
  return;
}
