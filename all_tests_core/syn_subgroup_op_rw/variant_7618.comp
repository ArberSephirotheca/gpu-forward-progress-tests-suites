#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), ((0 | 0)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), bool(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), true)))))))
    {
     barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) / 1u)) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (0 | 0) + (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(242.963)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(-39.36)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(1, 1, _GLF_IDENTITY(1, (1) | 0))), int(ivec3(1, (0 << _GLF_IDENTITY(int(1), int(1))), 0)))), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(-3.9), _GLF_FUZZED(-707.600)), vec2((mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], (mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), bvec2(true, true)))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0), (mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0, 0.0)))))), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))).y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2671.1096)), bool(false))) : _GLF_FUZZED(525.150))) < injectionSwitch.y)), false, true))), bool(bool(false)))), true, false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), float(mat2x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), _GLF_IDENTITY(float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)))), (float(float(mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(-239.572)), bool(false))), float(_GLF_FUZZED(-7503.9609)), bool(false))))) * 1.0)), 1.0, _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat2x4(cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), max(float(mat2x4(cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x4(cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))))), 0.0, 0.0, 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, false))))))), false, true)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))))), true, _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(521.800) : injectionSwitch[0])))), injectionSwitch[1])).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2671.1096)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(525.150), mix(float(_GLF_FUZZED(-10.87)), float(_GLF_FUZZED(525.150)), bool(true))))) < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false, true))), bool(bool(false)))), true, false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-7503.9609)), max(float(_GLF_FUZZED(-7503.9609)), float(_GLF_FUZZED(-7503.9609)))), bool(false)), float(mat2x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), _GLF_IDENTITY(float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)))), (float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false))))) * 1.0)), 1.0, cos(0.0), 0.0, 0.0, 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, false))))))), false, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2671.1096)), bool(false))) : _GLF_FUZZED(525.150))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.8))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true)))), true))), bool(bool(false)))), true, false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), float(mat2x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), _GLF_IDENTITY(float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)))), (float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false))))) * 1.0)), 1.0, cos(0.0), 0.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-447.678)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), float(mat2x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), _GLF_IDENTITY(float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)))), (float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false))))) * 1.0)), 1.0, cos(0.0), 0.0, 0.0, 1.0))))), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true, false))))))), false, true)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false, true))))), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(-5371.7565)), float(float(mat2x3(0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0))), bool(true))))), (mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), 0.0)))))), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(-5371.7565)), float(float(mat2x3(0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0))), bool(true))))), (mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), 0.0)))))), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(297)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, exp(0.0)))), _GLF_FUZZED(25.61)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))).y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(-5371.7565)), float(float(mat2x3(0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0))), bool(true))))), (mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))), 0.0)))))), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), false, false))), true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2671.1096)), bool(false))) : _GLF_FUZZED(525.150))) < injectionSwitch.y)), false, true))), bool(bool(false)))), true, false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), float(mat2x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)))), (float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false))))) * 1.0), (true ? _GLF_IDENTITY(float(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)))), (float(_GLF_IDENTITY(float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false))), (float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7503.9609)), bool(false)))) - 0.0))) * 1.0) : _GLF_FUZZED(-3.9)))), 1.0, cos(0.0), 0.0, 0.0, 1.0)))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true, false))))))), false, true)))))))))), true)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), false), true)))))))))
    barrier();
   for(int _injected_loop_counter = (0 & 19885); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) / 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(vec2(-8.8, -5.4)) : _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) + vec2(0.0, 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))))))))), bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8707.5400, -425.891)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(-9.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))));
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-65.99))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(-6.9, float(mat3x2(-6.9, 1.0, 0.0, 0.0, 0.0, 1.0)))), bool(true)))), _GLF_FUZZED(-2.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, min(1, 1)))))]), bvec2(true, true))).y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, true, true))))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
       subgroupAll(false);
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.1)))))));
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), false)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7429.0518)), vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-0.2, -3471.5032)))).y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-0.2, -3471.5032)))).y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(67.20)), float(injectionSwitch.y), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || false))))) && true)), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(92.20)), min(_GLF_IDENTITY(float(_GLF_FUZZED(92.20)), min(float(_GLF_FUZZED(92.20)), float(_GLF_FUZZED(92.20)))), _GLF_IDENTITY(float(_GLF_FUZZED(92.20)), max(float(_GLF_FUZZED(92.20)), float(_GLF_FUZZED(92.20)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2100.2279) : injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) + 0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(353.241))), (false ? _GLF_FUZZED(-2100.2279) : injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), max(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) + 0.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec2(vec2(vec2(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, abs(0.0), 0.0, length(vec2(0.0, 0.0)), length(0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-5.7)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))) : _GLF_FUZZED(353.241))), (false ? _GLF_FUZZED(-2100.2279) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3133.8476) : injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y))) || false)) || false)))))) || false))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec2(0.0, 0.0)))) / 1.0)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.5)), bool(false))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.20)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((vec3(-8458.7338, _GLF_IDENTITY(2.9, mix(float(_GLF_FUZZED(8879.2808)), float(2.9), bool(true))), 50.69) * -29.65).x)), bool(false)))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false))) || false)))))))))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (bool(bvec4(true, true, false, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || _GLF_IDENTITY((bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), false, false))), ! (! ((bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), false, false))))))))), true, false, false)), true && (bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (bool(bvec4(true, true, false, false)))))), true, false, false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), false)))))), true && (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, false)), false))))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), true && (_GLF_IDENTITY(((! (false))), true && (((! (false)))))))), (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) && true)) || false)) || false)))), ((! _GLF_IDENTITY(_GLF_IDENTITY(((! (false))), bool(bvec2(((! (false))), false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(516.684, 8.2)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-75813)), _GLF_FUZZED(-910.036)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), (((_GLF_IDENTITY((! (false)), ((! (false))) || false)))) || false)) || false)), bool(bvec3((_GLF_IDENTITY(! (((! (false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY((! (false)), ((! (false))) || false))), (((_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, false))))))))), ((! (false))) || false)))) || false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), _GLF_IDENTITY((! (((! (_GLF_IDENTITY(false, false || (false))))))), ! (! (_GLF_IDENTITY((! (((! (false))))), true && ((! _GLF_IDENTITY((((! (false)))), bool(bvec2((((! (false)))), true))))))))) || false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false)))))), (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), bool(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))), false || (_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (((! (false)))), ! (! (! (((! (false))))))), (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), ! (! (! ((_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), bvec3(bvec4(bvec3(! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))))))) || false)))))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))) || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), false, true)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! ((_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), true), bvec2(bvec4(bvec2((! (false)), true), true, false)))))))) || false)) && true)) || false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((_GLF_IDENTITY(! (((! (false)))), bool(bvec4(! (((! (false)))), true, false, true)))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! ((((! (false))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || ((! (((! (false))))) || false), (false || ((! (((! (false))))) || false)) && true)) || false))))), false, true)))))))))))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && _GLF_IDENTITY(true, ! (! (true))))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY(((! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), ! (! (((! (false))))))), (! (((! (_GLF_IDENTITY(false, true && (false))))))) || false)))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY(((! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), ! (! (((! (false))))))), (! (((! (_GLF_IDENTITY(false, true && (false))))))) || false)))))), true)), bool(bvec3(bool(bvec2((! _GLF_IDENTITY(((! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), ! (! (((! (false))))))), (! (((! (_GLF_IDENTITY(false, true && (false))))))) || false)))))), true)), false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), bool(bool(((! (false))))))), (! (((! (false))))) || false)))))), (_GLF_IDENTITY(! ((! (false))), ! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))))) || false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), bool(bvec4(! (((! (false)))), true, true, false))))), ! (! (! _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (false)))), ! (! (((_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))), _GLF_IDENTITY((! (((! (false))))) || false, _GLF_IDENTITY(false || ((! (((! (false))))) || false), (_GLF_IDENTITY(false || _GLF_IDENTITY(((! (((! (false))))) || false), ! (! (((! (((! (false))))) || false)))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))) || ((! (((! (false))))) || false)) && true)) || false))))))))))))) && true) || false)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))));
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, int(ivec4(7, 0, 1, 1)))) | (7))))), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(34758, (_GLF_IDENTITY(34758, ~ (~ (34758)))) | (34758)) & _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), max((0), (0)))))) & (_GLF_IDENTITY(-68283 / 57648, ~ (~ (-68283 / 57648)))))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (0 & -96725); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (int(6))))) >> _GLF_IDENTITY(int(6), int(6)), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (int(6))))) >> _GLF_IDENTITY(int(6), int(6))), int(ivec3(int((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (int(6))))) >> _GLF_IDENTITY(int(6), int(6))), 1, 0))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
  }
}
