#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.3)), bool(false))), injectionSwitch.x, injectionSwitch.x)), sqrt(1.0), 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(0.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (false ? _GLF_FUZZED(50.83) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(148.389)), vec2(_GLF_FUZZED((-2.0 - 512.758)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), false), true)), false)))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false))))), _GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false))))))), (_GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false))))))), false || (bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false)))))))))) && true)) || false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), true, true, false))), false || ((bool(bvec4(_GLF_DEAD(false), true, true, false))))), bool(bvec3(! (bool(bvec4(_GLF_DEAD(false), true, true, false))), true, false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-91243) : _GLF_IDENTITY(0, (0) ^ 0)))], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-4379.2026)), vec2(_GLF_FUZZED((98.60)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true, ! (! ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(floor(7415.8236)) : injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))) && true)))), bool(bool(! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true, ! (! ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0))).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, abs(1.0), sqrt(abs(1.0)), 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true, _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true, _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))) || _GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))), false, false, false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(4548u, 56971u, 197721u)) : gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, tan(0.0)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, tan(0.0)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))))))), (bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, tan(0.0)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)))))))))) && true))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], log(1.0) + (_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))[1], clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))[1], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))[1], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))[1])), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-9.2)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-9.2)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(-9.2)), 1.0 * (float(_GLF_FUZZED(-9.2)))))) : _GLF_IDENTITY(_GLF_FUZZED(-4.3), clamp(_GLF_IDENTITY(_GLF_FUZZED(-4.3), (_GLF_FUZZED(-4.3)) * 1.0), _GLF_FUZZED(-4.3), _GLF_FUZZED(-4.3))))), bool(false))))))))).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((uvec3(144165u, 178930u, _GLF_IDENTITY(90776u, (90776u) - 0u))), uvec3(0u, 0u, 0u) | ((uvec3(144165u, 178930u, _GLF_IDENTITY(90776u, (90776u) - 0u)))))) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], sqrt(0.0) + (injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 1)))), int(_GLF_IDENTITY(ivec4(0, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 1)))))))])), _GLF_IDENTITY(injectionSwitch[1], log(1.0) + (injectionSwitch[1])))).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((uvec3(144165u, 178930u, _GLF_IDENTITY(90776u, (90776u) - 0u))), uvec3(uvec4((uvec3(144165u, 178930u, _GLF_IDENTITY(90776u, (90776u) - 0u))), 1u)))) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-9.4, -341.659, -3.2)))), ((true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-9.4, -341.659, -3.2))))) - 0.0)) > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), true, true, true)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), true, true, true)))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false)), _GLF_IDENTITY(false, true && (false)) || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(tan(vec2(0.0, 0.0))) + (injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(616.397))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, 1u, (0u ^ 1u), 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), 1u, 1u, 0u))), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), 1u, 1u, 0u)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-78503) : 1))) % subgroup_size);
 uint read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(uvec2(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) : _GLF_FUZZED(subgroup_base)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(uvec2(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) : _GLF_FUZZED(subgroup_base)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(uvec2(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) : _GLF_FUZZED(subgroup_base)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(uvec2(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) : _GLF_FUZZED(subgroup_base)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(uvec2(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) : _GLF_FUZZED(subgroup_base))))) / (1u | 1u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (true ? _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))) : _GLF_FUZZED(subgroup_base))), 1u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u))), (true ? _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))) : _GLF_FUZZED(subgroup_base))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (true ? _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))) : _GLF_FUZZED(num_workgroup))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) | (_GLF_FUZZED(subgroup_base))))))), 1u))) - 0u))], 4, 64, 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 4, 64, 2), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | ((virtual_gid)))))], 4, 64, 2), 1u, 0u)), _GLF_IDENTITY(min(uint(uvec3(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << 0), 4)), 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u))), 0u ^ (min(uint(uvec3(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << 0), 4)), 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)))))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(47720) : 64)), 2), _GLF_IDENTITY(1u, (1u) | 0u), 0u)), min(uint(uvec3(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), 4, 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(47720) : 64)), 2), _GLF_IDENTITY(1u, (1u) | 0u), 0u)), min(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(47720) : 64), (_GLF_IDENTITY((false ? _GLF_FUZZED(47720) : 64), ((false ? _GLF_FUZZED(47720) : 64)) + 0)) / 1)), 2), _GLF_IDENTITY(1u, (1u) | 0u), 0u)), min(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(47720) : 64)), 2), _GLF_IDENTITY(1u, (1u) | 0u), 0u)), min(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.71)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-2.6))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(2.1))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9449.8674)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(-2.6))))), 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, exp(0.0)))) : _GLF_FUZZED(-3.0))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.71)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(67.39))))) : _GLF_FUZZED(-2.6))), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-58.73)), float(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true)))) : _GLF_IDENTITY(_GLF_FUZZED(2.1), mix(float(_GLF_FUZZED(float(103813u))), float(_GLF_FUZZED(2.1)), bool(true))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9449.8674)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(-2.6), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-58.73)), float(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true)))) : _GLF_IDENTITY(_GLF_FUZZED(2.1), mix(float(_GLF_FUZZED(float(103813u))), float(_GLF_FUZZED(2.1)), bool(true))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9449.8674)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-5675.1869)), bool(false)))))), (false ? _GLF_FUZZED(dot(exp(vec3(9987.7888, -3.9, 56.79)), vec3(-5.0, 6.9, 1.6))) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-58.73)), float(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true)))) : _GLF_IDENTITY(_GLF_FUZZED(2.1), mix(float(_GLF_FUZZED(float(103813u))), float(_GLF_FUZZED(2.1)), bool(true))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9449.8674)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(-2.6), mix(float(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-58.73)), float(float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true)))) : _GLF_IDENTITY(_GLF_FUZZED(2.1), mix(float(_GLF_FUZZED(float(103813u))), float(_GLF_FUZZED(2.1)), bool(true))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9449.8674)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-5675.1869)), bool(false))))))))), 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, exp(0.0)))) : _GLF_FUZZED(-3.0)))))) || false) ? _GLF_FUZZED(subgroup_base) : ~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), (uint(uvec3(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_local_id)))))], 4, 64, 2), 1u, 0u))) - 0u), min(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), 0u | (uint(uvec2(virtual_gid, 1u))))) >> 0u), ~ (~ (uint(uvec2(virtual_gid, 1u))))))], 4, 64, 2), _GLF_IDENTITY(1u, uint(uvec2(1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))), 0u)))))))), ~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), 4, 64, 2), 1u, 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), (uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 1u, 0u))), uint(uvec2(min(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 1u, 0u))), 0u)))), 0u ^ (_GLF_IDENTITY(uint(uvec3(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), 4, 64, 2), 1u, 0u)), min(uint(uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 1u, 0u)), uint(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2), 1u, 0u))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec3(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))) || false)), true, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id % 2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), 0u | (uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (_GLF_IDENTITY(uvec2((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2))), 1u), (false ? _GLF_FUZZED(uvec2(186887u, 196124u)) : _GLF_IDENTITY(uvec2((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2))), 1u), uvec2(0u, 0u) ^ (uvec2((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2))), 1u)))))) | (uvec2(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ (_GLF_IDENTITY((subgroup_local_id % 2), (true ? (subgroup_local_id % 2) : _GLF_FUZZED(subgroup_local_id)))))), 1u))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) % 2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))), (_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))) | (_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))))))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), 0u | (uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))))))))), _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), _GLF_IDENTITY((uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)), ~ (~ ((uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))))))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % _GLF_IDENTITY(2, (2) | (2))), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), 0u | (uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))))))))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) % 2))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))))), 0u | (_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))))))), ~ (~ _GLF_IDENTITY((min(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 1u))))), (0u | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 1u))))), (_GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 1u)))))) << 0u)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) * (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) << 0u))))))) * ((min(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id % 2 : _GLF_FUZZED(virtual_gid)))))), _GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 1u))))))))))), min(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % _GLF_IDENTITY(2, (2) >> (0 | 0))))), _GLF_IDENTITY((subgroup_local_id % 2), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))), (_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | _GLF_IDENTITY((uvec2((subgroup_local_id % 2), 1u)), ((uvec2((subgroup_local_id % 2), 1u))) | (_GLF_IDENTITY((uvec2((subgroup_local_id % 2), 1u)), ((uvec2((subgroup_local_id % 2), 1u))) + uvec2(0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | ((subgroup_local_id % 2))), 1u), (uvec2((subgroup_local_id % 2), 1u)) | (uvec2((subgroup_local_id % 2), 1u)))) | (_GLF_IDENTITY(uvec2((subgroup_local_id % 2), 1u), (uvec2((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) ^ 0), _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, max(2, 2)) : _GLF_FUZZED(-34888)))))), 1u)) | (uvec2((subgroup_local_id % 2), 1u))))))))))))))) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1], max(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), (max(injectionSwitch[1], injectionSwitch[1])) - 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.0)), vec2(_GLF_FUZZED(8224.9427), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(_GLF_IDENTITY(91.87, max(91.87, _GLF_IDENTITY(91.87, (true ? 91.87 : _GLF_FUZZED(-11.37)))))) : _GLF_IDENTITY(injectionSwitch, tan(abs(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))) + (injectionSwitch)).x))) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.3, 71.23)))) : _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, -80.73)))).y)), _GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x) / exp(0.0)) < injectionSwitch.y), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false))), false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)))), false, false))))))))))), ((false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), bool(bvec4(bool(bvec4(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), true, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), true, false, false)))) || false))))) && true), bool(bvec3(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), clamp(_GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), mix(vec2(_GLF_FUZZED(5637.0203), _GLF_FUZZED((-1.2 / -6898.3781))), vec2((tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))[0], (tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), max(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))), _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), (tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)) - vec2(0.0, 0.0))))).x < injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), clamp(_GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), mix(vec2(_GLF_FUZZED(5637.0203), _GLF_FUZZED((-1.2 / -6898.3781))), vec2((tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))[0], (tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), max(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))), _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), (tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)) - vec2(0.0, 0.0))))).x < injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), clamp(_GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), mix(vec2(_GLF_FUZZED(5637.0203), _GLF_FUZZED((-1.2 / -6898.3781))), vec2((tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))[0], (tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))[1]), bvec2(true, true))), _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), max(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), tan(abs(vec2(0.0, 0.0))) + (injectionSwitch))), _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), (tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)) - vec2(0.0, 0.0))))).x < injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false)))))), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ((false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))).y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(30.42)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x) / 1.0) < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), mat2(1.0) * (tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(abs(vec2(0.0, 0.0))) + (injectionSwitch), (false ? _GLF_FUZZED(vec2(3.8, -12.05)) : tan(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), mix(vec2((abs(vec2(0.0, 0.0)))[0], _GLF_FUZZED(670.738)), vec2(_GLF_FUZZED((- -3.2)), (abs(vec2(0.0, 0.0)))[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), max(vec2(mat2x4(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), mix(vec2((abs(vec2(0.0, 0.0)))[0], _GLF_FUZZED(670.738)), vec2(_GLF_FUZZED((- -3.2)), (abs(vec2(0.0, 0.0)))[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), vec2(mat2x4(_GLF_IDENTITY(abs(vec2(0.0, 0.0)), mix(vec2((abs(vec2(0.0, 0.0)))[0], _GLF_FUZZED(670.738)), vec2(_GLF_FUZZED((- -3.2)), (abs(vec2(0.0, 0.0)))[1]), bvec2(false, true))), 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))) + (injectionSwitch)))).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, tan(abs(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))).y), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(30.42)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(8.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, sin(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.1)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(-51.26) : _GLF_IDENTITY(float(_GLF_FUZZED(8.1)), min(float(_GLF_FUZZED(8.1)), float(_GLF_FUZZED(8.1)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), next_virtual_gid)), next_virtual_gid))], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(9128) : 1)), 1))), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) ^ 0u)) + 0u) : _GLF_FUZZED(uvec2(178348u, 74285u)[1])))], uint(1), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, sin(0.0)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)) || false))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), clamp(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0)))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))))))))) && true, ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), max(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0))), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))))))))) && true)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), clamp(_GLF_IDENTITY(0, (0 | 0) ^ (0)), 0, 0))], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-3359.0317)), bool(false))), injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1815.5172), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(1 * (1), (false ? _GLF_FUZZED(16151) : 1 * (1)))) << 0))]), bvec2(true, true))))))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-986.825))))))), float(float(injectionSwitch.y)))), (true ? _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), exp(0.0))), clamp(vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), exp(0.0))), vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), exp(0.0))), vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), exp(0.0))))))).y)), min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-986.825))))))), float(float(injectionSwitch.y)))) : _GLF_FUZZED(-744.345)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1815.5172), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), bvec2(true, true))))))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-986.825))))))), float(float(injectionSwitch.y))))))), true && ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1815.5172), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(1, ~ (~ (1))) * (1))]), bvec2(true, true))))))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5201.7531))))), mix(float(float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5201.7531)))))), float(_GLF_FUZZED(-21.24)), bool(false))), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1583.3648) : injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY(-986.825, min(-986.825, -986.825))))))))), float(float(injectionSwitch.y)))))))))), (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bvec2(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-1815.5172), _GLF_FUZZED(-5.1)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_FUZZED(-1815.5172), _GLF_FUZZED(-5.1)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), bvec2(true, true))))))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-6109.9775) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-986.825)))))), min(min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-986.825)))))), min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-986.825))))))))), float(float(injectionSwitch.y))))))), true && ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1815.5172), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (1))]), bvec2(true, true))))))), (false ? _GLF_FUZZED(vec2(480.631, -443.683)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(59.31), _GLF_FUZZED(((0.3 - -710.122) * 418.613))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1815.5172), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))), 0 | (max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))))) | (max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))))))))]), bvec2(true, true))))))))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(acos(vec2(84.79, 1.3)))))).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), max(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])).y)), min(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-986.825))))))), float(float(injectionSwitch.y))))))))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (4) - 0), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true, false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) || false)) && true))))), false, true, true))))), false || ((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), false, true, true))))))), bool(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))) || false)), false, true, false))) && true))), bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true)))) && true), false, true, true))))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), false, true, true)))))), (false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true) || false)) && true))), false, true, true))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true, false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) || false)) && true))))), false, true, true))))), false || ((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), false, true, true))))))), bool(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))) || false)), false, true, false))) && true))), bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true)))) && true), false, true, true))))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true))), false, true, true)))))), (false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, (false) && true)) || false)) && true)))))))), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && true) || false)) && true))), false, true, true))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
    barrier();
  }
}
