#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, sin(log(1.0)), 1.0, 1.0, 1.0))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(1.0), max(normalize(1.0), normalize(1.0))))), 1.0), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0)))))), (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, false))))), false))), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false), true)))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), false)))))), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5097.8818)), bool(false))), 0.0, 0.0, exp(0.0), 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7912.1501))), 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(76.24) : 1.0)))), 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat4x3(length(normalize(vec3(1.0, 1.0, 1.0))), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(-634.324) : float(mat4x3(length(normalize(vec3(1.0, 1.0, 1.0))), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED((6.6 + -52.44))), bool(false))), 0.0, 0.0, exp(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(-8105.4635, 6605.1366, -710.985, -547.694, -1.3, 272.625, 40.18, -857.419, 7.3, 81.38, 9.9, -501.768, -1491.7470, -8466.3918, -5.8, -41.77))))), max(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 0.0, cos(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0)))) / 1.0))), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - length(_GLF_IDENTITY(0.0, (0.0) * 1.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(-8105.4635, 6605.1366, -710.985, -547.694, -1.3, 272.625, 40.18, -857.419, 7.3, 81.38, 9.9, -501.768, -1491.7470, -8466.3918, -5.8, -41.77))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), float(mat3x2(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))))), 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(-8105.4635, 6605.1366, -710.985, -547.694, -1.3, 272.625, 40.18, -857.419, 7.3, 81.38, 9.9, -501.768, -1491.7470, -8466.3918, -5.8, -41.77)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0, 0.0, 0.0)), mix(vec3(_GLF_FUZZED(72.06), (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0, 0.0, 0.0)))[1], _GLF_FUZZED(-4.5)), vec3((mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0, 0.0, 0.0)))[0], _GLF_FUZZED(1.1), (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0, 0.0, 0.0)))[2]), bvec3(true, false, true))))), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(intBitsToFloat((96683 & ivec3(58009, -30231, 77959)))))))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), float(mat3x2(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))))), 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(-8105.4635, 6605.1366, -710.985, -547.694, -1.3, 272.625, 40.18, -857.419, 7.3, 81.38, 9.9, -501.768, -1491.7470, -8466.3918, -5.8, -41.77))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), false), true))))) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.60) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(90.18)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))), true && (bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))))))), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) && true))), false))))))), true && (bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))), true && (bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), bool(bvec2(! ((false)), false)))))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))), bool(bvec2(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))), true)))))))))), false || (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))))) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), clamp((gl_NumWorkGroups.x), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(7u), uint(7u)), 0u, 0u), max(uvec3(_GLF_IDENTITY(uint(7u), uint(7u)), 0u, 0u), uvec3(_GLF_IDENTITY(uint(7u), uint(7u)), 0u, 0u))))), _GLF_IDENTITY(uint(7u), uint(7u))))))) * 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), false, false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-1431.7011)))))))))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), false, false))))), false, false, true))), _GLF_IDENTITY(! (! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.6)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)) && (true))))))), true && (_GLF_IDENTITY(! (! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.6)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)) && (true))))))), ! (! (! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.6)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)) && (true)))))), false || (! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), false, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.6, (0.6) - 0.0))), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)) && (true))))))))))))))))))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - abs(0.0)), (injectionSwitch.y) / 1.0))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, true, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - abs(0.0)), (injectionSwitch.y) / 1.0))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0))), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (true ? workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) | 0u)), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) + 0u) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size))) : _GLF_FUZZED(workgroup_base)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 0u))))), (_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, 0u, 0u, 0u)), (uint(uvec4(virtual_gid, 0u, 0u, 0u))) | (uint(uvec4(virtual_gid, 0u, 0u, 0u)))))))) - 0u)) ^ 0u)], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.9)))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))), sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(-59.61)), (vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(-59.61))) * mat2(1.0)), vec2(_GLF_FUZZED(77.68), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))[1]), bvec2(false, true))))).y), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))), max(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.x, 1.0, exp(0.0), 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, sin(0.0), abs(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)), bool(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false))))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat3x4(mat4(mat3x4(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), (~ ((4))) ^ 0))) / 1) | ((4) / 1))), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY(false ? _GLF_FUZZED((min(57338, 42066) / 41116)) : (4) / 1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((min(57338, 42066) / 41116)) : (4) / 1) | 0)))), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))))))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-11.08))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), max(4, 4))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 1 * (0))), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))))) | 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), max(4, 4))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 1 * (0))), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(4, 4))))))) | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))))) | 0)))))) ^ 0))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0), transpose(transpose(mat4(injectionSwitch.x, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0)))))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), false, true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
