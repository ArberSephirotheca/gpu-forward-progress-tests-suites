#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
          return;
        }
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), true, false, false))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), true, false, false))))))))
          return;
        }
      }
     else
      {
      }
     return;
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), gl_NumWorkGroups.x))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (uvec3(uvec3(gl_WorkGroupID))) | (uvec3(uvec3(gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = (33692 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), _GLF_IDENTITY(float(mat2x4((-2.6), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.2)), float(0.0), bool(true))), sqrt(0.0))), max(_GLF_IDENTITY(float(mat2x4((-2.6), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0))), min(float(mat2x4((-2.6), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0))), float(mat2x4((-2.6), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0))))), float(mat2x4((-2.6), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0)))))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-0.2), float(vec3(_GLF_FUZZED(-0.2), abs(1.0), abs(1.0))))), bool(false))), 0.0, tan(0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595), max(_GLF_IDENTITY(vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595), exp(vec4(0.0, 0.0, 0.0, 0.0)) * (vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595))), _GLF_IDENTITY(vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595), (false ? _GLF_FUZZED(vec4(438.796, 3.2, -9990.1609, 0.6)) : vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595)))))) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.90), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(3691.9728, 8842.3874).t)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((207.453 / -5911.1818)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(16.47)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(float(50408u))), bool(false)))), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), vec4(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(trunc(8.1)) : injectionSwitch.y)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0)))), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-63.64), _GLF_FUZZED(-2930.0586), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - _GLF_IDENTITY(sin(vec4(0.0, 0.0, 0.0, 0.0)), (true ? sin(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(vec4(90.29, 7.7, 7.1, -3.5))))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(-5320.4659), _GLF_FUZZED(-510.239), _GLF_FUZZED((55.23)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, sqrt(0.0), sqrt(1.0), 1.0, 0.0, 0.0))), abs(0.0), 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4734.5003))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(3.9)), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(-54.47)), bvec4(true, _GLF_IDENTITY(true, ! (! (true))), true, false)))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))))[0], clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))))[0], ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))))[0]) / 1.0))), _GLF_FUZZED((7.2 / 0.2))), vec2(_GLF_FUZZED(660.376), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))))[1]), bvec2(false, true))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, tan(0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), mix(vec4(_GLF_FUZZED(4.3), _GLF_FUZZED(9.3), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)))[2], _GLF_FUZZED(91.03)), vec4((vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)))[0], (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)))[1], _GLF_FUZZED(0.7), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, true)))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0)), float(_GLF_FUZZED(-6.8)), bool(false))), 0.0, tan(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.9, clamp(2.9, _GLF_IDENTITY(2.9, max(2.9, 2.9)), 2.9)))), float(0.0), bool(true))), 1.0, 0.0, 1.0)))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))))), (true ? (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(dot(vec4(769.520, -375.965, -2187.3458, -1691.4946), vec4(-59.58, -5.8, 2.6, 0.1)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0)))))))))), (! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), min(vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)))), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))), min(mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))), mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0))))))))))) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-63.64), _GLF_FUZZED(-2930.0586), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(-5320.4659), _GLF_FUZZED(-510.239), _GLF_FUZZED((55.23)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(3.9)), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(-54.47)), bvec4(true, true, true, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-63.64), _GLF_FUZZED(-2930.0586), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(-5320.4659), _GLF_FUZZED(-510.239), _GLF_FUZZED((55.23)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(3.9)), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(-54.47)), bvec4(true, true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-63.64), _GLF_FUZZED(-2930.0586), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(-5320.4659), _GLF_FUZZED(-510.239), _GLF_FUZZED((55.23)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(3.9)), bvec4(true, true, true, false))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(-54.47)), bvec4(true, true, true, false)))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(9.1) : float(vec4(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0)))))) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-6.9))), 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) + 0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, tan(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0)))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - vec4(0.0, 0.0, 0.0, 0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((1357.3712 - 4.5))), bool(false))), (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0)))))))))), (! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), max(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), max(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), max(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), max(vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))))).y)), 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))), min(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0))), 1.0, 1.0))) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))), mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0))))))))))) && true))))))), bool(bvec3(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, (-2.6) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-63.64), _GLF_FUZZED(-2930.0586), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(-5320.4659), _GLF_FUZZED(-510.239), _GLF_FUZZED((55.23)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(3.9)), bvec4(true, true, true, false))), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0))))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mix(vec4(_GLF_FUZZED(-5320.4659), _GLF_FUZZED(-510.239), _GLF_FUZZED((55.23)), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1342.1925) : 0.0)))), 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8102.4180)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3402.7322)), float(0.0), bool(true))))))), 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(3.9)), bvec4(true, true, true, false))))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))[2], _GLF_FUZZED(-54.47)), bvec4(true, true, true, false)))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0)))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0)))))))))), (! (! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5826.6883), _GLF_FUZZED(-2.7)), bvec2(false, false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(vec4(211.955, _GLF_IDENTITY(-2.6, _GLF_IDENTITY((-2.6), min((-2.6), (-2.6))) / 1.0), 515.295, -4496.1595)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(mat4x3(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))), min(mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0))), mat4(1.0) * (vec4(injectionSwitch.y, 0.0, 0.0, tan(0.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.8)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sin(0.0), log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(0.0), bool(true))), 1.0, 0.0, 1.0))))))))))) && _GLF_IDENTITY(true, ! (! (true)))))))))), true, true)))))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != _GLF_IDENTITY((0 ^ 1), clamp((0 ^ 1), (0 ^ 1), (0 ^ 1)))); _injected_loop_counter ++)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, length(cross(vec3(-75.84, -6.3, -2.8), vec3(-75.84, -6.3, -2.8))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, length(cross(vec3(-75.84, -6.3, -2.8), vec3(-75.84, -6.3, -2.8))), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0)))))) < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) + _GLF_IDENTITY(0u, (0u) + 0u))), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), min(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(87112) : 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) | ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), clamp(min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1))))), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_size) : clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))), (min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), (subgroup_local_id + 1))))))) | (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)), ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)))))))))) | (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))) + 1) + 0u)), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) | (((subgroup_local_id + 1)))) | ((subgroup_local_id + 1))), min(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(87112) : 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)))), (min(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size))), (subgroup_local_id + 1))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) | ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)) / 1u), (subgroup_local_id + 1)))), (clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), (subgroup_local_id + 1))))) + 0u)))) | (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)), ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)))), (min(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size))), (subgroup_local_id + 1))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) | ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)) / 1u), (subgroup_local_id + 1)))), (clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), (subgroup_local_id + 1))))) + 0u)))) | (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)), ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))))))))))) | 0u) | (_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), (_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), uint(_GLF_IDENTITY(uvec4(min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), 0u, 1u, (0u | 0u)), (uvec4(min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), 0u, 1u, (0u | 0u))) >> uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), max(~ (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), ~ (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))))))))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(5), int(5)))) ^ (1))))) % subgroup_size), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) + 0u)), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), min(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(87112) : 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) + 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((min((subgroup_local_id + 1), (subgroup_local_id + 1)))) / 1u), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), ~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))) + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))) + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))), (subgroup_local_id + 1))), (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), 0u | (min((subgroup_local_id + 1), (subgroup_local_id + 1))))))), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))) * 1u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, 1 * (1))))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))))), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) | ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_size) : clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)) + 1))), (min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), (subgroup_local_id + 1))))))) | (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u)) >> 0u)), ~ (~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)))))))))) | (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1)), 1))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u ^ ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), (((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)) - 0u) | ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), uint(_GLF_IDENTITY(uint((min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (uint((min((subgroup_local_id + 1), (subgroup_local_id + 1))))) - 0u))), (min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), (min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_size) : clamp((min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u))), (min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), (subgroup_local_id + 1))), (min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), (subgroup_local_id + 1))))))) | _GLF_IDENTITY((_GLF_IDENTITY(min((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(uvec3(uvec3(subgroup_local_id + 1, 1u, 1u)))), uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(subgroup_local_id + 1, 1u, 1u))))))))), ((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(uvec3(uvec3(subgroup_local_id + 1, 1u, 1u)))), uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(subgroup_local_id + 1, 1u, 1u)))))))))) << _GLF_IDENTITY(0u, (0u) >> 0u)))))), 0u | ((_GLF_IDENTITY(min((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(uvec3(uvec3(subgroup_local_id + 1, 1u, 1u)))), uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(subgroup_local_id + 1, 1u, 1u))))))))), ((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(uvec3(uvec3(subgroup_local_id + 1, 1u, 1u)))), uvec3(subgroup_local_id + 1, 1u, 1u), uvec3(subgroup_local_id + 1, 1u, 1u)))))))))) << _GLF_IDENTITY(0u, (0u) >> 0u)))))))))) | (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) >> 0u))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), uint(uvec2((min((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))) | 0u), (((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)) ^ 0u) | (_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((min((subgroup_local_id + 1), (subgroup_local_id + 1)))) ^ 0u))), _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))), (uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) - 0u), 0u))))) + 1)))), (false ? _GLF_FUZZED(subgroup_size) : clamp((min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id))), subgroup_local_id + 1))))), (min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))), (min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), (subgroup_local_id + 1))))))) | (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))))), ~ (~ _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> 0u)))))))) | (min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id))) >> 0u), max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u), clamp(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u), (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u)) >> 0u), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) | ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_size) : clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1), (subgroup_local_id + 1))))))) | (_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | 0u), 0u))) : min((subgroup_local_id + 1), (subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))), (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))), (~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1)))) >> 0u)) | _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1))), _GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))), uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 1u, 0u), min(uvec4(~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 1u, _GLF_IDENTITY(0u, ~ (~ (0u)))), uvec4(~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (subgroup_local_id + 1))), 1u, 1u, 0u)))))))))))))) | (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (min((subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((min((subgroup_local_id + 1), (subgroup_local_id + 1))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u) | ((min((subgroup_local_id + 1), (subgroup_local_id + 1))))), _GLF_IDENTITY(clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_size) : clamp((min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((subgroup_local_id + 1), (subgroup_local_id + 1))), (min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1), (subgroup_local_id + 1))))))) | _GLF_IDENTITY((_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))) + 1), (subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), ((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))) | 0u))))), (0u | 0u) + ((_GLF_IDENTITY(min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u) + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : min((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))) + 1), (subgroup_local_id + 1)), ~ _GLF_IDENTITY((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))), (_GLF_IDENTITY((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) / 1u)))))), (1u ^ 1u) ^ ((~ (false ? _GLF_FUZZED(subgroup_local_id) : min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) / 1u))))))))) | 0u))))))))) | (min((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))))))))), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size) : _GLF_FUZZED(subgroup_id))))));
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5))), ! (! (_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5))))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec2(int(7), 0)))) | (int(7)))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
        }
      }
     do
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (false), false, true, true))))))))) && true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)) > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)) > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)) > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch)).x)) > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true)))) || false)))))))) || false))) && true));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), 4, 64, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY((0), (0 >> _GLF_IDENTITY(int(2), int(2))) + ((0))) ^ 0))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-375.448) : injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-375.448) : injectionSwitch.y))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-375.448) : injectionSwitch.y)))))))))) && true)) && true)))), false)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-1.9, _GLF_IDENTITY(-501.996, clamp(_GLF_IDENTITY(-501.996, min(-501.996, -501.996)), -501.996, -501.996)))) : injectionSwitch)).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false))))))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)), ~ (~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))))))), 0 + (_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0), (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) >> 0)) >> (0 ^ 0)))))))))))
        {
         return;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter > 0))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec3(next_virtual_gid, 1u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), 1u, 1u))) | (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), 1u, 1u)), (uvec3(_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), 1u, 1u)))))) >> uvec3(0u, 0u, 0u))))], uint(1), 4, 64, _GLF_IDENTITY(4, (4) << 0));
            }
           else
            {
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 & int(_GLF_ONE(1.0, injectionSwitch.y))) | (1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(1 * (1), clamp(_GLF_IDENTITY(1 * (1), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 * (1))), 1 * (1), 1 * (1))) : _GLF_FUZZED(_injected_loop_counter))))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, clamp(1, 1, 1)) & int(_GLF_ONE(1.0, injectionSwitch.y))) | (1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(1 * (1), clamp(_GLF_IDENTITY(1 * (1), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 * (1))), 1 * (1), 1 * (1))) : _GLF_FUZZED(_injected_loop_counter)))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
              {
              }
             else
              {
               atomicStore(checker[virtual_gid], read, 4, 64, 4);
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
             break;
            }
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -46682)); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                return;
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     subgroupAll(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      continue;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[virtual_gid], read, 4, 64, 4);
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), 1)), (int(ivec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), 1))) | (int(ivec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), 1))))) != _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicAnd(_injected_loop_counter, _injected_loop_counter)) : 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5975) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicAnd(_injected_loop_counter, _injected_loop_counter)) : 0)))), false || (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), 1)), (int(ivec2(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), 1))) | (int(ivec2(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter)))) | 0), 1))))) != _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicAnd(_injected_loop_counter, _injected_loop_counter)) : 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5975) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(atomicAnd(_injected_loop_counter, _injected_loop_counter)) : 0))))))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true)), false))))))))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     return;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
      }
     do
      {
       for(int _injected_loop_counter = ((1 ^ 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | _GLF_IDENTITY((int(4)), 0 + (_GLF_IDENTITY((int(4)), 0 ^ ((int(4))))))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             subgroupAll(true);
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}
