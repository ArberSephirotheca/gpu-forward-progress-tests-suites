#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id;
 uvec4 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy = GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_DEAD(false)) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(1.2) : injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(inversesqrt(454.112)) : injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(1.2) : injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(inversesqrt(454.112)) : injectionSwitch.y))))), (bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(1.2) : injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(inversesqrt(454.112)) : injectionSwitch.y)))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])))).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(! (false)))))), true && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, true)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-776.296), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6155.8751), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-43.23, -8.9).g)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(int(0)))))))], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)))[1]), vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(_GLF_IDENTITY(6.3, (true ? 6.3 : _GLF_FUZZED(-736.774))))), bvec2(false, false))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(6.3)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(6.3)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(6.3)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))).y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(6.3)), bvec2(false, false)), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + tan(vec2(0.0, 0.0)))[0], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(6.3)), bvec2(false, false))) + vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, max(-5.8, _GLF_IDENTITY(-5.8, (-5.8) * 1.0)))), _GLF_FUZZED(_GLF_IDENTITY(6.3, clamp(6.3, _GLF_IDENTITY(6.3, float(mat4(6.3, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0))), 6.3)))), bvec2(false, false))).y) / _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0))), 0.0)))) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.y = _GLF_IDENTITY(num_workgroup, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))) ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.y = num_workgroup, 0u ^ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.y = num_workgroup), ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.y = num_workgroup)) - 0u)) : _GLF_FUZZED(uint(_GLF_IDENTITY((_GLF_IDENTITY(-20846 | 80453, (_GLF_IDENTITY(-20846 | 80453, clamp(_GLF_IDENTITY(-20846 | 80453, min(_GLF_IDENTITY(-20846, (_GLF_IDENTITY(-20846, (-20846) >> 0)) | (-20846)) | 80453, -20846 | _GLF_IDENTITY(80453, clamp(_GLF_IDENTITY(80453, (false ? _GLF_FUZZED(43797) : 80453)), 80453, 80453)))), _GLF_IDENTITY(-20846, ~ (~ (_GLF_IDENTITY(-20846, (-20846) >> 0)))) | 80453, -20846 | 80453))) << _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(((_GLF_IDENTITY(-20846 | 80453, (_GLF_IDENTITY(-20846 | 80453, clamp(_GLF_IDENTITY(-20846 | 80453, min(_GLF_IDENTITY(-20846, (_GLF_IDENTITY(-20846, (-20846) >> 0)) | (-20846)) | 80453, -20846 | _GLF_IDENTITY(80453, 1 * (_GLF_IDENTITY(80453, int(ivec2(80453, 1))))))), -20846 | 80453, -20846 | 80453))) << 0))), 0 ^ (((_GLF_IDENTITY(-20846 | 80453, (_GLF_IDENTITY(-20846 | 80453, clamp(_GLF_IDENTITY(-20846 | 80453, min(_GLF_IDENTITY(-20846, (_GLF_IDENTITY(-20846, (-20846) >> 0)) | (-20846)) | 80453, -20846 | _GLF_IDENTITY(80453, 1 * (_GLF_IDENTITY(80453, int(ivec2(80453, 1))))))), -20846 | 80453, -20846 | 80453))) << 0))))) | ((_GLF_IDENTITY(-20846 | 80453, (_GLF_IDENTITY(-20846 | 80453, clamp(_GLF_IDENTITY(-20846 | 80453, min(_GLF_IDENTITY(-20846, _GLF_IDENTITY((_GLF_IDENTITY(-20846, (-20846) >> 0)) | (-20846), min((_GLF_IDENTITY(-20846, (-20846) >> 0)) | (-20846), (_GLF_IDENTITY(-20846, (-20846) >> 0)) | (-20846)))) | 80453, -20846 | 80453)), -20846 | 80453, -20846 | 80453))) << 0))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.x = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id)).y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * _GLF_ONE(1.0, injectionSwitch.y)))), true), false)))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, (true) && true)), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, (true) && true)) || false)), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + ((gl_WorkGroupSize))), (_GLF_IDENTITY(true ? (gl_WorkGroupSize) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size), uvec3(0u, 0u, 0u) | (true ? (gl_WorkGroupSize) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size))))) ^ (uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u) & uvec3(115918u, _GLF_IDENTITY(74308u, _GLF_IDENTITY((74308u) >> 0u, _GLF_IDENTITY(((74308u) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | _GLF_IDENTITY((0u), uint(uvec4((0u), 1u, 0u, 1u))), ((0u) | (0u)) - 0u)) | ((0u) | (0u))))), (((74308u) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | _GLF_IDENTITY((0u), uint(uvec4((0u), 1u, 0u, 1u))), ((0u) | (0u)) - 0u)) | ((0u) | (0u)))))) >> 0u) - _GLF_IDENTITY(0u, (0u) | (0u)))), 31480u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(float(43269u))), float(mat2x4(float(_GLF_FUZZED(float(43269u))), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(80.73) : dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), bool(false)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0 * (injectionSwitch.y), min(_GLF_IDENTITY(1.0, (1.0) * 1.0) * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.0, max(-0.0, _GLF_IDENTITY(-0.0, max(-0.0, -0.0)))))), float(_GLF_FUZZED(-8206.3027)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (injectionSwitch.y)))))), bool(true)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0 * (injectionSwitch.y), min(_GLF_IDENTITY(1.0, (1.0) * 1.0) * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.0, max(-0.0, _GLF_IDENTITY(-0.0, max(-0.0, -0.0)))))), float(_GLF_FUZZED(-8206.3027)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (injectionSwitch.y)))))), bool(true)))), max(min(_GLF_IDENTITY(1.0 * (injectionSwitch.y), min(_GLF_IDENTITY(1.0, (1.0) * 1.0) * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.0, max(-0.0, _GLF_IDENTITY(-0.0, max(-0.0, -0.0)))))), float(_GLF_FUZZED(-8206.3027)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (injectionSwitch.y)))))), bool(true)))), min(_GLF_IDENTITY(1.0 * (injectionSwitch.y), min(_GLF_IDENTITY(1.0, (1.0) * 1.0) * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.0, max(-0.0, _GLF_IDENTITY(-0.0, max(-0.0, -0.0)))))), float(_GLF_FUZZED(-8206.3027)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (injectionSwitch.y)))))), bool(true))))))) + 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.z * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-656.910) : injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uintBitsToFloat(uvec2(161802u, 199332u))) : injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true)), (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8797.2357, 851.252)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8797.2357, 851.252)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8797.2357, 851.252)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))), true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) || false)))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-8797.2357, 851.252)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8797.2357, 851.252)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8797.2357, 851.252)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))), true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), mat2(1.0) * (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.y = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(178600u, _GLF_IDENTITY(147916u, (147916u) / 1u), 50809u, 61443u))).w * subgroup_size;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z = subgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.w = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id)), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id)).z, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z)), clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, 1u, 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))
  barrier();
 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base)).w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy, _GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy) - uvec2(0u, 0u)))), GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy), uvec2(uvec3(clamp(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy) - uvec2(0u, 0u)))), GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy), 0u)))).y + _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base), ((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base)) / uvec4(1u, 1u, 1u, 1u)), min(_GLF_IDENTITY((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base), ((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base)) + uvec4(0u, 0u, 0u, 0u)), (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base))) / _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)))), min(_GLF_IDENTITY((uvec4(1u, _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u), 1u) & uvec4(1u, 1u, 1u, 1u)), ((uvec4(1u, 1u, _GLF_IDENTITY(1u, uint(uint(1u))), 1u) & uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u)), (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))))).xy.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base, _GLF_IDENTITY((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base), min(_GLF_IDENTITY((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base), ((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base)) + uvec4(0u, 0u, 0u, 0u)), (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base))) / _GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)), min(_GLF_IDENTITY((uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), 0u | (_GLF_IDENTITY(1u, (1u) << 0u)))) - 0u), 1u) & _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), ((uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))) & uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))).xy.x, (0u | 0u), 0u, (1u ^ 0u)), (uvec4(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base, _GLF_IDENTITY((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base), min(_GLF_IDENTITY((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base), ((GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base)) + uvec4(0u, 0u, 0u, 0u)), (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base))) / _GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)), min(_GLF_IDENTITY((uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), 0u | (_GLF_IDENTITY(1u, (1u) << 0u)))) - 0u), 1u) & _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), ((uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), clamp(uvec4(1u, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))) & uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))))).xy.x, (0u | 0u), 0u, (1u ^ 0u))) >> uvec4(0u, 0u, 0u, 0u)))), clamp(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, uint(uvec3(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, 1u, 0u))), _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, _GLF_IDENTITY(max(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x), (max(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x)) | (max(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x))))))) * 1u) + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)) / 1u) / 1u), subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2))))) / vec2(1.0, 1.0))))))) * vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))]), vec2(_GLF_FUZZED(((5.6 * -31.82) - -49.41)), _GLF_FUZZED(1680.1593)), bvec2(false, false)))) - vec2(0.0, 0.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8.1, min(8.1, 8.1)), 0.2))))) * vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0), float(1.0), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0)))))) - 0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 1.0)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint next_virtual_gid = GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.y + GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.xy.x + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x = next_virtual_gid, (true ? GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x = next_virtual_gid : _GLF_FUZZED(subgroup_base)));
 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2)) | _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (2)))), ((atomicLoad(buf[virtual_gid], 4, 64, 2))) + (0u & 93865u)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.y = _GLF_IDENTITY(read, 0u | (read));
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(218.534), _GLF_FUZZED(-7535.8743)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mod(81.65, 1.8))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0])), injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mod(81.65, 1.8))))))))))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), false, false, false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), false, false, false))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false, true, true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-37.47)), bvec2(true, false)))) - vec2(0.0, 0.0)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false)))), true, true, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, log(1.0), 0.0)), vec2(mat4(vec2(vec4(injectionSwitch, log(1.0), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))).y, false)))), true, true, false)), true, false)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true), false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.z], uint(1), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / 1)))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), false, true))))))), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))), false))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), false, true))))))), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_baseworkgroup_basenext_virtual_gidsubgroup_base.z], uint(_GLF_IDENTITY(1, (1) << 0)), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0, 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) ^ 0)), (ivec4(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) | (ivec4(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0, 0, (0 >> _GLF_IDENTITY(int(1), int(1)))))))))), (64) >> 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))) | (4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) << 0))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) << 0)))) / 1))) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), int(int(4)))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) << 0)))) / 1)))), max((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), int(int(4)))) | (4), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), int(int(4)))) | (4), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, (0 | 0), 1)), 0 ^ (int(ivec4(0, 0, (0 | 0), 1)))))))), int(int(4)))) | (4))))) / 1))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) ^ 0)))))), 0 | (_GLF_IDENTITY(4, int(ivec2(4, 0))))), int(int(4)))) | (4)))))) ^ _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, (0) / 1)) ^ 0), 0)))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-952.282)), bool(false))), injectionSwitch[1])))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3529.0954), _GLF_FUZZED(-88.64)), bvec2(false, false))).x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false)))) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], GLF_merged3_0_1_13_1_1_4_2_1_14num_workgroupreadworkgroup_size.y, 4, 64, 4);
}
