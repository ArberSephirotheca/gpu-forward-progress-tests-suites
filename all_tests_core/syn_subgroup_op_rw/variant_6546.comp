#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) || false))))), (bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(bool(! (! (_GLF_IDENTITY(false, (false) || false)))), true))), true, false, true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))).x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), true, true, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(42.08, -9123.1909))))) / vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.9)), float(1.0), bool(true))))))))).x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 1u * (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_base))))), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, ((~ (workgroup_base)) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, _GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))))) - 0u), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)))) | 0u)) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u))), _GLF_IDENTITY((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))) | _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), clamp(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), (((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))) << 0u), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))))) / _GLF_IDENTITY(1u, (1u) | (1u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(1u, 1u) * (uvec2(1u, 1u)))))) | 0u), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 1u * (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_base))))), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, ((~ (workgroup_base)) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, _GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))))) - 0u), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)))) | 0u)) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u))), _GLF_IDENTITY((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))) | _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), clamp(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), (((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))) << 0u), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))))) / _GLF_IDENTITY(1u, (1u) | (1u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(1u, 1u) * (uvec2(1u, 1u)))))) | 0u), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 1u * (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_base))))), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, ((~ (workgroup_base)) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, _GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))))) - 0u), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)))) | 0u)) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u))), _GLF_IDENTITY((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))) | _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), clamp(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), (((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))) << 0u), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))))) / _GLF_IDENTITY(1u, (1u) | (1u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(1u, 1u) * (uvec2(1u, 1u)))))) | 0u), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 1u * (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_base))))), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, ((~ (workgroup_base)) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, _GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))))) - 0u), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)))) | 0u)) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u))), _GLF_IDENTITY((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))) | _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), clamp(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), (((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))) << 0u), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))))) / _GLF_IDENTITY(1u, (1u) | (1u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(1u, 1u) * (uvec2(1u, 1u)))))) | 0u), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u)) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 1u * _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_base)))), 1u * ((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_base))))))), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, ~ (~ ((~ (workgroup_base)) >> 0u))))), max(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) - 0u)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(uint(uint(~ (workgroup_base))), uint(uvec4(uint(uint(~ (workgroup_base))), 1u, (1u & 1u), 0u)))), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, ((~ (workgroup_base)) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (0u | _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, _GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u))))) - 0u), (~ (workgroup_base)) | (~ (workgroup_base))), (~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))) >> 0u))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), max((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (true ? 0u << _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 0u)))) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) << 0u))))) / 1u))), (~ (workgroup_base)) | (~ (workgroup_base))), (~ (workgroup_base)) >> 0u)))))))) | 0u)) / _GLF_IDENTITY(1u, (1u) | (1u)))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u)), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))), (~ (workgroup_base)) >> 0u)), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u))), _GLF_IDENTITY((0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), max((workgroup_base), (workgroup_base))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), clamp((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u)))))))), ~ (~ ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec4(~ (~ (workgroup_base)), 0u, 0u, 0u))))))))))))), max((workgroup_base), (workgroup_base)))) * (1u ^ 0u)), (~ (workgroup_base)) >> 0u)))), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) >> 0u))))) | _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) >> 0u))))), clamp(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), _GLF_IDENTITY(((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u))))), (((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))) << 0u), ((0u | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ (workgroup_base)) >> 0u)))))))) / _GLF_IDENTITY(1u, (1u) | (1u)))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) + 0u), clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))))) / 1u)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) + 0u), clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))))) / 1u)))), 1u), (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) + 0u), clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))))) / 1u)))), 1u)) | (uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) + 0u), clamp((subgroup_id) / 1u, (subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, max(_GLF_IDENTITY((subgroup_id) / 1u, ((subgroup_id) / 1u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_id) / 1u, max((subgroup_id) / 1u, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))))) / 1u)))), 1u))))) << 0u), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(1u, 1u) * (uvec2(1u, 1u)))))) | 0u), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp(_GLF_IDENTITY((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), ((subgroup_id) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))) / (1u | 1u)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (subgroup_id) / 1u))), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / 1u, (subgroup_id) / 1u, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), 1u * (max(subgroup_id, subgroup_id))))) / 1u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, clamp((subgroup_id) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)))), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u)) / 1u) / 1u, (subgroup_id) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) << 0u))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u)) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(-2.9, 46.52, 731.915, 47.55).w), _GLF_FUZZED(-62.48)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), 1u, 1u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | (workgroup_base)), 1u, 1u))) + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), 1u, 1u))) + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1, 0)))))) << _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.3) : injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(60922) : 4))) ^ 0), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec4(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(_GLF_IDENTITY(1, (1) << 0))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) | (_GLF_IDENTITY((1u) | (1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))))) | ((1u) | (1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) | (_GLF_IDENTITY((1u) | (1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))))) | ((1u) | (1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) | (_GLF_IDENTITY((1u) | (1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), _GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u))), (1u) | (1u))), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))))) | ((1u) | (1u)))))))))) << 0u), 1u, 1u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, true && ((false) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0) - 0.0), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))), false), true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6411.2462), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_FUZZED(injectionSwitch))), determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat4(_GLF_FUZZED(injectionSwitch), determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(true))), 1.0)), 1.0, 0.0, 0.0, 1.0, length(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))), (mat4(_GLF_FUZZED(injectionSwitch), determinant(_GLF_IDENTITY(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3(1.0) * (_GLF_IDENTITY(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-353.175, -5.5, 760.250, -736.204, _GLF_IDENTITY(4793.8885, (4793.8885) - 0.0), 99.14, length(vec4(-86.05, 2.2, -3.8, 7.1)), 1015.2826, 1.9)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (_GLF_IDENTITY(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (true ? mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3(7.6, -5.6, 43.30, 9947.5197, -1.4, -8.9, 64.38, 4.5, 0.7)))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 0.0)))) - mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-441.560)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-437.645) : injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), exp(0.0)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-4016.8803, 5.3)))) + (injectionSwitch)))))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(step(985.287, -7.7)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x : _GLF_FUZZED(1.9))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(step(985.287, -7.7)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, (-3.3) - abs(abs(0.0))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(step(985.287, -7.7)) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.3, (-3.3) - abs(abs(0.0))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))), false, _GLF_IDENTITY(true, ! (! (true))), true))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x : _GLF_FUZZED(1.9))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x : _GLF_FUZZED(1.9))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0))).x : _GLF_FUZZED(1.9))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.9)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))))))))))))))))))) || false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), transpose(transpose(transpose(transpose(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))))))))))), true, false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), true)), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(407.861)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(vec3(-5.3, 1689.8167, -4.7).t)), bool(false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-340.600)), bool(false)))) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0)))))))))))), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))) || false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0))))), max(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(exp(0.0), exp(0.0) * (exp(0.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7732.1501) : 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0))))), 1.0, 1.0, 0.0, 0.0, 0.0))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
