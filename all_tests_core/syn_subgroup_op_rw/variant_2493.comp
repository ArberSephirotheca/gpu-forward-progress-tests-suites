#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 bvec3 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 bvec4 _f3;
 mat3x2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 vec4 _f1;
 uvec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 vec3 _f2;
 vec4 _f3;
 mat4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat4x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_1 {
 bool _f0;
 uvec4 _f1;
 bvec2 _f2;
 mat2x3 _f3;
 vec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 mat2 _f1;
 _GLF_struct_2 _f2;
 bool _f3;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 uint workgroup_id;
 _GLF_struct_3 _f1;
 uvec4 _f2;
 bvec3 _f3;
 _GLF_struct_6 _f4;
 mat4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 float _f1;
 uvec4 _f2;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z = num_workgroup;
  }
 GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.x = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.z;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2(1.0), 1.0, uvec4(1u), gl_WorkGroupSize.x);
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(bvec4(true), gl_WorkGroupID.x, _GLF_struct_3(_GLF_struct_1(true, uvec4(1u), bvec2(true), mat2x3(1.0), vec3(1.0), bvec4(true)), mat2(1.0), _GLF_struct_2(vec3(1.0), mat4x2(1.0), mat4(1.0)), true), uvec4(1u), bvec3(true), _GLF_struct_6(_GLF_struct_4(mat4x3(1.0), vec4(1.0), uvec2(1u), uvec4(1u)), _GLF_struct_5(bvec3(true), uvec2(1u), mat2x4(1.0), bvec4(true), mat3x2(1.0), uvec2(1u)), vec3(1.0), vec4(1.0), mat4(1.0), vec3(1.0)), mat4(1.0), mat4x2(1.0));
 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.y = _GLF_struct_replacement_7.workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_0.workgroup_size * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.y;
 GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.x = workgroup_base;
 uint virtual_gid = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.x + subgroup_id * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.z = virtual_gid;
  }
 else
  {
  }
 uint next_virtual_gid = GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.xy.x + subgroup_id * GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w + ((subgroup_local_id + 1) % GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w);
 uint read = atomicLoad(buf[GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.z], 4, 64, 0);
 GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.y = read;
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(subgroup_local_id + 1 < GLF_merged3_0_2_51_2_1_13_3_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupsubgroup_size.w)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       atomicStore(checker[GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.z], GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.y, 4, 64, 4);
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
    {
     subgroupAll(false);
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     atomicStore(buf[GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.z], GLF_merged3_0_1_13_1_1_4_2_1_11num_workgroupreadvirtual_gid.y, 4, 64, 4);
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(true);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
