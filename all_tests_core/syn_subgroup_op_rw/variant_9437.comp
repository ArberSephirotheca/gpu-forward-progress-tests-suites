#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false, true)))))), _GLF_IDENTITY(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.7) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (injectionSwitch.x) * _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(sqrt(4.2))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)), 0u | ((subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u ^ (buf[virtual_gid]), 0u | _GLF_IDENTITY((0u ^ (buf[virtual_gid])), 0u ^ (_GLF_IDENTITY((0u ^ (buf[virtual_gid])), (false ? _GLF_FUZZED(atomicExchange(virtual_gid, workgroup_size)) : (0u ^ (buf[virtual_gid]))))))))) >> 0u), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-20465) : _GLF_IDENTITY(4, 0 ^ (4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-20465) : _GLF_IDENTITY(4, 0 ^ (4))) * 1))), _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), _GLF_IDENTITY(4, (4) << (0 ^ 0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, false || (false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false))) || false), false), true))), true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, false || (false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false))) || false), false), true))), true)))))))))), ((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, false || (false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false))) || false), false), true))), true))))))))))) || false)) || false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), false, true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), false), true))), true)))))), ! (! (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true))))), true && (bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))), false, false)))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), false), true))), true)))))))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true)))), false, false)))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), false), true))), true)))))))))) || false, false || ((_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))), true))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))) && true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false), true))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))) && true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false), true))), true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) || _GLF_IDENTITY((false), ! (! ((false))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false)), true))), true)))), false, false)))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), false), true))), true)))))))))) || false))))), true))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, sqrt(1.0), 0.0, 0.0)))) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), min(float(1.0), _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0)))), max(float(_GLF_IDENTITY(float(1.0), min(float(1.0), _GLF_IDENTITY(float(1.0), _GLF_IDENTITY((float(1.0)) - 0.0, (false ? _GLF_FUZZED(-35.32) : (float(1.0)) - 0.0)))))), float(_GLF_IDENTITY(float(1.0), min(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), (false ? _GLF_FUZZED(42.81) : _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0))), _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0))))))))) * (injectionSwitch.x)) > injectionSwitch.y) || false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)), (true ? false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, _GLF_IDENTITY(-9.8, max(-9.8, -9.8)))) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407)))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (true ? false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)), (true ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_FUZZED(mat2(84.91, -362.088, 8.2, 636.439)))) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))), (true ? false ? _GLF_FUZZED(mat2(-3.5, _GLF_IDENTITY(-12.00, (-12.00) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(681.823, min(681.823, 681.823)), min(681.823, 681.823)), -9.8)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), _GLF_IDENTITY(((mat2(1.0))), (_GLF_IDENTITY(((mat2(1.0))), (((mat2(1.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407))))) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) * mat2(1.0)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)), (true ? false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, _GLF_IDENTITY(-9.8, max(-9.8, -9.8)))) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407)))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (true ? false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)), (true ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_FUZZED(mat2(84.91, -362.088, 8.2, 636.439)))) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))), (true ? false ? _GLF_FUZZED(mat2(-3.5, _GLF_IDENTITY(-12.00, (-12.00) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(681.823, min(681.823, 681.823)), min(681.823, 681.823)), -9.8)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), _GLF_IDENTITY(((mat2(1.0))), (_GLF_IDENTITY(((mat2(1.0))), (((mat2(1.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407))))) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0)), (true ? false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, _GLF_IDENTITY(-9.8, max(-9.8, -9.8)))) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407)))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (true ? false ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)), (true ? _GLF_FUZZED(mat2(-3.5, -12.00, 681.823, -9.8)) : _GLF_FUZZED(mat2(84.91, -362.088, 8.2, 636.439)))) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))), (true ? false ? _GLF_FUZZED(mat2(-3.5, _GLF_IDENTITY(-12.00, (-12.00) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(681.823, min(681.823, 681.823)), min(681.823, 681.823)), -9.8)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), _GLF_IDENTITY(((mat2(1.0))), (_GLF_IDENTITY(((mat2(1.0))), (((mat2(1.0)))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(-71.31, 0.3, -47.76, 847.407))))) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) * mat2(1.0)))).x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-29381) : 64)))), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))[0], _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(31.43), (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))))[1]), bvec2(false, true))))).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-48.15) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-48.15, (-48.15) / 1.0)) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false, false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y)) || false), ! (! ((((injectionSwitch.x > injectionSwitch.y)) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.3) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-48.15) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((injectionSwitch.x > injectionSwitch.y)) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-94.89) : injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))))) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true, true)), true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)), mix(vec2(_GLF_FUZZED(-0.6), (vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)))[1]), vec2((vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)))[0], _GLF_FUZZED(4.7)), bvec2(true, false))), vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)))), bvec2(false, false))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(6441)))]), _GLF_IDENTITY(vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)), mix(vec2(_GLF_FUZZED(-0.6), (vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)))[1]), vec2((vec2(_GLF_FUZZED((_GLF_IDENTITY(false, true && (false)) ? 33.93 : 7.6)), _GLF_IDENTITY(_GLF_FUZZED(-861.666), abs(0.0) + (_GLF_FUZZED(-861.666)))))[0], _GLF_FUZZED(4.7)), bvec2(true, false))), vec2(_GLF_FUZZED((false ? 33.93 : 7.6)), _GLF_FUZZED(-861.666)))), bvec2(false, false))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(26.30, -1.7), mat2(1.0) * (vec2(26.30, -1.7)))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(26.30, -1.7)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), min(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), injectionSwitch)))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) || false)), (! (_GLF_IDENTITY((false) || false, ((false) || false) || false))) && true))))))
  barrier();
}
