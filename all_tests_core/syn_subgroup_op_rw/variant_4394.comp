#version 460
struct _GLF_struct_22 {
 bool _f0;
 uvec2 _f1;
 mat2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_21 {
 uint subgroup_base;
 vec4 _f0;
 mat3 _f1;
 vec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 bool _f2;
} ;

struct _GLF_struct_24 {
 int _f0;
 bvec2 _f1;
 uvec2 _f2;
 _GLF_struct_23 _f3;
 mat4x2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_18 {
 mat2x3 _f0;
 float _f1;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 int _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 uvec3 _f1;
 int _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 mat3x4 _f2;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
} ;

struct _GLF_struct_13 {
 int _f0;
 mat4 _f1;
 int _f2;
 int _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 float _f1;
 uvec4 _f2;
 vec4 _f3;
 int _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 uvec2 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_19 _f4;
 uint subgroup_local_id;
} ;

struct _GLF_struct_9 {
 uint _f0;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat4 _f1;
 uint subgroup_id;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat3x4 _f1;
 uvec3 _f2;
 mat2 _f3;
 ivec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 mat3x4 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_3 {
 uint next_virtual_gid;
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 int _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(bvec3(true), mat4(1.0), gl_SubgroupID, _GLF_struct_9(1u));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_11(bvec3(true), bvec4(true)), _GLF_struct_12(vec2(1.0)), uvec2(1u), _GLF_struct_15(_GLF_struct_13(1, mat4(1.0), 1, 1, mat4x2(1.0)), 1.0, uvec4(1u), vec4(1.0), 1, _GLF_struct_14(mat3x4(1.0))), _GLF_struct_19(_GLF_struct_16(mat4x2(1.0), uvec3(1u), 1), _GLF_struct_17(vec2(1.0), 1, mat3x2(1.0)), mat3x4(1.0), _GLF_struct_18(mat2x3(1.0), 1.0)), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(1, bvec2(true), uvec2(1u), _GLF_struct_23(_GLF_struct_21(_GLF_struct_replacement_10.subgroup_id * subgroup_size, vec4(1.0), mat3(1.0), vec4(1.0), uvec3(1u)), _GLF_struct_22(true, uvec2(1u), mat2(1.0), mat3x2(1.0)), true), mat4x2(1.0), bvec2(true));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_24._f3._f0.subgroup_base + _GLF_struct_replacement_20.subgroup_local_id;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(_GLF_struct_0(vec2(1.0))), _GLF_struct_3(workgroup_base + _GLF_struct_replacement_24._f3._f0.subgroup_base + ((_GLF_struct_replacement_20.subgroup_local_id + 1) % subgroup_size), _GLF_struct_2(mat3x4(1.0), vec3(1.0))), 1, _GLF_struct_4(mat4x2(1.0)), _GLF_struct_7(_GLF_struct_5(mat3(1.0), mat3x4(1.0), uvec3(1u), mat2(1.0), ivec4(1), vec2(1.0)), mat3x4(1.0), _GLF_struct_6(mat4x2(1.0))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((_GLF_struct_replacement_20.subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_8._f1.next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_struct_replacement_8._f1.next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}
