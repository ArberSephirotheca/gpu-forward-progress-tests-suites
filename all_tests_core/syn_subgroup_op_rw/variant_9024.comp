#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat4x2 _f0;
} ;

struct _GLF_struct_13 {
 vec4 _f0;
 vec2 _f1;
 ivec3 _f2;
 uint _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 bvec2 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 vec2 _f1;
 bvec3 _f2;
 mat4x2 _f3;
 float _f4;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 mat3x2 _f1;
 int _f2;
 vec3 _f3;
 mat3x4 _f4;
 ivec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 vec3 _f1;
 mat4x3 _f2;
 mat2x4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 vec4 _f1;
 _GLF_struct_7 _f2;
 mat3x4 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 bool _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat2x3 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 vec3 _f1;
 vec2 _f2;
 int _f3;
 mat3x2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 mat4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_1 {
 bool _f0;
 mat2x4 _f1;
 vec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat3x4 _f1;
 uvec3 _f2;
 uvec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_10 _f3;
 uint workgroup_size;
 ivec4 _f4;
 mat2x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_14(bvec4(true), bvec2(true), _GLF_struct_12(mat4(1.0), ivec3(1)), _GLF_struct_13(vec4(1.0), vec2(1.0), ivec3(1), 1u, mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(82.29)))))), _GLF_struct_15(mat4x2(1.0)), gl_SubgroupID);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY((float(vec2(injectionSwitch.y, 0.0))) / 1.0, mix(float(_GLF_FUZZED(6.1)), float((float(vec2(injectionSwitch.y, 0.0))) / 1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, log(1.0), log(1.0), 0.0, 0.0, 0.0, 0.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, false))))))) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (float(vec2(injectionSwitch.y, 0.0))) / 1.0)), 1.0, log(1.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (1.0) / 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (float(vec2(injectionSwitch.y, 0.0))) / 1.0)), 1.0, log(1.0), log(1.0), 0.0, 0.0, 0.0, 0.0)))), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (float(vec2(injectionSwitch.y, 0.0))) / 1.0)), 1.0, log(1.0), log(1.0), 0.0, 0.0, 0.0, 0.0))))), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (float(vec2(injectionSwitch.y, 0.0))) / 1.0)), 1.0, log(1.0), _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(-4.5)), bool(false))))), 0.0, 0.0, 0.0, 0.0)))))) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, uint(uint(gl_NumWorkGroups.x)))));
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), clamp(uint(_GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))), uint(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)))))), _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY((uint(uint(1u))) - (167778u & 0u), 0u | ((uint(uint(1u))) - _GLF_IDENTITY((167778u & 0u), ((167778u & 0u)) - 0u))))))), (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)))), clamp(uint(uint(1u)), uint(uint(1u)), uint(uint(1u)))))) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), clamp(uint(_GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))), uint(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))), _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY((uint(uint(1u))) - (167778u & 0u), 0u | ((uint(uint(1u))) - (167778u & 0u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)))), clamp(uint(uint(1u)), uint(uint(1u)), uint(uint(1u))))), (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(1u, ~ (~ (1u))))))), 1u)))), clamp(uint(uint(1u)), uint(uint(1u)), uint(uint(1u)))))) / 1u)) * 1u))), clamp(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), clamp(uint(_GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))), uint(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))), _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY((uint(uint(1u))) - (167778u & 0u), 0u | ((uint(uint(1u))) - (167778u & 0u))))))), (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))), min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)))), clamp(uint(uint(1u)), uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), uint(uvec2(uint(uint(1u)), 1u))))))))) * 1u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), clamp(uint(_GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))), uint(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))), _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY((uint(uint(1u))) - (167778u & 0u), 0u | ((uint(uint(1u))) - (167778u & 0u))))))), (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)))), clamp(uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u)))), uint(uint(1u)))))) * 1u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), clamp(uint(_GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))), uint(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))), _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY((uint(uint(1u))) - (167778u & 0u), 0u | ((uint(uint(1u))) - (167778u & 0u))))))), (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)))), clamp(uint(uint(1u)), uint(uint(1u)), uint(uint(1u)))))) * 1u)))))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uint(1u)), clamp(uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)), clamp(0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)), 0u | (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)))))), uint(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))), _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY((uint(uint(1u))) - (167778u & 0u), 0u | ((uint(uint(1u))) - (167778u & 0u))))))), (~ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))) >> 0u))))), clamp(uint(uint(1u)), uint(uint(1u)), uint(uint(1u)))))) * 1u))))))), _GLF_struct_2(_GLF_struct_0(mat2x3(1.0), mat3x4(1.0), uvec3(1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), max(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u), (uvec4(1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u), 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), (uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, _GLF_IDENTITY(1u, (1u) * 1u), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), (_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u)), 0u), (false ? _GLF_FUZZED(uvec4(155808u, 130573u, 52903u, 63315u)) : uvec4(1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u)), 0u))), (uvec4(1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 0u)) >> uvec4(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) ^ 0u))), 0u))))))) - 0u)), ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, (1) | 0)))))))), _GLF_struct_1(true, mat2x4(1.0), vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY((vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0)), ((vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.9) : _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-66.25), _GLF_FUZZED(2.9)), vec2((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[1]), bvec2(true, true)))))))) - 0.0), 1.0, 0.0))) / sqrt(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))))), 1u)), _GLF_struct_6(mat2x3(1.0), _GLF_struct_3(vec4(1.0), vec3(1.0), vec2(1.0), 1, mat3x2(1.0), uvec4(1u)), _GLF_struct_4(_GLF_IDENTITY(ivec4(1), (ivec4(1)) + ivec4(0, 0, _GLF_IDENTITY(0, (0) ^ 0), 0)), mat2x3(1.0), ivec4(1), mat2x4(1.0), vec2(1.0)), mat4(1.0), _GLF_struct_5(bvec2(true), mat4x3(1.0), mat2x3(1.0), true, mat4x2(1.0))), _GLF_struct_10(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), vec4(1.0), _GLF_struct_7(mat4x3(1.0), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-7861.8076), _GLF_FUZZED(-74.72), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), clamp(float(vec2((vec3(1.0))[2], determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat3(1.0))))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), clamp(_GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), clamp(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), clamp(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), clamp(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / vec2(1.0, 1.0))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY((vec3(1.0))[2], _GLF_IDENTITY(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), clamp(float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4688.2267) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(7571.8978)), bool(false))))), 1.0, 1.0)))), float(vec2((vec3(1.0))[2], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))) * 1.0)))), vec3((vec3(1.0))[_GLF_IDENTITY(0, 0 | (0))], (vec3(1.0))[1], _GLF_FUZZED(-551.536)), bvec3(true, true, false))), mat4x3(1.0), mat2x4(1.0), bvec4(true)), mat3x4(1.0), _GLF_struct_8(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))), true, false)))) && true)))), mat3x2(1.0), 1, vec3(1.0), mat3x4(1.0), ivec4(1), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), mat3(1.0) * (mat3(1.0) * (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)) * mat3(1.0)))))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), mat3(1.0) * (mat3(1.0) * (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)) * mat3(1.0))))))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), mix(vec2(_GLF_FUZZED(float(false)), _GLF_IDENTITY(_GLF_FUZZED((false ? -5.8 : 2.4)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_FUZZED((false ? -5.8 : 2.4)), max(_GLF_FUZZED((false ? -5.8 : 2.4)), _GLF_FUZZED((false ? -5.8 : 2.4)))), 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(_GLF_FUZZED((false ? -5.8 : 2.4)), max(_GLF_FUZZED((false ? -5.8 : 2.4)), _GLF_FUZZED((false ? -5.8 : 2.4)))), 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0))))))), vec2((vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))[0], (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))[1]), bvec2(true, true)))), (false ? _GLF_FUZZED(step(256.795, vec2(46.80, 91.78))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((7168.2950 * 4911.1881))), bool(false)))), 0.0, 0.0)), mat3(1.0) * (mat3(1.0) * (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), mat4x3(mat4x3(mat4x3(1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), log(1.0), 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, abs(0.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, log(1.0), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), vec4(1.0, sqrt(0.0), sqrt(1.0), 1.0)), dot(vec4(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), vec4(1.0, sqrt(0.0), sqrt(1.0), 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(0.0, 1.0)), dot(vec2(1.0, sqrt(0.0)), vec2(0.0, 1.0))), 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x))), transpose(transpose(mat2x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), sqrt(1.0), 0.0, 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0.0, 0.0, 1.0, 1.0)))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)) * mat3(1.0)))))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), float(vec4(abs(1.0), 0.0, abs(1.0), 1.0))), abs(1.0))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.2, 8.7, 6.0, -6.6, 0.4, 479.759, 21.33, -0.8, 2626.0115))))), mat3(1.0) * (transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.2, 8.7, 6.0, -6.6, 0.4, 479.759, 21.33, -0.8, 2626.0115))))))))) * (mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), mat2(1.0) * ((injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)) * mat3(1.0))), ((_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), mat2(1.0) * ((injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)) * mat3(1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED((false ? -5.8 : 2.4))), vec2((vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), abs(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5838.3367)), bool(false))), 1.0, 1.0)))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))[0], (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), abs(1.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))[1]), bvec2(true, true)))))).x < injectionSwitch.y)), true)))), _GLF_struct_9(vec3(1.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-165.264) : 1.0))), bvec3(true), mat4x2(1.0), 1.0), mat3x4(1.0)), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / _GLF_IDENTITY(1u, (0u | 0u) ^ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))))))) << 0u)) / 1u), ivec4(1), mat2x4(1.0));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(injectionSwitch))), vec2(injectionSwitch[0], injectionSwitch[1])))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))))).y) || false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((20379 & 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((20379 & 0), ((20379 & 0)) << 0), ((0 | 1) ^ 1))), (int(ivec2(_GLF_IDENTITY((20379 & 0), ((20379 & 0)) << 0), ((0 | 1) ^ 1)))) >> 0))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 0)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (int(0))), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))), int(0))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_11.workgroup_size, clamp(_GLF_struct_replacement_11.workgroup_size, _GLF_struct_replacement_11.workgroup_size, _GLF_struct_replacement_11.workgroup_size)) * workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_16.subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base)))), uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base)))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base)))) : _GLF_FUZZED(num_workgroup))), 0u, 1u), (_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)))) : workgroup_base + subgroup_base)))), 0u, 1u), uvec3(uvec4(uvec3(~ (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec3(_GLF_FUZZED(workgroup_id), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base)))), 0u, 1u), 1u)))) | (uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base))), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), max((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_base)))))), 0u, 1u)))))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 0u))) + subgroup_local_id, (true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(54326u))), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    break;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) ^ (0 & -97557))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-43089 & 0)); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) && true)))
      return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     return;
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) | (~ (~ (4))))), 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, false, false)), bool(bvec2(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, false, false)), true)))))
  {
   do
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-511.906, -723.803)) : injectionSwitch)))).y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       subgroupAll(false);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))))))) || false))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(483.717)), bool(false))), 0.0, 1.0), (true ? mat2(injectionSwitch.y, sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat2(6.4, -3.9, 9573.3188, -32.89))))))))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)), false))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))) + 0.0)) > injectionSwitch.y)), false))))), false, true, true))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(49.33)), float(abs(0.0)), bool(true))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(vec2(8117.5464, -24.88)))))), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 1.0, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 0.0), (_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 1.0, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 0.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 1.0, 0.0, sin(0.0), length(vec2(0.0, 0.0)), 0.0))))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.3))), 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0)))), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)), false))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))) + 0.0)) > injectionSwitch.y)), false))))), false, true, true)))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-589.014)), (false ? _GLF_FUZZED(-9.3) : float(_GLF_FUZZED(-589.014)))), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))))), (true ? _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)) : _GLF_FUZZED(378.293)))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))))) : _GLF_FUZZED(-292.765)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))))))) / 1.0), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(_GLF_IDENTITY(0.0, min(0.0, 0.0)))) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-37.00) : _GLF_IDENTITY(0.0, (0.0) + sqrt(0.0))))), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), min(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), (_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))) - 0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)), false))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0, 1.0, cos(0.0))), (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.2)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))))), float(float(injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))) + 0.0)) > injectionSwitch.y)), false))))), false, true, true)))), false, false, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0)), clamp(max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0)), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0)), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(25.33) : _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), min(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), min(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), 0.0 + (dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)))))))), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), 0.0 + (float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x))), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.7))), cos(0.0)), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-589.014), (_GLF_FUZZED(-589.014)) / 1.0)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-118.008)), float(abs(1.0)), bool(true))))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)), false))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), max(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), float(mat2x4(float(float(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))) - 0.0))))) + 0.0)) > injectionSwitch.y)), false))))), false, true, true)))), false, false, true)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(step(float(-91490), 0.1)) : 1.0))))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-589.014)), 1.0 * (float(_GLF_FUZZED(-589.014)))), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))) : _GLF_FUZZED(68.80))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), max(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), float(_GLF_IDENTITY(mat4x3(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x3(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), max(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), max(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), max(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))))))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)), (true ? float(vec2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-589.014)), bool(false))), injectionSwitch.x, injectionSwitch.x), 1.0)) : _GLF_FUZZED(-1.2)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), clamp(float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), float(mat2(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), abs(0.0), 0.0, 0.0)))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0))), float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.4))), 1.0))) / 1.0))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-126.481)), _GLF_IDENTITY(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), min(float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), float(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))))), bool(true))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat4(0.5, 27.90, 1.9, 7197.4370, -8.2, 263.305, -6.8, -3.3, -3.2, 33.96, -2248.3568, 8.3, 82.26, 62.12, -40.74, -6.1))))), 1.0))))), 1.0))), 1.0, 1.0, sqrt(0.0), 1.0, abs(1.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)), false))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))) + 0.0)) > injectionSwitch.y)), false))))), false, true, true)))), false, false, true)), false)))) && true)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED((- injectionSwitch)), vec2(1.0, 1.0) * (true ? injectionSwitch : _GLF_FUZZED((- injectionSwitch)))))).x > injectionSwitch.y))))
                return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             continue;
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), true)))))) || false))))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, false, false))), (! (bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false)), bool(bvec2((_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, false, false))), (! (bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false)), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(343.633)), vec2(_GLF_FUZZED(27.95), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
            {
            }
           else
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         subgroupAll(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 0.0, determinant(mat3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch.x, 0.0, 0.0, determinant(mat3(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))) > injectionSwitch.y)), true))), false)))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           return;
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (! (bool(bvec3(false, false, false)))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
            {
             return;
            }
          }
         return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))))))) || false))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (bool(! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec2(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false)))))))) || false)), false, false), true))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))));
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 2614); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
            {
             return;
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), true && ((! ((injectionSwitch.x < injectionSwitch.y))))))) && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false)), (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))))
                  return;
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float((-8.1 > -2.9)))), vec2(_GLF_FUZZED(1400.3193), (injectionSwitch)[1]), bvec2(false, true))).y) * 1.0)))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-9947.5164, _GLF_IDENTITY(5.2, (5.2) / 1.0)).t), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(6.2)), max(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0])), _GLF_FUZZED(6.2)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), float(vec3(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], max(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(6.4))), (injectionSwitch)[0])), determinant(mat3(1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, log(1.0), 1.0)), abs(1.0)))), _GLF_FUZZED(_GLF_IDENTITY(6.2, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(6.2, clamp(6.2, 6.2, _GLF_IDENTITY(6.2, max(6.2, 6.2)))), abs(0.0), 1.0, 0.0), (true ? mat2(_GLF_IDENTITY(6.2, clamp(6.2, 6.2, _GLF_IDENTITY(6.2, max(6.2, 6.2)))), abs(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2(6.3, 5090.3032, 867.042, 687.114)))))))))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), false))).y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          break;
         break;
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (1 & 1))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     subgroupBarrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))))))
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1), ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 1)) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
  }
}
