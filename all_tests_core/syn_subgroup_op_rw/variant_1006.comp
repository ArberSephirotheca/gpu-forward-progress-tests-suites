#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) - 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))), ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) && true)))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true && (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! ((_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(62.46) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x4(float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))))), injectionSwitch)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sin(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))))))))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-6.2 * -960.247))), bool(false)))) && true)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(232.025) : injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(232.025) : injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(232.025) : injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).y, (false ? _GLF_FUZZED(232.025) : injectionSwitch.y)))))))))))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(232.025) : injectionSwitch.y, max(_GLF_IDENTITY(false ? _GLF_FUZZED(232.025) : injectionSwitch.y, max(false ? _GLF_FUZZED(232.025) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(232.025) : injectionSwitch.y, (false ? _GLF_FUZZED(-9.3) : false ? _GLF_FUZZED(232.025) : injectionSwitch.y)))), false ? _GLF_FUZZED(232.025) : injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(232.025) : injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(232.025) : injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(232.025) : injectionSwitch.y)))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), false || (false || (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) << 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) << 0u))), (1u & 1u)), min(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) << 0u))), (1u & 1u)), uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) << 0u))), (1u & 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((_GLF_IDENTITY(1u, (1u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), ((uint(2u))) + (0u | 0u)) >> 0u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), _GLF_IDENTITY((uvec3(uint(_GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (2u) + 0u) : _GLF_FUZZED(num_workgroup)))), 1u, 1u)) - uvec3(0u, 0u, 0u), ((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))))), uint(2u)))), workgroup_size), _GLF_IDENTITY((true ? _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (2u) + 0u) : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), _GLF_IDENTITY((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), clamp((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))))), uint(2u)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))))))), uint(2u)))))), workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (min(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) << 0u)) | 0u)), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), workgroup_size))), (min(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))) << 0u) : _GLF_FUZZED(167110u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), max(uvec3(uint(2u), 1u, 1u), uvec3(uint(2u), 1u, 1u)))) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))))))))), uint(2u)))), workgroup_size)) << 0u))) : _GLF_FUZZED(68021u)), ~ (~ ((true ? _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (2u) + 0u) : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), _GLF_IDENTITY((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), clamp((uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))))), uint(2u)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), _GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))))))), uint(2u)))))), workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (min(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) << 0u)) | 0u)), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)))))), uint(2u)))), workgroup_size))), (min(_GLF_IDENTITY(workgroup_size, (workgroup_size) * ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))) << 0u) : _GLF_FUZZED(167110u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (uvec3(uint(2u), 1u, 1u)) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), (_GLF_IDENTITY(uvec3(uint(2u), 1u, 1u), max(uvec3(uint(2u), 1u, 1u), uvec3(uint(2u), 1u, 1u)))) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))))))))), uint(2u)))), workgroup_size)) << 0u))) : _GLF_FUZZED(68021u))))))) * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_size * workgroup_id, 0u)), _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) | (uint(uvec2(workgroup_size * workgroup_id, 0u))))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u))), 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u)))))))), 0u | (min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u))), 0u + (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) * (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) & 1u)), uint(uvec2(workgroup_size * workgroup_id, 0u)))))))))))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id), ((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id)) ^ 0u) + 0u))), uint(uvec2(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u))) * workgroup_id, 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id, (workgroup_size * workgroup_id) + 0u))), uint(uvec2(workgroup_size * workgroup_id, 0u))), 0u)))))))) << 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) << 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) + (0 | 0)), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(float(uint(22228)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-40.55)), float((injectionSwitch)[0]), bool(true))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, false || (true)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), ~ (~ (int(2)))))) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(78.60)), float(injectionSwitch.y), bool(true)))))) || false) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))))) : subgroup_local_id, 0u | (false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-9643.8045, _GLF_IDENTITY(1178.3766, (true ? 1178.3766 : _GLF_FUZZED(-748.362)))), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2(mat2(1.0))), mat2(mat3(mat2(mat2(mat2(1.0))))))) * (vec2(-9643.8045, 1178.3766))))) : subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))))) : subgroup_local_id, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-9643.8045, _GLF_IDENTITY(1178.3766, mix(float(1178.3766), float(_GLF_FUZZED((-69.73 * (- 9.9)))), bool(false)))), mat2(1.0) * (vec2(-9643.8045, 1178.3766))))) : subgroup_local_id, (false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))))) : subgroup_local_id) | (false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))))) : subgroup_local_id))))), 0u | (false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))))) : subgroup_local_id)), 1u * (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))), min(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))), _GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))))))) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)), 0u | (false ? _GLF_FUZZED(packSnorm2x16(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0), (true ? mat3x4(_GLF_IDENTITY(vec2(-9643.8045, 1178.3766), mat2(1.0) * (vec2(-9643.8045, 1178.3766))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(-4694.7345, -2884.8148, 46.57, -3.3, -959.517, 3463.0406, -4.7, -791.496, 8.1, -460.066, -23.01, 301.560)))))))) : _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) << 0u))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(32791) : _GLF_IDENTITY(1, max(1, 1)))) < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED((_GLF_IDENTITY(6.2, (_GLF_IDENTITY(6.2, (false ? _GLF_FUZZED(exp(-8.5)) : 6.2))) / 1.0))) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-600.453)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(floor(-0.2)))), 1.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-600.453)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(floor(-0.2)))), 1.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((6.2)) : injectionSwitch.y))))), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(95515u))), vec2(_GLF_FUZZED(-4402.1838), _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), max(min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.9)), bool(false))))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), 1.0 * (length(vec3(0.0, 0.0, 0.0)))))))), float(mat2(float(vec2(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))))), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) > injectionSwitch.y)) || false), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, length(0.0), 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x, mix(float(_GLF_FUZZED(-553.934)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), mix(vec2(_GLF_FUZZED(4171.3546), _GLF_FUZZED(-22.12)), vec2(((injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(-92.54), _GLF_FUZZED(-81.17)), bvec2(false, false)))) + vec2(0.0, 0.0)), sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))[0], ((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), mix(vec2(_GLF_FUZZED(4171.3546), _GLF_FUZZED(-22.12)), vec2(((injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(-92.54), _GLF_FUZZED(-81.17)), bvec2(false, false)))) + vec2(0.0, 0.0)), sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))[0], ((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(569.674), _GLF_FUZZED(7.8)), bvec2(false, false)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(569.674), _GLF_FUZZED(7.8)), bvec2(false, false)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(569.674), _GLF_FUZZED(7.8)), bvec2(false, false)))))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x), float(_GLF_FUZZED(-4170.7465)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))).x), float(_GLF_FUZZED(-4170.7465)), bool(false))) / 1.0)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8.2), (_GLF_IDENTITY(_GLF_FUZZED(-8.2), 0.0 + (_GLF_FUZZED(-8.2)))) * 1.0))) : _GLF_FUZZED(22.48))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, length(0.0), 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x, mix(float(_GLF_FUZZED(-553.934)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), mix(vec2(_GLF_FUZZED(4171.3546), _GLF_FUZZED(-22.12)), vec2(((injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(-92.54), _GLF_FUZZED(-81.17)), bvec2(false, false)))) + vec2(0.0, 0.0)), sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))[0], ((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), mix(vec2(_GLF_FUZZED(4171.3546), _GLF_FUZZED(-22.12)), vec2(((injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(-92.54), _GLF_FUZZED(-81.17)), bvec2(false, false)))) + vec2(0.0, 0.0)), sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))[0], ((injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(569.674), _GLF_FUZZED(7.8)), bvec2(false, false)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(569.674), _GLF_FUZZED(7.8)), bvec2(false, false)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2((sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], (sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(569.674), _GLF_FUZZED(7.8)), bvec2(false, false)))))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x), float(_GLF_FUZZED(-4170.7465)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))).x), float(_GLF_FUZZED(-4170.7465)), bool(false))) / 1.0)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8.2), (_GLF_IDENTITY(_GLF_FUZZED(-8.2), 0.0 + (_GLF_FUZZED(-8.2)))) * 1.0))) : _GLF_FUZZED(22.48))), 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-8.2), min(true ? injectionSwitch.x : _GLF_FUZZED(-8.2), true ? injectionSwitch.x : _GLF_FUZZED(-8.2)))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(8.3) : (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8.2), float(mat2x4(_GLF_FUZZED(-8.2), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), clamp((false ? _GLF_FUZZED(8.3) : (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8.2), float(mat2x4(_GLF_FUZZED(-8.2), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(8.3) : (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8.2), float(mat2x4(_GLF_FUZZED(-8.2), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), ((false ? _GLF_FUZZED(8.3) : (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8.2), float(mat2x4(_GLF_FUZZED(-8.2), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) * 1.0), (false ? _GLF_FUZZED(8.3) : (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-8.2), float(mat2x4(_GLF_FUZZED(-8.2), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(-2.0)), float((false ? _GLF_FUZZED(8.3) : (true ? injectionSwitch.x : _GLF_FUZZED(-8.2)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), false || (bool(_GLF_IDENTITY(true, false || (true))))))))), mix(float(_GLF_FUZZED(-1.6)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-8.2), (false ? _GLF_FUZZED(-396.625) : true ? injectionSwitch.x : _GLF_FUZZED(-8.2)))), (false ? _GLF_FUZZED(8.3) : (true ? injectionSwitch.x : _GLF_FUZZED(-8.2)))))), bool(true))) : _GLF_FUZZED(22.48))) > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4034.1588 + _GLF_IDENTITY(48.19, min(_GLF_IDENTITY(48.19, clamp(48.19, 48.19, 48.19)), _GLF_IDENTITY(_GLF_IDENTITY(48.19, max(48.19, _GLF_IDENTITY(48.19, float(mat2x3(48.19, abs(0.0), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(float(mat4x3(48.19, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(-0.3)), float((0.0)), bool(true))) + 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat4x3(48.19, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) + _GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x3(48.19, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(mat4(_GLF_IDENTITY(0.0, (0.0) + 0.0), tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9316.1489))), 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_FUZZED(4.8), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(4.8, float(mat2(_GLF_IDENTITY(4.8, clamp(4.8, 4.8, _GLF_IDENTITY(4.8, float(mat2(4.8, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(4.8), _GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0), 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_FUZZED(4.8), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-97.07), clamp(true ? 0.0 : _GLF_FUZZED(-97.07), _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-97.07), (false ? _GLF_FUZZED(3.5) : true ? 0.0 : _GLF_FUZZED(-97.07))), true ? 0.0 : _GLF_FUZZED(-97.07))))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, sin(0.0), 1.0, 1.0, abs(1.0), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(sqrt(0.0), 0.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) / abs(1.0))))), dot(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.9) : 0.0)), 0.0), vec4(sqrt(0.0), 0.0, 1.0, cos(0.0)))), 1.0))), 0.0)))), _GLF_IDENTITY(_GLF_FUZZED(4.8), (_GLF_FUZZED(4.8)) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(4.8), (_GLF_FUZZED(4.8)) * 1.0)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(1 & 1, clamp(1 & 1, _GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1))) - 0), 1 & 1))))], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(1, int(ivec4(1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) & -53178), 0, 1)))])) : _GLF_FUZZED(-5.2))))), (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(true, true), false, false))))), true))).x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.x : _GLF_FUZZED(-8.2))) : _GLF_FUZZED(22.48))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(false, false || (false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), 4), (false ? _GLF_FUZZED(-36683) : clamp(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4)), 4)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), max(injectionSwitch, injectionSwitch)).y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), false || (! (false || (false)))))))))), ! (! (! (! ((_GLF_IDENTITY(false, false || (false)))))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, false || (false))))), ! (! (! (! ((_GLF_IDENTITY(false, false || (false))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))))))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))), ! (! ((_GLF_IDENTITY(false, false || (false)))))))) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))), ! (! ((_GLF_IDENTITY(false, false || (false)))))))) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
