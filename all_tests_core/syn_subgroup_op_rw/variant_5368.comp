#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((bool(bool(! (_GLF_IDENTITY(false, false || (false)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && ((bool(bool(! (_GLF_IDENTITY(false, false || (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(log(1.0)), 1.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) - 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(vec2(0.4, 5.8)))).y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((830.942 / -510.534))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-73.64) : injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && _GLF_IDENTITY(true, (true) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(3.1, _GLF_IDENTITY(1.6, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0))))), (float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0)))))) / 1.0))), (vec2(3.1, _GLF_IDENTITY(1.6, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.6, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - length(vec2(0.0, 0.0))), 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0))))), (float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0)))))) / 1.0)))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(vec2(3.1, _GLF_IDENTITY(1.6, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0))))), (float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0)))))) / 1.0))), (vec2(3.1, _GLF_IDENTITY(1.6, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0))))), (float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0)))))) / 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(3.1, _GLF_IDENTITY(1.6, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0))))), (float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0)))))) / 1.0))), (vec2(3.1, _GLF_IDENTITY(1.6, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0))))), (float(_GLF_IDENTITY(mat2(1.6, cos(0.0), 0.0, 1.0), mat2(mat3x2(mat2(1.6, cos(0.0), 0.0, 1.0)))))) / 1.0)))) / vec2(1.0, 1.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && true, bool(bvec2((_GLF_IDENTITY(true, (true) && true)) && true, true))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && true, bool(bvec2((_GLF_IDENTITY(true, (true) && true)) && true, true))), true, false)), false || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && true, bool(bvec2((_GLF_IDENTITY(true, (true) && true)) && true, true))), true, false))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) && true)))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0)))))).x > injectionSwitch.y, true, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), false, false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9806.2306)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(0u, 0u, 0u) | ((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))))), (~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))), uvec4(1u, 1u, 1u, 1u) * (uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))))))), (_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(uvec4(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(50961u, 147368u, 167191u)) : uvec3(uvec3(gl_NumWorkGroups)))))))))))), uvec3(uvec4((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))) << 0u))))))) - uvec3(0u, 0u, 0u))) | (~ (max(gl_NumWorkGroups, gl_NumWorkGroups)))), min(_GLF_IDENTITY(~ (max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(0u, 0u, 0u) | ((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))))), (~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))), uvec4(1u, 1u, 1u, 1u) * (uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))))))), (_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(uvec4(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(50961u, 147368u, 167191u)) : uvec3(uvec3(gl_NumWorkGroups)))))))))))), uvec3(uvec4((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))) << 0u))))))) - uvec3(0u, 0u, 0u))) | (~ (max(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(~ (max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(0u, 0u, 0u) | ((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))))), (~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))), uvec4(1u, 1u, 1u, 1u) * (uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))))))), (_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(uvec4(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(50961u, 147368u, 167191u)) : uvec3(uvec3(gl_NumWorkGroups)))))))))))), uvec3(uvec4((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))) << 0u))))))) - uvec3(0u, 0u, 0u))) | (~ (max(gl_NumWorkGroups, gl_NumWorkGroups)))))), (_GLF_IDENTITY(~ (max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(_GLF_IDENTITY(uvec3(5u), (_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) + (uvec3(5u)))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) >> (0u | (1u ^ 1u))))))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))), (_GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))) + uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), max((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(179220u, 76031u, 39986u)))), uvec3(uvec3(gl_NumWorkGroups))))))), _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), min(uvec3(5u), uvec3(5u))), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(0u, 0u, 0u) | ((max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u)))), (_GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))) >> uvec3(0u, 0u, 0u)))))) + (gl_NumWorkGroups)), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))))), (~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) << uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), uvec3(_GLF_IDENTITY(uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 1u, (1u | _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u))))), 1u), (uvec4(1u, 1u, (1u | _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u))))), 1u)) - uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))), _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)))), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ (uvec4(1u, 1u, 1u, 1u) * (uvec4(~ (max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, uint(uvec4((1u) >> 0u, 1u, (1u | (0u ^ 1u)), 0u)))))), _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) : _GLF_FUZZED(subgroup_id))) | 1u), 1u)), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u))))))))), (_GLF_IDENTITY(~ (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(uvec4(~ _GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(50961u, 147368u, 167191u)) : uvec3(uvec3(gl_NumWorkGroups)))))))))))), uvec3(uvec4((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u), (true ? _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | 0u)))) | (1u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), ((_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) | 1u)) ^ 0u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (true ? clamp(0.0, 0.0, 0.0) : _GLF_FUZZED(389.387))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), 1.0 * (clamp(0.0, 0.0, 0.0))), clamp(0.0, 0.0, 0.0))), float(vec3(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), max(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), 1.0 * (clamp(0.0, 0.0, 0.0))), clamp(0.0, 0.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))))), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY((1u | 1u), 0u | ((1u | 1u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ ((1u | 1u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY((1u) >> 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))) / 1u))), 0u | (uint(uvec4(1u, 1u, (1u | 1u), 1u))))) >> 0u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, (1u | 1u), 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 1u, _GLF_IDENTITY((1u | 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ ((1u | 1u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u) >> 0u, min((1u) >> 0u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u) >> 0u, min((1u) >> 0u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u)))) | ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u) >> 0u, min((1u) >> 0u, (1u) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec4(0u, 1u, (0u | 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : (1u) >> 0u))) >> 0u))))) / 1u))), 0u | (uint(uvec4(1u, 1u, (_GLF_IDENTITY(1u | 1u, max(1u | 1u, _GLF_IDENTITY(1u | 1u, 0u ^ (1u | 1u))))), 1u))))) >> 0u))) << 0u))))))) - uvec3(0u, 0u, 0u))) | (~ (max(gl_NumWorkGroups, gl_NumWorkGroups))))) - uvec3(0u, 0u, 0u))), min((_GLF_IDENTITY(~ (max(gl_NumWorkGroups, gl_NumWorkGroups)), (~ (max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))))))) | (~ (max(gl_NumWorkGroups, gl_NumWorkGroups))))), (_GLF_IDENTITY(~ (max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))), uvec3(_GLF_IDENTITY(uvec3(max(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), (uvec3(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))))) + (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(179982u, _GLF_IDENTITY(83191u, (83191u) + 0u), 198649u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_NumWorkGroups)))))) << uvec3(0u, 0u, 0u))))))))))))) / uvec3(1u, 1u, 1u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), uvec3(0u, 0u, 0u) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))))))))), ((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) - uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) << 0u))))), ~ (~ (uvec4(_GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))), _GLF_IDENTITY(((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), (((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))) ^ uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ (((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))))) >> uvec3(0u, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(5u)))) >> 0u) : _GLF_FUZZED(33793u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(5u)))) >> 0u) : _GLF_FUZZED(33793u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(5u)))) >> 0u) : _GLF_FUZZED(33793u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))), (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)) * (~ _GLF_IDENTITY((_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))))), uvec3(_GLF_IDENTITY(uvec3(max(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))), (uvec3(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(16260u, 101354u, 29346u)) : uvec3(0u, 0u, 0u))), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_NumWorkGroups))), (false ? _GLF_FUZZED(uvec3(179982u, 83191u, 198649u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_NumWorkGroups))), uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u) ^ (uvec3(0u, 0u, 0u) | (uvec3(uvec3(gl_NumWorkGroups)))))) << uvec3(0u, 0u, 0u))))))))))))) / uvec3(1u, 1u, 1u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), uvec3(0u, 0u, 0u) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ (min(gl_NumWorkGroups, gl_NumWorkGroups)), (~ (min(gl_NumWorkGroups, gl_NumWorkGroups))) | (~ (min(gl_NumWorkGroups, gl_NumWorkGroups))))))), uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))))))), ((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), max(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))))))))) - uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), uvec3(0u, 0u, 0u) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ (min(gl_NumWorkGroups, gl_NumWorkGroups)), (~ (min(gl_NumWorkGroups, gl_NumWorkGroups))) | (~ (min(gl_NumWorkGroups, gl_NumWorkGroups))))))), uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))))))), ((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), max(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))))))))) - uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), uvec3(0u, 0u, 0u) | (max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ (min(gl_NumWorkGroups, gl_NumWorkGroups)), (~ (min(gl_NumWorkGroups, gl_NumWorkGroups))) | (~ (min(gl_NumWorkGroups, gl_NumWorkGroups))))))), uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))))))))), ((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), max(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))))))))) - uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << 0u)), max((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << 0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << 0u)), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) << 0u)))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) << 0u)), _GLF_IDENTITY(0u, min(0u, 0u)) | (uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) << 0u))))))), ~ (~ (uvec4(_GLF_IDENTITY((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(126439u, 35037u, 109522u)) : max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))), uvec3(0u, 0u, 0u) | ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), (((max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u)))), uvec3(0u, 0u, 0u) ^ (((max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))))) >> uvec3(0u, 0u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (false ? _GLF_FUZZED(uvec3(90482u, 30758u, 136915u)) : (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) / 1u)) | 0u)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(5u)))) >> 0u) : _GLF_FUZZED(33793u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))) | (~ (max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 1u))) : _GLF_FUZZED((subgroup_local_id & subgroup_size)))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u))), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) + (subgroup_local_id))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> (0 & 44728)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     for(int _injected_loop_counter = (1 | _GLF_IDENTITY(1, min(1, 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1), ! (_GLF_IDENTITY(! (_injected_loop_counter != 0), (! (_injected_loop_counter != 0)) && true)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          return;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1285.9309, -402.340)))).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
          continue;
         break;
        }
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-978.599))), injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false)), (injectionSwitch.x > injectionSwitch.y) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) || false))))))), bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[virtual_gid], read, 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (bool(! (! (_GLF_IDENTITY(false, true && (false)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-353.416, -8397.4231)) : injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), bool(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false)))), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), true, true), true))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, false)), true, true, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true)))))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true, true)), (bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))) && true)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
