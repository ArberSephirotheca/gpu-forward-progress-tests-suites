#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base;
 uvec3 GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     do
      {
       do
        {
         GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w = subgroup_id;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), true, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))) && true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.6, 6.8)))).y)) && (_GLF_IDENTITY(true, ! (! (true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(true, ! (! (true)))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true))))))))))))))))))))) || false)), true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(true, ! (! (true)))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true))))))))))))))))))))) || false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), true)))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), true)))))), false)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), true)))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), true)))))), false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true))))))))), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), true))))))))))), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec4(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), (! (_GLF_IDENTITY((false), false || ((false))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), (bool(bool(false || (false)))) && true))), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))), (false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))))))))))))))) && true))))), true, true, false))) && true)) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))), true, _GLF_IDENTITY(false, ! (! (false))), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))), true, _GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false || ((false)), ! (! (false || ((false))))), true, _GLF_IDENTITY(false, ! (! (false))), false)))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), false || (! (_GLF_IDENTITY((false), false || ((false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), false || (! (_GLF_IDENTITY((false), false || ((false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), false || (! (_GLF_IDENTITY((false), false || ((false)))))))))), false))))))))))))) || false))));
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) || false)) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))) || false)) && true))), false || (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))) || false)) && true))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true))) && true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))))))
      {
       GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y = subgroup_local_id;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) >> (-65071 & 0))), (int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) >> (-65071 & 0)))) >> 0)))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-67666), (_GLF_FUZZED(-67666)) << 0) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.x = num_workgroup;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.y = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.x;
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) * workgroup_id;
 do
  {
   _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y = workgroup_base, 0u | (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y = workgroup_base));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-90245) : 1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_FUZZED((8.0 + vec2(10.86, 10.22))) : injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_FUZZED((8.0 + vec2(10.86, 10.22))) : injectionSwitch)).y))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.z = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y;
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).w * subgroup_size;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((0 | 0) ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0))) + 0)), int(3)))), min(_GLF_IDENTITY(((0 | 0) ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0))) + 0)), int(3)))), (((0 | 0) ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0))) + 0)), int(3))))) >> (0 | 0)), ((0 | 0) ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0)), (int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(int(_GLF_IDENTITY((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)), ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((3) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), exp(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 3, 3)), _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3))), (min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (3) | (3)))), (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 3, 3)), _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0)))), _GLF_IDENTITY(3, (3) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(320.231, 525.445)))).x))))), 3, 3)))) * _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) & 1), clamp((_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1), (_GLF_IDENTITY(1, max(1, 1)) & 1)))) : _GLF_FUZZED(72414))))), 0, 0))) + 0)), int(3))))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z = _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 uint virtual_gid = GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.z + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, min(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z)))) + GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y;
 uint next_virtual_gid = GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.z + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z + ((_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, (GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base) >> uvec3(0u, 0u, 0u)), GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base)), uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, (GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base) >> uvec3(0u, 0u, 0u)), GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base)), 1u)))) / uvec3(1u, 1u, 1u)).y + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x = next_virtual_gid;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], 4, 64, 2);
 GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x = read;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if((GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y % 2) == _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), ((_GLF_IDENTITY(0, (0) / (1 | 0)))) - 0))) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - 0), 1, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - 0), 1, 1), (ivec3(_GLF_IDENTITY(0, (0) - 0), 1, 1)) << ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), int(int(_GLF_IDENTITY(((0)), clamp(((0)), ((0)), _GLF_IDENTITY(((0)), ~ (~ (((0)))))))))) | (_GLF_IDENTITY((0), ((0)) - 0))) | (_GLF_IDENTITY(0, max(0, 0))))), clamp((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) - 0))) | (_GLF_IDENTITY(0, max(0, 0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) - 0))) | (_GLF_IDENTITY(0, max(0, 0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) - 0))) | (_GLF_IDENTITY(0, max(0, 0)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(990.790), _GLF_FUZZED(1.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false, false)))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5128.0945), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5128.0945), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5128.0945), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5128.0945), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5128.0945), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5128.0945), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) - 0))) ^ (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   subgroupAll(false);
                  }
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x], uint(1), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)), true && ((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)))), true, true, true))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true))) || false))
        {
        }
       else
        {
         do
          {
           do
            {
             do
              {
               subgroupAll(false);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
        }
      }
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (_GLF_IDENTITY(4, (4) | (4)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) / 1)))))), (1 * (4)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), (1 * (4)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), (1 * (4)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), (1 * (4)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)), _GLF_IDENTITY(1 * (4), (1 * (4)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))))), 4), (min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))))), 4)) | (min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))))), 4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1 * (4), (_GLF_IDENTITY(1 * (4), int(int(_GLF_IDENTITY(1 * (4), int(ivec4(1 * (4), 0, 0, 0))))))) / 1), (1 * (4)) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-89960) : 64)), 4);
    }
  }
 for(int _injected_loop_counter = (0 & -46184); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6958.7388) : injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(true, (true) && true) && ((true) || false))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, ((true) || false) && _GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY((true) || false, false || (_GLF_IDENTITY((true) || false, ((true) || false) && true))))))), true, false)), true, true, false))), false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           do
            {
             subgroupBarrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8161.0205), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-275.251)), bvec2(true, false))).x)) > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (true)), true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || ((true)))), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || ((true)))), true)))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || ((true)))), true)))), false))))))), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (true)), true))))), false, false)), true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true))))), false, false)), true)), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true))))), false, false)), true)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true))))), false, false)), true)), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true))))), false, false)), true)), true), true)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true))))), false, false)), true)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true))))), false, false)), true)), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), true))))), false, false)), true)), true), true)))))))), false)))))))), false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bool(false))), false, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))), false, true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))), false, true)))))) || false), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - _GLF_IDENTITY(dot(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (true && (! (false))), true && (! (true && (! (false)))))))))), true && (false)))))))))))), false, true))))), true))) || false), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), false, false))), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), false, false))), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), false, true))))), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, true))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, true))))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, true))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, true))))), true))), true)))))))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0)))).x < injectionSwitch.y)), false))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true))))), true)))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true)), false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))))) || false), true)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))))))))), ! (! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), (! ((! (_GLF_WRAPPED_IF_FALSE(false))))) && true)), ! (! (! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))), false || ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), (! ((! (_GLF_WRAPPED_IF_FALSE(false))))) && true)), ! (! (! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ((! (_GLF_WRAPPED_IF_FALSE(false)))) || false))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false, (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false, bool(bool((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false)))) || false)), true)))), true, false)))))))))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))))) || false), true)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))))))))), ! (! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), (! ((! (_GLF_WRAPPED_IF_FALSE(false))))) && true)), ! (! (! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))), false || ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), (! ((! (_GLF_WRAPPED_IF_FALSE(false))))) && true)), ! (! (! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ((! (_GLF_WRAPPED_IF_FALSE(false)))) || false))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false, (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false, bool(bool((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false)))) || false)), true)))), true, false)))))))))))))))))))), ((_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))))) || false), true)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))))))))), ! (! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), (! ((! (_GLF_WRAPPED_IF_FALSE(false))))) && true)), ! (! (! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))), false || ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), (! ((! (_GLF_WRAPPED_IF_FALSE(false))))) && true)), ! (! (! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), true, false)))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ((! (_GLF_WRAPPED_IF_FALSE(false)))) || false))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false), true)))), bool(bvec3(! ((bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false, (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false, bool(bool((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))))))))) || false)))) || false)), true)))), true, false))))))))))))))))))))) || false))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
          {
           atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) >> 0u)], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6951.6148)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(5.1))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec4(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6951.6148)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(5.1))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6951.6148)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(5.1))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6951.6148)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(5.1))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u | (uint(uvec4(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
