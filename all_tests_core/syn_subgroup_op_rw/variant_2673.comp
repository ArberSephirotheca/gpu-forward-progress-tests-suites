#version 460
struct _GLF_struct_2 {
 uvec4 _f0;
 uvec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_1 {
 bool _f0;
 mat2x3 _f1;
 ivec2 _f2;
 bvec4 _f3;
 ivec2 _f4;
 uvec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 vec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 mat4x3 _f4;
 uint subgroup_id;
 uvec3 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat4x3 _f1;
 uvec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(ivec3(1), vec3(1.0), _GLF_struct_0(ivec4(1), mat2x3(1.0)), _GLF_struct_1(true, mat2x3(1.0), ivec2(1), bvec4(true), ivec2(1), uvec2(1u), mat2x4(1.0)), mat4x3(1.0), gl_SubgroupID, uvec3(1u), _GLF_struct_2(uvec4(1u), uvec2(1u), mat3(1.0))), mat4x3(1.0), uvec4(1u));
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_4._f0.subgroup_id * GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w;
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y = subgroup_base;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y + GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.y + ((GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.w);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.x = read;
 if((GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.z % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], GLF_merged4_0_1_4_1_1_13_2_1_17_3_1_13readsubgroup_basesubgroup_local_idsubgroup_size.x, 4, 64, 4);
}
