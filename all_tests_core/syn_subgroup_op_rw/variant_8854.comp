#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ _GLF_IDENTITY((~ (7)), int(ivec3((~ (7)), 0, 0))))), _GLF_IDENTITY(int(7), 1 * (int(7))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, ~ (~ (7)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0)) - mat4x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.2) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-2.6))), 0.0, 0.0, 0.0))))) - 0.0), injectionSwitch.x))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(97416) : _injected_loop_counter)) > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(max(416.558, -467.940)))), injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(true && (bool(bvec4(false, true, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(bvec4(false, true, true, false))), false || (true && (bool(bvec4(false, true, true, false)))))), (bool(_GLF_IDENTITY(true && (bool(bvec4(false, true, true, false))), false || (true && (bool(bvec4(false, true, true, false))))))) && true)))))))))) && true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(true && (bool(bvec4(false, true, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(bvec4(false, true, true, false))), false || (true && (bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), true, false)))))), (bool(_GLF_IDENTITY(true && (bool(bvec4(false, true, true, false))), false || (true && (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false), true, true, false))))))) && true)))))))))) && true)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(-44965)))) | 0))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, true)))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_injected_loop_counter)) != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ((_GLF_IDENTITY(0u, min(0u, 0u)))) + 0u) - 0u) ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), min(uint(uvec3(workgroup_id, 1u, 0u)), uint(uvec3(workgroup_id, 1u, 0u)))), min(_GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), min(uint(uvec3(workgroup_id, 1u, 0u)), uint(uvec3(workgroup_id, 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), min(uint(uvec3(workgroup_id, 1u, 0u)), uint(uvec3(workgroup_id, 1u, 0u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), min(uint(uvec3(workgroup_id, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) << 0u))), 0u)), uint(uvec3(workgroup_id, 1u, 0u))))), min(uint(_GLF_IDENTITY(uint(uvec3(workgroup_id, 1u, 0u)), min(uint(uvec3(workgroup_id, 1u, 0u)), uint(uvec3(workgroup_id, 1u, 0u))))), uint(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 1u, 0u)), min(uint(uvec3(workgroup_id, 1u, 0u)), uint(uvec3(workgroup_id, 1u, 0u))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u)))) ^ 0u)) ^ 0u))) | (0u ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 1u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u))))) | (0u ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 1u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u))))) | (_GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 1u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u))))), 0u ^ ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, 0u)))))))) / 1u) | _GLF_IDENTITY((0u ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 1u, 0u))))), ((0u ^ (_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 1u, 0u)))))) * 1u)) + 0u)) << 0u)) + 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (int(_GLF_ONE(_GLF_IDENTITY(1.0, float(float(1.0))), injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(7618)))), int(6)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)) - tan(0.0)), cos(tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.6)), float(0.0), bool(true))))) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((8.8 * 6732.9079))), bool(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)) || false)))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
           for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec2(int(4), 1))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), max(int(5), int(5)))) >> 0), 0)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u))))) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), uint(3u)))))), (_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), subgroup_base))) | 0u))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u >> _GLF_IDENTITY(uint(1u), uint(1u))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_base, workgroup_base, -14885, _GLF_IDENTITY(37795, 0 ^ (37795)))) : workgroup_base + subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)), min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u, max(0u, 0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) - 0u), (buf[virtual_gid]) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * _GLF_IDENTITY(1u, 0u | (1u))), clamp(0u, 0u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(0u ^ 0u, max(0u ^ 0u, 0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) ^ 0u)))))), max((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)) : _GLF_FUZZED(workgroup_base)))), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)) : _GLF_FUZZED(workgroup_base))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)) : _GLF_FUZZED(workgroup_base))))))))), 1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), max((1u), (1u))))), clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_local_id))), (0u ^ 0u) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))), (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) | (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))))))))), uint(3u))))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, 0u))))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)), 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, (3u) - 0u)))))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(197042u) : 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << 0u)), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u)))), (~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))))) | 0u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u)), (clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u))))))), 1u, 1u)) : _GLF_FUZZED(workgroup_base)))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), max((1u), (1u))))), clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_local_id))), (0u ^ 0u) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))), (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) | (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))))))))), uint(3u))))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, 0u))))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)), 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, (3u) - 0u)))))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(197042u) : 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << 0u)), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u)))), (~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))))) | 0u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u)), (clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u))))))), 1u, 1u)) : _GLF_FUZZED(workgroup_base)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), max((1u), (1u))))), clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_local_id))), (0u ^ 0u) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))), (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) | (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))))))))), uint(3u))))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, 0u))))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)), 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, (3u) - 0u)))))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(197042u) : 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << 0u)), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u)))), (~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))))) | 0u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u)), (clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u))))))), 1u, 1u)) : _GLF_FUZZED(workgroup_base)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), max((1u), (1u))))), clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_local_id))), (0u ^ 0u) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))), (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) | (~ (uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))))))))))), uint(3u))))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, 0u))))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)), 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(_GLF_IDENTITY(3u, (3u) | (_GLF_IDENTITY(3u, (3u) - 0u)))))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(197042u) : 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << 0u)), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u)))), (~ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))))) | 0u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u)), (clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u))))))), 1u, 1u)) : _GLF_FUZZED(workgroup_base))))))) / 1u)))))))))), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u))))) >> 0u) * _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u | (1u), 1u * (0u | (1u)))) | (0u | (1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), uint(uvec3((1u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u))))) | 0u))))), clamp(_GLF_IDENTITY(0u, (0u) | (0u & 150764u)), 0u, 0u))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)))))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max((0u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), min((0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u)), max(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u)))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u))))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), uint(3u))), (~ (_GLF_IDENTITY(uint(3u), uint(3u)))) | 0u))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * uvec4(1u, 1u, 1u, 1u)), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * uvec4(1u, 1u, 1u, 1u)), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * uvec4(1u, 1u, 1u, 1u)), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) << (1u ^ 1u)), (true ? _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) ^ 0u)) : _GLF_FUZZED(subgroup_size))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 0u, (0u | 0u), 0u))), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (0u)), 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (max((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u))))), 1u))), _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), 1u, 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5.5, (_GLF_IDENTITY(-5.5, (-5.5) - 0.0)) * 1.0)) : _GLF_ONE(1.0, injectionSwitch.y)))))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(uint(uint(3u)))), uint(3u)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) << 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) << 0u))), 0u | (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) << 0u)))))), 0u + (~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) << 0u))), 0u | (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) << 0u)))))))))), 1u, _GLF_IDENTITY(0u, 0u | (0u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), tan(0.0), 1.0))), injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))) + uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-26.63)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))))), _GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(3u)), uint(uint((false ? _GLF_FUZZED(subgroup_size) : uint(3u)))))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), max(_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(3u)), uint(uint((false ? _GLF_FUZZED(subgroup_size) : uint(3u)))))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ~ (~ ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(3u)), uint(uint((false ? _GLF_FUZZED(subgroup_size) : uint(3u)))))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))), _GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(3u)), uint(uint((false ? _GLF_FUZZED(subgroup_size) : uint(3u)))))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), max(_GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(3u)), uint(uint((false ? _GLF_FUZZED(subgroup_size) : uint(3u)))))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(3u)), uint(uint((false ? _GLF_FUZZED(subgroup_size) : uint(3u)))))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(3u)), uint(uint((false ? _GLF_FUZZED(subgroup_size) : uint(3u)))))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))) + uvec4(0u, 0u, 0u, 0u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), 0u ^ ((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)))))), 0u + (~ (_GLF_IDENTITY((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), 0u ^ ((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)))))))))), 0u, (195339u & (59306u & 0u)), 0u)), 1u * (uint(uvec4(_GLF_IDENTITY((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), 0u ^ ((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)))))), 0u + (~ (_GLF_IDENTITY((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))), 0u ^ ((uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)))))))))), 0u, (195339u & (59306u & 0u)), 0u))))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u)), min(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) ^ 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u), ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(_GLF_IDENTITY(3u, max(3u, 3u)))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(3u, max(3u, 3u)))), max((uint(_GLF_IDENTITY(3u, max(3u, 3u)))), (uint(_GLF_IDENTITY(3u, max(3u, 3u)))))), (uint(_GLF_IDENTITY(3u, max(3u, 3u)))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)))), ~ (~ (_GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))))), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(next_virtual_gid, uvec3(138169u, 136418u, 92743u))) : _GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u)), 1u * (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))))))), _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec4(102409u, 61378u, 129460u, 161628u)[1]) : 0u))), clamp(_GLF_IDENTITY((0u ^ 0u), uint(uint((0u ^ 0u)))), (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(workgroup_id)))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max((uint(3u)), _GLF_IDENTITY((uint(3u)), ((uint(3u))) >> 0u))) | (uint(3u))), uint(3u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 3u))), (uint(3u)) | (_GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u) : _GLF_FUZZED(subgroup_id))))), uint(3u)))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)), (true ? uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> uvec4(0u, 0u, 0u, 0u)), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u ^ (3u))), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), exp(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0))))))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u), min((0u ^ 0u), (0u ^ 0u))), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | 0u))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) * 1u))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * uvec4(1u, 1u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))), 0u | (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(next_virtual_gid)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec4(uint(3u), 0u, 0u, 0u), ~ (~ (uvec4(uint(3u), 0u, 0u, 0u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? _GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(uvec4(199698u, 175624u, 52492u, 36166u)))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | 0u), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(~ ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | (~ ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY((0u ^ 0u), clamp((0u ^ 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0))), 1.0)), injectionSwitch.y))), _GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec4(0u, 0u, 0u, 0u) + ((uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_size) : uint(3u))), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + uvec4(0u, 0u, 0u, 0u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) - (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) * 1u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec4(0u, 0u, 0u, 0u)))))))), _GLF_IDENTITY((0u ^ 0u), clamp(_GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) + 0u), (0u ^ 0u), (0u ^ 0u))) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))))))), max((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) / 1u)), (_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), 0u ^ (_GLF_IDENTITY(uint(3u), 0u + (uint(3u))))), uint(3u)))) | (uint(3u))), (uint(3u)) | (uint(3u))), uint(3u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 1u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (workgroup_base), (workgroup_base))) ^ 0u))))))))))))) * ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), 4, 64, 2);
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), max((1u), (1u))), (1u))) | (1u))))) % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) - 0), (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 1)))) | (0)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2))) == 0, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2))) == 0, false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2))) == 0, false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, 1u)))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / 1u) / 1u)) % _GLF_IDENTITY(2, ~ (~ (2)))))) == 0) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8384.3853, 352.898)) : injectionSwitch)), injectionSwitch, injectionSwitch)).y))));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec4((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-14.83), _GLF_FUZZED((- -47.50))), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true) ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2502.6685)), bvec2(true, false)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-716.798)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ 0)), int(7)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(485.412)))))));
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          return;
         atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), 0 + ((4))) + 0, (true ? _GLF_IDENTITY(_GLF_IDENTITY((4), (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY((4), int(ivec3((4), 0, 0))))) + 0, ((4) + 0) | 0) : _GLF_FUZZED(-74242)))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(0, max(0, 0)) ^ 0) | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), (0 ^ 0) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((0 ^ 0) | (4), (false ? _GLF_FUZZED(59480) : _GLF_IDENTITY((0 ^ 0) | (4), ((0 ^ 0) | (4)) | ((0 ^ 0) | (4)))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY((0 ^ 0), min((0 ^ 0), _GLF_IDENTITY((0 ^ 0), clamp((0 ^ 0), (0 ^ 0), (0 ^ 0))))) | (4)), _GLF_IDENTITY(4, (0 ^ 0) | (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) | (4)), min(_GLF_IDENTITY(4, (0 ^ 0) | (4)), _GLF_IDENTITY(4, (0 ^ 0) | (4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) | (4)), min(_GLF_IDENTITY(4, (0 ^ 0) | (4)), _GLF_IDENTITY(4, (0 ^ 0) | (4)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (0 ^ 0) | (4)), min(_GLF_IDENTITY(4, (0 ^ 0) | (4)), _GLF_IDENTITY(4, (0 ^ _GLF_IDENTITY(0, max(0, 0))) | (4)))))))))));
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), true && (true && ((false)))))) && true) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(53.52) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.7, 13.10)) : injectionSwitch)).y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.06), _GLF_FUZZED(-44.78)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0]))), float(_GLF_FUZZED(float(-8654))), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       subgroupAll(false);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0)) | 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ 0)), int(0))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), min(0, 0))), clamp((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 + (0))))), (_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(0, min(0, 0))))) ^ 0), 0))), int(0))), (0 >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))) / _GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), (int(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) | (0 >> _GLF_IDENTITY(int(5), int(5)))))) / _GLF_IDENTITY(1, clamp(1, 1, 1)))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), ~ (~ (1 << _GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2))), 1)), max(int(_GLF_IDENTITY(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(2, 2)))), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter)))) >> _GLF_IDENTITY(int(2), int(2))), 1), ivec3(0, 0, 0) + (ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(2, 2)))), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter)))) >> _GLF_IDENTITY(int(2), int(2))), 1)))), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 ^ 0) | (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) * 1), 1)), (int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 ^ 0) | (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) * 1), 1))) * 1)))), 0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-52494))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), clamp(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) / 1))), int(0)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) ^ 0))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-47475)))), int(2))), 1)), max(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1)), int(ivec3(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)) >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))), 0 >> _GLF_IDENTITY(int(0), int(0)))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), clamp(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) / 1))), int(0)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) ^ 0))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-47475)))), int(2))), 1)), max(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1)), int(ivec3(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)) >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))), 0 >> _GLF_IDENTITY(int(0), int(0)))))), max(~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), clamp(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) / 1))), int(0)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) ^ 0))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-47475)))), int(2))), 1)), max(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1)), int(ivec3(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)) >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))), 0 >> _GLF_IDENTITY(int(0), int(0)))))), ~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), clamp(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) / 1))), int(0)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) ^ 0))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-47475)))), int(2))), 1)), max(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1)), int(ivec3(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)) >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))), 0 >> _GLF_IDENTITY(int(0), int(0))))))))) >> 0), (~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) >> 0))), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(0)))), clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), max((1 << _GLF_IDENTITY(int(2), int(2))), (1 << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), 1)), max(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, ~ (~ (2))), 0, 0, 1)), int(ivec2(int(ivec4(_GLF_IDENTITY(2, ~ (~ (2))), 0, 0, 1)), 0))))))), 1)), int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))), 0 >> _GLF_IDENTITY(int(0), int(0))))))) | (~ ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), clamp(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, max(0, 0))))), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, max(0, 0))))), 0)), (int(ivec2(int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, max(0, 0))))), 0))) << 0)), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) >> 0)), int(0)), _GLF_IDENTITY(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (false ? _GLF_FUZZED(-69875) : ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), 1 * (~ (_GLF_IDENTITY(1, (1) | (1))))))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), 1)), max(int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), int(ivec3(int(2), 1, 1))), int(2))), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(-56688)))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, (2) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), (int(ivec3(_GLF_IDENTITY(2, (2) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))) | (int(ivec3(_GLF_IDENTITY(2, (2) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))))))), 1)), int(ivec3(0 >> _GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 1))))), 0 >> _GLF_IDENTITY(int(0), int(0)))))))))))), (0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (true ? clamp(0, 0, 0) : _GLF_FUZZED(_injected_loop_counter)))) / 1))), ((_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (_GLF_IDENTITY(clamp(0, 0, 0), (true ? clamp(0, 0, 0) : _GLF_FUZZED(_injected_loop_counter)))) / 1)))) | 0))))))))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), false)), (bool(bvec2((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), false))) && true))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), false)), (bool(bvec2((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), false))) && true)))))) || false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     barrier();
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             break;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))) || false), bool(_GLF_IDENTITY(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) && true)), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))) || _GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3(! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, false)), false))))))))))))))))))) || false), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false)))), true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false)))), true))))))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.9)), bool(false))), _GLF_IDENTITY(0.0, (0.0) / 1.0))))))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(0.0), 0.0)), mix(_GLF_IDENTITY(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(644.770)), (vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(644.770))) - sqrt(vec2(0.0, 0.0))), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0)), mix(vec2((vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[_GLF_IDENTITY(1, max(1, 1))]), bvec2(false, true)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), min(vec4(injectionSwitch, sin(0.0), 0.0), _GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), (vec4(injectionSwitch, sin(0.0), 0.0)) * mat4(1.0)))), _GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 0.0), max(vec4(injectionSwitch, sin(0.0), 0.0), vec4(injectionSwitch, sin(0.0), 0.0)))))), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, sin(0.0), 0.0))), max(_GLF_IDENTITY((vec2(vec4(injectionSwitch, sin(0.0), 0.0))), min((vec2(vec4(injectionSwitch, sin(0.0), 0.0))), (vec2(vec4(injectionSwitch, sin(0.0), 0.0))))), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))))[0], _GLF_FUZZED(644.770)), vec2(_GLF_FUZZED(80.86), (vec2(vec4(injectionSwitch, sin(0.0), 0.0)))[1]), bvec2(false, true)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false)))))))))), false)))))))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), true))))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
            }
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), true)))), false)))))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), int(ivec4(0 << _GLF_IDENTITY(int(6), int(6)), 0, 1, 0)))) | (0 << _GLF_IDENTITY(int(6), int(6)))))); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
                {
                 return;
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
            return;
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.x)) > injectionSwitch.y))));
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), 1 * (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << (0 >> _GLF_IDENTITY(int(1), int(1)))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 1)), int(int(int(ivec4(1, 1, 0, 1))))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), false))), false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(refract(-1646.3315, 297.433, -8884.9813)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(refract(-1646.3315, 297.433, -8884.9813)))) > injectionSwitch.y, true, false)))))))))))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     else
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 + (_GLF_IDENTITY(1, min(1, 1))))) | (1))), 4, 64, 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     subgroupBarrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bvec4((! (! (false))), true, true, true)), ! (! (bool(bvec4((! (! (false))), true, true, true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))
        barrier();
       for(int _injected_loop_counter = (0 & 29518); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-79740) : int(2)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-87.10, clamp(_GLF_IDENTITY(-87.10, max(-87.10, -87.10)), -87.10, -87.10)))) : injectionSwitch.y))))))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             do
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-880.669), _GLF_FUZZED(-2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(794.125)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))) >> (0 << _GLF_IDENTITY(int(8), int(8))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), false, false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-86.23))) < injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0 >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), (int(4)) - 0))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), (false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | 0)), min((_GLF_IDENTITY(false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), (false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), (false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | 0)), 0 | ((_GLF_IDENTITY(false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), (false ? _GLF_FUZZED(-93967) : _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | 0)))))))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false, true))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), true, false)))))) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (91331 & 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(step(-6638.8585, -4.4)))))), dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2x4(vec2(0.0, 1.0), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), 0.0, 1.0)))))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) : injectionSwitch)).x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2516.9144 / -6.1))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(2.1)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false, false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(314.980))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(2766.5928))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(863.155), _GLF_FUZZED(float(88540))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
              {
               barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))), false || (true))))
          {
           return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, cos(0.0), 1.0, 1.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, cos(0.0), 1.0, 1.0))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, cos(0.0), 1.0, 1.0))), false, false)), (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, cos(0.0), 1.0, 1.0))), false, false))) && true)), true, false, false)))))))
            {
             do
              {
               do
                {
                 barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false))));
            }
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), true && (! (false))))), true, true, false)))))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (1 & 1))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) / 1.0)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, exp(0.0), 1.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, exp(0.0), 1.0, 0.0))) : _GLF_FUZZED(1.7)))), float(_GLF_FUZZED(1286.7899)), bool(false)))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
