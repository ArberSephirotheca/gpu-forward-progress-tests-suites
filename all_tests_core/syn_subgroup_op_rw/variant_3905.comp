#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED((8793.2521 + 755.767)))), injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.7) : 1.0)), 0.0, 1.0, 1.0, sin(0.0), 1.0), (true ? mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0) : _GLF_FUZZED(mat2x4(83.88, 5892.5980, 905.954, -192.825, -6398.3865, 8.7, -2.5, -88.19))))), float(vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0), (true ? mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0) : _GLF_FUZZED(mat2x4(83.88, 5892.5980, 905.954, -192.825, -6398.3865, 8.7, -2.5, -88.19))))), min(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, sin(0.0), 1.0), (true ? mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0) : _GLF_FUZZED(mat2x4(83.88, 5892.5980, 905.954, -192.825, -6398.3865, 8.7, -2.5, -88.19))))), float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0), (true ? mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0) : _GLF_FUZZED(mat2x4(83.88, 5892.5980, 905.954, -192.825, -6398.3865, 8.7, -2.5, -88.19))))))), 0.0, 1.0)))), mix(float(_GLF_FUZZED(92.96)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9458.4100)), bool(false)))), 1.0), (true ? mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8773.2325) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))), sin(0.0), 1.0) : _GLF_FUZZED(mat2x4(83.88, 5892.5980, 905.954, -192.825, -6398.3865, 8.7, -2.5, -88.19))))))), bool(true))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) + 0.0) + (injectionSwitch.y))))))) || false), true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))))))), true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), true, false))))))))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(4600.7390))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(0.0 + (injectionSwitch.y)), float(_GLF_FUZZED(-1676.4672)), bool(false))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, true))), false, false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, true))), false, false))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))), max(0.0 + (injectionSwitch.y), _GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.4, -3.5)) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(vec2(-9.4, -3.5)) : injectionSwitch))[0], ((false ? _GLF_FUZZED(vec2(-9.4, -3.5)) : injectionSwitch))[1]), vec2(_GLF_FUZZED(145.839), _GLF_FUZZED((+ -4301.8795))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))))))))))), false || (! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(ceil(-6719.5711)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-8940.6385)), float((injectionSwitch.y)), bool(true)))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, true))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), _GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), _GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.4, -3.5)) : injectionSwitch)).y))))))))))))))))))))) && true) || false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.1), _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1])))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), bvec2(true, false))))), (false ? _GLF_FUZZED((injectionSwitch * vec2(-13.64, _GLF_IDENTITY(-51.72, mix(float(_GLF_FUZZED(6.5)), float(-51.72), bool(true)))))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false)))))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false)))))), true))) && true)))))) || false), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false)))))) || false) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(-0.2)), float(0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED(707.761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), mix(float(_GLF_FUZZED(-0.2)), float(0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED(707.761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED(707.761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), sqrt(0.0) + (mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED(707.761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(true)))))), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))))))))))))))))) || false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1])) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-575.541), (_GLF_FUZZED(-575.541)) / 1.0)), bvec2(true, false))).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-81.01), mix(float(_GLF_FUZZED(-81.01)), float(_GLF_FUZZED((9664.2878 - 2.6))), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-81.01), mix(float(_GLF_FUZZED(-81.01)), float(_GLF_FUZZED((9664.2878 - 2.6))), bool(false)))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) / 1.0)) + 0.0))))))))) || false), true, true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-3.3) : (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(-575.541), (_GLF_FUZZED(-575.541)) / 1.0)), bvec2(true, false))).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) + 0.0))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) + 0.0))))))))))) || false), true, true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-575.541), (_GLF_FUZZED(-575.541)) / 1.0)), bvec2(true, false))).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-1910.7168) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) + 0.0))))))))) || false), true, true)))))), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-575.541), (_GLF_FUZZED(-575.541)) / 1.0)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-575.541), (_GLF_FUZZED(-575.541)) / 1.0)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-575.541), (_GLF_FUZZED(-575.541)) / 1.0)), bvec2(true, false))))).y))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) + 0.0))))))))) || false), true, true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1])) * mat2(1.0)))))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-575.541), (_GLF_FUZZED(-575.541)) / 1.0)), bvec2(true, false))).y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(38.71)), vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), bvec2(false, true))).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6365.9656)), float(injectionSwitch.y), bool(true))), exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0)))))), mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.01)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))) + 0.0))))))))) || false), true, true)))))), false))), true)))))))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) + (injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec2(-3.8, -2.8) * mat4x2(-28.08, -69.73, 739.591, -5.5, -6.5, -4945.8259, -2.1, -4.2)).b), _GLF_FUZZED(-6.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, injectionSwitch.x)) > injectionSwitch.y)))) || false)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-59.12, -0.6)))).y)))) || false)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))), mix(vec2(_GLF_FUZZED(393.122), _GLF_FUZZED(3.2)), vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[0], (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * mat2(1.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED((-563.747 * 4.4)), _GLF_FUZZED(3.3)), bvec2(false, false))).x < injectionSwitch.y)) && (false)), bool(bvec3(false, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (bool(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))), true)))))))))) && _GLF_IDENTITY(true, true && (true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (bool(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))), true)))))))))) && _GLF_IDENTITY(true, true && (true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (bool(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), false))), true)))))))))))))))) && _GLF_IDENTITY(true, true && (true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))))) && true)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) || false))))), false, false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), min((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u) | (min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | (_GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(178926u, 95790u, 63232u)))), 1u))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), (~ (uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), (~ (uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))), (false ? _GLF_FUZZED(uvec3(81100u, 143923u, 27242u)) : ((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), (~ (uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))))))) / ((uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) & uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u), max(((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicLoad(subgroup_local_id, -63673, -11597, 92219)))), 0u))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) ^ uvec3(0u, 0u, 0u)))), min((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))))) ^ uvec3(0u, 0u, 0u)))), gl_WorkGroupID), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)) | (min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), 1u)) | (uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), 1u))))), gl_WorkGroupID))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) - uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, uint(uint(1u))), 0u))), 1u, 1u)), _GLF_IDENTITY(min((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), (min((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u, 0u))) | _GLF_IDENTITY((min((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))), ((min((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))))) ^ uvec3(0u, 0u, 0u)))), gl_WorkGroupID), uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) | (min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), ~ (_GLF_IDENTITY(~ (((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), (true ? ~ (((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(9335u, 179963u, 62285u))))))), min((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), 0u), (uvec4(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), 0u)) | uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))))) ^ uvec3(0u, 0u, 0u)))), gl_WorkGroupID), uvec3(0u, 0u, 0u) | (min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))) - uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - vec3(0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - vec3(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0)) - vec3(0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false)), (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))) || false))))) ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(57.81))) : _GLF_FUZZED(179.757)))))) / 1.0)) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > injectionSwitch.y)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-408.641, -2628.6930)))).x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > injectionSwitch.y)))) || false, ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(179.757)))) / 1.0) > injectionSwitch.y)))) || false) && true)))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(mat4(float(mat4x3(injectionSwitch.x, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, length(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), false || ((bool(bool(false))))))), (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(false))), false || ((bool(bool(false))))), ! (! (! _GLF_IDENTITY((bool(bool(false))), false || (_GLF_IDENTITY((bool(bool(false))), false || ((bool(bool(false))))))))))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)) || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), false, false, _GLF_IDENTITY(false, (false) || false))), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), false, false, false))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), false, false, false)))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id), uint(uvec2(0u ^ (subgroup_id), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id), uint(uvec2(0u ^ (subgroup_id), 1u))))) ^ 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) | (_GLF_IDENTITY(8u, (8u) | (8u)))))))))), 0u ^ (subgroup_id * subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))) && true))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))) && true))))))), bool(bvec3(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))) && true))))))), true, true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false || ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), max(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0))))) + vec2(0.0, 0.0)), cos(vec2(0.0, 0.0)))), _GLF_IDENTITY(sin(sin(vec2(0.0, 0.0))) + (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), _GLF_IDENTITY((cos(vec2(0.0, 0.0))), ((cos(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)) + sqrt(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.0))), 1.0, sin(0.0), exp(0.0), 1.0, log(1.0)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.0))), 1.0, sin(0.0), exp(0.0), 1.0, log(1.0))))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.0))), 1.0, sin(0.0), exp(0.0), 1.0, log(1.0)), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.0))), 1.0, sin(0.0), exp(0.0), 1.0, log(1.0)))))) * 1.0)), 0.0)))), _GLF_IDENTITY((sin(sin(vec2(0.0, 0.0))) + (cos(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((sin(sin(vec2(0.0, 0.0))) + (cos(vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (sin(_GLF_IDENTITY(sin(vec2(0.0, 0.0)), (sin(vec2(0.0, 0.0))) * abs(vec2(1.0, 1.0)))) + _GLF_IDENTITY((cos(vec2(0.0, 0.0))), ((cos(vec2(0.0, 0.0)))) - log(vec2(1.0, 1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.3, float(mat2x4(3.3, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) + 0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7261.7877), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7261.7877), min(_GLF_FUZZED(-7261.7877), _GLF_FUZZED(-7261.7877)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7261.7877), min(_GLF_FUZZED(-7261.7877), _GLF_FUZZED(-7261.7877)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-7261.7877), min(_GLF_FUZZED(-7261.7877), _GLF_FUZZED(-7261.7877))))) - 0.0)) * exp(0.0))))), bool(false))), 0.0)), 0.0))).y) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))), bool(bvec4(false, true, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))), bool(bvec4(false, true, false, false))))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 0.0, exp(0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x2(6.5, -2.5, 28.15, 37.86, -82.31, -9795.5890, -84.85, -8.2)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 0.0, exp(0.0)))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(sinh(vec2(-354.205, 4.8))) : (injectionSwitch))))) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))) / sqrt(vec2(1.0, 1.0)))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8923.4603, min(-8923.4603, _GLF_IDENTITY(-8923.4603, float(mat3x2(_GLF_IDENTITY(-8923.4603, max(-8923.4603, -8923.4603)), 0.0, determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-148.381) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3872.4737, max(-3872.4737, -3872.4737))), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8923.4603, min(-8923.4603, _GLF_IDENTITY(-8923.4603, float(mat3x2(-8923.4603, 0.0, determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-148.381) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-3872.4737, (-3872.4737) + 0.0), max(-3872.4737, -3872.4737))), (injectionSwitch)[1]), bvec2(false, true)), (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(64073u, 32826u))) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8923.4603, min(-8923.4603, _GLF_IDENTITY(-8923.4603, float(mat3x2(-8923.4603, 0.0, determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-148.381) : 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(20.45))))), 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3872.4737, max(-3872.4737, -3872.4737))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-1523.0243)))) + 0.0)), bvec2(false, true)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-8923.4603, min(-8923.4603, _GLF_IDENTITY(-8923.4603, float(mat3x2(-8923.4603, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0))), 1.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-148.381) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3872.4737, max(-3872.4737, -3872.4737))), (injectionSwitch)[1]), bvec2(false, true)))), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8923.4603)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3872.4737, float(_GLF_IDENTITY(vec4(-3872.4737, 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(-3872.4737, 1.0, 0.0, 0.0)) * mat4(1.0), ((vec4(-3872.4737, 1.0, 0.0, 0.0)) * mat4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)], ((injectionSwitch)[1]) / 1.0)) + 0.0)), bvec2(false, true)), (mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | (0))))], _GLF_FUZZED(-8923.4603)), vec2(_GLF_FUZZED(-3872.4737), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]) / 1.0, min(_GLF_IDENTITY(((injectionSwitch)[1]) / 1.0, mix(float(((injectionSwitch)[1]) / 1.0), float(_GLF_FUZZED(-7511.1168)), bool(false))), ((injectionSwitch)[1]) / 1.0)))) + 0.0)), bvec2(false, true))) - _GLF_IDENTITY(log(exp(vec2(0.0, 0.0))), (_GLF_IDENTITY(log(exp(vec2(0.0, 0.0))), vec2(vec2(log(exp(vec2(0.0, 0.0))))))) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) * 1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) | (4), ((4) | (4)) | ((4) | (4)))), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, 1, 1, 0)), ~ (~ (int(ivec4(64, 1, 1, 0))))), min(int(ivec4(64, 1, 1, 0)), int(ivec4(64, 1, 1, 0))))), 2), _GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) << 0))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2)))) >> 0u)))), 0u | (uint(uint((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2)))) >> 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) << 0))))), _GLF_IDENTITY(uint(uint((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2)))), (_GLF_IDENTITY(uint(uint((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2)))), (true ? uint(uint((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2)))) : _GLF_FUZZED(subgroup_id)))) | (uint(uint((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2)))))))), (~ (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) << 0))))), uint(uint((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 2))))))) * 1u))) * _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-77318))), int(ivec4(64, 1, 1, 0))), 2), (atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])))))) << 0u), _GLF_IDENTITY(4, (4) | (4)), 64, 2)) * _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(1u, 0u, 1u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) + 0u), 0u)) << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(min(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (~ (_GLF_IDENTITY(min(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 1u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(virtual_gid))))))), (min(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(1u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) * uvec4(1u, 1u, 1u, 1u)))))))), clamp(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))), clamp(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))), uint(0u)))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), _GLF_IDENTITY(uvec4(1u, 0u, 1u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, (0u) ^ 0u))) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), clamp(_GLF_IDENTITY(uvec4(1u, _GLF_IDENTITY(0u, (0u) << 0u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(_GLF_IDENTITY(uvec4(1u, _GLF_IDENTITY(0u, (0u) << 0u), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))), 0u))))), (uvec4(1u, _GLF_IDENTITY(0u, (0u) << 0u), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(0u), 0u), uvec2(0u, 0u) | (uvec2(uint(0u), 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(0u), 0u), uvec2(0u, 0u) | (uvec2(uint(0u), 0u))))) << 0u)), uint(0u))))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(1u, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (0u) * 1u)), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), uint(0u)))), uvec4(1u, _GLF_IDENTITY(0u, (0u) << 0u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), 0u | (uint(6u))))), uint(6u)))), uint(0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), min(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), _GLF_IDENTITY(uvec4(1u, _GLF_IDENTITY(0u, max(0u, 0u)), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec3(uint(0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u ^ 0u))))))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), min(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))))))) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 1, 1), ivec4(0, 0, 0, 0) | (ivec4(4, 0, 1, 1))))))), (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), _GLF_IDENTITY(((64) | (64)) * 1, _GLF_IDENTITY(int(ivec4(((64) | (64)) * 1, 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0)), (int(ivec4(((64) | (64)) * 1, 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0))) ^ 0))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), ((_GLF_IDENTITY(64, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 64 : _GLF_FUZZED(-6947)))) | (64)) * 1))), ((_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), ((64) | (64)) * 1)))) >> 0)))) * 1))))) / 1), int(ivec4(64, 1, 1, 0))), 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | 0) | (4)), 64, 2)) * _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) + vec3(0.0, 0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-43.06) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(83.63)), float(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), bool(true))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), float(_GLF_FUZZED(9010.6412)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_DEAD(false)) && true))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4), min(clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4), clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, sqrt(1.0)), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, 0.0, 1.0, sqrt(1.0)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(pow(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, sqrt(1.0)), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(-9.3)))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (! (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (! (false))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(_GLF_IDENTITY(pow(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(pow(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (pow(injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0))))), 1.0, 0.0, 1.0, sqrt(1.0)), mat2(1.0) * (mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY((true ? sqrt(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-9.3, mix(float(_GLF_IDENTITY(-9.3, 1.0 * (-9.3))), float(_GLF_FUZZED(3263.4548)), bool(false))))), mix(float((true ? sqrt(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-9.3, mix(float(_GLF_IDENTITY(-9.3, 1.0 * (-9.3))), float(_GLF_FUZZED(3263.4548)), bool(false)))))), float(_GLF_FUZZED(61.98)), bool(false))))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (! (false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (! (false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (! (false))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (! (false))))))))) && true)))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))], read, 4, 64, 4);
}
