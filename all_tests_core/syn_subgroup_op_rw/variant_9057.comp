#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-12.03)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))), ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((43.38 + -9.7))), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-46.05), _GLF_FUZZED(_GLF_IDENTITY(6.1, (true ? 6.1 : _GLF_FUZZED(sinh(-7.0)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), float(_GLF_FUZZED(2.0)), bool(false))) > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), true, true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)))))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_FUZZED(clamp(vec2(82.77, -634.053), injectionSwitch, vec2(-45.39, 11.74)))))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.7) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4057.3142), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-51.56)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8586.3727)), vec2(_GLF_FUZZED(1276.9104), (injectionSwitch)[1]), bvec2(false, true))))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u) * subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)))))) * 1u) + subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8080.8701)), vec2(_GLF_FUZZED(float(119402u)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))).x > injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY((0u | _GLF_IDENTITY(1u, (1u) + 0u)), (_GLF_IDENTITY((0u | _GLF_IDENTITY(1u, (1u) + 0u)), (true ? (0u | _GLF_IDENTITY(1u, (1u) + 0u)) : _GLF_FUZZED(virtual_gid)))) / 1u), 1u, 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u | 1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u | 1u, min(_GLF_IDENTITY(0u | 1u, (0u | 1u) >> 0u), 0u | 1u)), 1u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | 1u, min(0u | 1u, 0u | 1u)), 1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), 0u ^ ((_GLF_IDENTITY(1u, min(1u, 1u))))))) * 1u))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u | 1u, min(0u | 1u, 0u | 1u)), 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))) * 1u))), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(0u | 1u, min(0u | 1u, 0u | 1u)), 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) * 1u)))), ~ (~ ((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u | 1u, min(0u | 1u, 0u | 1u)), 0u ^ (_GLF_IDENTITY(0u | 1u, min(0u | 1u, 0u | 1u)))), _GLF_IDENTITY(1u, (1u) >> 0u), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) * 1u))))))) << 0u)))) << 0u))), 1u, 0u))))) + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 0u + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY((0u | _GLF_IDENTITY(1u, (1u) + 0u)), (_GLF_IDENTITY((0u | _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))) + 0u)), (true ? (0u | _GLF_IDENTITY(1u, (1u) + 0u)) : _GLF_FUZZED(virtual_gid)))) / 1u), 1u, 0u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u | 1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u | 1u, min(_GLF_IDENTITY(0u | 1u, (0u | 1u) >> 0u), 0u | 1u)), 1u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) - (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u)))), uvec2(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | 1u, min(0u | 1u, 0u | _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), 1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), 0u | (_GLF_IDENTITY(1u, min(1u, 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(1u, min(1u, 1u))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), 0u ^ ((_GLF_IDENTITY(1u, min(1u, 1u))))))) * 1u))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(reflect(9744.1380, -8121.8433)) : injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)) | 1u, min(0u | 1u, 0u | 1u)), 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))) * 1u))), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) | 1u, min(0u | 1u, 0u | 1u)), 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) * 1u)))), ~ (~ ((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u | 1u, min(0u | 1u, 0u | 1u)), 0u ^ (_GLF_IDENTITY(0u | 1u, _GLF_IDENTITY(min(0u | 1u, 0u | 1u), 0u ^ (min(0u | 1u, 0u | 1u)))))), _GLF_IDENTITY(1u, (1u) >> 0u), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) * 1u))))))) << 0u)))) << 0u))), 1u, 0u))))) + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0)))))))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9743.6262, -9398.4377)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9743.6262, -9398.4377)) : injectionSwitch)).y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9743.6262, -9398.4377)) : injectionSwitch)).y, 1.0, tan(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9743.6262, -9398.4377)) : injectionSwitch)).y, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0))))), tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(0.0), 1.0)))))), 1.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9743.6262, -9398.4377)) : injectionSwitch)).y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-9743.6262, clamp(-9743.6262, _GLF_IDENTITY(-9743.6262, (true ? -9743.6262 : _GLF_FUZZED(-3763.7690))), _GLF_IDENTITY(-9743.6262, (false ? _GLF_FUZZED(234.605) : -9743.6262)))), -9398.4377)) : injectionSwitch)).y, 1.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(0.0), 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9743.6262, -9398.4377)) : injectionSwitch)).y, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(0.0), 1.0)))))), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false))) || _GLF_IDENTITY(false, bool(bool(false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) || false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))) || false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true, true, false))), bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bvec3((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))), false)), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))]) / 1.0), _GLF_FUZZED(-702.970)), (true ? vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))]) / 1.0), _GLF_FUZZED(-702.970)) : _GLF_FUZZED(mod(injectionSwitch, vec2(586.735, 2.3))))), bvec2(true, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-148.805), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-540.699), 0.0 + (_GLF_FUZZED(-540.699)))), float(_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]), mix(float(((injectionSwitch)[0])), float(_GLF_FUZZED(-8410.8753)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(true))) / 1.0), min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-540.699), 0.0 + (_GLF_FUZZED(-540.699)))), float(_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(27845))))]), mix(float(((injectionSwitch)[0])), float(_GLF_FUZZED(-8410.8753)), bool(false)))), _GLF_IDENTITY(bool(true), false || (bool(true))))) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-540.699), 0.0 + (_GLF_FUZZED(-540.699)))), float(_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]), mix(float(((injectionSwitch)[0])), float(_GLF_FUZZED(-8410.8753)), bool(false)))), bool(true))) / 1.0))), _GLF_FUZZED(-702.970)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))))), min(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), clamp(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))))))) : _GLF_FUZZED(-0.2))), sqrt(1.0), 0.0, exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2233.2089) : 0.0)), 0.0))), 1.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(6237.6029), (sqrt(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(float(false))), vec3((sqrt(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(1.0), (sqrt(vec3(1.0, 1.0, 1.0)))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), mix(vec3((_GLF_IDENTITY(sqrt(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(6237.6029), (sqrt(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(float(false))), vec3((sqrt(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(1.0), (sqrt(vec3(1.0, 1.0, 1.0)))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))[0], (_GLF_IDENTITY(sqrt(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(6237.6029), (sqrt(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(float(false))), vec3((sqrt(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(1.0), (sqrt(vec3(1.0, 1.0, 1.0)))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))[1], (_GLF_IDENTITY(sqrt(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(6237.6029), (sqrt(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(float(false))), vec3((sqrt(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(1.0), (sqrt(vec3(1.0, 1.0, 1.0)))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))[2]), vec3(_GLF_FUZZED(6649.9661), _GLF_FUZZED(-0.1), _GLF_FUZZED(82.35)), bvec3(false, false, false)))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), length(0.0), 1.0, 0.0, 0.0, 1.0, abs(1.0), length(0.0), 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(58.36)), bool(false))), 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(-653.879)), bool(_GLF_IDENTITY(false, false || (false)))))), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), (float(mat4(_GLF_IDENTITY(((injectionSwitch)[0]), 0.0 + (((injectionSwitch)[0]))), sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), 1.0, exp(0.0), 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED((-59.26 + 9.9)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((23.31 * 4413.8852))), float(0.0), bool(true))))), mix(float(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0))), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0)))) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2x3(vec3(0.0, 1.0, 0.0), 0.0, 1.0, 0.0))))), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))), float(_GLF_FUZZED(-653.879)), bool(false)))), 0.0, 1.0))) / 1.0)) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-148.805), (_GLF_IDENTITY(_GLF_FUZZED(-148.805), mix(float(_GLF_FUZZED(-10.50)), float(_GLF_FUZZED(-148.805)), bool(true)))) / abs(1.0)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, clamp(((injectionSwitch)[0]) / 1.0, (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[0]) / 1.0, ((injectionSwitch)[0]) / 1.0))), _GLF_FUZZED(-702.970)), bvec2(true, false)), max(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-148.805, max(-148.805, -148.805))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(95.01), _GLF_FUZZED(-1.0)), vec2((vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-148.805), clamp(_GLF_IDENTITY(_GLF_FUZZED(-148.805), mix(float(_GLF_FUZZED(-148.805)), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_FUZZED(-148.805), _GLF_FUZZED(-148.805))), _GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0)))[1]), vec2(_GLF_IDENTITY(mat4(vec2(_GLF_IDENTITY(_GLF_FUZZED(-148.805), clamp(_GLF_IDENTITY(_GLF_FUZZED(-148.805), mix(float(_GLF_FUZZED(-148.805)), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_FUZZED(-148.805), _GLF_FUZZED(-148.805))), _GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0)))[1]), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), cos(log(1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(414.194, 1.6, -0.7, 244.291, -502.773, 7591.3717, -2.9, 4.2, -605.113, 7.0, 166.401, 294.165, 45.63, 50.57, -556.783, 3.4)) : mat4(vec2(_GLF_IDENTITY(_GLF_FUZZED(-148.805), clamp(_GLF_IDENTITY(_GLF_FUZZED(-148.805), mix(float(_GLF_FUZZED(-148.805)), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_FUZZED(-148.805), _GLF_FUZZED(-148.805))), _GLF_IDENTITY((injectionSwitch), vec2(vec3(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), 0.0)))[1]), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, log(1.0), cos(log(1.0)), 1.0, 1.0))))))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), vec2(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), 0.0, 0.0, abs(1.0), 0.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), 0.0, 0.0, abs(1.0), 0.0)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), 0.0, 0.0, abs(1.0), 0.0))))))))[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-148.805, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(-148.805, mix(float(_GLF_FUZZED(-3.1)), float(-148.805), bool(true)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), _GLF_IDENTITY(((injectionSwitch)[0]), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(56.00, -8.4)))))[0]), (_GLF_IDENTITY(true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7), min(_GLF_IDENTITY(true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7), (true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7)) / exp(0.0)), true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7))))), ((injectionSwitch)[0]), ((injectionSwitch)[0]))))) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, 1.0 * (((injectionSwitch)[0]) / 1.0))), _GLF_FUZZED(_GLF_IDENTITY(-702.970, max(_GLF_IDENTITY(-702.970, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-702.970, mix(float(-702.970), float(_GLF_FUZZED(-46.86)), bool(false))), mix(float(_GLF_IDENTITY(-702.970, mix(float(-702.970), float(_GLF_FUZZED(-46.86)), bool(false)))), float(_GLF_FUZZED(6475.7775)), bool(false)))), float(_GLF_FUZZED(-5922.6770)), bool(false))), -702.970)))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-148.805, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(-148.805, mix(float(_GLF_FUZZED(-3.1)), float(-148.805), bool(true)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), _GLF_IDENTITY(((injectionSwitch)[0]), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(56.00, -8.4)))))[0]), (_GLF_IDENTITY(true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7), min(_GLF_IDENTITY(true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7), (true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7)) / exp(0.0)), true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7))))), ((injectionSwitch)[0]), ((injectionSwitch)[0]))))) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, 1.0 * (((injectionSwitch)[0]) / 1.0))), _GLF_FUZZED(_GLF_IDENTITY(-702.970, max(_GLF_IDENTITY(-702.970, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-702.970, mix(float(-702.970), float(_GLF_FUZZED(-46.86)), bool(false))), mix(float(_GLF_IDENTITY(-702.970, mix(float(-702.970), float(_GLF_FUZZED(-46.86)), bool(false)))), float(_GLF_FUZZED(6475.7775)), bool(false)))), float(_GLF_FUZZED(-5922.6770)), bool(false))), -702.970)))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-148.805, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(-148.805, mix(float(_GLF_FUZZED(-3.1)), float(-148.805), bool(true)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]), max(((injectionSwitch)[0]), _GLF_IDENTITY(((injectionSwitch)[0]), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(56.00, -8.4)))))[0]), (_GLF_IDENTITY(true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7), min(_GLF_IDENTITY(true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7), (true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7)) / exp(0.0)), true ? ((injectionSwitch)[0]) : _GLF_FUZZED(0.7))))), ((injectionSwitch)[0]), ((injectionSwitch)[0]))))) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, 1.0 * (((injectionSwitch)[0]) / 1.0))), _GLF_FUZZED(_GLF_IDENTITY(-702.970, max(_GLF_IDENTITY(-702.970, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-702.970, mix(float(-702.970), float(_GLF_FUZZED(-46.86)), bool(false))), mix(float(_GLF_IDENTITY(-702.970, mix(float(-702.970), float(_GLF_FUZZED(-46.86)), bool(false)))), float(_GLF_FUZZED(6475.7775)), bool(false)))), float(_GLF_FUZZED(-5922.6770)), bool(false))), -702.970)))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-148.805), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-702.970)), bvec2(true, false)))))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u | (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) | (subgroup_size)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)))) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(75.03)), bvec2(false, false)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.8, 82.28))))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.8, 82.28))))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y, false, false))), true, false, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true))))), ! (! (! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true)))))))))))))), false || (! (false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), true && (false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false))), true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))) || false))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) && true)), false || ((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) && true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(-404.287, 37.10), injectionSwitch)) : injectionSwitch)))))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y) / 1.0)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, false)), _GLF_IDENTITY(false, true && (false))))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false), false, false)), false)))))) && true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3099.2226) : injectionSwitch.x))) + 0.0) : _GLF_FUZZED(2528.6796))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-933.784)), bool(false))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, _GLF_IDENTITY((read) | 0u, ((read) | 0u) - 0u)))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
