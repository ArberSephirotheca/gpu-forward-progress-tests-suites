#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)) || false))), bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false)) || false))), false, _GLF_IDENTITY(false, ! (! (false))), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), true, false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)))) << 0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)))) << 0u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)))) << 0u)))) << 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(30.51)), vec2(_GLF_FUZZED(910.108), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))))
  barrier();
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.y = subgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), false))))))) && true)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), false))))))) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(8604.4356), _GLF_FUZZED(-8673.3841)), vec2((mat2(1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))[0], (mat2(1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))[1]), bvec2(true, true))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))) && true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec2(! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))), true)))))), false))))), _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true, false || ((bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))), true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.y + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base)) + GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.y + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) * 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), clamp(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_FUZZED(1179.8594)) - 0.0), _GLF_FUZZED(1179.8594), _GLF_FUZZED(1179.8594))), _GLF_IDENTITY((_GLF_FUZZED(1179.8594)), 0.0 + ((_GLF_FUZZED(1179.8594)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), clamp(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_FUZZED(1179.8594)) - 0.0), _GLF_FUZZED(1179.8594), _GLF_FUZZED(1179.8594))), (_GLF_FUZZED(1179.8594)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), clamp(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_FUZZED(1179.8594)) - 0.0), _GLF_FUZZED(1179.8594), _GLF_FUZZED(1179.8594))), (_GLF_FUZZED(1179.8594)) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1179.8594, clamp(1179.8594, 1179.8594, _GLF_IDENTITY(1179.8594, 1.0 * (1179.8594))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_FUZZED(1179.8594)) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-798.075)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(1179.8594), _GLF_FUZZED(1179.8594))), _GLF_IDENTITY((_GLF_FUZZED(1179.8594)), clamp((_GLF_FUZZED(1179.8594)), _GLF_IDENTITY((_GLF_FUZZED(1179.8594)), (false ? _GLF_FUZZED(87.05) : (_GLF_FUZZED(1179.8594)))), (_GLF_FUZZED(1179.8594)))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), mix(float(_GLF_FUZZED(-9.5)), float(_GLF_FUZZED(1179.8594)), bool(true))), clamp(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_IDENTITY(_GLF_FUZZED(1179.8594), float(mat3x4(_GLF_FUZZED(1179.8594), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)))) - 0.0), _GLF_FUZZED(_GLF_IDENTITY(1179.8594, min(_GLF_IDENTITY(1179.8594, (1179.8594) - 0.0), 1179.8594))), _GLF_FUZZED(1179.8594))), (_GLF_FUZZED(1179.8594)) / 1.0)), float(_GLF_FUZZED(-4.1)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), clamp(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_FUZZED(1179.8594)) - 0.0), _GLF_FUZZED(1179.8594), _GLF_FUZZED(1179.8594))), (_GLF_FUZZED(1179.8594)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1179.8594, max(1179.8594, _GLF_IDENTITY(1179.8594, float(mat2(1179.8594, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_FUZZED(_GLF_IDENTITY(1179.8594, max(1179.8594, _GLF_IDENTITY(1179.8594, (1179.8594) / round(length(normalize(1.0)))))))) - 0.0), _GLF_FUZZED(1179.8594), _GLF_FUZZED(1179.8594)), float(mat3(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1179.8594), (_GLF_FUZZED(_GLF_IDENTITY(1179.8594, max(1179.8594, _GLF_IDENTITY(1179.8594, (1179.8594) / round(length(normalize(1.0)))))))) - 0.0), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_FUZZED(1179.8594), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(1179.8594, max(1179.8594, _GLF_IDENTITY(1179.8594, (1179.8594) / round(length(normalize(1.0)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_FUZZED(_GLF_IDENTITY(1179.8594, max(1179.8594, _GLF_IDENTITY(1179.8594, (1179.8594) / round(length(normalize(1.0)))))))) : _GLF_FUZZED(966.186))) - 0.0) : _GLF_FUZZED(length(vec3(-8040.5582, -4055.0503, 3.0))))), _GLF_FUZZED(1179.8594), _GLF_FUZZED(1179.8594)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0)))), _GLF_IDENTITY((_GLF_FUZZED(1179.8594)), max(_GLF_IDENTITY((_GLF_FUZZED(1179.8594)), clamp((_GLF_FUZZED(1179.8594)), _GLF_IDENTITY((_GLF_FUZZED(1179.8594)), ((_GLF_FUZZED(1179.8594))) / 1.0), (_GLF_FUZZED(1179.8594)))), (_GLF_FUZZED(1179.8594)))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.1), (_GLF_FUZZED(_GLF_IDENTITY(2.1, min(2.1, 2.1)))) / 1.0), mix(float(_GLF_FUZZED(2.1)), _GLF_IDENTITY(float(_GLF_FUZZED(3.4)), clamp(float(_GLF_FUZZED(3.4)), float(_GLF_FUZZED(3.4)), _GLF_IDENTITY(float(_GLF_FUZZED(3.4)), float(mat2(float(_GLF_FUZZED(3.4)), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(bvec3(! _GLF_IDENTITY(((false) || false), (((false) || false)) && true), true, true)))))))))))), bvec2(true, false))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.2), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch.g) : _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(5625.6850)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + abs(0.0)) > injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) == 0, bool(bool((subgroup_local_id % 2) == 0))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))) && true)), ! (! (! (! (! (false))))))))), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | 0u), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(0.5)), float((injectionSwitch)[0]), bool(true))))))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(952.534), _GLF_FUZZED(77.10)), bvec2(false, false))))).x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-187.982))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(cos(0.0)), 1.0, 1.0, 0.0, 1.0)))), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), _GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), (vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0)) - vec3(0.0, 0.0, 0.0)))))) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch))) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.7) : 1.0)), 1.0, 1.0))) - 0.0)))), 1.0))))) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(89.72)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0), vec2(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0), 0.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3963.7673), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.0)), bvec2(true, false)))) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0)))) * vec2(1.0, 1.0))) * mat2(1.0))), 1.0)))))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)).y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0))), abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, exp(0.0), 1.0))) - vec2(0.0, 0.0)).y))))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[0], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(6937.2577), _GLF_FUZZED((7.5 + 3.0))), bvec2(false, false))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-187.982))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(cos(0.0)), 1.0, 1.0, 0.0, 1.0)))), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), 1.0), (vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0)) - vec3(0.0, 0.0, 0.0)))))) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch))) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(30.52))), 1.0))), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.7) : 1.0)), 1.0, 1.0))) - 0.0)))), 1.0))))) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.3) : 0.0))) / 1.0), 0.0)).y), float(_GLF_FUZZED(89.72)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[0], _GLF_FUZZED((-5613.4561 * 74.72))), vec2(_GLF_FUZZED(-8.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-902.828))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2782.0004)))))), max(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 0.0, 1.0, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0)), 1.0))))) - vec2(0.0, 0.0), vec2(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3963.7673), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-8612.7631)), vec2(_GLF_FUZZED((6.8 / vec3(6.6, 32.05, -547.434).s)), ((injectionSwitch))[1]), bvec2(false, true)))[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-8612.7631)), vec2(_GLF_FUZZED((6.8 / vec3(6.6, 32.05, -547.434).s)), ((injectionSwitch))[1]), bvec2(false, true)))[0], (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-8612.7631)), vec2(_GLF_FUZZED((6.8 / vec3(6.6, 32.05, -547.434).s)), ((injectionSwitch))[1]), bvec2(false, true)))[0]) * 1.0)), float(_GLF_FUZZED(-9.6)), bool(false))), _GLF_FUZZED(-8.0)), bvec2(true, false)))) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), 1.0))))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0)))) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0)))) * vec2(1.0, 1.0))))) * mat2(1.0))), 1.0)))))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), max(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0), vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 1.0))))) - vec2(0.0, 0.0)).y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0))), abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, exp(0.0), 1.0))) - vec2(0.0, 0.0)).y))))) || false))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(29.57), _GLF_FUZZED(954.998)), mix(vec2((vec2(_GLF_FUZZED(29.57), _GLF_FUZZED(954.998)))[0], _GLF_FUZZED(84.20)), vec2(_GLF_FUZZED(-3.9), (vec2(_GLF_FUZZED(29.57), _GLF_FUZZED(954.998)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(false, false)))) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))), 0 ^ (_GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (64), (64)), min(_GLF_IDENTITY(clamp((64), (64), (64)), min(clamp((64), (64), (64)), clamp((64), (64), (64)))), clamp((64), (64), (64))))))) << 0), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(false), true)), true, false), bvec3(bvec3(bvec3(bool(bvec2(_GLF_DEAD(false), true)), true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-41.99)), bvec2(true, false))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-41.99)), bvec2(true, false))).y), false, true, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED((~ -13466)) : _GLF_IDENTITY(4, ~ (~ (4))))), 64, 4);
}
