#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec4 GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id;
 uvec4 GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_16_1_1_4next_virtual_gidread;
 GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.xy = GLF_merged2_0_1_16_1_1_4next_virtual_gidread;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy = GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.xy;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(1.5, 48.27)) : injectionSwitch)).x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size;
 uvec4 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.zw = GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.xy = GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.zw;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy = GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.xy;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z = subgroup_id;
 do
  {
   GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.0)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z))))), max(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, max(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id)).z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, max(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id)).z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)))), clamp((false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, max(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id)).z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)))), (false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, max(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id)).z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)))), (false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, max(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id)).z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z))))))) >> 0u)), _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z))), (false ? _GLF_FUZZED((1909u ^ subgroup_id)) : _GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z))), uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z))), (false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)))) | (false ? _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z) : _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, clamp(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z, GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))))), GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.z));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w = subgroup_size, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w = subgroup_size) + 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(112370u, (112370u) | (112370u)), _GLF_IDENTITY((112370u) + (0u | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (112370u) + (0u | 0u)))), 36365u, 94696u, 123985u)[1]) : _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w = _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w = subgroup_size) + 0u)));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(85670) : 0)), 0, _GLF_IDENTITY(0, max(0, 0))))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y)) ? (gl_NumWorkGroups) * uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(65289u, 58266u, 170210u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y)) ? (gl_NumWorkGroups) * uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(65289u, 58266u, 170210u)))), max(_GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y)) ? (gl_NumWorkGroups) * uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(65289u, 58266u, 170210u)))), _GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y)) ? (gl_NumWorkGroups) * uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(65289u, 58266u, 170210u))))))) | (_GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))).y)) ? (gl_NumWorkGroups) * uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(65289u, 58266u, 170210u))))))).x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.z = num_workgroup;
 _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.w = GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.z, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.w = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), _GLF_IDENTITY(uvec4(2u), clamp(uvec4(2u), uvec4(2u), uvec4(2u)))))).z) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || false))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.w, ~ (~ (GLF_merged3_0_2_44_2_1_11_3_1_12GLF_merged2_0_1_16_1_1_4next_virtual_gidreadsubgroup_idworkgroup_id.w)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) || false)))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       else
        {
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 0, 1)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), abs(1.0), sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), abs(1.0), sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), abs(1.0), sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), abs(1.0), sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), abs(1.0), sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), abs(1.0), sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), abs(1.0), sin(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0))).x)))) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       for(int _injected_loop_counter = (0 | (0 << _GLF_IDENTITY(int(3), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (0 & 43405); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
  }
 uint workgroup_base = workgroup_size * GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.y;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.w = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true))))))), (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
      return;
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy) >> uvec2(0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy) >> uvec2(0u, 0u)).y))) * _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, max(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w)) + subgroup_local_id, (GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy) >> uvec2(0u, 0u)).y * _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, max(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w)) + subgroup_local_id) >> 0u), (GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, ~ (~ (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup))).xy.y * _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, max(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w)) + subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), uint(7u)), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(7u), uint(7u))))) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))));
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x = GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), int(_GLF_IDENTITY(ivec4(0 << _GLF_IDENTITY(int(8), int(8)), 0, 1, 0), clamp(ivec4(0 << _GLF_IDENTITY(int(8), int(8)), 0, 1, 0), ivec4(0 << _GLF_IDENTITY(int(8), int(8)), 0, 1, 0), _GLF_IDENTITY(ivec4(0 << _GLF_IDENTITY(int(8), int(8)), 0, 1, 0), max(ivec4(0 << _GLF_IDENTITY(int(8), int(8)), 0, 1, 0), ivec4(0 << _GLF_IDENTITY(int(8), int(8)), 0, 1, 0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true))), bool(bool(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! (! (true))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
    }
  }
 uint next_virtual_gid = GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy.y * GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy) | (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy, clamp(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy)))).y * GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w) * 1u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, 0 ^ (1))))), ((subgroup_local_id + 1)) * _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) ^ 0u) ^ 0u))) << 0u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) << (165860u & 0u)) * 1u)) << 0u) * 1u, (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) << (165860u & 0u)) * 1u)) << 0u) * 1u, ~ (~ (((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) << (165860u & 0u)) * 1u)) << 0u) * 1u)))) - (0u ^ 0u)))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size) | (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size)), min(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size) | (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size)), _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size) | (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size)))).w);
 do
  {
   GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy.x = next_virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.z = GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy.x;
  }
 GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, clamp(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup))) ^ uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, clamp(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup))) ^ uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, clamp(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup))) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, clamp(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup))) ^ uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, clamp(GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup, GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup))) ^ uvec4(0u, 0u, 0u, 0u)))).z;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy, uvec2(uvec2(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy))).x], 4, 64, 0);
 GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy.y = read;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[GLF_merged3_0_2_52_2_1_16_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnext_virtual_gidnum_workgroup.xy.x], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(max(~ (4), ~ (4)), min(_GLF_IDENTITY(max(~ (4), ~ (4)), max(_GLF_IDENTITY(max(~ (4), ~ (4)), max(max(~ (4), ~ (4)), max(~ (4), ~ (4)))), max(~ (4), ~ (4)))), max(~ (4), ~ (4)))))))) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0)))))))), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(max(~ _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), max((4), (4))), (4))), ~ (4)), min(_GLF_IDENTITY(max(~ (4), ~ (4)), max(_GLF_IDENTITY(max(~ (4), ~ (4)), max(max(~ (4), ~ (4)), max(~ (4), ~ (4)))), max(~ (4), ~ (4)))), max(~ (4), ~ (4)))))))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0)))))), (false ? _GLF_FUZZED(mix(53543, -96011, true)) : _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0)))))), clamp(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0)))))), (max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0))))))) | (max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0)))))))), max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0)))))), max(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(65296) : 0))))))))))))))), 64, 4);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), int(1)), (0 >> _GLF_IDENTITY(int(1), int(1))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-189.579)))))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
    }
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, abs(1.0), 1.0, abs(0.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6586.5303), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6586.5303), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y) + 0.0)), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, abs(1.0), 1.0, abs(0.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6586.5303), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6586.5303), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y) + 0.0))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(3968.7865)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))), false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))), false))), false)))), true)))))))))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(false))))
              return;
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    return;
  }
 else
  {
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w) : _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w, _GLF_IDENTITY((GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))), max((GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idnum_workgroupsubgroup_size.w) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) >> 0u)))))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x, min(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id) | (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id) | uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u), (uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u), (uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))), 0u, 0u))))) | (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)).xy.x, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x, 0u | (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x))) / 1u))), 0u ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x, min(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id) | (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id, (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id) | uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u), (uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u), (uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))), 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))), 0u, 0u))))) | (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id)).xy.x, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x, 0u | (GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x))) / 1u)))))], _GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base, (GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base) << uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), 0u, 0u)).xy.y, 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), (_GLF_IDENTITY(_GLF_IDENTITY((int(5)), (true ? (int(5)) : _GLF_FUZZED(_injected_loop_counter))), min(_GLF_IDENTITY((int(5)), (true ? (int(5)) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((int(5)), (true ? (int(5)) : _GLF_FUZZED(_injected_loop_counter)))))) / 1) ^ 0))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))) || false))) && true)))), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), true, true))))))))))));
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), false, false, false)), true, true)))))))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.9), _GLF_FUZZED((+ 528.586))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / _GLF_ONE(1.0, injectionSwitch.y))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.9), _GLF_FUZZED((+ 528.586))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / _GLF_ONE(1.0, injectionSwitch.y))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)))), (false ? _GLF_FUZZED(-70904) : int(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), (int(7)) | 0))), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) >> 0), int(7)))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))))), int(7)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec2(_GLF_IDENTITY(int(7), int(7)), int(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(23942) : (0) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-70904) : int(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)), _GLF_IDENTITY(int(7), int(7)))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.9))))))), injectionSwitch.y)))), int(ivec2(_GLF_IDENTITY(int(7), int(7)), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.7))) * (_GLF_ONE(1.0, injectionSwitch.y)))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec2(_GLF_IDENTITY(int(7), int(7)), 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-85714))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, 0 ^ (_GLF_IDENTITY(5, (5) | (5)))), (_GLF_IDENTITY(_GLF_IDENTITY(5, clamp(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 5 : _GLF_FUZZED(45450))), 5, _GLF_IDENTITY(5, (5) | (5)))), (5) << 0)) | (5))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(mat4x3(mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat3x2(mat2(mat4x3(mat2(0.0, 0.0, 0.0, 0.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) + 0.0)), 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))))))))))); _injected_loop_counter ++)
        {
         do
          {
           do
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  break;
                 atomicStore(buf[GLF_merged2_0_2_48_2_2_52GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.xy.x], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy.y, (GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy.y) / 1u), (_GLF_IDENTITY(GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy.y, (GLF_merged3_0_2_44_2_1_11_3_1_14GLF_merged2_0_1_16_1_1_4next_virtual_gidreadvirtual_gidworkgroup_base.xy.y) - 0u)) << 0u), 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), min((64), _GLF_IDENTITY((64), min((64), (64))))))), 4);
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     subgroupAll(true);
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
}
