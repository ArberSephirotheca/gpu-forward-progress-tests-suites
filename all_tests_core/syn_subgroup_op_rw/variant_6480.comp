#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 int _f0;
 ivec2 _f1;
 ivec2 _f2;
 uvec2 _f3;
 float _f4;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 vec4 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 bool _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 int _f1;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 vec3 _f3;
 bool _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 bvec2 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 bvec4 _f1;
 uvec3 _f2;
 mat3x4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 bool _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uvec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec2 _f1;
 uvec3 _f2;
 uint _f3;
 mat2 _f4;
 bool _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 bvec3 _f4;
 vec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 uint read;
 _GLF_struct_8 _f1;
 mat4 _f2;
 _GLF_struct_10 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))))), true, false))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, true && (false))))), (bool(bool((_GLF_IDENTITY(false, true && (false)))))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9742.6296)))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9742.6296)))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true)) || false)), true))))))) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1125.8520)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) | (workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-98.99), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))))), subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec4(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))))), min(subgroup_local_id, subgroup_local_id))), ~ (~ (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id), 0u | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id), (false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id)) >> 0u))))))))), 1u, 1u, (_GLF_IDENTITY(0u, (0u) - 0u) | 0u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))), _GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), (true && (bool(_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(_GLF_DEAD(false)))), false || (! ((bool(_GLF_DEAD(false)))))), bool(bvec4(! ((bool(_GLF_DEAD(false)))), false, true, true))))))), false, true, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))), _GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), (true && (bool(_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((bool(_GLF_DEAD(false)))), bool(bvec4(! ((bool(_GLF_DEAD(false)))), false, true, true))))))), false, true, true)))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))), _GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), (true && (bool(_GLF_DEAD(false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.1, -8356.2237)) : injectionSwitch)).x > injectionSwitch.y))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && _GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))))), bool(bvec4(! (_GLF_IDENTITY((bool(_GLF_DEAD(false))), true && (_GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2((bool(_GLF_DEAD(false))), true)), false || (bool(bvec2((bool(_GLF_DEAD(false))), true)))))))), false, true, true))))))), false, true, true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, false, true)))), true && (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false, false, true)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true))))), ! (! (! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))), false, false, true)))))))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true))))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 9908.8800))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-9.8)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) / 1u), workgroup_base))), (max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) * 1u) : _GLF_FUZZED(virtual_gid)))))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(125252u, uint(uvec3(125252u, 0u, 1u)))), (_GLF_FUZZED(125252u)) >> 0u)));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(_GLF_struct_0(bvec3(true), uvec2(1u), uvec3(1u), 1u, mat2(1.0), true), _GLF_struct_1(mat4x3(1.0), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, min((0u) | 0u, (0u) | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(1u, ~ (~ (1u)))))), true), _GLF_struct_2(bvec3(true), true, ivec2(1)), _GLF_struct_3(uvec2(1u), bvec4(true), uvec3(1u), mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), mat4x2(1.0)), bvec3(true), vec3(1.0), mat2x4(1.0)), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 | (4))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) << 0), max((~ (1)), _GLF_IDENTITY((~ (1)), ((~ (1))) / 1)))), 0), (ivec3(4, _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) << 0), max((~ (1)), _GLF_IDENTITY((~ (1)), ((~ (1))) / 1)))), 0)) ^ ivec3(0, 0, 0))) ^ ivec3(0, 0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY((ivec3(4, 1, _GLF_IDENTITY(0, (0) | (0)))), ((ivec3(4, 1, 0))) | (_GLF_IDENTITY((ivec3(4, 1, 0)), ~ (~ ((ivec3(4, 1, 0))))))) ^ ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) / 1), 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)))) << 0)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))), 0), (ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0)) ^ ivec3(0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 | (1)), 1))), _GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1)))), (true ? 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(1, (1) / 1)))) / 1)) : _GLF_FUZZED(-9122)))), _GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) / 1)), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) / 1)), ~ (~ (0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) / 1)))))) | (0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) / 1))))))), 0), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) * 1)))) / 1))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(34414)), ((true ? 1 : _GLF_FUZZED(34414))) - 0))) / 1))), _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), ((_GLF_IDENTITY(1, (1) / 1))) * 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min(_GLF_IDENTITY((1) / 1, ((1) / 1) / 1), (1) / 1))))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), max(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))) >> 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)) | (_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-29489))), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(int((1)))) / 1))))), 0), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), int(ivec4(0 + (_GLF_IDENTITY(1, (1) / 1)), 1, 0, 0)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1)))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1)))), 0 | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))) ^ 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))))), 0)) >> ivec3(0, 0, 0))))) >> (ivec3(_GLF_IDENTITY(0, (0) | 0), 0, 0) >> _GLF_IDENTITY(ivec3(2), ivec3(2))))) ^ ivec3(0, _GLF_IDENTITY(0, (0) | (0)), 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) << ivec3(0, 0, 0))) ^ ivec3(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1), max((_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, _GLF_IDENTITY(0, 0 ^ (0)), 0))) / ivec3(1, 1, 1), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)), clamp(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ _GLF_IDENTITY(ivec3(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)), 0), ~ (_GLF_IDENTITY(~ (ivec3(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)), 0)), max(~ (ivec3(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)), 0)), ~ (ivec3(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)), 0))))))), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) | (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 | (4))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, _GLF_IDENTITY(1, ~ (~ (1))), 0)) ^ ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, _GLF_IDENTITY(1, ~ (~ (1))), 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, _GLF_IDENTITY(1, ~ (~ (1))), 0)) ^ ivec3(0, 0, 0))) ^ ivec3(0, 0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) / 1), 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) / 1), 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)))) << 0)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, 0 | (1)), 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) ^ (25834 & 0))))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) << 0)) >> 0), (0 >> _GLF_IDENTITY(int(5), int(5))), 0, 1), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) << 0)) >> 0), (0 >> _GLF_IDENTITY(int(5), int(5))), 0, 1), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) << 0)) >> 0), (0 >> _GLF_IDENTITY(int(5), int(5))), 0, 1))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) << 0)) >> 0), (0 >> _GLF_IDENTITY(int(5), int(5))), 0, 1), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) << 0)) >> 0), (0 >> _GLF_IDENTITY(int(5), int(5))), 0, 1))))))), 1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), min((1), (1))))) / 1), max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1))), 0), (true ? _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) / 1), _GLF_IDENTITY(1, (1) / 1))), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1))), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1))), 0))) : _GLF_FUZZED(ivec2(29196, _GLF_IDENTITY(42128, ~ (_GLF_IDENTITY(~ (42128), (~ (42128)) | (~ (42128)))))))))))), (true ? 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1)) : _GLF_FUZZED(-9122)))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) / 1))))), 0), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))))) * ((0 | 0) ^ 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ~ (~ ((1)))))) / 1))), 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) - 0) + (_GLF_IDENTITY(1, (1) / 1)), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (false ? _GLF_FUZZED(84637) : _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (_GLF_IDENTITY(0, max(0, 0)))) + (_GLF_IDENTITY(1, (1) / 1)), ~ (_GLF_IDENTITY(~ (0 + (_GLF_IDENTITY(1, (1) / 1))), (~ (0 + (_GLF_IDENTITY(1, (1) / 1)))) * 1))))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)) | (_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), (0 + (_GLF_IDENTITY(1, (1) / 1))) ^ 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(int((1)))) / 1)), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(int((1)))) / 1)), (true ? 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(int((1)))), max(_GLF_IDENTITY((1), int(int((1)))), _GLF_IDENTITY((1), int(int((1)))))) / 1)) : _GLF_FUZZED(28956)))) / 1)))), 0), _GLF_IDENTITY((ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) * (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), int(ivec4(0 + (_GLF_IDENTITY(1, (1) / 1)), 1, 0, 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (true ? (1) / 1 : _GLF_FUZZED(-19630))))))) / 1), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), 0)) >> ivec3(0, 0, 0), (_GLF_IDENTITY((ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), int(ivec4(0 + (_GLF_IDENTITY(1, (1) / 1)), 1, 0, 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1)))))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) * 1) + (_GLF_IDENTITY(1, (1) / 1))))), 0)), max(_GLF_IDENTITY((ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), int(ivec4(0 + (_GLF_IDENTITY(1, (1) / 1)), 1, 0, 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1)))))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) * 1) + (_GLF_IDENTITY(1, (1) / 1))))), 0)), ((ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), int(ivec4(0 + (_GLF_IDENTITY(1, (1) / 1)), 1, 0, 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1)))))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) * 1) + (_GLF_IDENTITY(1, (1) / 1))))), 0))) ^ ivec3(0, 0, 0)), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), int(ivec4(0 + (_GLF_IDENTITY(1, (1) / 1)), 1, 0, 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1)))))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) * 1) + (_GLF_IDENTITY(1, (1) / 1))))), 0)))) >> ivec3(0, 0, 0)) * ivec3(1, 1, 1)))))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(2), ivec3(2))))) ^ ivec3(0, _GLF_IDENTITY(0, (0) | (0)), 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, 1 * (4)), 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1), max((_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY((ivec3(4, 1, 0)), (true ? (ivec3(4, 1, 0)) : _GLF_FUZZED(ivec3(98685, 99684, 63810)))) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 | (4))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, _GLF_IDENTITY(1, ~ (~ (1))), 0)) ^ ivec3(0, 0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(floatBitsToInt(-0.8)) : _GLF_IDENTITY(1, (1) ^ 0)))), 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) / 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1), 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0)))) << 0)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 0), (_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 0), ivec3(0, 0, 0) | (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), 0)))) | (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(7), ivec3(7)))), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, clamp(_GLF_IDENTITY((1) / 1, ((1) / 1) + 0), _GLF_IDENTITY((1) / 1, (true ? (1) / 1 : _GLF_FUZZED(52083))), (1) / 1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(15451) : _GLF_IDENTITY((4), ~ (~ ((4))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(true ? 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1)) : _GLF_FUZZED(-9122), min(true ? 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1)) : _GLF_FUZZED(-9122), true ? 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1)) : _GLF_FUZZED(-9122)))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) / 1))))), 0), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, clamp(1, 1, 1))))), 1, 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x))), (1) / 1))), 1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) + (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3((1), 1, 1))) / 1)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)) | (_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1)))) >> 0)) ^ 0), 1, 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(ivec2((1), 1))) : _GLF_FUZZED(-47314))) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) + 0)) + 0) / 1))), 1, 1))))))), _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), max((_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(1, (1) / 1))))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(int((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))))))) / 1))))), 0), (ivec3(4, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (1) / 1)), int(ivec4(0 + (_GLF_IDENTITY(1, (1) / 1)), 1, 0, 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))), 1, _GLF_IDENTITY(1, 0 + (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) / 1))))), 0)) >> ivec3(0, 0, 0))))) >> (ivec3(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))), 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(2), (ivec3(2)) ^ ivec3(0, 0, 0)), ivec3(2))))) ^ ivec3(0, _GLF_IDENTITY(0, (0) | (0)), 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(0, (0) * (1 & 1))), clamp(ivec3(4, 1, _GLF_IDENTITY(0, (0) * (1 & 1))), _GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(0, (0) * (1 & 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec3(4, 1, _GLF_IDENTITY(0, (0) * (1 & 1))) : _GLF_FUZZED(ivec3(-49095, 6458, _GLF_IDENTITY(-14926, (-14926) << 0))))), _GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(0, (0) * (1 & 1))), max(ivec3(4, 1, _GLF_IDENTITY(0, (0) * (1 & 1))), ivec3(4, 1, _GLF_IDENTITY(0, (0) * (1 & 1)))))))) ^ ivec3(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) / 1)), max((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))), 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1), (_GLF_IDENTITY(ivec3(4, 1, 0), (ivec3(4, 1, 0)) ^ ivec3(0, 0, 0))) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(4, 1, 0), (_GLF_IDENTITY(ivec3(4, 1, 0), ~ (~ (_GLF_IDENTITY(ivec3(4, 1, 0), _GLF_IDENTITY((ivec3(4, 1, 0)) | (_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec3(ivec3(4, 1, 0))))), ((ivec3(4, 1, 0)) | (_GLF_IDENTITY(ivec3(4, 1, 0), ivec3(ivec3(ivec3(4, 1, 0)))))) << ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ ivec3(0, 0, 0)))))))))))) - 0), 64, 2), _GLF_struct_8(uvec4(1u), mat2x3(1.0), _GLF_struct_5(vec3(1.0), ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (true ? ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0) : _GLF_FUZZED(ivec4(-91170, 68773, 37162, 36599))))), ~ (~ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (true ? ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0) : _GLF_FUZZED(ivec4(-91170, 68773, 37162, 36599))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (true ? ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0) : _GLF_FUZZED(ivec4(-91170, 68773, 37162, 36599))))), ~ (~ (int(_GLF_IDENTITY(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (true ? ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(-91170, 68773, 37162, 36599), (ivec4(-91170, 68773, 37162, 36599)) + ivec4(0, 0, 0, 0))))))))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (true ? ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0) : _GLF_FUZZED(ivec4(-91170, 68773, 37162, 36599))))), ~ (~ (int(_GLF_IDENTITY(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0), (true ? ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0) : _GLF_FUZZED(ivec4(-91170, 68773, 37162, 36599))))))))))), 1, 1))), mat3x4(1.0), mat2x4(1.0)), _GLF_struct_6(mat4x3(1.0), mat2x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - length(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))))) - 0.0)))), bvec2(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-1677.2793), (vec3(1.0))[1], (vec3(1.0))[2]), _GLF_IDENTITY(vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)), max(vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)), _GLF_IDENTITY(vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)), clamp(vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)), _GLF_IDENTITY(vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)), min(vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)), vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)))), vec3((vec3(1.0))[0], _GLF_FUZZED(-8.9), _GLF_FUZZED(9.5)))))))), bvec3(true, false, false))), true, uvec2(1u)), bvec2(true), _GLF_struct_7(mat3x4(1.0), 1)), mat4(1.0), _GLF_struct_10(mat2x3(1.0), vec4(1.0), mat3x4(1.0), mat4x3(1.0), _GLF_IDENTITY(true, false || (true)), _GLF_struct_9(1, ivec2(1), ivec2(1), uvec2(1u), 1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-940.741)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 1.0, 0.0, 1.0, tan(0.0), sqrt(1.0), round(length(normalize(1.0))), 1.0, abs(0.0), 1.0, 0.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 1.0, 0.0, 1.0, tan(0.0), sqrt(1.0), round(length(normalize(1.0))), 1.0, abs(0.0), 1.0, 0.0))) + 0.0))), true, false, false)))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bool(bool(bvec3(_GLF_DEAD(false), true, false)))))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5058.7007)), bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0)))))))) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), _GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) ^ 0u), ~ (virtual_gid)))))], _GLF_IDENTITY(_GLF_struct_replacement_11.read, (_GLF_IDENTITY(_GLF_struct_replacement_11.read, (_GLF_struct_replacement_11.read) / 1u)) | 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
