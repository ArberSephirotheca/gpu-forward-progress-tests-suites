#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 ivec2 _f0;
 vec4 _f1;
 mat2 _f2;
 uint workgroup_id;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 _GLF_struct_3 _f1;
 mat3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 float _f1;
 bool _f2;
 ivec2 _f3;
 bvec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 bool _f3;
 float _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat2 _f1;
 _GLF_struct_0 _f2;
 uvec2 _f3;
 uvec3 _f4;
 _GLF_struct_1 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_2(ivec3(1), mat2(1.0), _GLF_struct_0(mat2x3(1.0), mat2x4(1.0), mat3x2(1.0), true, 1.0, uvec2(1u)), uvec2(1u), uvec3(1u), _GLF_struct_1(true, 1.0, true, ivec2(1), bvec2(true), bvec2(true)), uvec4(1u)), _GLF_struct_4(ivec2(1), _GLF_struct_3(ivec2(1), vec4(1.0), mat2(1.0), gl_WorkGroupID.x), mat3(1.0), ivec2(1)));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5._f1._f1.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
