#version 460
struct _GLF_struct_4 {
 bool _f0;
 vec2 _f1;
 vec3 _f2;
 vec2 _f3;
 uint _f4;
 vec4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 ivec2 _f1;
 bool _f2;
 mat3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 mat4 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 uint subgroup_size;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 bool _f1;
 mat4x2 _f2;
 vec3 _f3;
 uint _f4;
 mat2x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 bvec2 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 _GLF_struct_1 _f1;
 int _f2;
 mat4x2 _f3;
 uvec3 _f4;
 uint subgroup_local_id;
 bool _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4x2(1.0), gl_SubgroupSize, _GLF_struct_5(_GLF_struct_3(uvec2(1u), ivec2(1), true, mat3(1.0), ivec4(1)), mat4(1.0), _GLF_struct_4(true, vec2(1.0), vec3(1.0), vec2(1.0), 1u, vec4(1.0), mat4x3(1.0))));
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = _GLF_struct_replacement_6.subgroup_size;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat3x4(1.0), _GLF_struct_1(uvec4(1u), bvec2(true), _GLF_struct_0(mat2x4(1.0), true, mat4x2(1.0), vec3(1.0), 1u, mat2x3(1.0), mat3x4(1.0))), 1, mat4x2(1.0), uvec3(1u), gl_SubgroupInvocationID, true);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 uint subgroup_base = subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_2.subgroup_local_id;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_struct_replacement_2.subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x);
 uint read = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], 4, 64, 2);
 if((_GLF_struct_replacement_2.subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], read, 4, 64, 4);
}
