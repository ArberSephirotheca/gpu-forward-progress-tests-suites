#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uvec3 _f0;
 bool _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 _GLF_struct_9 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 mat3x4 _f1;
 uint _f2;
 uvec4 _f3;
 ivec3 _f4;
 bool _f5;
 mat3 _f6;
} ;

struct _GLF_struct_8 {
 int _f0;
 mat4 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat2 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 uvec4 _f1;
 uint _f2;
 mat4 _f3;
 vec3 _f4;
 vec3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_1 {
 uint _f0;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 int _f1;
 bvec3 _f2;
 uint _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat3x2 _f1;
 mat4 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 bvec4 _f2;
 _GLF_struct_8 _f3;
 mat2 _f4;
 _GLF_struct_10 _f5;
 mat2x4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(_GLF_struct_0(ivec2(1), 1, bvec3(true), 1u, bvec3(true)), mat3x2(1.0), mat4(1.0), _GLF_struct_1(1u), _GLF_struct_2(mat4x2(1.0), uvec4(1u), 1u, mat4(1.0), vec3(1.0), vec3(1.0), ivec4(1)), _GLF_struct_3(vec2(1.0), mat2(1.0)), gl_SubgroupSize), _GLF_struct_6(mat3x2(1.0), mat2(1.0), _GLF_struct_5(ivec2(1), bvec3(true))), bvec4(true), _GLF_struct_8(1, mat4(1.0), _GLF_struct_7(bvec4(true), mat3x4(1.0), 1u, uvec4(1u), ivec3(1), true, mat3(1.0))), mat2(1.0), _GLF_struct_10(mat2x3(1.0), _GLF_struct_9(uvec3(1u), true, bvec3(true)), mat3x2(1.0)), mat2x4(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_11._f0.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_11._f0.subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 40:
     ;
     case 0:
     case 11:
     case 44:
     case 64:
     case 55:
     subgroupAll(false);
     case 17:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     case 98:
     (-42510 != 11930);
     case 56:
     while(bvec4(true, true, false, false)[1])
      {
       if(true)
        {
         vec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
         {
         }
         while(false)
          {
           mat4(-502.383, 6.2, 5618.6714, 9.6, -1677.3148, -0.9, -6.3, -100.571, -1.6, -702.101, -25.29, 39.33, -6.7, -0.6, -8.7, 0.9);
           mat2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
           ;
          }
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 58:
           case 47:
           case 66:
           case 79:
           case 71:
           for(           smoothstep(vec3(-7.2, 2.3, -56.66), exp2(vec3(4155.2072, 4028.7135, -3.8)), vec3(581.434, -3.1, 6.4));
 true; subgroup_base)
            {
             mat3 _GLF_SWITCH_0_6v;
             (-74.90 - mat2x3(3.5, -10.50, -310.555, 96.56, -5909.8391, -4310.5443));
             vec3(7.6);
            }
           case 96:
           case 81:
           case 63:
           case 75:
           mat4x2(-233.600);
           break;
           case 23:
           mat3x4(mat2x3(mat3(0.4, 5.6, -9.2, -0.7, 846.809, 1.1, 4.4, 1.0, 20.60)));
           case 41:
           matrixCompMult(mat3(-2089.0471, 4.1, 304.927, 67.15, -5350.2042, 2.8, 392.315, 42.64, 4.3), mat3(2.0));
           default:
           1;
          }
        }
       bvec2 _GLF_SWITCH_0_7v[80], _GLF_SWITCH_0_8v[46];
       for(mat4x2 _GLF_SWITCH_0_9v; (false ? false : true); mat2(4.0, -6659.0719, 974.145, -6262.6140))
        {
         {
          ;
          mat4x2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[29], _GLF_SWITCH_0_12v;
         }
         vec3(272.095, -7.6, -3.7);
         mat2x3 _GLF_SWITCH_0_13v[75];
         for(         uvec2(175940u, 192585u);
 bvec2(true, true)[1]; -702.948)
          {
           uint _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[30];
           atanh(vec2(0.2, -1.8));
           mod(cosh(-649.076), -9059.3146);
           vec4(-5683.7919, 4.8, -140.443, 3771.2897);
           (_GLF_SWITCH_0_9v --);
           mat2(360.281, 5.9, 6.6, 0.3);
           mat3x4(887.056, -6.9, 1820.7719, 7.4, -60.32, -893.357, 7.0, -846.942, 15.96, 851.710, 566.231, 8.9);
           ;
          }
         do
          {
           vec2(8140.8894, -2.4);
           mat2 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[25];
           mat2x4((mat4(-8413.0281, 0.2, -501.883, -6.1, 3818.2301, 4.4, -76.71, -6.3, 7300.1652, -8.6, 3.5, 224.536, -30.41, 218.452, -7554.1225, 504.123) + mat4(20.50, -4.0, -8.5, -6.1, 3.8, -4.1, -3309.3916, -6957.7685, 205.461, 75.13, 6.2, -999.835, 3.5, 0.4, 5.5, 285.589)));
           equal(bvec2(false, false), bvec2(false, false));
          }
         while((ivec3(-76379, -52904, 83102) == ivec3(38940, 74818, -92105)));
         if((true ^^ true))
          {
           uvec2(175167u, 185064u);
           (vec2(6367.0808, -9895.1968) * (_GLF_SWITCH_0_9v ++));
           ;
           bvec2(true, true);
          }
         greaterThan(vec3(82.32, 2815.8602, 0.7), vec3(44.22, -1.6, -8.3));
         for(vec2 _GLF_SWITCH_0_18v[80]; false; mat2x4(mat4x3(39.31, -1296.0752, -8751.9700, 200.016, -2.8, -7.7, -11.55, 5.0, -12.25, -6.7, -7.8, -65.78)))
          {
           ;
           uvec4(167987u, 41783u, 143204u, 7961u);
           mat4 _GLF_SWITCH_0_19v[64], _GLF_SWITCH_0_20v[16], _GLF_SWITCH_0_21v;
           (_GLF_SWITCH_0_21v / _GLF_SWITCH_0_21v);
           outerProduct(vec4(15.87, 2981.8645, -7.6, 3756.3377), smoothstep(-54.05, -190.854, vec3(88.13, 0.2, 473.568)));
           mat4 _GLF_SWITCH_0_22v;
           (-- _GLF_SWITCH_0_22v);
          }
         (mat3(-338.457, 9464.9578, 8997.2468, -335.320, -9.3, 6817.3099, -3522.9654, -5590.9534, -881.152) / -6.7);
        }
       mat2x4 _GLF_SWITCH_0_23v;
       if((uvec3(125771u, 114968u, 169152u) != bitfieldInsert(uvec3(150398u, 73144u, 181830u), uvec3(81465u, 94035u, 100761u), 5015, -13422)))
        {
         {
          workgroup_base;
          ivec2 _GLF_SWITCH_0_24v[99];
          (false && bool(subgroup_local_id));
          uvec3 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
          uvec2(48344u, 96611u);
          ;
          ;
          int _GLF_SWITCH_0_28v;
          mat2x4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[40];
         }
         uvec3(174952u, 146266u, 66399u);
         if(all(bvec4(true, false, true, true)))
          {
           (mat2(-1.1, 8.5, -272.589, 75.38) / mat2(920.049, 4.5, 7.6, 719.572));
           -380;
           (mat4(-5447.8687, 37.37, -5450.3922, -8.3, -233.421, -9621.5725, 9.5, -44.28, -998.790, -14.24, 3.1, 0.0, 763.291, -2.1, 7.3, -786.976) - mat4(8507.7928, -6.6, 40.35, 322.074, -8.6, 0.9, -620.090, -7.4, 740.765, 2926.7593, -344.107, -7.9, 21.54, 479.251, -7.8, -1.9));
           (mat4x2(-6.3, -2.1, 5.8, -74.66, 1821.7129, -4931.1389, -6.5, -4147.9955) - mat4x2(mat4x3(-5.8, -929.340, -8.2, 51.69, -20.29, 940.779, 5.0, -3.4, 162.844, 8.0, -45.83, -9.2)));
          }
         else
          {
           mat4x2(-44.17, 165.605, -38.50, 9248.5603, -3793.7221, 7.1, 5863.1983, 2049.6889);
           mat3(509.593, -743.907, -9.7, -399.455, 370.482, 6.3, -5.4, 692.866, 9816.4723);
           mat3x2(45.37, -3.6, -459.049, -1.4, 6.3, -0.6);
           bvec4(false, true, false, true);
          }
         dot(injectionSwitch, vec2(-53.74, -43.72));
         mat3 _GLF_SWITCH_0_31v[80], _GLF_SWITCH_0_32v;
         ivec4(-87584, ivec2(72223, 31767), 82271);
         if(false)
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 98:
             case 76:
             case 54:
             case 68:
             case 37:
             case 38:
             case 21:
             mix(injectionSwitch, injectionSwitch, injectionSwitch);
             break;
             case 6:
             uvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[66];
             case 63:
             float _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[4];
             default:
             1;
            }
          }
         else
          {
          }
         do
          {
           switch(_GLF_SWITCH(0))
            {
             case 40:
             mat3x4(-5.2, -9.6, 9.6, -5.5, 74.55, -2.6, 461.829, -980.515, 8.3, -4519.9837, 6594.8456, -32.94);
             case 35:
             ;
             case 0:
             case 13:
             case 80:
             bool _GLF_SWITCH_0_33v;
             bvec3 _GLF_SWITCH_0_34v[46], _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
             uvec4 _GLF_SWITCH_0_37v[75], _GLF_SWITCH_0_38v;
             break;
             case 20:
             mat2x4 _GLF_SWITCH_1_0v[97], _GLF_SWITCH_1_1v[51], _GLF_SWITCH_1_2v[58];
             default:
             1;
            }
          }
         while((bvec2(false, false) == bvec2(false, true)));
        }
       else
        {
         mat4x3 _GLF_SWITCH_0_39v[64], _GLF_SWITCH_0_40v;
         (- mat4x2(962.396, -55.18, 9.0, -2.2, -0.1, 14.53, 5810.6006, -2.6));
         mat2x3 _GLF_SWITCH_0_41v[69], _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v;
         {
          switch(_GLF_SWITCH(0))
           {
            case 62:
            ivec4(98539, -83235, -34875, 29222);
            case 4:
            mat2(4.8, -226.899, 856.078, 2026.0208);
            case 0:
            case 44:
            case 75:
            case 85:
            bvec3(true, false, false);
            mat2x4 _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v[38], _GLF_SWITCH_0_46v;
            _GLF_SWITCH_0_42v;
            break;
            case 52:
            bvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
            case 6:
            uvec4(166707u, 183922u, 30566u, 193488u);
            default:
            1;
           }
         }
         for(         bvec4(true, bvec2(false, true), true);
 ((uvec2(86438u, 153616u) / 166415u) == uvec2(165051u, 40927u)); lessThanEqual((-3817.1941 - vec4(-61.93, -0.3, -77.29, -34.48)), vec4(-771.397, -1143.1968, -94.33, 78.37)))
          {
           -6425.1263;
          }
         while((bvec3(true, false, true) == bvec3(false, true, true)))
          {
           ;
          }
         if((false && false))
          {
           mat2(-1.5, 7.4, -651.661, -6.8);
           vec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
           bitfieldReverse(ivec2(-59467, 38042));
           ((subgroup_id));
           mat2x4(-18.10, -6.0, -70.59, -9.0, -199.997, -830.090, 191.108, 7.0);
           _GLF_SWITCH_0_40v;
          }
        }
       float(103116u);
      }
     default:
     1;
    }
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}
