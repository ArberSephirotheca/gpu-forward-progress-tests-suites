#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups.x)), max(~ (~ (gl_NumWorkGroups.x)), ~ _GLF_IDENTITY((~ (gl_NumWorkGroups.x)), ((~ (gl_NumWorkGroups.x))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 0u, 1u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(127416u) : 0u)) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), max(~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))))), 0u, 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-1.2)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-1.2)), (true ? float(_GLF_FUZZED(-1.2)) : _GLF_FUZZED(860.467))), _GLF_IDENTITY(float(_GLF_FUZZED(-1.2)), max(float(_GLF_FUZZED(-1.2)), float(_GLF_FUZZED(-1.2)))), _GLF_IDENTITY(float(_GLF_FUZZED(-1.2)), float(vec3(_GLF_IDENTITY(float(_GLF_FUZZED(-1.2)), mix(float(_GLF_FUZZED(7.4)), float(float(_GLF_FUZZED(-1.2))), bool(true))), 0.0, 0.0))))), bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) / 1.0)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)) || false))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-38.47, 7092.2364)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y)) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))), false || (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) && true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uvec4(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u, 1u, 1u))), (_GLF_IDENTITY(true ? workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_id << num_workgroup)) : subgroup_local_id)) + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))), (true ? workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u))) : _GLF_FUZZED(virtual_gid)) >> _GLF_IDENTITY(0u, min(0u, 0u))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4.5))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4.5))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4.5))), _GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4.5))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(true))), false, false), false)))))), false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), float(mat3x2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), min(mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), (mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true))))) - 0.0))), cos(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4.5))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(true)))), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4.5))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))), false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), float(mat3x2(mix(float(_GLF_FUZZED(-7851.6773)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), cos(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(0u & 163604u, max(0u & 163604u, 0u & 163604u))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY(0u, 0u | (0u)))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false, false)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false, false)))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false, false)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false, false)))))), true, false)))))))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-41.07)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) && true)))))), false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(-12.38)), bool(false))) < injectionSwitch.y)) && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), true && ((true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY((true), true && ((true))), false))))))) && _GLF_IDENTITY((false), ! (! ((false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0)))) - (0 >> _GLF_IDENTITY(int(3), int(3))))), (0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | (6))) * 1))), _GLF_IDENTITY(6, _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(ivec2(30919, -74855).g))) ^ 0)))), int(6)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ~ (~ ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) / 1)) + 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter))))), int(6)), (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (6)), 0 | (6))) * 1)))), ! (_GLF_IDENTITY(! (_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << _GLF_IDENTITY(0, (0) | (0)))), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)))) * 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) | 0)))))), min((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, 0 + (3))), max(~ (_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, (3) * 1)))), ~ (_GLF_IDENTITY(3, _GLF_IDENTITY(0 + (3), max(0 + (3), _GLF_IDENTITY(0 + (3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter)) : 0 + (3)))))))))))))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(3), int(3)))) | 0) ^ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), ~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) / 1), 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), max(int(6), int(6))))))))))), _GLF_IDENTITY(int(ivec4((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))) << 0) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), (int(8)) / 1)), max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1)))) | (int(8))), int(8)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | _GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), (int(8))))), int(8))) ^ 0))), (_GLF_IDENTITY(int(8), int(8))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))) | ((1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), bool(bvec3(! (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), _GLF_IDENTITY(int(6), 0 | (int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 6 : _GLF_FUZZED(_injected_loop_counter)))))))))), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (6) >> 0))))))), _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), (_GLF_IDENTITY(0, (0) + 0) << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), 0 ^ (1 << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(6)))), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0)))) - (0 >> _GLF_IDENTITY(int(3), int(3))))), (0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | (6))) * 1))), _GLF_IDENTITY(6, _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(ivec2(30919, -74855).g))) ^ 0)))), int(6)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ~ (~ ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) / 1)) + 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter))))), int(6)), (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (6)), 0 | (6))) * 1)))), ! (_GLF_IDENTITY(! (_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << _GLF_IDENTITY(0, (0) | (0)))), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)))) * 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) | 0)))))), min((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, 0 + (3))), max(~ (_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, (3) * 1)))), ~ (_GLF_IDENTITY(3, _GLF_IDENTITY(0 + (3), max(0 + (3), _GLF_IDENTITY(0 + (3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter)) : 0 + (3)))))))))))))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(3), int(3)))) | 0) ^ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), ~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) / 1), 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), max(int(6), int(6))))))))))), _GLF_IDENTITY(int(ivec4((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))) << 0) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), (int(8)) / 1)), max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1)))) | (int(8))), int(8)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | _GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), (int(8))))), int(8))) ^ 0))), (_GLF_IDENTITY(int(8), int(8))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))) | ((1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), bool(bvec3(! (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), _GLF_IDENTITY(int(6), 0 | (int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 6 : _GLF_FUZZED(_injected_loop_counter)))))))))), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (6) >> 0))))))), _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), (_GLF_IDENTITY(0, (0) + 0) << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), 0 ^ (1 << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(6)))), true, false))))), true && (_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0)))) - (0 >> _GLF_IDENTITY(int(3), int(3))))), (0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | (6))) * 1))), _GLF_IDENTITY(6, _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(ivec2(30919, -74855).g))) ^ 0)))), int(6)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ~ (~ ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) / 1)) + 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter))))), int(6)), (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (6)), 0 | (6))) * 1)))), ! (_GLF_IDENTITY(! (_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << _GLF_IDENTITY(0, (0) | (0)))), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)))) * 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) | 0)))))), min((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, 0 + (3))), max(~ (_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, (3) * 1)))), ~ (_GLF_IDENTITY(3, _GLF_IDENTITY(0 + (3), max(0 + (3), _GLF_IDENTITY(0 + (3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter)) : 0 + (3)))))))))))))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(3), int(3)))) | 0) ^ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), ~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) / 1), 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), max(int(6), int(6))))))))))), _GLF_IDENTITY(int(ivec4((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))) << 0) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), (int(8)) / 1)), max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1)))) | (int(8))), int(8)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | _GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), (int(8))))), int(8))) ^ 0))), (_GLF_IDENTITY(int(8), int(8))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))) | ((1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), bool(bvec3(! (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), _GLF_IDENTITY(int(6), 0 | (int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 6 : _GLF_FUZZED(_injected_loop_counter)))))))))), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (6) >> 0))))))), _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), (_GLF_IDENTITY(0, (0) + 0) << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), 0 ^ (1 << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(6)))), true, false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0)))) - (0 >> _GLF_IDENTITY(int(3), int(3))))), (0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | (6))) * 1))), _GLF_IDENTITY(6, _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(ivec2(30919, -74855).g))) ^ 0)))), int(6)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ~ (~ ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) / 1)) + 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter))))), int(6)), (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (6)), 0 | (6))) * 1)))), ! (_GLF_IDENTITY(! (_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << _GLF_IDENTITY(0, (0) | (0)))), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)))) * 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) | 0)))))), min((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, 0 + (3))), max(~ (_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, (3) * 1)))), ~ (_GLF_IDENTITY(3, _GLF_IDENTITY(0 + (3), max(0 + (3), _GLF_IDENTITY(0 + (3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter)) : 0 + (3)))))))))))))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(3), int(3)))) | 0) ^ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), ~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) / 1), 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), max(int(6), int(6))))))))))), _GLF_IDENTITY(int(ivec4((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(int(8), int(8))), 0)), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))) << 0) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), (int(8)) / 1)), max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1)))) | (int(8))), int(8)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | _GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), (int(8))))), int(8))) ^ 0))), (_GLF_IDENTITY(int(8), int(8))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))) | ((1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), bool(bvec3(! (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), _GLF_IDENTITY(int(6), 0 | (int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 6 : _GLF_FUZZED(_injected_loop_counter)))))))))), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (6) >> 0))))))), _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), (_GLF_IDENTITY(0, (0) + 0) << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), 0 ^ (1 << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(6)))), true, false))))), true && (_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, 0 | (6))))) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(70180))) | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, min(6, 6))))) << 0))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(6, max(6, 6)), (_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, _GLF_IDENTITY(min(6, 6), (true ? min(6, 6) : _GLF_FUZZED((atomicXor(_injected_loop_counter, -90567) % -84565)))))))) << 0)))) - (0 >> _GLF_IDENTITY(int(3), int(3))))), (0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | (6))) * 1))), _GLF_IDENTITY(6, _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(ivec2(30919, -74855).g))) ^ 0)))), int(6)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ~ (~ ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) / 1)) + 0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED((_injected_loop_counter & _injected_loop_counter))))), int(6)), (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))) ^ 0)) | (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (6)), 0 | (6))) * 1)))), ! (_GLF_IDENTITY(! (_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << _GLF_IDENTITY(0, (0) | (0)))), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)))) * 1), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), (_GLF_IDENTITY(int(6), max(int(6), int(6)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) | 0)))))), min((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, 0 + (3))), max(~ (_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(3, (3) * 1), clamp(_GLF_IDENTITY(3, (3) * 1), _GLF_IDENTITY(_GLF_IDENTITY(3, (3) * 1), (_GLF_IDENTITY(3, (3) * 1)) >> 0), _GLF_IDENTITY(3, (3) * 1)))))), ~ (_GLF_IDENTITY(3, _GLF_IDENTITY(0 + (3), max(0 + (3), _GLF_IDENTITY(0 + (3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter)) : 0 + (3)))))))))))))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(_injected_loop_counter)))) | (int(3))))), ((0 << _GLF_IDENTITY(int(3), int(3)))) | 0) ^ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))), ~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) / 1), 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), max(int(6), int(6))))))))))), _GLF_IDENTITY(int(ivec4((0 << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), min((0 >> _GLF_IDENTITY(int(8), int(8))), (0 >> _GLF_IDENTITY(int(8), int(8))))), 0)), (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), 0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))) << 0) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))), 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), (int(8)) / 1)), _GLF_IDENTITY(max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1))), (_GLF_IDENTITY(max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1))), clamp(max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1))), max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1))), max((_GLF_IDENTITY(int(8), (int(8)) / 1)), (_GLF_IDENTITY(int(8), (int(8)) / 1)))))) | 0)) | (int(8))), int(8)))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | (int(8))), int(8))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) * 1)) + 0)), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) | _GLF_IDENTITY((int(8)), clamp((int(8)), (int(8)), (int(8))))), int(8))) ^ 0))), (_GLF_IDENTITY(int(8), int(8))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0))) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))) | ((1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), bool(bvec3(! (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), _GLF_IDENTITY(int(6), 0 | (int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(int(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 6 : _GLF_FUZZED(_injected_loop_counter)))))))))), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (6) >> 0))))))), _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))), (_GLF_IDENTITY(0, (0) + _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0))))))) << _GLF_IDENTITY(int(3), int(3))) ^ ((1 << _GLF_IDENTITY(int(6), int(6)))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), 0 ^ (1 << _GLF_IDENTITY(int(6), int(6))))))) >> _GLF_IDENTITY(int(6), int(6)))), true, false)))))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)) || false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7216.6080)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))), bool(true))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(81.61, -8629.5325)) : injectionSwitch)), injectionSwitch)).y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))), false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), ! (! (! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))))), false), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), ((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.531)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-702.506)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.531)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.531)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(389.565, -920.547)) : injectionSwitch))) - vec2(0.0, 0.0)).y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, min((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.531)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (true ? min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(7.7)))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.531)), bool(false))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(vec3(length(vec3(0.0, 0.0, 0.0)), cos(sin(0.0)), 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.531)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (float(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-0.8)), bool(false))), injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.531)), bool(false))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-85.14))), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))), float(mat4(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.2))))), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0)))), 0.0, tan(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0)))) / 1.0), (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), max(float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))))), _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, cos(0.0))), clamp(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, cos(0.0))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), _GLF_IDENTITY(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(radians(96.95)) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-71.52))), 0.0)))), injectionSwitch.x), tan(0.0), 0.0, cos(0.0))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, cos(0.0)))))).x) / abs(1.0)))) + (mat3x2(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), 0.0, 0.0, length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0))))) - 0.0)), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-6230.6957)))) * 1.0), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(length(0.0)) : clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y), (true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(430.761))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat4x2(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-78.21) : 1.0)), 1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-943.093))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) && true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)) || _GLF_IDENTITY((false), ! (! ((false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(_GLF_IDENTITY(read, (read) >> 0u)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED((injectionSwitch / vec2(-7679.4551, _GLF_IDENTITY(_GLF_IDENTITY(-919.674, float(mat4x3(-919.674, 1.0, log(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(-919.674, float(mat4x3(-919.674, 1.0, log(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * 1.0)))), vec2(1.0, 1.0) * (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch / vec2(-7679.4551, -919.674))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), true && (((! (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat2(9575.5360, 8.3, 590.028, -44.44))))), _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (injectionSwitch.x > injectionSwitch.y)))))))), true, false), bvec3(bvec3(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))))))), true, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.4))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.4)))), float(_GLF_FUZZED(4.3)), bool(false)))) / 1.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
