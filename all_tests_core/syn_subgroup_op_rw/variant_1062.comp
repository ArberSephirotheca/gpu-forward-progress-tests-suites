#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, false)))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, true, true))), false, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.5) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(712.463)), float(1.0), bool(_GLF_IDENTITY(true, (true) && true)))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED((6185.6385))), float(max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), bool(true))))), float(_GLF_FUZZED(-14.63)), bool(false))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), max(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(712.463)), float(1.0), bool(_GLF_IDENTITY(true, (true) && true)))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED((6185.6385))), float(max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), bool(true))))), float(_GLF_FUZZED(-14.63)), bool(false))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(712.463)), float(1.0), bool(_GLF_IDENTITY(true, (true) && true)))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED((6185.6385))), float(max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), bool(true))))), float(_GLF_FUZZED(-14.63)), bool(false))), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)))), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.2) : 0.0)), 0.0))) / 1.0), sqrt(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), transpose(transpose(mat3(1.0) * (mat2x3(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : 1.0))), min(max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : 1.0))), max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.6) : 1.0)))))), 0.0, 0.0, 1.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0))))))), (float(_GLF_IDENTITY(mat2x3(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), transpose(transpose(mat3(1.0) * (mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))) * 1.0)), 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / 1.0), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(7.1) : clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, injectionSwitch.x))), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ -6.9))))))), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-219.312)), float(0.0), bool(true))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))) - 0.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), vec3(0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(sign(15.66)) : _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))))))), dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0)), 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 0.0, 1.0)))), (_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sin(0.0), 1.0)), min(vec3(mat4(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sin(0.0), 1.0)), vec3(mat4(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sin(0.0), 1.0)))))), dot(vec3(1.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0))), 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, sin(0.0), 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0), (true ? mat2x4(1.0, sin(0.0), 0.0, 1.0, exp(0.0), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(7.2, -0.8, 1.1, 6795.1718, 69.44, -8.7, -897.877, 1081.4762)))))), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), max(float(vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))))))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) + sqrt(0.0))), 0.0, 1.0)), float(vec4(float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((true ? -7241.0955 : -8.4)) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(39.94)), float(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0)))), bool(true)))) / 1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-69.50)), bool(false))), sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(833.054)))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))) + 0.0), 1.0)), 0.0, 0.0, 0.0)))) + sqrt(0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(uintBitsToFloat(uvec2(130367u, 178425u))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(16392u) : _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))) | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))), clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))))) ^ (workgroup_base)), workgroup_base, workgroup_base)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(16392u) : _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))) | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))), clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, min((_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u)), (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u, (_GLF_IDENTITY(uint(2u), uint(2u))) >> 0u))) * 1u))))) ^ (workgroup_base)), workgroup_base, workgroup_base)), 0u))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))), clamp((_GLF_IDENTITY(~ (1), 0 ^ (~ _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1), ((1)) >> 0), 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(2), int(2)))), max(ivec4(_GLF_IDENTITY((1), ((1)) >> 0), 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(2), int(2)))), ivec4(_GLF_IDENTITY((1), ((1)) >> 0), 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(2), int(2))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | _GLF_IDENTITY(0, (0) | 0)))))) | (1)))), 0, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 0), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 0, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))) ? ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, max(2, 2))))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))) - 0))) | 0 : _GLF_FUZZED(-9554)))), (true ? _GLF_IDENTITY((((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31339) : 1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 0), (_GLF_IDENTITY((((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31339) : 1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 0), max((((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31339) : 1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 0), _GLF_IDENTITY((((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31339) : 1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 0), (false ? _GLF_FUZZED(10077) : (((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31339) : 1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | 0)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-61898))), 1, 1))))))), 0 ^ (~ (1)))), ~ (~ ((_GLF_IDENTITY(~ (1), 0 ^ (~ (1))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64005) : (1))), 0 ^ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))), (true ? (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-64005) : (1))), 0 ^ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))) : _GLF_FUZZED(78092))))) | (~ (1)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | (_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid]))))) / _GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY(buf[virtual_gid], ~ _GLF_IDENTITY((~ (buf[virtual_gid])), ((~ (buf[virtual_gid]))) - 0u)))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, abs(0.0))), mix(vec2(_GLF_FUZZED(-6478.0920), _GLF_FUZZED(-9147.2825)), vec2((vec2(vec3(injectionSwitch, abs(0.0))))[0], _GLF_IDENTITY((vec2(vec3(injectionSwitch, abs(0.0))))[1], ((vec2(vec3(injectionSwitch, abs(0.0))))[1]) * 1.0)), bvec2(true, true)))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.90), _GLF_FUZZED(-0.9)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 1.0, 1.0, 0.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true)))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (true ? read : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_FUZZED(workgroup_size)))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), bool(bvec2((_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), (true) || false) ? 64 : _GLF_FUZZED(-56371))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2928.0532) : injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, max(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (false ? _GLF_FUZZED((subgroup_size ++)) : read))) | (read)))), _GLF_IDENTITY(read, max(read, read)))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), int(ivec3(_GLF_IDENTITY(~ (~ (64)), 0 | (~ (~ (64)))), 0, 0)))), 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  return;
}
