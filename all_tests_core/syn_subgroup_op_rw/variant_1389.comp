#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 mat4x3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 mat4x2 _f1;
 vec2 _f2;
 ivec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_15 {
 int _f0;
 bvec4 _f1;
 vec3 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 uint _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 mat4x3 _f2;
 uvec2 _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 uvec2 _f1;
 int _f2;
 bvec4 _f3;
 uvec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_19 {
 uint subgroup_id;
 _GLF_struct_14 _f0;
 mat4x3 _f1;
 mat3x4 _f2;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 ivec2 _f1;
 float _f2;
 vec3 _f3;
 mat3x4 _f4;
 mat3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_8 {
 bool _f0;
 ivec3 _f1;
 ivec2 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 bvec2 _f3;
 vec4 _f4;
 ivec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 uvec3 _f1;
 bvec4 _f2;
 uint _f3;
 bvec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 float _f1;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 vec2 _f1;
 bool _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_2 _f0;
 uint num_workgroup;
 mat4x3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_10 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(gl_SubgroupID, _GLF_struct_14(_GLF_struct_12(mat2x3(1.0), uvec2(1u), 1, bvec4(true), uvec3(1u), mat3x2(1.0)), _GLF_struct_13(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), mat4x3(1.0), mat3x4(1.0), _GLF_struct_18(_GLF_struct_15(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 ^ (int(1))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(1), 0 ^ (int(1)))), _GLF_IDENTITY(((_GLF_IDENTITY(int(1), 0 ^ (int(1))))) | ((_GLF_IDENTITY(int(1), 0 ^ (int(1))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(45937) : ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), max(0 ^ (int(1)), _GLF_IDENTITY(0 ^ (int(1)), 0 | (0 ^ (int(1))))))))) | ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), (_GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), ivec3(ivec3(ivec3(1, 0, 0)))))))) >> 0))), 0))))) << 0)))), (true ? 0 ^ (int(1)) : _GLF_FUZZED(-95752)))) | _GLF_IDENTITY((_GLF_IDENTITY(0 ^ (int(1)), ~ (~ (0 ^ (int(1)))))), ((_GLF_IDENTITY(0 ^ (int(1)), ~ (~ (0 ^ (int(1))))))) | ((_GLF_IDENTITY(0 ^ (int(1)), ~ (~ (0 ^ (int(1)))))))))))), int(ivec3(_GLF_IDENTITY(false ? _GLF_FUZZED(45937) : ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), max(0 ^ (int(1)), _GLF_IDENTITY(0 ^ (int(1)), 0 | (0 ^ (int(1))))))))) | ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), (_GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0))))) << 0)))), (true ? 0 ^ (int(1)) : _GLF_FUZZED(-95752)))) | (_GLF_IDENTITY(0 ^ (int(1)), ~ (~ (0 ^ (int(1)))))))))), (false ? _GLF_FUZZED(45937) : ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), max(0 ^ (int(1)), _GLF_IDENTITY(0 ^ (int(1)), 0 | (0 ^ (int(1))))))))) | ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), (_GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) >> 0, ((~ (1)) >> 0) >> 0)))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 0))))) << _GLF_IDENTITY(0, (0) / 1))))), (true ? 0 ^ (int(1)) : _GLF_FUZZED(-95752)))) | (_GLF_IDENTITY(0 ^ (int(1)), ~ (~ _GLF_IDENTITY((0 ^ (int(1))), (false ? _GLF_FUZZED(35132) : (0 ^ (int(1))))))))))))) / 1), 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))))))), _GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) * 1)), 1, 1), clamp(ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(ivec2(3, 1)))) | (_GLF_IDENTITY(3, clamp(3, 3, 3))))))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1))), (_GLF_IDENTITY(ivec4(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (1 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), max((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), clamp(ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(ivec2(3, 1)))) | (_GLF_IDENTITY(3, clamp(3, 3, 3))))))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))) >> ivec4(0, 0, 0, 0))), max(int(_GLF_IDENTITY(ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), clamp(ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))), int(3))), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))), 1), ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), int(_GLF_IDENTITY(ivec4(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), clamp(ivec4(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) << 0)) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), min((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (3))) * 1)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), int(ivec2((1 << _GLF_IDENTITY(int(3), int(3))), 0))))))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-20902))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1), ivec4(1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec4(_GLF_IDENTITY(int(3), int(3)), 1, 0, 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(77526))), int(3))), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))))))), bvec4(true), vec3(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)), mat2x3(1.0), 1u), _GLF_struct_16(mat4x3(1.0), mat4x2(1.0), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(5629.8669)), vec2((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0))[1], (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(1.7) : (vec2(1.0))[1]))), bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true))), _GLF_IDENTITY(true, true && (true)))))) + vec2(0.0, 0.0)), ivec4(1), uvec2(1u)), mat4x3(1.0), uvec2(1u), _GLF_struct_17(mat4x3(1.0), mat3x4(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false) && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.2)), vec2(_GLF_FUZZED(6.0), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-419.786, -2049.7537, -7.4), (vec3(-419.786, -2049.7537, -7.4)) * mat3(1.0)).g), _GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED((-277.342 * -4.6)), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED((-277.342 * -4.6)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(_GLF_FUZZED((-277.342 * -4.6)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), float(((injectionSwitch))[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) / vec2(1.0, 1.0), clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(vec3(-419.786, -2049.7537, -7.4).g), _GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED((-277.342 * -4.6))), float(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))))[1]), bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(vec3(-419.786, -2049.7537, -7.4).g), _GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED((-277.342 * -4.6))), float(((injectionSwitch))[1]), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.2)), vec2(_GLF_FUZZED(vec3(-419.786, -2049.7537, -7.4).g), _GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED((-277.342 * -4.6))), float(((injectionSwitch))[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((false), ((false)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)) && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.6)), bool(false))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(3063.4862)), bool(false))))), 0.0)), 0.0, 0.0))) > injectionSwitch.y)), true, true, true)))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_2(_GLF_struct_0(mat2x3(1.0)), _GLF_struct_1(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), vec2(1.0), true, bvec2(true))), gl_NumWorkGroups.x, mat4x3(1.0), _GLF_struct_4(vec4(1.0), _GLF_struct_3(mat3x2(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0))), max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0))), float(mat4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0)))) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-3228.0996), (_GLF_IDENTITY(_GLF_FUZZED(-3228.0996), clamp(_GLF_FUZZED(-3228.0996), _GLF_FUZZED(-3228.0996), _GLF_FUZZED(-3228.0996)))) + 0.0)), bool(_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_struct_7(_GLF_struct_5(ivec4(1), uvec3(1u), bvec4(true), 1u, bvec3(true), mat3x2(1.0)), _GLF_struct_6(mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)), mat3x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), bvec2(true), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ivec2(1), mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ (uvec4(1u)), clamp(~ (uvec4(1u)), ~ (uvec4(1u)), ~ (uvec4(1u)))))), (_GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ (uvec4(1u)), clamp(~ (uvec4(1u)), ~ (uvec4(1u)), ~ (uvec4(1u))))))) ^ uvec4(0u, 0u, 0u, 0u))), _GLF_struct_10(_GLF_struct_8(true, _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) << ivec3(0, 0, 0), min((ivec3(1)) << ivec3(0, 0, 0), (ivec3(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-80758) : _GLF_IDENTITY(1, 0 | (1)))), 0, 0))))) << ivec3(0, 0, 0)))), ivec2(1), uvec3(1u), bvec4(true), mat3x4(1.0)), _GLF_struct_9(ivec3(1), _GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(_GLF_IDENTITY(0, 0 + (0)), 0)), 1.0, vec3(1.0), mat3x4(1.0), mat3(1.0), uvec3(1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), (injectionSwitch) * mat2(1.0)).x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-227.591)), bool(false))), injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 1.0, 0.0, abs(1.0), sqrt(0.0), 0.0, 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) ? _GLF_FUZZED(5.5) : 1.0)), 0.0))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_DEAD(false)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(bool(_GLF_DEAD(false)), true))))))) && true))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))), true)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))), true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)), 1.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))), true))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)))) && true) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true)))))))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), false || (_GLF_IDENTITY(false || ((false)), (_GLF_IDENTITY(false || ((false)), bool(bool(false || ((false)))))) && true)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) && _GLF_IDENTITY(true, bool(bool(true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))) && (false))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true)))))))))), (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) && _GLF_IDENTITY(true, bool(bool(true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))) && (false))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true)))))))))), (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) && _GLF_IDENTITY(true, bool(bool(true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(1.3)), bool(false))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))) && (false))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))) && true)))))))))), (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id, clamp(_GLF_struct_replacement_19.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id, min(_GLF_struct_replacement_19.subgroup_id, _GLF_struct_replacement_19.subgroup_id)), _GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id, (_GLF_struct_replacement_19.subgroup_id) | (_GLF_struct_replacement_19.subgroup_id)))) * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id, clamp(_GLF_struct_replacement_19.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id, min(_GLF_struct_replacement_19.subgroup_id, _GLF_struct_replacement_19.subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_19.subgroup_id, uint(uvec4(_GLF_struct_replacement_19.subgroup_id, 1u, 1u, 1u))), _GLF_struct_replacement_19.subgroup_id, _GLF_struct_replacement_19.subgroup_id)), (_GLF_struct_replacement_19.subgroup_id) | (_GLF_struct_replacement_19.subgroup_id)))) * subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ((! (_GLF_IDENTITY(false, (false) || false)))) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true)))))))) && true))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_19.subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u)), ((false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))) | uvec2(0u, 0u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(1u, ~ (~ (1u))))))), min(clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), uint(uvec3((subgroup_size) | (subgroup_size), 0u, 0u)))), 1u), (false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), max(uvec2(uvec3(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), uvec2(uvec3(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u)))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((subgroup_size) | (subgroup_size)) | ((subgroup_size) | (subgroup_size)))), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(1u, min(1u, 1u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u)))), (clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))))) - uvec2(0u, 0u)), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u)))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(2659u, 49954u)) : uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))) | (subgroup_size)), 1u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), min(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (subgroup_size))), max((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (subgroup_size)))))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), uvec2(uvec4(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), 0u, 1u))))))))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))))) << 0u)), 0u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))), 0u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))))) << 0u)), 0u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(1u, 0u | (1u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))), 0u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))))) << 0u)), 0u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))), 0u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))))) << 0u)), 0u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))), 0u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u)) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))))))) - 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))), bool(bvec3(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), 4, _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))) && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))) && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))), false || (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), true && (false)))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8271.2620) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))) * (injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.6)), bvec2(true, false))).y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((184.534 - _GLF_IDENTITY(_GLF_IDENTITY(3.0, clamp(3.0, _GLF_IDENTITY(3.0, float(_GLF_IDENTITY(mat4x2(3.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-419.737)), float(0.0), bool(true))))))), 1.0, 0.0, 1.0), transpose(transpose(mat4x2(3.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), 3.0)), mix(float(3.0), float(_GLF_FUZZED(10.00)), bool(false)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((184.534 - 3.0)), (_GLF_IDENTITY(_GLF_FUZZED((184.534 - 3.0)), 1.0 * (_GLF_FUZZED((184.534 - 3.0))))) - 0.0)), max(float(_GLF_IDENTITY(_GLF_FUZZED((184.534 - 3.0)), (_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(184.534, float(mat2x4(184.534, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))) - 3.0)), _GLF_IDENTITY(1.0 * (_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0), clamp((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0), (_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0), _GLF_IDENTITY((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0), max((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0), (_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0))))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0 * (_GLF_FUZZED((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0))), mix(float(1.0 * (_GLF_FUZZED((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0)))), float(_GLF_IDENTITY(_GLF_FUZZED((+ 7.8)), (true ? _GLF_IDENTITY(_GLF_FUZZED((+ 7.8)), float(mat3x2(_GLF_FUZZED((+ 7.8)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(0.0), 1.0, 1.0, 1.0))) : _GLF_FUZZED(-5873.9746)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), mix(float(float(mat3x4(_GLF_IDENTITY(1.0 * (_GLF_FUZZED((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0))), mix(float(1.0 * (_GLF_FUZZED((_GLF_IDENTITY(184.534, clamp(184.534, 184.534, 184.534)) - 3.0)))), float(_GLF_FUZZED((+ 7.8))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(3.8)), bool(false)))))) - 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED((184.534 - 3.0)), (_GLF_IDENTITY(_GLF_FUZZED((184.534 - 3.0)), _GLF_IDENTITY(1.0 * (_GLF_FUZZED((184.534 - 3.0))), 0.0 + (1.0 * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED((184.534 - 3.0))), clamp((_GLF_FUZZED((184.534 - 3.0))), (_GLF_FUZZED((184.534 - 3.0))), (_GLF_FUZZED((_GLF_IDENTITY(184.534, min(_GLF_IDENTITY(184.534, 1.0 * (184.534)), 184.534)) - 3.0))))), clamp((_GLF_FUZZED((184.534 - 3.0))), (_GLF_FUZZED((_GLF_IDENTITY(184.534 - 3.0, clamp(184.534 - _GLF_IDENTITY(3.0, min(3.0, 3.0)), 184.534 - 3.0, 184.534 - 3.0))))), _GLF_IDENTITY((_GLF_FUZZED((184.534 - 3.0))), max((_GLF_FUZZED((184.534 - 3.0))), (_GLF_FUZZED((184.534 - 3.0))))))))))) - 0.0)))), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y)) && true))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, (false) || false))))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), vec2(_GLF_FUZZED((-9.8 / (- -0.1))), (injectionSwitch)[1]), bvec2(false, true))).y))))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(false, (false) || false))) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), true)), false, true)))), false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false, true))))) && true)) || false), true && (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true))))))))), true && (! (_GLF_DEAD(false)))), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))), true && (! (_GLF_DEAD(false)))), true, false, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], read, _GLF_IDENTITY(4, (4) << 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), _GLF_IDENTITY(false || (((injectionSwitch.x > injectionSwitch.y)) || false), (false || (((injectionSwitch.x > injectionSwitch.y)) || false)) || false))), true, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
