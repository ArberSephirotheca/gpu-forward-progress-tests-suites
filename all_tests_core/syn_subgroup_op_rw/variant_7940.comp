#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec2 _f1;
 ivec4 _f2;
 uint subgroup_id;
 uint _f3;
 ivec3 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(true), uvec2(1u), ivec4(1), gl_SubgroupID, 1u, ivec3(1), mat4x2(1.0));
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.x = _GLF_IDENTITY(num_workgroup, (num_workgroup) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base;
 uint virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_struct_replacement_1.subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.z, _GLF_IDENTITY((1u & 1u) * (GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.z), max((1u & 1u) * (GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.z), (1u & 1u) * _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.z), uint(uint((GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.z)))))));
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + _GLF_struct_replacement_1.subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.z + 1) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x);
 uint read = atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], 4, 64, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))));
 GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.y = read;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id, uvec3(GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) << 0)], _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id[1], (GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id[1]) + 0u), GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id[2])).z + 1 < GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x)
  {
   atomicStore(checker[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.y, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], GLF_merged3_0_1_13_1_1_4_2_1_17num_workgroupreadsubgroup_local_id.y, 4, 64, 4);
   subgroupAll(true);
  }
}
