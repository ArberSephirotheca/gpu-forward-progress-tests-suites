#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec4(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), sin(0.0), _GLF_ONE(1.0, injectionSwitch.y)), (vec4(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)))), sin(0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) / vec4(1.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], max(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2])), gl_WorkGroupID))), (uvec3(gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ ((workgroup_base + subgroup_id * subgroup_size)))) >> 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29690)))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29690)))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29690)))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29690)))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29690)))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29690)))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29690)))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) >> 0))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(acos(-5.1)))))) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), 0u | (0u | (subgroup_local_id + 1)))), (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))) - 0u) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * (4))) << 0), 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(false, true, true)))))
    return;
   atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (bool(injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) || (! (! _GLF_IDENTITY((bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (((bool(injectionSwitch.x > injectionSwitch.y)))), (! (((bool(injectionSwitch.x > injectionSwitch.y))))) || false))), bool(bool(! ((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, length(0.0), 0.0)), (float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, length(0.0), 0.0))) - 0.0)))), true && (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x, 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(4.4) : float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))), float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))))) / 1.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(0.0, 0.0) + (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-52.72, -93.95)) : injectionSwitch)).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.1), mix(float(_GLF_FUZZED(3.7)), float(_GLF_FUZZED(4.1)), bool(true)))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.70)), float(1.0), bool(true))), 1.0)), 0.0), min(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.70)), float(1.0), bool(true))), 1.0)), (false ? _GLF_FUZZED(sign(-873.834)) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.70)), float(1.0), bool(true))), 1.0)))), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.70)), float(1.0), bool(true))), 1.0)), 0.0))), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.1) : 0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(60.37), _GLF_IDENTITY(_GLF_FUZZED(-4.2), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, true && (false))))), float(_GLF_FUZZED(-4.2)), bool(true))), (vec4(1.0, 1.0, 1.0, 0.0))[2], _GLF_FUZZED(9.4)), vec4((vec4(1.0, 1.0, 1.0, 0.0))[0], (vec4(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0))[1], _GLF_FUZZED(5709.5258), (vec4(1.0, 1.0, 1.0, 0.0))[3]), bvec4(true, true, false, true))), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), float(float(_GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-1904.5963) : (_GLF_ONE(1.0, injectionSwitch.y))))))) - 0.0), 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, 1.0)))), (false ? _GLF_FUZZED(-25.80) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))), 1.0))))))))), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0), 0.0, exp(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)))), max(float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0)), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), max(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))), mix(float(_GLF_FUZZED(799.427)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0)), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), max(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))), mix(float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0)), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), max(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))), float(_GLF_FUZZED(2.9)), bool(false)))), bool(true)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((- 8.6)))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), float(_GLF_FUZZED((- -26.98))), bool(false))))) * 1.0), 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-353.585, (-353.585) + tan(0.0)))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, sin(abs(0.0)), 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))), mat4x2(mat4x3(mat4x2(0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, sin(abs(0.0)), 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0)))))))), sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (true ? mat2(1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2(6.0, -99.14, -2019.8326, -0.5))))), length(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0))), clamp(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0)))))), log(1.0), 1.0), mat3x4(mat4(mat3x4(vec2(1.0, 1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((- 0.1)) : 1.0)), 0.0, 1.0, 1.0)), length(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0))), clamp(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0))), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), length(0.0)))))), log(1.0), 1.0))))))))), 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((-40.81 * 58.13) - -873.674))), float(0.0), bool(true)))), (mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))) / _GLF_IDENTITY(mat2(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-6695.9253)))), 1.0), mat2(mat2(mat2(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (true ? clamp(1.0, 1.0, 1.0) : _GLF_FUZZED(-6695.9253)))), 1.0)))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 0.0, tan(0.0))) + mat4x3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-319.095)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0), _GLF_IDENTITY(mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(37.42))), 0.0))) / 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)) + (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), (_GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), max(float(_GLF_FUZZED(-6.8)), float(_GLF_FUZZED(-6.8)))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), mix(float(float(_GLF_FUZZED(-6.8))), float(_GLF_FUZZED(-4472.9399)), bool(false)))))) / 1.0), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(float(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, log(1.0)))))), 0.0)), _GLF_IDENTITY((determinant(mat2(0.0, 1.0, 0.0, 0.0))), log(1.0) + ((determinant(mat2(0.0, 1.0, 0.0, 0.0))))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.9)), bool(false))), 1.0))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(_GLF_IDENTITY(mat3(-7514.6455, 246.467, 3.2, 7788.4089, -3619.5402, 97.59, 0.3, 345.551, -8.9), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(-7514.6455, 246.467, 3.2, 7788.4089, -3619.5402, 97.59, 0.3, 345.551, -8.9), (true ? mat3(-7514.6455, 246.467, 3.2, 7788.4089, -3619.5402, 97.59, 0.3, 345.551, -8.9) : _GLF_FUZZED(mat3(-3.9, -881.063, -27.77, -295.938, -9.5, -40.57, 735.935, 95.98, -3.0)))) : _GLF_FUZZED(mat3(317.905, 1.3, -0.5, -2647.4119, 0.3, -1.9, -791.096, 2803.9091, 2050.0380))))) : _GLF_IDENTITY(mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), cos(0.0)))), 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), min(float(vec3(1.0, 1.0, 0.0)), float(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))))), 1.0)), 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.1)), bool(false))))), 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0))), (mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2474.0811))))), 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0)))), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? determinant(mat2(0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-2.9))), (determinant(mat2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(41.54)), float(0.0), bool(true))))), 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 0.0, 1.0)))) * mat3(1.0))), (_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), (float(_GLF_FUZZED(-6.8))) / exp(0.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0))), (mat3(mat4(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.6)), bool(false))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(1.0), round(length(normalize(1.0))), sin(0.0))), mix(float(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(1.0), round(length(normalize(1.0))), sin(0.0)))), float(_GLF_FUZZED(8.4)), bool(false))))))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), (true ? float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(1.0), round(length(normalize(1.0))), sin(0.0))), mix(float(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(1.0), round(length(normalize(1.0))), sin(0.0)))), float(_GLF_FUZZED(8.4)), bool(false))))))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))) : _GLF_FUZZED(-8988.4779)))), 0.0, 1.0)))) * mat3(1.0))), (_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0))), (mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 0.0), (mat2(0.0, 1.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))) * mat2(1.0))), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0)))) * mat3(1.0))), mat3(1.0) * (transpose(_GLF_IDENTITY(mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8817.0784) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0))), (mat3(mat4(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(3.0))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8734.1659)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), (determinant(mat2(0.0, 1.0, 0.0, 0.0))) / 1.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0))), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)))) * mat3(1.0)))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.1))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), float(mat3x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0), 0.0, exp(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0))))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
