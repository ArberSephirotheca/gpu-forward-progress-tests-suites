#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)))), bool(bool(_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), ~ (~ (_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) | (max(workgroup_base, workgroup_base))))))) + subgroup_base, (workgroup_base + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), min(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base)))) + subgroup_base) : _GLF_FUZZED(subgroup_local_id))))), (workgroup_base + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), true), false)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), true), false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.9) : 1.0)), 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (true ? vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)) : _GLF_FUZZED(vec2(-7604.9319, 85.99))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-78.89) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.6)), float(0.0), bool(true))))), 0.0))), 0.0, 1.0)), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0))) / vec2(1.0, 1.0))))))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)), true)))), true, true))))))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-91.96), _GLF_FUZZED(70.58)), bvec2(false, false))), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(81.71))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-91.96), _GLF_FUZZED(70.58)), bvec2(false, false))), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(81.71))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(81.71))))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))))))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), false)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0)) * mat2(1.0))).x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))))))))), bool(bvec3((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))), false)))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))))), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false)))))))))))))))))), false, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), true && (! _GLF_IDENTITY((false), ((false)) && true))))), false || (false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + (0u | 0u)) + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))), (true ? (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))) : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))), min(uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))))))) - 0u) - _GLF_IDENTITY(0u, (0u) >> 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + (0u | 0u)) + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))), (true ? (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))) : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))), min(uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))))))) - 0u) - _GLF_IDENTITY(0u, (0u) >> 0u)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + (0u | 0u)) + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))), (true ? (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))) : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))), min(uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))))))))) - 0u) - _GLF_IDENTITY(0u, (0u) >> 0u)))))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size, ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, (0 << _GLF_IDENTITY(int(4), int(4))))))) % subgroup_size), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))) << 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) | 0))) % subgroup_size))), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / (1u | 1u))))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base))), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u), ((subgroup_local_id + 1)) ^ 0u))) % subgroup_size)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u))) % subgroup_size)))))) : _GLF_FUZZED(subgroup_id))) * 1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(6888)))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(6888)))), (true ? ~ (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(6888)))) : _GLF_FUZZED(-24361))))))), clamp(_GLF_IDENTITY(1, 1 * (1)), 1, _GLF_IDENTITY(1, ~ (~ (1)))))) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size)))))))), (~ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), 0)))))) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))))) * 1u), (_GLF_IDENTITY(true, ! (! (true))) ? ~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))) % subgroup_size)))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.3)), bool(false))) > injectionSwitch.y))))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), 4, 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))], 4, 64, 2))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4)))), 64, 2), min(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)))) - 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-9309.4978)), float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))), bool(true)))))) - 0.0, 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(13.99), _GLF_FUZZED(-27.61), _GLF_FUZZED(-4.0), _GLF_FUZZED((+ (98.54 + -48.49)))), vec4((vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[0], (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[1], (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[2], (vec4(injectionSwitch.y, 1.0, 0.0, 1.0))[3]), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-9309.4978)), float(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))), bool(true)))))) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.6)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.4))))))), 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))) - 0.0)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))) - 0.0))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED((-759.017 - -23.40))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), false, true, true)))) && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(abs(vec2(0.0, 0.0))), 1.0))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(abs(vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(abs(vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))))))) && true))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-35.33, 7.5)) : injectionSwitch), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-35.33, 7.5)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-35.33, 7.5)) : injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0)), (vec2(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-35.33, 7.5)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-35.33, 7.5)) : injectionSwitch)) - vec2(0.0, 0.0)), 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9776.1049)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0))) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(8.4, 9.1)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(8.4, 9.1)) : injectionSwitch)) * mat2(1.0))), max(injectionSwitch, injectionSwitch)))))).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(((84.98)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(((84.98)), ((84.98)), _GLF_IDENTITY(((84.98)), mix(float(((84.98))), float(_GLF_FUZZED(63.35)), bool(false)))), (clamp(((84.98)), ((84.98)), _GLF_IDENTITY(((84.98)), mix(float(((84.98))), float(_GLF_FUZZED(63.35)), bool(false))))) / 1.0), mix(float(_GLF_IDENTITY(clamp(((84.98)), ((84.98)), _GLF_IDENTITY(((84.98)), mix(float(((84.98))), float(_GLF_FUZZED(63.35)), bool(false)))), (clamp(((84.98)), ((84.98)), _GLF_IDENTITY(((84.98)), mix(float(((84.98))), float(_GLF_FUZZED(63.35)), bool(false))))) / 1.0)), float(_GLF_FUZZED(-4.5)), bool(false)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-3.6)), bvec2(_GLF_IDENTITY(false, (false) || false), false)), min(mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-3.6)), bvec2(_GLF_IDENTITY(false, (false) || false), false)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-3.6)), bvec2(_GLF_IDENTITY(false, (false) || false), false))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5109.2184)), vec2(_GLF_FUZZED(-7458.2456), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x), bool(true))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(((84.98)))), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)), mix(float(mix(float(_GLF_FUZZED(((84.98)))), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), float(_GLF_FUZZED(-4.0)), bool(false)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(((84.98)))), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_FUZZED(((84.98)))), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), sqrt(1.0), 1.0, 1.0), (mat3x4(injectionSwitch.y, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), sqrt(1.0), 1.0, 1.0)) * mat3(1.0))))) - 0.0)))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0]) - 0.0), _GLF_FUZZED(-54.48)), vec2(_GLF_FUZZED(2242.2568), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(false, true)))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), (false ? _GLF_FUZZED(vec2(2.1, 1.5)) : clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), (injectionSwitch)))).x, mix(float(_GLF_FUZZED(((_GLF_IDENTITY(84.98, clamp(84.98, _GLF_IDENTITY(84.98, (false ? _GLF_FUZZED(7.6) : 84.98)), 84.98)))))), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))) > injectionSwitch.y))), false, true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y, 1.0, 0.0)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), _GLF_IDENTITY((int(ivec3(1, 1, 0))) | 0, ((int(ivec3(1, 1, 0))) | 0) * 1)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, length(0.0), 0.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 1.0, tan(0.0))), max(vec2(mat3x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 1.0, tan(0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 1.0, tan(0.0))))))).x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, length(0.0), 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, length(0.0), 0.0))))) > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.5), mix(float(_GLF_FUZZED(3.5)), float(_GLF_FUZZED(-0.4)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(36.94), min(_GLF_IDENTITY(_GLF_FUZZED(36.94), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(36.94), 0.0, 0.0, 1.0, 1.0, exp(0.0)), (false ? _GLF_FUZZED(mat2x3(8.5, -128.007, -5616.2401, 1.4, -2500.3506, -72.79)) : mat2x3(_GLF_FUZZED(36.94), 0.0, 0.0, 1.0, 1.0, exp(0.0)))))), _GLF_FUZZED(36.94)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, float(mat4x2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0))), min(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-9.7))), 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0))), max(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0)))))))))[0]) / 1.0, mix(float(_GLF_FUZZED((+ 8187.1618))), float(((injectionSwitch)[0]) / 1.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.5), mix(float(_GLF_FUZZED(3.5)), float(_GLF_FUZZED(-0.4)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(36.94), min(_GLF_IDENTITY(_GLF_FUZZED(36.94), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(36.94), 0.0, 0.0, 1.0, 1.0, exp(0.0)), (false ? _GLF_FUZZED(mat2x3(8.5, -128.007, -5616.2401, 1.4, -2500.3506, -72.79)) : mat2x3(_GLF_FUZZED(36.94), 0.0, 0.0, 1.0, 1.0, exp(0.0)))))), _GLF_FUZZED(36.94)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, float(mat4x2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0))), min(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-9.7))), 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0))), max(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0)))))))))[0]) / 1.0, mix(float(_GLF_FUZZED((+ 8187.1618))), float(((injectionSwitch)[0]) / 1.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.5), mix(float(_GLF_FUZZED(3.5)), float(_GLF_FUZZED(-0.4)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(36.94), min(_GLF_IDENTITY(_GLF_FUZZED(36.94), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(36.94), 0.0, 0.0, 1.0, 1.0, exp(0.0)), (false ? _GLF_FUZZED(mat2x3(8.5, -128.007, -5616.2401, 1.4, -2500.3506, -72.79)) : mat2x3(_GLF_FUZZED(36.94), 0.0, 0.0, 1.0, 1.0, exp(0.0)))))), _GLF_FUZZED(36.94)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(((injectionSwitch)[0]) / 1.0, float(mat4x2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0))), min(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-9.7))), 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0))), max(vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, sqrt(1.0))), vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), exp(0.0), 0.0, sqrt(1.0), 1.0, abs(0.0), 1.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, sqrt(1.0)))))))))[0]) / 1.0, mix(float(_GLF_FUZZED((+ 8187.1618))), float(((injectionSwitch)[0]) / 1.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))).y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) >> 0u))))], read, _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(4, ~ (~ (4))));
}
