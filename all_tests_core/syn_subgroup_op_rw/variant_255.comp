#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(4.1, vec2(-248.835, 22.61))))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true)))), (bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true)))), (bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))))) && true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true)))), (bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true)))), (bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))))) && true)))))), true && (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true)))), (bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true)))), (bool(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))))) && true))))) && true)))))))), false, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u);
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))) || false), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-690.568)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), false || ((! (false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), false || ((_GLF_IDENTITY(! (false), (! (false)) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), (_GLF_IDENTITY((int(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 1)), clamp(int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)))))), clamp(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 1)), clamp(int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 1)), clamp(int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 1)), clamp(int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)), int(ivec4(1, 0, 1, 1)))))))))))), max(_GLF_IDENTITY((int(1)), ((int(1))) >> 0), (int(_GLF_IDENTITY(1, clamp(1, 1, 1))))))) << 0) ^ 0)), (int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), (_GLF_IDENTITY((int(1)), max(_GLF_IDENTITY((int(1)), ((int(1))) >> 0), (int(1))))) << 0) ^ 0))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((int(1)), (_GLF_IDENTITY((int(1)), max(_GLF_IDENTITY((int(1)), ((int(1))) >> 0), (int(1))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (_GLF_IDENTITY((int(1)), max(_GLF_IDENTITY((int(1)), ((int(1))) >> 0), (int(1))))) << 0), ~ (~ (_GLF_IDENTITY((int(1)), (_GLF_IDENTITY((int(1)), max(_GLF_IDENTITY((int(1)), _GLF_IDENTITY(((int(1))) >> 0, (_GLF_IDENTITY(((int(1))) >> 0, (_GLF_IDENTITY(((int(1))) >> 0, (((int(1))) >> 0) >> 0)) / 1)) - 0)), (int(1))))) << 0))))) / 1) ^ 0)), 0 | (int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), (_GLF_IDENTITY((int(1)), max(_GLF_IDENTITY((int(1)), ((int(1))) >> 0), (int(1))))) << 0) ^ 0)))))), (true ? int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(int(1)))), (int(1)) ^ _GLF_IDENTITY(0, (0) - ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3)))))) : _GLF_FUZZED(54112)))), _GLF_IDENTITY(max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) ^ 0)), (true ? int(_GLF_IDENTITY(int(1), (int(1)) ^ _GLF_IDENTITY(0, (0) - ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3)))))) : _GLF_FUZZED(54112)))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) ^ 0)), (true ? int(_GLF_IDENTITY(int(1), (int(1)) ^ _GLF_IDENTITY(0, (0) - ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3)))))) : _GLF_FUZZED(54112))))), 0 ^ _GLF_IDENTITY((max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)), (int(1)) ^ 0)), (true ? int(_GLF_IDENTITY(int(1), (int(1)) ^ _GLF_IDENTITY(0, (0) - ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3)))))) : _GLF_FUZZED(54112)))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) ^ 0)), (true ? int(_GLF_IDENTITY(int(1), (int(1)) ^ _GLF_IDENTITY(0, (0) - ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3)))))) : _GLF_FUZZED(54112)))))), ((max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) ^ 0)), (true ? int(_GLF_IDENTITY(int(1), (int(1)) ^ _GLF_IDENTITY(0, (0) - ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3)))))) : _GLF_FUZZED(54112)))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) ^ 0)), (true ? int(_GLF_IDENTITY(int(1), (int(1)) ^ _GLF_IDENTITY(0, (0) - ((1 ^ 1) >> _GLF_IDENTITY(int(3), int(3)))))) : _GLF_FUZZED(54112))))))) | 0))), 1, 1)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-201.836)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, _GLF_IDENTITY(-56.59, clamp(-56.59, -56.59, -56.59))), vec2(-92.87, -4.3), injectionSwitch))))).y), true))))), true, true)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.1, 48.92))))) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), _GLF_IDENTITY(vec2(-92.87, -4.3), clamp(vec2(-92.87, -4.3), _GLF_IDENTITY(vec2(-92.87, -4.3), (vec2(-92.87, -4.3)) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(-92.87, -4.3), min(vec2(-92.87, -4.3), vec2(-92.87, -4.3))))), injectionSwitch))))).y), true))))), true, true))))) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(14.36), _GLF_FUZZED(-240.072)), bvec2(false, false))).y), true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))))))), 0.0, 1.0, 1.0, exp(0.0)))).y), true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), clamp(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(_GLF_IDENTITY(99.77, max(99.77, 99.77)), -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))), 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))))))).y), true)))))) || false), true, true))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), true)), false)))), false)))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, _GLF_IDENTITY(-56.59, clamp(-56.59, -56.59, -56.59))), vec2(-92.87, -4.3), injectionSwitch))))).y), true))))), true, true)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.1, 48.92))))) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), _GLF_IDENTITY(vec2(-92.87, -4.3), clamp(vec2(-92.87, -4.3), _GLF_IDENTITY(_GLF_IDENTITY(vec2(-92.87, -4.3), (vec2(-92.87, -4.3)) - vec2(0.0, 0.0)), vec2(vec3(_GLF_IDENTITY(vec2(-92.87, -4.3), (vec2(-92.87, -4.3)) - vec2(0.0, 0.0)), tan(0.0)))), _GLF_IDENTITY(vec2(-92.87, -4.3), min(vec2(-92.87, -4.3), vec2(-92.87, -4.3))))), injectionSwitch))))).y), true))))), true, true))))) || false))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(14.36), _GLF_FUZZED(-240.072)), bvec2(false, false))).y), true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))))))), 0.0, 1.0, 1.0, exp(0.0)))).y), true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), clamp(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(_GLF_IDENTITY(99.77, max(99.77, 99.77)), -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))), 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))))))).y), true)))))) || false), true, true)))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(14.36), _GLF_FUZZED(-240.072)), bvec2(false, false))).y), true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))))))), 0.0, 1.0, 1.0, exp(0.0)))).y), true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), clamp(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(_GLF_IDENTITY(99.77, max(99.77, 99.77)), -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))), 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))))))).y), true)))))) || false), true, true))))))))), (! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(14.36), _GLF_FUZZED(-240.072)), bvec2(false, false))).y), true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), (faceforward(vec2(99.77, -56.59), _GLF_IDENTITY(vec2(-92.87, -4.3), mix(vec2(_GLF_FUZZED(7.1), (vec2(-92.87, -4.3))[1]), vec2((vec2(-92.87, -4.3))[0], _GLF_FUZZED((vec3(96.23, 4.9, -40.26) * vec3(-575.324, -0.1, -6.4)).x)), bvec2(true, false))), injectionSwitch)) - vec2(0.0, 0.0)), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), max((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))))))), 0.0, 1.0, 1.0, exp(0.0)))).y), true))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_IDENTITY(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), clamp(_GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))), _GLF_FUZZED(atanh(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? 75.90 : 110.908)), _GLF_FUZZED(2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | (0))) / 1)], injectionSwitch[1])) : _GLF_FUZZED(atanh(_GLF_IDENTITY(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(faceforward(vec2(_GLF_IDENTITY(99.77, max(99.77, 99.77)), -56.59), vec2(-92.87, -4.3), injectionSwitch), min(faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch), faceforward(vec2(99.77, -56.59), vec2(-92.87, -4.3), injectionSwitch))))))))), 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))))))).y), true)))))) || false), true, true)))))))))) || false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
