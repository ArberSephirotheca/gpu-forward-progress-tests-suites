#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, 0 | (7))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)), ((_GLF_IDENTITY(0u, (0u) | 0u))) | ((_GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)), uint(uvec4((_GLF_IDENTITY(0u, (0u) | 0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u, 1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, false))));
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 1, max(0 ^ 1, _GLF_IDENTITY(0 ^ 1, (0 ^ 1) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))) | 0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) + 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size))) * 1u)) - 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), _GLF_IDENTITY(uint(uvec2((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u)), (uint(uvec2((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u))) | (uint(uvec2((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u))))), 1u, 0u)), min(uint(uvec3(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))), ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8485.9095)))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u)), uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u, ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u) ^ 0u))), 1u, 0u))))))) ^ (92524u & 0u)) + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))), max(min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), _GLF_IDENTITY(uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u)), min(uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u)), uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u))))))) ^ (92524u & 0u)) + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : subgroup_id))) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)) - 0u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(_GLF_IDENTITY(2u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 2u))))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u, 0u ^ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u, ((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u) >> 0u))))) - 0u)), _GLF_IDENTITY(uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u))) / 1u) - 0u)), 1u, 0u)), min(uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (~ (_GLF_IDENTITY(2u, (2u) | (2u)))))), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), subgroup_size)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-96.06))), injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u)), uint(uvec3(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))), ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))))) - 0u) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) << 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)) << 0u)) * subgroup_size) * 1u)) - 0u)), 1u, 0u))))))) ^ (92524u & 0u)) + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))) + 0u)), min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | 0u), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), _GLF_IDENTITY(uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u)), min(uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u)), uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u)), 1u, 0u))))))) ^ (92524u & 0u)) + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size)))) | (subgroup_id))) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)) * subgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(15.48) : _GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size), 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(15.48) : _GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size))) * 1u)) - 0u)), _GLF_IDENTITY(uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u, min((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)))) - 0u)), 1u, 0u)), min(uint(uvec3((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, max(2u, 2u)), 2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * 1u)) - _GLF_IDENTITY(0u, (0u) + 0u))), 1u, 0u)), uint(uvec3((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), 1u, 1u)), clamp(uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), 1u, 1u)), uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), 1u, 1u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), 1u, 1u))) / 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_id) - 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) * _GLF_IDENTITY(1u, (1u) * 1u))) - 0u)), 1u, 0u))))))) ^ (92524u & 0u)) + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) - 0u)))))));
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))));
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), false)))))))));
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 0 ^ (64)), 64)), 64, 64)), min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(64, 64)), 64, 64)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(64, 64)), 64, 64)))), 4);
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), ~ (_GLF_IDENTITY(~ (0 ^ (1)), int(ivec4(~ (0 ^ (1)), 0, 1, 0)))))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, min((subgroup_size) + 0u, (subgroup_size) + 0u))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.65), _GLF_FUZZED(-236.845)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), bvec2(true, _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0))))) : _GLF_FUZZED(vec2(0.9, 611.573)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), mat2x3(mat3x4(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)))))))).y))))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec3(int(1), 0, 0), clamp(ivec3(int(_GLF_IDENTITY(1, (1) - 0)), 0, 0), ivec3(int(1), 0, 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))), (ivec3(2, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, (1) | 0)), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(2, 1, 1), ivec3(ivec4(ivec3(2, 1, 1), 1)))))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))), (_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))) | ivec3(0, 0, 0))))))), int(2))))))), 0, 0), (_GLF_IDENTITY(ivec3(int(1), 0, 0), (ivec3(int(1), 0, 0)) * ivec3(1, 1, 1))) / ivec3(1, _GLF_IDENTITY(1, 0 + (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, _GLF_IDENTITY(1, ~ (~ (1))))) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 1, 1), (_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) >> ivec3(0, 0, 0))) << ivec3(0, 0, 0)), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) >> (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(1), ivec3(1)))), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1), int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), _GLF_IDENTITY((ivec3(2, 1, 1)), ((ivec3(2, 1, 1))) | ((ivec3(2, 1, 1)))) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))))))), int(2))))))), 0, 0), (_GLF_IDENTITY(ivec3(int(1), 0, 0), (ivec3(int(1), 0, 0)) * ivec3(1, 1, 1))) / ivec3(1, 1, 1)), clamp(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1), int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))))))), int(2)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), _GLF_IDENTITY((ivec3(2, 1, 1)), min((ivec3(2, 1, 1)), (ivec3(2, 1, 1)))) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))))))) / 1), int(_GLF_IDENTITY(ivec3(2, 1, 1), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)), (_GLF_IDENTITY(min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)), (min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))) >> ivec3(0, 0, 0))) / ivec3(1, 1, 1)))))))), int(2)))))))))), 0, 0), (_GLF_IDENTITY(ivec3(int(1), 0, 0), _GLF_IDENTITY((ivec3(int(1), 0, 0)) * ivec3(1, 1, 1), ~ (~ ((ivec3(int(1), 0, 0)) * ivec3(1, 1, 1)))))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 1, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3(2, 1, 1))), min(ivec3(ivec3(ivec3(2, 1, 1))), ivec3(ivec3(ivec3(2, 1, 1)))))), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 1, 1), max(ivec3(2, 1, 1), ivec3(2, 1, 1))), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, _GLF_IDENTITY(1, (1) >> 0)))))) / 1), int(_GLF_IDENTITY(ivec3(2, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(int(1))))))))))))), int(2))))))), 0, 0), (_GLF_IDENTITY(ivec3(int(1), 0, 0), (ivec3(int(1), 0, 0)) * ivec3(1, 1, 1))) / ivec3(1, 1, 1)), _GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (_GLF_IDENTITY(ivec3(2, 1, 1), (true ? ivec3(2, 1, 1) : _GLF_FUZZED((ivec3(-47125, 26953, -12657) << ivec3(-24747, 84753, 60393)))))) | ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) << (0 << _GLF_IDENTITY(int(5), int(5)))), 1, 1)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(_GLF_IDENTITY(2, (2) | 0), 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1)) - 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1)))), (int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), ivec3(2, 1, 1))))) / 1))))), int(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) | ivec3(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(2, 1, 1), min(_GLF_IDENTITY(ivec3(2, 1, 1), (ivec3(2, 1, 1)) / ivec3(1, 1, 1)), ivec3(2, 1, 1))), (ivec3(2, 1, 1)) | ivec3(0, 0, 0))) * ivec3(1, 1, 1)), ivec3(2, 1, 1)))))))), int(2))))))), 0, 0), (_GLF_IDENTITY(ivec3(int(1), 0, 0), (ivec3(int(1), 0, 0)) * ivec3(1, 1, 1))) / ivec3(1, 1, 1))))) << (_GLF_IDENTITY(ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(1), ivec3(1)), ~ (_GLF_IDENTITY(~ (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(1), ivec3(1))), min(~ (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(1), ivec3(1))), ~ (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(1), ivec3(1))))))))))))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), float(_GLF_IDENTITY(_GLF_FUZZED(-57.58), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-57.58), (_GLF_FUZZED(-57.58)) / 1.0)))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.92), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.8)), bvec2(true, false))).x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5698.4781)), bool(false))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, clamp((0.0) * 1.0, (0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0, (0.0) * 1.0)))) / exp(0.0))) * 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / exp(0.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-2893.0595)), (vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-2893.0595))) / vec2(1.0, 1.0)), bvec2(false, false))), injectionSwitch)))), (injectionSwitch) * vec2(1.0, 1.0)).x))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / exp(0.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-2893.0595)), (vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-2893.0595))) / vec2(1.0, 1.0)), bvec2(false, false))), injectionSwitch)))), (injectionSwitch) * vec2(1.0, 1.0)).x))))), bool(bvec3(bool(bool((_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / exp(0.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-2893.0595)), (vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-2893.0595))) / vec2(1.0, 1.0)), bvec2(false, false))), injectionSwitch)))), (injectionSwitch) * vec2(1.0, 1.0)).x))))), true, false)))) || false))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
                return;
               return;
              }
            }
           else
            {
            }
           continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), (_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))) * cos(vec2(0.0, 0.0)))).x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-477.803) : injectionSwitch.y)), injectionSwitch.y))))))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(52.60)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            break;
           break;
          }
         atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], read, 4, 64, 4);
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))) * vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1825.8093))))).y)))))))
    return;
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}
