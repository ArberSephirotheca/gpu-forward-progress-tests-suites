#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 vec3 _f0;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 float _f3;
 ivec3 _f4;
 bvec2 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_16 {
 uint _f0;
 mat2x4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 mat4 _f1;
 ivec4 _f2;
 ivec4 _f3;
 mat4 _f4;
 float _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 bvec4 _f1;
 ivec4 _f2;
 float _f3;
 float _f4;
 float _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 float _f1;
 bvec4 _f2;
 vec3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 _GLF_struct_11 _f1;
 vec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_19 {
 uint workgroup_base;
 _GLF_struct_12 _f0;
 _GLF_struct_15 _f1;
 vec2 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_18 _f4;
 mat4x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 ivec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 uint _f1;
 uvec4 _f2;
 vec3 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 int _f1;
 mat2 _f2;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 ivec3 _f1;
 ivec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 mat3x4 _f1;
 bool _f2;
 mat4x3 _f3;
 float _f4;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 vec3 _f1;
 uvec3 _f2;
 vec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat3x2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 uvec2 _f1;
 _GLF_struct_4 _f2;
 mat2 _f3;
 uint workgroup_id;
 _GLF_struct_7 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(fma(sinh(injectionSwitch), vec2(4.9, -94.73), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - _GLF_ZERO(0.0, injectionSwitch.x))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups)), (true ? ~ ((gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(16711u, 50645u, 142727u)))))))), clamp(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u) + (gl_NumWorkGroups))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))))))), _GLF_IDENTITY(max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))), (max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))))))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), max(uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(0u), uvec2(0u))) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))) * (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (uvec2(gl_WorkGroupSize.x, 0u)) + uvec2(0u, 0u))))), uint(uvec2(gl_WorkGroupSize.x, 0u)))))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec4(true && (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(ivec3(_GLF_IDENTITY(1, (1) << 0)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))), ~ (1u)))))), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(uvec4(uvec2(1u), 1u, 0u))))), _GLF_struct_4(_GLF_struct_0(vec2(1.0), vec3(1.0), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), vec3(1.0), uvec4(1u)), mat3x2(1.0), _GLF_struct_1(uvec3(1u), mat3x4(1.0), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0), _GLF_struct_2(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))))))), ivec3(1), ivec2(1), ivec2(1)), _GLF_struct_3(mat3x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(68.33) : 1.0)))), 1.0))), 1, mat2(1.0))), mat2(1.0), gl_WorkGroupID.x, _GLF_struct_7(mat3(1.0), 1u, uvec4(1u), vec3(1.0), _GLF_struct_5(mat2x3(1.0), ivec3(1), _GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, _GLF_IDENTITY(1, 0 + (1)), 1))), _GLF_struct_6(vec4(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(abs(1.0))))))), mat2(1.0)), _GLF_struct_9(ivec4(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))))))), _GLF_struct_8(mat2x4(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(workgroup_size * _GLF_struct_replacement_10.workgroup_id, _GLF_struct_12(vec2(1.0), _GLF_struct_11(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), 1.0, bvec4(true), vec3(1.0), mat3x2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)), mix(vec2(((vec2(1.0)))[0], ((vec2(1.0)))[1]), vec2(_GLF_FUZZED(3565.9754), _GLF_FUZZED(11.80)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * mat2(1.0), (_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, cos(0.0), 0.0), (_GLF_IDENTITY(vec3(1.0, cos(0.0), 0.0), (true ? vec3(1.0, cos(0.0), 0.0) : _GLF_FUZZED(vec3(176.470, -3.6, 4.1))))) / vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), min((vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), _GLF_IDENTITY((vec2(1.0)) * mat2(1.0), clamp((vec2(1.0)) * mat2(1.0), (vec2(1.0)) * mat2(1.0), (vec2(1.0)) * mat2(1.0)))))) - vec2(0.0, 0.0))), max(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4.6, (false ? _GLF_FUZZED(inversesqrt(7.9)) : 4.6)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((-6338.7767 / 494.532)))), 1.0, 1.0)))), 1.0)), 1.0))), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)))), vec2(1.0))), mix(vec2((_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * mat2(1.0), (_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, cos(0.0), 0.0), (_GLF_IDENTITY(vec3(1.0, cos(0.0), 0.0), (true ? vec3(1.0, cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, sqrt(1.0), 1.0)))))) : _GLF_FUZZED(vec3(176.470, -3.6, 4.1))))) / vec3(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), min((_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)))) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((vec2(1.0)) * mat2(1.0), clamp((_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-15.37)), vec2(_GLF_FUZZED(4108.9228), _GLF_IDENTITY((vec2(1.0))[1], ((vec2(1.0))[1]) * 1.0)), bvec2(false, true)))) * mat2(1.0), (vec2(1.0)) * mat2(1.0), (vec2(1.0)) * mat2(1.0)))))) - vec2(0.0, 0.0))), max(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), 1.0))), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)))), vec2(1.0))))[0], (_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * mat2(1.0), (_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, cos(0.0), 0.0), (_GLF_IDENTITY(vec3(1.0, cos(0.0), 0.0), (true ? vec3(1.0, cos(0.0), 0.0) : _GLF_FUZZED(vec3(176.470, -3.6, 4.1))))) / vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), min((vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), _GLF_IDENTITY((vec2(1.0)) * mat2(1.0), clamp((vec2(1.0)) * mat2(1.0), (vec2(1.0)) * mat2(1.0), (vec2(1.0)) * mat2(1.0)))))) - vec2(0.0, 0.0))), max(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), 1.0))), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)))), vec2(1.0))))[1]), vec2(_GLF_FUZZED(-29.48), _GLF_FUZZED(1.0)), bvec2(false, false))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), vec3(mat4x3(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0)), 1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), _GLF_struct_15(_GLF_struct_13(ivec2(1), bvec4(true), ivec4(1), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), min(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, exp(sqrt(0.0)), 1.0, 0.0, tan(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), ivec3(1)), _GLF_struct_14(uvec4(1u), mat4(1.0), ivec4(1), ivec4(1), mat4(1.0), 1.0, ivec3(1))), vec2(1.0), _GLF_struct_16(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(clamp(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true)), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7)))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), float(float(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)) && true)))) && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false)))))))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))) || false))))))), min(1.0, 1.0))), bool(true)))))), (true ? _GLF_IDENTITY(clamp(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(-6.7)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), _GLF_FUZZED(-6.7)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), float(float(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), min(1.0, 1.0))), bool(true)))))), clamp(_GLF_IDENTITY(clamp(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.2), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_FUZZED(4.2), mix(float(_GLF_FUZZED(9.3)), float(_GLF_FUZZED(4.2)), bool(true))), 0.0, abs(0.0), 1.0)), mix(float(_GLF_FUZZED(692.197)), float(float(mat2(_GLF_IDENTITY(_GLF_FUZZED(4.2), mix(float(_GLF_FUZZED(9.3)), float(_GLF_FUZZED(4.2)), bool(true))), 0.0, abs(0.0), 1.0))), bool(true))))), float(_GLF_FUZZED(-6.7)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), _GLF_FUZZED(-6.7)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), float(float(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))), (false ? _GLF_FUZZED(inversesqrt(14.70)) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))), min(1.0, 1.0))), bool(true)))))), (false ? _GLF_FUZZED(2784.3072) : clamp(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(-6.7)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), _GLF_FUZZED(-6.7)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), float(float(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), _GLF_IDENTITY(float(1.0), max(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(determinant(mat2(4.0, 1918.3187, -0.5, 429.551))) : float(1.0))), float(1.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), min(1.0, 1.0))), bool(true)))))))), clamp(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(-6.7)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), _GLF_FUZZED(_GLF_IDENTITY(-6.7, mix(float(-6.7), float(_GLF_FUZZED(806.098)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), float(float(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (injectionSwitch.x < injectionSwitch.y), (true && (injectionSwitch.x < injectionSwitch.y)) || false)), false || (! (_GLF_IDENTITY(true && (injectionSwitch.x < injectionSwitch.y), (true && (injectionSwitch.x < injectionSwitch.y)) || false))))))), false))))))))))))), min(1.0, 1.0))), bool(true)))))), _GLF_IDENTITY(clamp(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.2)), bool(false))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.0) : 1.0)))), 1.0))), bool(true)), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(-6.7)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), _GLF_FUZZED(-6.7)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), float(float(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), min(1.0, 1.0))), bool(true)))))), mix(float(clamp(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_IDENTITY(_GLF_FUZZED(-6.7), mix(float(_GLF_FUZZED(4.2)), float(_GLF_FUZZED(-6.7)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), _GLF_FUZZED(-6.7)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)), float(float(mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), min(1.0, 1.0))), bool(true))))))), float(_GLF_FUZZED(5.2)), bool(false))))) : _GLF_FUZZED(_GLF_IDENTITY(4.0, 0.0 + (4.0)))))), mix(float(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6.7), max(_GLF_IDENTITY(_GLF_FUZZED(-6.7), (true ? _GLF_FUZZED(-6.7) : _GLF_FUZZED(float(54565u)))), _GLF_FUZZED(-6.7))), _GLF_IDENTITY(float(mat3x2(_GLF_FUZZED(-6.7), length(0.0), log(1.0), 0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3x4(float(mat3x2(_GLF_FUZZED(_GLF_IDENTITY(-6.7, max(-6.7, -6.7))), length(0.0), log(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), sin(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(length(0.0), (true ? _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))) : _GLF_FUZZED(-238.563)))), (mat3x4(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), log(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7546.8980)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), mix(float(float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-6.7), min(_GLF_FUZZED(-6.7), _GLF_FUZZED(-6.7))), length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), log(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7546.8980)), float(0.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 0.0))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), sin(0.0), abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, length(0.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -57.38))), float(0.0), bool(true))), 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), float(_GLF_FUZZED(5.1)), bool(false)))) / 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), determinant(mat2(abs(1.0), 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(1.0, (1.0) - 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), mix(float(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), float(mat2(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7261.7590)), bool(false))), clamp(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_FUZZED((+ 6.7))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(5.5) : float(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), bool(true)))), float(mat4x2(min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.7) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), mix(float(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), float(mat2(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))))) : _GLF_FUZZED(asinh(60.92)))))), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7261.7590)), bool(false))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), mix(float(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), float(mat2(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))))) : _GLF_FUZZED(asinh(60.92)))))), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7261.7590)), bool(false))), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(sin(0.0)), sqrt(1.0)), transpose(transpose(mat4x2(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), mix(float(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))) : _GLF_FUZZED(asinh(60.92)))))), float(mat2(min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))))) : _GLF_FUZZED(asinh(60.92)))))), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-7261.7590)), bool(false))), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(sin(0.0)), sqrt(1.0))))))), clamp(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_FUZZED((+ 6.7))), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_FUZZED((+ 6.7))), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_FUZZED((+ 6.7))), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))))), float(mat4x2(min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-825.418)), bool(false)))), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(681.383)), bool(false))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, min(_GLF_IDENTITY((1.0) - 0.0, mix(float((1.0) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(3.4)), float(_GLF_FUZZED(-4901.7205)), bool(false)))), bool(false))), _GLF_IDENTITY((1.0) - 0.0, float(vec3((1.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose((mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))))), min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 1.0)))), _GLF_struct_18(bvec4(true), ivec4(1), mat4x2(1.0), 1.0, ivec3(1), bvec2(true), _GLF_struct_17(vec3(1.0))), mat4x2(1.0), mat4x3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_19.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(28037u), (true ? subgroup_id : _GLF_FUZZED(28037u)) | 0u), _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(28037u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u | (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)), min((false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)))))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u >> _GLF_IDENTITY(uint(8u), uint(8u)) : _GLF_FUZZED(subgroup_local_id))))))), max((true ? subgroup_id : _GLF_FUZZED(28037u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u | (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (1u ^ 1u)) : uint(_GLF_IDENTITY(6u, clamp(6u, _GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, min(6u, 6u)), 6u)), 6u))))), (_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), _GLF_IDENTITY((true ? subgroup_id : _GLF_FUZZED(28037u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u | (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)), _GLF_IDENTITY(uint(uint((false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)))), (uint(uint((false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u)))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | ((true ? subgroup_id : _GLF_FUZZED(28037u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id))), uint(6u)), 0u | (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), clamp(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(6u))), 0u, 1u)) * uvec3(1u, 1u, 1u))))))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_19.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_19.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) >> 0u);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), false, false)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))))))) || false)))))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) + 0), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.7, -7552.7158)) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * (injectionSwitch)) * vec2(1.0, 1.0))))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(mat2(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0), (mat2(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))))).y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), false)))), false, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, tan(0.0)))).y))))
  barrier();
}
