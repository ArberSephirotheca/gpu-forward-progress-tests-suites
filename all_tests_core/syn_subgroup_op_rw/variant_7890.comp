#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 vec2 _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 int _injected_loop_counter;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_17 {
 int _f0;
 float _f1;
 vec3 _f2;
 vec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
 vec3 _f1;
 _GLF_struct_17 _f2;
 int _injected_loop_counter;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_14 {
 int _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 mat3 _f3;
 bvec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 mat3 _f1;
 mat2x3 _f2;
 mat3 _f3;
 bvec3 _f4;
 float _f5;
 float _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 int _f3;
 bvec2 _f4;
 mat2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 ivec2 _f1;
 uint subgroup_base;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_9 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 mat2 _f1;
 float _f2;
 uvec2 _f3;
 ivec2 _f4;
 bvec2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat4 _f1;
} ;

struct _GLF_struct_3 {
 float _f0;
 vec4 _f1;
 bool _f2;
 mat3 _f3;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 float _f1;
 mat2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_1 {
 uint _f0;
 vec4 _f1;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat2 _f1;
 ivec2 _f2;
 ivec3 _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint subgroup_id;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 int _f1;
 _GLF_struct_7 _f2;
 mat2x3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, true, true)), (bool(bvec4((_GLF_DEAD(false)), true, true, true))) && true), false, false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), (bool(bvec4(false, true, true, true))) && true))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-6616.0944, 4.9)))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec3((true), true, false)))) && true))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)), false, false, false))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
              barrier();
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       do
        {
         for(_GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_18(vec2(1.0), vec3(1.0), _GLF_struct_17(1, 1.0, vec3(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-42.35)), bool(false))), 0.0)))))), mat4(1.0)), 0), vec4(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_19._f0._injected_loop_counter != 1); _GLF_struct_replacement_19._f0._injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, false))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), ! (! (bool(bvec2(false, false))))))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, sin(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0))), 0.0))).x > injectionSwitch.y))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), true, true, true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), true, true, true))), false)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(90.98)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.55, min(_GLF_IDENTITY(-12.55, (-12.55) / 1.0), -12.55))), _GLF_FUZZED(-6.8)), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(ivec4(0, (0 ^ 1), 0, 1))), 0))], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), vec2(_GLF_IDENTITY(vec2(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8))), vec2(mat2(vec2(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8))), 0.0, 1.0))))), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)))), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), true, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))).y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(ivec4(0, (0 ^ 1), 0, 1))), 0))], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)), vec2(_GLF_IDENTITY(vec2(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8))), vec2(mat2(vec2(vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8))), 0.0, 1.0))))), vec2(_GLF_FUZZED(-12.55), _GLF_FUZZED(-6.8)))), bvec2(false, false))).x > injectionSwitch.y))), false, false))))), true, true, true))) || false)), _GLF_IDENTITY(false, bool(bool(false))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)), false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_5(_GLF_struct_0(ivec3(1), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2(mat2(1.0)), mat2(mat2x3(mat2(mat2(1.0))))))), ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), 1 * (_GLF_IDENTITY(1, ((~ 73292) & _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) + (1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1))))))) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(35680))) * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ _GLF_IDENTITY(73292, (73292) >> 0)) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))))) * int(_GLF_ONE(1.0, injectionSwitch.y))))) | 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1))))))) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(35680))) * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ _GLF_IDENTITY(73292, (73292) >> 0)) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))), _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1 * (_GLF_IDENTITY(1, ((~ 73292) & 0) + (1)))))) * int(_GLF_ONE(1.0, injectionSwitch.y))))) | 0) << 0)), 1))), ivec3(1), 1u, uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_struct_1(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u)), vec4(1.0)), gl_SubgroupID, _GLF_struct_2(mat2x3(1.0), 1.0, mat2(1.0), mat3x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, exp(0.0)), vec4(mat4(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(429.972)), float(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))), bool(true)), max(mix(float(_GLF_FUZZED(429.972)), float(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))), bool(true)), mix(float(_GLF_FUZZED(429.972)), float(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))), bool(true)))))))) - 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-4.8) : 1.0, (false ? _GLF_FUZZED(dot(vec3(-32.61, -52.08, 16.35), vec3(5.0, -6.4, 8231.8872))) : false ? _GLF_FUZZED(-4.8) : 1.0)))), 1.0))))))), _GLF_struct_3(1.0, vec4(1.0), true, _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.6), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.6), mix(float(_GLF_FUZZED(-11.48)), float(_GLF_FUZZED(-7.6)), bool(true)))), float(_GLF_FUZZED(4.2)), bool(false))) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat3(_GLF_IDENTITY(mat4(mat3(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-33.99)), float(1.0), bool(true)))))), transpose(transpose(mat4(mat3(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-33.99)), float(1.0), bool(true)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0)))))))), transpose(transpose(_GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0)))))))), transpose(transpose(mat3(mat3x4(mat3(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0)))))))))))))), transpose(transpose(mat3(mat3x4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(mat4(mat3(mat3(1.0))))), mat3(mat3x4(_GLF_IDENTITY(mat3(mat3(1.0)), mat3(_GLF_IDENTITY(mat4(mat3(mat3(1.0))), (mat4(mat3(mat3(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))))))))), _GLF_struct_4(1.0, _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(mat4(1.0) * (mat4(1.0)), (true ? mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.4) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(false ? _GLF_FUZZED(-2.4) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-2.4) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat3x2(false ? _GLF_FUZZED(-2.4) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0)))))))) * (mat4(1.0)) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-14.85, -858.077, 7299.1921, -51.93, 570.461, 3583.2810, -8487.3582, 920.244, -1946.3455, 43.86, 7.1, _GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(mat2x4(-0.7, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), 0.0, 1.0), transpose(transpose(mat2x4(-0.7, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), 0.0, 1.0)))))), -4.8, 4.7, 3.2, -3921.7135), (true ? mat4(-14.85, -858.077, 7299.1921, -51.93, 570.461, 3583.2810, -8487.3582, 920.244, -1946.3455, 43.86, 7.1, _GLF_IDENTITY(-0.7, float(_GLF_IDENTITY(mat2x4(-0.7, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), 0.0, 1.0), transpose(transpose(mat2x4(-0.7, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), 0.0, 1.0)))))), -4.8, 4.7, 3.2, -3921.7135) : _GLF_FUZZED(mat4(8.2, 9.1, -6.9, -0.0, -260.188, 83.40, 852.172, -5.5, -7.0, -466.927, -3.2, 58.64, 5159.8812, -3.1, 9.3, -8318.5368)))))))))), 1, _GLF_struct_7(_GLF_struct_6(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (mat2(1.0))), (mat2(1.0)) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0))), 1.0, uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(-9213, -5153)), ivec2(ivec2(_GLF_FUZZED(ivec2(-9213, -5153))))))), (ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1), ~ (~ (ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, (1 ^ 0), 1, 1), _GLF_IDENTITY(min(ivec4(1, (1 ^ 0), 1, 1), ivec4(1, (1 ^ 0), 1, 1)), ivec4(0, 0, 0, 0) ^ (min(ivec4(1, (1 ^ 0), 1, 1), ivec4(1, (1 ^ 0), 1, 1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1)))))))) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0)))), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), mat2x3(1.0)), mat3x2(1.0)), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.1, max(_GLF_IDENTITY(-7.1, mix(float(_GLF_FUZZED(6.3)), float(-7.1), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -7.1)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-6.9) : 1.0))), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, true && (false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, exp(0.0), 0.0))), true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))])).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y) + _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), clamp(vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4))), 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & int(103097u))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))))))))) && true)))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), max((0 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(3), int(3)))) >> 0), ((0 << _GLF_IDENTITY(int(3), int(3)))) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(ivec3(int(3), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), 1))), int(3))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ~ (~ ((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 ^ (3))) << 0)))))))))) | ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-63666) : 3))) | 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (3) - 0)))), ~ (~ (int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (3) - 0))))))))))), min(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(3))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(3))), max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))), int(3))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) << (_GLF_IDENTITY(1, (1) >> 0) ^ 1)) << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 | (3))))), ~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))))))))) | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), 0 + (0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), max(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), (_GLF_IDENTITY(3, ~ (~ (3)))) >> 0), _GLF_IDENTITY(3, ~ (~ (3)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-84631) : int(3))), int(3))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), max((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) - 0), 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), _GLF_IDENTITY((~ (int(3))), 0 ^ ((~ (int(3))))) | (~ (int(3)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-4718) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))))), int(ivec3(~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))))), 1, 1))), clamp(~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))))), ~ (~ ((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))), _GLF_IDENTITY(~ (~ ((0 << _GLF_IDENTITY(int(3), int(3))))), (~ (~ ((0 << _GLF_IDENTITY(int(3), int(3)))))) | (0 >> _GLF_IDENTITY(int(7), int(7)))))))))) | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), (int(3)) * 1))))), 1 * (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), max((0 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), ~ (~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), int(3))), max((0 << _GLF_IDENTITY(int(3), int(3))), (0 << _GLF_IDENTITY(int(3), int(3))))))))))) | ((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) ^ 0)))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(min((1), _GLF_IDENTITY(_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) - 0))), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY((1), _GLF_IDENTITY(min((1), (1)), (min((1), (1))) - 0))))), max(min((_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY(_GLF_IDENTITY((1), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (_GLF_IDENTITY((1), ((1)) + 0))), min((1), (1)))))), min((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), (_GLF_IDENTITY((1), min((1), (1)))) | (0 ^ 0))))))), (false ? _GLF_FUZZED((++ _injected_loop_counter)) : _GLF_IDENTITY(_GLF_IDENTITY(min((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY((1), min((1), (1)))))), max(min((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY((1), min((_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))), (1)))))), min((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY((1), min((1), (1)))))))), (_GLF_IDENTITY(min((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY((1), min((1), (1)))))), max(min((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY((1), min((1), (1)))))), min((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(62414) : _GLF_IDENTITY((1), min((1), (1))))))))) >> 0)))) << 0)))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 + (_injected_loop_counter ++), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << _GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0)))) | (0 + (_injected_loop_counter ++)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << _GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0)))) | (0 + (_injected_loop_counter ++)))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(0 + (_injected_loop_counter ++), (0 + (_injected_loop_counter ++)) << _GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0)))) | (0 + (_injected_loop_counter ++))))))))) / _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), 0 ^ (_GLF_IDENTITY((1), clamp((1), (1), (1))))) - 0))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(39.14, 9.2, 5.8, -625.505) * mat2x4(6491.7238, -38.05, -588.298, -4651.4332, -4.3, _GLF_IDENTITY(57.62, mix(float(_GLF_FUZZED((+ -3.0))), float(_GLF_IDENTITY(57.62, min(57.62, 57.62))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0))).y))))), 3237.9331, -76.58))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((vec4(39.14, 9.2, 5.8, -625.505) * mat2x4(_GLF_IDENTITY(6491.7238, mix(float(6491.7238), float(_GLF_FUZZED(-8.9)), bool(false))), -38.05, -588.298, -4651.4332, -4.3, _GLF_IDENTITY(57.62, mix(float(_GLF_FUZZED((+ -3.0))), float(_GLF_IDENTITY(57.62, min(57.62, 57.62))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, (false) || false)))))))), 3237.9331, -76.58)), _GLF_IDENTITY(vec2(mat2x3((vec4(39.14, 9.2, 5.8, -625.505) * mat2x4(_GLF_IDENTITY(6491.7238, mix(float(6491.7238), float(_GLF_FUZZED(-8.9)), bool(false))), -38.05, -588.298, -4651.4332, -4.3, _GLF_IDENTITY(57.62, mix(float(_GLF_FUZZED((+ -3.0))), float(_GLF_IDENTITY(57.62, min(57.62, 57.62))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, (false) || false)))))))), 3237.9331, -76.58)), sqrt(0.0), abs(0.0), 0.0, 1.0)), (vec2(mat2x3((vec4(39.14, 9.2, 5.8, -625.505) * mat2x4(_GLF_IDENTITY(6491.7238, mix(float(6491.7238), float(_GLF_FUZZED(-8.9)), bool(false))), -38.05, -588.298, -4651.4332, -4.3, _GLF_IDENTITY(57.62, mix(float(_GLF_FUZZED((+ -3.0))), float(_GLF_IDENTITY(57.62, min(57.62, 57.62))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, (false) || false)))))))), 3237.9331, -76.58)), sqrt(0.0), abs(0.0), 0.0, 1.0))) - tan(vec2(0.0, 0.0))))), (_GLF_FUZZED((vec4(39.14, 9.2, 5.8, -625.505) * mat2x4(6491.7238, -38.05, -588.298, -4651.4332, -4.3, _GLF_IDENTITY(57.62, mix(float(_GLF_FUZZED((+ -3.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(57.62, _GLF_IDENTITY(min(57.62, 57.62), min(min(57.62, 57.62), min(57.62, 57.62))))), float(mat3(float(_GLF_IDENTITY(57.62, _GLF_IDENTITY(min(57.62, 57.62), min(min(57.62, 57.62), min(57.62, 57.62))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 3237.9331, -76.58)))) / vec2(1.0, 1.0)) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), _GLF_IDENTITY(int(7), (0 >> _GLF_IDENTITY(int(0), int(0))) | (int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(98634) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) | (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), float(mat4x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), (clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), float(mat4x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-248.625)), bool(false)))) * 1.0), cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))) / 1.0))) * 1.0)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true, true, false))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x : _GLF_FUZZED(-6374.6581))), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-865.621)), bool(false))), injectionSwitch.y)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)))))) || false) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), false || (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) || false))))))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0)))) > injectionSwitch.y))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))) || false))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && ((injectionSwitch.x > injectionSwitch.y) && true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(235.013), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_9(vec3(1.0)), _GLF_struct_11(_GLF_struct_10(vec3(1.0), ivec2(1), _GLF_struct_replacement_8._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_struct_15(_GLF_struct_12(mat4x2(1.0), mat3(1.0), mat2x3(1.0), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat2x3(clamp(1.0, 1.0, 1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6575.8069))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0))), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0), mix(vec3((vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - tan(tan(0.0)))))), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sin(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sin(0.0)))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x3(mat2x4(5.9, 5.7, 2.3, 2424.1297, -4.3, 7482.6483, -1035.3607, -2.8))) : mat4x3(1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sin(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, sin(0.0)))), 1.0, 1.0))))), 1.0)))))), 1.0, 1.0))[0], (vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0)))))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0))[1], _GLF_FUZZED(-3490.7765)), vec3(_GLF_FUZZED(-8746.5311), _GLF_FUZZED(7.4), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.5))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) - 0.0)) - 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))[2]), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bvec3(true), 1.0, 1.0), _GLF_struct_13(mat3x4(1.0), uvec3(1u), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - abs(0.0)))), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(-91.92, -0.8, 7.7, 7.3, -858.797, 17.11, 280.516, 584.365, -5.5)) : _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bvec2(true), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | _GLF_IDENTITY((1u), ((1u)) ^ 0u), (true ? (1u) | _GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) | (0u & 65783u))) >> 0u), ((1u)) ^ 0u) : _GLF_FUZZED(subgroup_size)))))), _GLF_struct_14(1, uvec4(1u)), 1, bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), true && ((true)))), _GLF_IDENTITY((! (! (true))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (! (true))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))))))), mat2(1.0), bvec4(true)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, false))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_16._f1._f0.subgroup_base), uint(uvec4(~ _GLF_IDENTITY((_GLF_struct_replacement_16._f1._f0.subgroup_base), min((_GLF_struct_replacement_16._f1._f0.subgroup_base), (_GLF_struct_replacement_16._f1._f0.subgroup_base))), 1u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, max(_GLF_struct_replacement_16._f1._f0.subgroup_base, _GLF_struct_replacement_16._f1._f0.subgroup_base)), _GLF_struct_replacement_16._f1._f0.subgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), ~ (~ (max(subgroup_local_id, subgroup_local_id)))))) | 0u))), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), ~ (~ (max(subgroup_local_id, subgroup_local_id)))))) | 0u)))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float((mat2x3(-2.4, 2.8, -7.5, -754.429, -27.33, 0.1) == mat2x3(-90.08, -3.1, 869.023, 21.21, -7036.3810, -8.5))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, 0u + (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, uint(uvec4(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, 1u, 1u, 0u))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), min((subgroup_local_id + 1) | (subgroup_local_id + 1), (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 1u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * ((subgroup_local_id + 1)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u)))) % subgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) % subgroup_size))), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_struct_replacement_16._f1._f0.subgroup_base) | (_GLF_struct_replacement_16._f1._f0.subgroup_base)) : _GLF_FUZZED(subgroup_size)))), ((workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_struct_replacement_16._f1._f0.subgroup_base) | (_GLF_struct_replacement_16._f1._f0.subgroup_base)) : _GLF_FUZZED(subgroup_size))))) ^ (0u | 0u)) ^ 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_struct_replacement_16._f1._f0.subgroup_base) | (_GLF_struct_replacement_16._f1._f0.subgroup_base)) : _GLF_FUZZED(subgroup_size)))), ((workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_struct_replacement_16._f1._f0.subgroup_base) | (_GLF_struct_replacement_16._f1._f0.subgroup_base)) : _GLF_FUZZED(subgroup_size))))) ^ (0u | 0u)) ^ 0u), uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_struct_replacement_16._f1._f0.subgroup_base) | (_GLF_struct_replacement_16._f1._f0.subgroup_base)) : _GLF_FUZZED(subgroup_size)))), ((workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_struct_replacement_16._f1._f0.subgroup_base, (_GLF_struct_replacement_16._f1._f0.subgroup_base) | (_GLF_struct_replacement_16._f1._f0.subgroup_base)) : _GLF_FUZZED(subgroup_size))))) ^ (0u | 0u)) ^ 0u)))) : _GLF_FUZZED(max(virtual_gid, num_workgroup)))) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), uint(uvec2(subgroup_local_id + 1, 1u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), (uvec2(subgroup_local_id + 1, 1u)) - uvec2(0u, 0u)))))))) % subgroup_size), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))))), ((~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))))) | ((~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))))))))) % subgroup_size)), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))))), min(~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))))))))) % subgroup_size))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base), 0u ^ (~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base, (workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base) * 1u)))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u)))) % subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), max(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 1u))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), max(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 1u)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(1, 1)), 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)) + ivec4(0, 0, 0, 0)))))))), max(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-70131), min(_GLF_FUZZED(-70131), _GLF_FUZZED(-70131))) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), int(_GLF_IDENTITY(ivec3(1, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), clamp(0 >> _GLF_IDENTITY(int(0), int(0)), 0 >> _GLF_IDENTITY(int(0), int(0)), 0 >> _GLF_IDENTITY(int(0), int(0)))), 0 >> _GLF_IDENTITY(int(0), int(0)))))), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 1), min(ivec3(0, 0, 1), ivec3(0, 0, 1)))))))), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))))))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 1), min(ivec3(0, 0, 1), ivec3(0, 0, 1)))))))), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))))))), 1), (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 1), min(ivec3(0, 0, 1), ivec3(0, 0, 1)))))))), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0)))))))))), 1)) << ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-23970) : 1))), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) ^ 0u), subgroup_local_id)) + 1, 1u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) ^ 0u), subgroup_local_id)) + 1, 1u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (_GLF_IDENTITY(0, (0) + int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) + 0)))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-40577)))), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))))))))))))), 1), (_GLF_IDENTITY(true, true && (true)) ? ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-40577)))), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))))))))))))), 1) : _GLF_FUZZED((ivec4(68603, -25012, 98327, 40479) & -63892)))), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), max(int(_GLF_IDENTITY(ivec3(1, 0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))) >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0))))))) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))))), 1), ~ (~ (ivec4(ivec3(1, _GLF_IDENTITY(0, (0) - 0), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), int(0)))), 1))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ~ (~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0))))))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) << 0), int(0)))), 1)))))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 1u)))), clamp((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(67731) : _GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))))))), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), clamp((0 >> _GLF_IDENTITY(int(0), int(0))), (0 >> _GLF_IDENTITY(int(0), int(0))), (0 >> _GLF_IDENTITY(int(0), int(0)))))), 1))))))), max(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (0))), int(0)) : _GLF_FUZZED(37313)), ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (0))), int(0)) : _GLF_FUZZED(37313))) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))) | ((_GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), clamp(false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))), false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))) - (0 >> _GLF_IDENTITY(int(1), int(1))))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(1, (1) | 0), 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, min(0, 0)))), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ (0))))) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ~ (_GLF_IDENTITY(~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0))))), (~ (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))))) * ivec3(1, 1, 1)))), 1)))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * 1u) + 1, 1u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))), int(0)) : _GLF_FUZZED(37313)), 0 | ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0))), int(0)) : _GLF_FUZZED(37313))))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), max(int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) >> (0 ^ 0)), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) / 1)) ^ 0), int(0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)), max((true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)))), 0, 1, (0 << _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)), max((true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)))), 0, 1, (0 << _GLF_IDENTITY(int(2), int(2))))), (false ? _GLF_FUZZED(99152) : int(ivec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)), max((true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313)))), 0, 1, (0 << _GLF_IDENTITY(int(2), int(2)))))))) + (0 << _GLF_IDENTITY(int(0), int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))))), 1), ~ _GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0))))) - ivec3(0, 0, 0)), 1))), (false ? _GLF_FUZZED(ivec4(-33948, -30693, -31279, -9922)) : (~ (ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0))))) - ivec3(0, 0, 0)), 1))))))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0))))), (clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))) >> 0))) / 1))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))) >> 0u), 1u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(int(_GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(0), int(0)))), (true ? int((0 >> _GLF_IDENTITY(int(0), int(0)))) : _GLF_FUZZED(5763)))), (int(_GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(0), int(0)))), (true ? int((0 >> _GLF_IDENTITY(int(0), int(0)))) : _GLF_FUZZED(5763))))) | (int(_GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(0), int(0)))), (true ? int((0 >> _GLF_IDENTITY(int(0), int(0)))) : _GLF_FUZZED(5763)))))))), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), (ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0))))))))) | _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1))), 1), ~ (~ (ivec4(ivec3(1, 0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << 0) >> _GLF_IDENTITY(int(0), int(0)))), 1))))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))), clamp(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))), _GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))), (_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(int(0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))))) << ivec3(0, 0, 0))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)))), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), int(0)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))), int(0)) : _GLF_FUZZED(37313))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-70131) : _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) + 0), int(0)))))))), 1), ~ (~ (ivec4(ivec3(1, 0, (_GLF_IDENTITY(0, 0 ^ (0)) >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, 1u)))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), (_GLF_IDENTITY(0u ^ (workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_local_id))), subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (subgroup_local_id + 1) >> 0u), 1u)))) % subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), int(0)))), 1)))))))), uint(uvec2(subgroup_local_id + 1, 1u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u)))) | (subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u)))) % subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ (~ (ivec4(ivec3(1, _GLF_IDENTITY(0, ~ (~ (0))), (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))), uint(uvec2(subgroup_local_id + 1, 1u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u))), max(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u))))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u)))))) % subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))))), (ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))) | ivec3(0, 0, 0))))), uint(uvec2(subgroup_local_id + 1, 1u)))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u), 1u), (uvec2(1u, 1u) ^ uvec2(1u, 1u)) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, (subgroup_local_id + 1) >> 0u), 1u)) << uvec2(0u, 0u))))))) % subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ (~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, 1u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), (0u ^ (workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u)))) % subgroup_size, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) ^ 0u) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ _GLF_IDENTITY((~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))), ivec4(0, 0, 0, 0) ^ ((~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)))))))))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))))), int(_GLF_IDENTITY(ivec3(1, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) * 1))), ivec3(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-93943))), 1)), 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ _GLF_IDENTITY((~ (ivec4(ivec3(1, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), 0 ^ (0 >> _GLF_IDENTITY(int(0), int(0)))))), 1))), ivec4(0, 0, 0, 0) ^ ((_GLF_IDENTITY(~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)), (true ? ~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1)) : _GLF_FUZZED(ivec4(58440, -36048, 27369, -90338))))))))))))))), uint(uvec2(subgroup_local_id + 1, 1u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ _GLF_IDENTITY((~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1))), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(ivec3(_GLF_IDENTITY(int(0), int(0)), 1, 0))))), (ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(ivec3(_GLF_IDENTITY(int(0), int(0)), 1, 0)))))) / ((ivec3(0, 0, 0) ^ ivec3(1, 1, 1)) ^ ivec3(0, 0, 0))), 1))), (_GLF_IDENTITY((~ (ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(ivec3(_GLF_IDENTITY(int(0), int(0)), 1, 0))))), (ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(ivec3(_GLF_IDENTITY(int(0), int(0)), 1, 0)))))) / ((ivec3(0, 0, 0) ^ ivec3(1, 1, 1)) ^ ivec3(0, 0, 0))), 1))), ((~ (ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(ivec3(_GLF_IDENTITY(int(0), int(0)), 1, 0))))), (ivec3(1, 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(ivec3(_GLF_IDENTITY(int(0), int(0)), 1, 0)))))) / ((ivec3(0, 0, 0) ^ ivec3(1, 1, 1)) ^ ivec3(0, 0, 0))), 1)))) + ivec4(0, 0, 0, 0))) >> ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), uint(uvec2(subgroup_local_id + 1, 1u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 ^ (1)))))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ _GLF_IDENTITY((~ (ivec4(ivec3(1, 0, (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(0), int(0)))), 1))), ivec4(0, 0, 0, 0) ^ ((~ (ivec4(_GLF_IDENTITY(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), ivec3(0, 0, 0) | (ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))))), 1)))))))))), uint(uvec2(subgroup_local_id + 1, 1u)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (subgroup_size) | 0u)))))))) | (0u ^ (workgroup_base + _GLF_struct_replacement_16._f1._f0.subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u)))) % subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))) / 1u)) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, (_GLF_IDENTITY(0, int(ivec3(0, 0, 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0))))))), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), int(0)))), 1), ~ _GLF_IDENTITY((~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), (int(_GLF_IDENTITY(0, (0) * 1))) / 1)))), 1))), ivec4(0, 0, 0, 0) | ((~ (ivec4(ivec3(1, 0, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) * 1)), (int(_GLF_IDENTITY(0, (0) * 1))) / 1)))), 1)))))))))), uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), uvec2(0u, 0u) + (uvec2(subgroup_local_id + 1, 1u)))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))) | 0u)))))))) * 1u))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), false))))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : buf[virtual_gid])), 4, 64, 2);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter))) : 4))) | (4))))))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))) | (4))))), (int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))) | (4)))))) / 1))), clamp((0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))) | (4))), 1 * (clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))) | (4))))))))), (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))) | (4))))))), (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))) | (4))))))))))))); _injected_loop_counter --)
  {
   if((subgroup_local_id % _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((2), ((2)) | ((2)))), min((~ (2)), (~ (2))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), min((~ (2)), (~ (2))))), _GLF_IDENTITY((_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), min((~ (2)), (~ (2)))))) >> 0, ~ (~ ((_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), min((~ (2)), (~ (2)))))) >> 0)))))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) | (_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), _GLF_IDENTITY(int(ivec2((~ (2)), 1)), (int(ivec2((~ (2)), 1))) - 0))))), 1)) | (ivec2(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2)), (true ? _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2)))) : _GLF_FUZZED(62643))))), int(int(~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (2)), 2)))))))), _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) == 0)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false))))))))) && true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false))))))))) && true)) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(false, true && (false))))))))) && true)) || false)) || false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       subgroupAll(false);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || (false)), (false) && true)))
        barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, false)))), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! ((! (true))))))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 | 1) | 1), ! (_GLF_IDENTITY(! (_injected_loop_counter < ((1 | 1) | 1)), true && (! (_injected_loop_counter < ((1 | 1) | 1))))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    barrier();
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (ivec2(-75398, 51202).s & int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true, true)))))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     barrier();
                    }
                  }
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1)), ~ (~ (1)))) / 1), (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-40163))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-40163))), max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-40163)), _GLF_IDENTITY(int(ivec4((true ? 1 : _GLF_FUZZED(-40163)), 1, 1, 1)), max(int(ivec4((true ? 1 : _GLF_FUZZED(-40163)), 1, 1, 1)), int(ivec4((true ? 1 : _GLF_FUZZED(-40163)), 1, 1, 1)))))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-40163)))))) << 0)))), 4, 64, 4);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false))))))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.6))) < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.6))) < injectionSwitch.y)), false)))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) - 0) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec2(0, 1))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) - 0) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec2(0, 1)))))))), (~ (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) - 0) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec2(0, 1))))))))) >> (0 | 0))))), _injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), false, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, false || (false)), true))) && true)))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), false || (! (! (bool(bool(false)))))))), _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), true))), _GLF_IDENTITY(true, bool(bool(true))), false))))) || false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (_GLF_IDENTITY(1, min(1, 1))))) - 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (_GLF_IDENTITY(1, min(1, 1))))) - 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (_GLF_IDENTITY(1, min(1, 1))))) - 0))))) / 1)) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 3, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 3, (false ? _GLF_FUZZED(_injected_loop_counter) : 3) | (false ? _GLF_FUZZED(_injected_loop_counter) : 3))) >> 0))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) && true)))) || false)), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, _GLF_IDENTITY(true, true && (true)), false)))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-44043) : _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))), (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))))) / 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))) || false), false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0)) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-389.726, 7.8, 53.61, 0.7)) : mat2(0.0, 0.0, 0.0, 0.0))))), (vec4(1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0))))))) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
            {
             for(_GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_21(_GLF_struct_20(vec2(1.0), vec4(1.0), mat4x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6259.8704) : 0.0)))), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), (true ? _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(2689.5622))) : _GLF_FUZZED(91.51))), _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-6723.3723))))))), 1)), mat2x4(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_22._f0._f0._injected_loop_counter > 0); _GLF_struct_replacement_22._f0._f0._injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))) && true)))))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true)))), true, false, true))), false)))) && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), false)))))) || false)))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (56282u & 0u) ^ ((next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | 0));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(414.809), _GLF_FUZZED(37.70)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-60678) : 0))]) + 0.0), (injectionSwitch)[1]), bvec2(true, true))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.9 - 259.603))), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(true)))))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(414.809), _GLF_FUZZED(37.70)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), (injectionSwitch)[1]), bvec2(true, true))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((9.9 - 259.603))), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))), 1.0, abs(0.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 | (_GLF_IDENTITY(0, (0) - 0) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && ((_GLF_IDENTITY(false, (false) || false)) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && ((_GLF_IDENTITY(false, (false) || false)) || false))), ! (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && ((_GLF_IDENTITY(false, (false) || false)) || false)))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, false, true)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, false, true)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, false, true)))))) || false)) || false)))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bool(true)))) || false), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(true, ! (! (true)))) || false)), bool(bvec4(bool(((true) || false)), true, true, false)))))))))), false, false, true))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false, true))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, cos(0.0), _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(mat3(abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2(float(mat3(abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), clamp(float(mat2(float(mat3(abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), float(mat2(float(mat3(abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)), float(mat2(float(mat3(abs(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8916.2430)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, sqrt(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0))), 1.0, 1.0, 1.0)), float(mat3x4(float(mat3x2(1.0, sqrt(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0))), 1.0, 1.0, 1.0)), sin(0.0), 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, sqrt(0.0), 1.0, 0.0)))))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < 1), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(injectionSwitch, 170.624, -2.5)))).y))))
              barrier();
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), false, false))))), false, true)))))))
    barrier();
   subgroupBarrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(370.602)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-93.89), _GLF_FUZZED(8819.8932)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.7))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0)), min(float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bool(bool(_GLF_IDENTITY(true, (true) && true)))))))))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED((mat2(3.4, -53.28, 870.921, 9.0)[0] * vec2(5952.6522, -31.84))))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), 0.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0), (true ? mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))), 0.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0) : _GLF_FUZZED(mat2x4(343.280, 3.2, -4711.2928, -828.001, -574.712, _GLF_IDENTITY(-6.4, float(vec4(-6.4, 1.0, 1.0, abs(1.0)))), _GLF_IDENTITY(5.5, min(5.5, _GLF_IDENTITY(5.5, float(mat2x4(5.5, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0))))), 6.4))))), mix(float(_GLF_FUZZED(948.902)), float(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(2838.5787)), bool(false))), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), max(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), vec4(mat4x3(vec4(0.0, 0.0, 1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), vec4(0.0, 0.0, 1.0, 1.0)))))))), 0.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0), (true ? mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), clamp(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (vec4(0.0, 0.0, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (vec4(0.0, 0.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))))), 0.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 0.0) : _GLF_FUZZED(mat2x4(343.280, 3.2, -4711.2928, -828.001, -574.712, -6.4, 5.5, 6.4)))))), bool(true)))))), true)))) || false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (0 ^ 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 | (4)), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 | (4)), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 | (4)), 4)), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 | (4)), 4))) | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 | (4)), 4)))))), (true ? 4 : _GLF_FUZZED(1586))));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, exp(0.0), 1.0)))))));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, sqrt(1.0), 0.0), (false ? _GLF_FUZZED(mat2x3(9743.0803, 15.59, -9.0, 56.52, -602.543, 3800.7256)) : _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, sqrt(1.0), 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, sqrt(1.0), 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-270.253)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-744.994)), float(injectionSwitch.y), bool(true)))), bool(true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
}
