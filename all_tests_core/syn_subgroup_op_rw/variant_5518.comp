#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, false, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)));
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))) * 1u)), (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size))), min(~ (subgroup_size), ~ (subgroup_size))))))) / 1u), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) ^ 0u), 0u)))) / 1u)), (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))))) / _GLF_IDENTITY(1u, (1u) - 0u)) : _GLF_FUZZED(atomicXor(subgroup_size, subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))) / 1u)), 0u | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))) / 1u, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))) / 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))) / 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u * (uint(uvec2((_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))) / 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u)))), min(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))) / 1u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY(min((~ (subgroup_size)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), (min((~ (subgroup_size)), (~ (subgroup_size)))) | (min((~ (subgroup_size)), (~ (subgroup_size))))))) / 1u) : _GLF_FUZZED(subgroup_id), 0u + (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY(min((~ (subgroup_size)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), (min((~ (subgroup_size)), (~ (subgroup_size)))) | (min((~ (subgroup_size)), (~ (subgroup_size))))))) / 1u) : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)), min(_GLF_IDENTITY((~ (subgroup_size)), clamp(_GLF_IDENTITY((~ (subgroup_size)), (false ? _GLF_FUZZED(subgroup_size) : (~ (subgroup_size)))), (~ (subgroup_size)), (~ (subgroup_size)))), (~ (subgroup_size))))) / 1u)), (~ (~ _GLF_IDENTITY((~ (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size))))))) / 1u, clamp((_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size))))))) / 1u, (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size))))))) / 1u, (_GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size))))))) / 1u))))) - 0u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) ^ 0u) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id))))) ^ 0u)) ^ 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) ^ 0u) * subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))) ^ 0u), uint(uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))) ^ 0u)) ^ 0u), 1u))) * subgroup_size) / (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size) << 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((true), ! (! ((true))))), (! (! (true))) && true)))), false || ((_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((true), ! (! ((true))))), (! (! (true))) && true))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, false))), false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))), true)))))))) && (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0 | (64), (0 | (64)) | (0 | (64)))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.0)))) + 0.0) > injectionSwitch.y)))) || false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[1], clamp((vec2(vec4(injectionSwitch, 0.0, 1.0)))[1], _GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[1], 0.0 + (_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, 1.0)))[1], ((vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]) * 1.0))), (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]))), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(4283.4764)), bvec2(false, false))))), (true ? vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), 1.0), (min(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), 1.0)) - 0.0)))) : _GLF_FUZZED(vec2(-254.080, 480.525))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.11)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), clamp(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), max(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(_GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), min(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(4283.4764)), bvec2(false, false)))), vec2(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(4283.4764)), bvec2(false, false)))), _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(4283.4764)), bvec2(false, false))))), (sin(vec2(0.0, 0.0)) + (max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * mat2(1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), vec2(_GLF_FUZZED(1.5), _GLF_FUZZED(4283.4764)), bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)))))) + vec2(0.0, 0.0))), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), (true ? vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), 1.0)))) : _GLF_FUZZED(vec2(-254.080, 480.525))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-8950.4166) : dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0)))).y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(sqrt(sin(0.0)), clamp(sqrt(sin(0.0)), sqrt(sin(0.0)), sqrt(sin(0.0)))), 0.0)), min(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.1)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.6)), bool(false)))), bool(true)))) - sqrt(0.0)), sqrt(sin(0.0)), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ float(16135)))), bool(false)), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ float(16135)))), bool(false)))))) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0)), 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), min(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), float(vec3(injectionSwitch.y, 1.0, 1.0))), injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(51.03)), bool(false))), 1.0)), 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(6711.0070)), bool(false))) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0)), 1.0 * (float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0))))) + 0.0))), float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), 0.0, 1.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(sin(0.0)), 0.0))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (_GLF_IDENTITY(true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (true ? vec4(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED((mat4x2(7.5, 7.3, 1.8, -902.234, -7064.0293, 949.700, 6.5, 30.49) , vec4(-5830.9362, -677.096, 21.48, 76.91)))))) : _GLF_FUZZED(vec2(-254.080, _GLF_IDENTITY(480.525, clamp(_GLF_IDENTITY(480.525, mix(float(_GLF_FUZZED(-4980.1116)), float(480.525), bool(true))), 480.525, 480.525)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (true ? vec4(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED((mat4x2(7.5, 7.3, 1.8, -902.234, -7064.0293, 949.700, 6.5, 30.49) , vec4(-5830.9362, -677.096, 21.48, 76.91)))))) : _GLF_FUZZED(vec2(-254.080, 480.525)), 0.0, 1.0, 1.0, sqrt(1.0))), (vec2(mat3x2(true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (true ? vec4(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED((mat4x2(7.5, 7.3, 1.8, -902.234, -7064.0293, 949.700, 6.5, 30.49) , vec4(-5830.9362, -677.096, 21.48, _GLF_IDENTITY(76.91, (true ? _GLF_IDENTITY(76.91, (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(76.91, max(76.91, 76.91)))) : _GLF_FUZZED(step(-2.4, 8.2)))))))))) : _GLF_FUZZED(vec2(-254.080, 480.525)), 0.0, 1.0, 1.0, sqrt(1.0)))) - vec2(0.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (true ? vec4(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED((mat4x2(7.5, 7.3, 1.8, -902.234, -7064.0293, 949.700, 6.5, 30.49) , vec4(-5830.9362, -677.096, 21.48, 76.91)))))) : _GLF_FUZZED(vec2(-254.080, 480.525)), 0.0, 1.0, 1.0, sqrt(1.0))), (vec2(mat3x2(true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (true ? vec4(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED((mat4x2(7.5, 7.3, 1.8, -902.234, -7064.0293, 949.700, 6.5, 30.49) , vec4(-5830.9362, -677.096, 21.48, _GLF_IDENTITY(76.91, (true ? _GLF_IDENTITY(76.91, (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(76.91, max(76.91, 76.91)))) : _GLF_FUZZED(step(-2.4, 8.2)))))))))) : _GLF_FUZZED(vec2(-254.080, 480.525)), 0.0, 1.0, 1.0, sqrt(1.0)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(vec2(mat3x2(true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (true ? vec4(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED((mat4x2(7.5, 7.3, 1.8, -902.234, -7064.0293, 949.700, 6.5, 30.49) , vec4(-5830.9362, -677.096, 21.48, 76.91)))))) : _GLF_FUZZED(vec2(-254.080, 480.525)), 0.0, 1.0, 1.0, sqrt(1.0))), (vec2(mat3x2(true ? vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (true ? vec4(injectionSwitch, 0.0, 1.0) : _GLF_FUZZED((mat4x2(7.5, 7.3, 1.8, -902.234, -7064.0293, 949.700, 6.5, 30.49) , vec4(-5830.9362, -677.096, 21.48, _GLF_IDENTITY(76.91, (true ? _GLF_IDENTITY(76.91, (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(76.91, max(76.91, 76.91)))) : _GLF_FUZZED(step(-2.4, 8.2)))))))))) : _GLF_FUZZED(vec2(-254.080, 480.525)), 0.0, 1.0, 1.0, sqrt(1.0)))) - vec2(0.0, 0.0))) * mat2(1.0)), 0.0, 1.0, 1.0, log(1.0), 1.0, log(1.0)))))))).x > injectionSwitch.y))), false, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525))))).x > injectionSwitch.y) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525)))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525)))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525))))) - vec2(0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 1.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525)))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525))))) - vec2(0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-254.080, 480.525)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-254.080, 480.525)), (false ? _GLF_FUZZED(vec2(-46.23, 52.88)) : _GLF_FUZZED(vec2(-254.080, 480.525))))))))), mix(vec2(_GLF_FUZZED(9.1), _GLF_FUZZED((float(false) - -3737.0648))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-254.080, 480.525)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-254.080, 480.525)), (false ? _GLF_FUZZED(vec2(-46.23, 52.88)) : _GLF_FUZZED(vec2(-254.080, 480.525))))))))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-254.080, 480.525)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-254.080, 480.525)), (false ? _GLF_FUZZED(vec2(-46.23, 52.88)) : _GLF_FUZZED(vec2(-254.080, 480.525))))))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)))))) && true)), false, true))), false || ((bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (_GLF_IDENTITY(true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525)), mix(vec2(_GLF_FUZZED(238.249), _GLF_FUZZED(80.04)), vec2((true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-205.263) : 0.0)))), 0.0)), 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-254.080, 480.525)), (_GLF_FUZZED(vec2(-254.080, 480.525))) * exp(vec2(0.0, 0.0))))[0], (true ? vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x > injectionSwitch.y))), false, true))))), bool(bvec2(! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (true ? vec2(vec4(injectionSwitch, 0.0, 1.0)) : _GLF_FUZZED(vec2(-254.080, 480.525))))).x > injectionSwitch.y))), false, true))), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), false))))))
        return;
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 & 1, (0 ^ 0) + (1 & 1)))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (bool(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))) || false)))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           break;
          }
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false, true, false))))))));
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-40203) : ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-40203) : ~ (1)))))) | 0)), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0)), clamp(4, 4, 4)), 0 | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-37019) : (4)))) << ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(4.5))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat3x2(-9831.9500, -5.3, 37.49, 8835.9369, -166.432, 73.14) * _GLF_IDENTITY(vec3(889.774, 6.3, -503.164), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(889.774, 6.3, -503.164), (_GLF_IDENTITY(vec3(889.774, 6.3, -503.164), mix(vec3(_GLF_FUZZED(7.1), _GLF_FUZZED(9127.8522), (vec3(889.774, 6.3, -503.164))[2]), vec3((vec3(889.774, 6.3, -503.164))[0], (vec3(889.774, 6.3, -503.164))[1], _GLF_FUZZED(966.832)), bvec3(true, true, false)))) + vec3(0.0, 0.0, 0.0)))))) : injectionSwitch)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y))) && true)))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, true, false)))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     subgroupAll(false);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))) || false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), ivec3(_GLF_IDENTITY(ivec4(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), 1), min(ivec4(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), 1), ivec4(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), 1)))))), (int(_GLF_IDENTITY(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), ivec3(_GLF_IDENTITY(ivec4(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), 1), min(ivec4(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), 1), ivec4(ivec3(max(int(6), int(6)), 0, _GLF_IDENTITY(1, (1) | 0)), 1))))))) / 1)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y))) || false)))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(588.485)), bool(false))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))))), tan(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(4984.1239, 47.34)) : vec2(0.0, 0.0))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(4984.1239, 47.34)) : _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - sqrt(vec2(0.0, 0.0)))), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(4984.1239, 47.34)) : _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - sqrt(vec2(0.0, 0.0))))))), 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(mat4x3(length(normalize(vec2(1.0, 1.0))), log(cos(0.0)), abs(1.0), sqrt(0.0), abs(log(1.0)), 0.0, 0.0, exp(0.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-7.9, 924.703, 589.323, -25.31)) : mat2(1.0, 0.0, 0.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0))), exp(0.0), sqrt(0.0), abs(0.0))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))) + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0) + (vec2(1.0, 1.0)), (vec2(0.0, 0.0) + (vec2(1.0, 1.0))) - vec2(0.0, 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, log(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), 0.0), (mat3(1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(999.581)), float(1.0), bool(true))), 1.0, 1.0))), clamp(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))) * vec2(1.0, 1.0)))))))) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-98621) : _injected_loop_counter)) != 1), false, false, true))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        continue;
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(602.266) : injectionSwitch.y))))))
    {
     do
      {
       atomicStore(buf[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(37.31)), vec2(_GLF_FUZZED(797.174), _GLF_IDENTITY((injectionSwitch)[1], float(vec4((injectionSwitch)[1], 1.0, 1.0, 0.0)))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
         continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false), false))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(((vec2(9290.3873, 659.453) != vec2(-9723.9408, -7.3)) ? 8.7 : -67.20))), bool(false))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      continue;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(41.69)), vec2(_GLF_FUZZED(vec2(8.6, -57.81).y), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * 1.0), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))))), tan(0.0) + (min(injectionSwitch.y, injectionSwitch.y))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), tan(0.0) + (min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(97.36, -1214.6214)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), tan(0.0) + (min(injectionSwitch.y, injectionSwitch.y))))))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(97.36, -1214.6214)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), tan(0.0) + (min(injectionSwitch.y, injectionSwitch.y))))))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(97.36, -1214.6214)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), tan(0.0) + (min(injectionSwitch.y, injectionSwitch.y))))))), true))))), false, true)))), false))))).x, max(injectionSwitch.x, injectionSwitch.x))) + sqrt(0.0), abs(0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(1.2)), bool(false))))) + sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), max((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + sqrt(0.0), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))) + sqrt(0.0)))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false), (injectionSwitch.x > injectionSwitch.y) || false)))))))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
      }
    }
   else
    {
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(77824) : _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(9670.1120, -25.54, 881.462, -4.8, 4.3, -78.88, 94.11, 9.6, 9.0, -8.3, 6.4, -2.1)) : mat4x3(injectionSwitch, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) - vec2(0.0, 0.0)).x))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-81.54)), float(0.0), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED(5.9)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (transpose(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, determinant(mat3(1.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, abs(1.0))), 1.0, sqrt(1.0))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-1.9)), bool(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 0))), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), injectionSwitch.x)))))), true), false)))))), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), injectionSwitch.x))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), true), false)))))), true)), true, false)), ! (! (bool(bvec3(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))) || false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), false || (! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))), true), false)))))), true)), true, false)))))))))))); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(3), int(3))))))) | (int(8))))), ! (! (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, min(0 ^ 0, 0 ^ 0)), (0 ^ 0) | 0)) + (0)) >> _GLF_IDENTITY(int(8), int(8))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
        {
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(vec2(-0.8, 768.610).t), _GLF_FUZZED(-2870.2123)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y))))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-92.54) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))));
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3018.9050)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}
