#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_77 {
 vec2 _f0;
 bool _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_76 {
 bool _f0;
 uint _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_75 {
 vec2 _f0;
 bvec4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_74 {
 uint _f0;
 int _f1;
 uvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_78 {
 _GLF_struct_74 _f0;
 _GLF_struct_75 _f1;
 _GLF_struct_76 _f2;
 _GLF_struct_77 _f3;
} ;

struct _GLF_struct_72 {
 vec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_71 {
 mat2x3 _f0;
 mat3 _f1;
 uvec3 _f2;
 bvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_73 {
 _GLF_struct_71 _f0;
 uint _f1;
 uvec2 _f2;
 _GLF_struct_72 _f3;
} ;

struct _GLF_struct_69 {
 vec3 _f0;
 float _f1;
 bvec3 _f2;
 bvec4 _f3;
 ivec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_68 {
 mat2 _f0;
 mat3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_67 {
 uvec4 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 uvec3 _f3;
 bvec4 _f4;
 uint _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_70 {
 _GLF_struct_67 _f0;
 uvec2 _f1;
 _GLF_struct_68 _f2;
 mat2 _f3;
 _GLF_struct_69 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_65 {
 mat3x4 _f0;
} ;

struct _GLF_struct_64 {
 ivec4 _f0;
 mat2 _f1;
 mat4x3 _f2;
 uint _f3;
 ivec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_63 {
 ivec4 _f0;
 bvec3 _f1;
 mat3 _f2;
 uint _f3;
 mat4x2 _f4;
 vec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_62 {
 uvec4 _f0;
 uvec3 _f1;
 bvec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_66 {
 _GLF_struct_62 _f0;
 uint workgroup_size;
 mat4 _f1;
 _GLF_struct_63 _f2;
 _GLF_struct_64 _f3;
 _GLF_struct_65 _f4;
} ;

struct _GLF_struct_79 {
 _GLF_struct_66 _f0;
 mat3x4 _f1;
 vec3 _f2;
 _GLF_struct_70 _f3;
 _GLF_struct_73 _f4;
 _GLF_struct_78 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_59 {
 bvec4 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 uint num_workgroup;
} ;

struct _GLF_struct_58 {
 float _f0;
 int _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_57 {
 mat3x2 _f0;
} ;

struct _GLF_struct_60 {
 mat3x4 _f0;
 bvec4 _f1;
 _GLF_struct_57 _f2;
 _GLF_struct_58 _f3;
 _GLF_struct_59 _f4;
 ivec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_55 {
 ivec3 _f0;
 uint _f1;
 mat2 _f2;
 uvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_54 {
 mat4x3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_56 {
 uvec2 _f0;
 mat2x3 _f1;
 _GLF_struct_54 _f2;
 _GLF_struct_55 _f3;
} ;

struct _GLF_struct_52 {
 mat2x3 _f0;
 mat3 _f1;
 ivec4 _f2;
 uint _f3;
 mat2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_51 {
 mat2x3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_50 {
 mat4 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 uvec4 _f4;
 mat2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_53 {
 _GLF_struct_50 _f0;
 _GLF_struct_51 _f1;
 bvec4 _f2;
 bvec3 _f3;
 _GLF_struct_52 _f4;
 int _f5;
} ;

struct _GLF_struct_48 {
 bvec3 _f0;
 uvec4 _f1;
 vec2 _f2;
 ivec3 _f3;
 bvec2 _f4;
 mat2x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_47 {
 uvec4 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 float _f3;
} ;

struct _GLF_struct_49 {
 _GLF_struct_47 _f0;
 _GLF_struct_48 _f1;
} ;

struct _GLF_struct_45 {
 bool _f0;
 bvec4 _f1;
 ivec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_44 {
 vec3 _f0;
} ;

struct _GLF_struct_46 {
 uvec3 _f0;
 vec3 _f1;
 _GLF_struct_44 _f2;
 _GLF_struct_45 _f3;
} ;

struct _GLF_struct_61 {
 _GLF_struct_46 _f0;
 _GLF_struct_49 _f1;
 _GLF_struct_53 _f2;
 mat3 _f3;
 mat2 _f4;
 _GLF_struct_56 _f5;
 _GLF_struct_60 _f6;
} ;

struct _GLF_struct_41 {
 bvec4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 bvec4 _f3;
 mat4x2 _f4;
 ivec4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_42 {
 bool _f0;
 bvec2 _f1;
 _GLF_struct_41 _f2;
} ;

struct _GLF_struct_40 {
 vec2 _f0;
} ;

struct _GLF_struct_43 {
 ivec3 _f0;
 uint next_virtual_gid;
 ivec4 _f1;
 uvec3 _f2;
 _GLF_struct_40 _f3;
 _GLF_struct_42 _f4;
} ;

struct _GLF_struct_37 {
 mat2x4 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 mat3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_36 {
 ivec2 _f0;
 mat3x2 _f1;
 vec3 _f2;
 uvec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_35 {
 mat2 _f0;
 float _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_38 {
 vec4 _f0;
 _GLF_struct_35 _f1;
 _GLF_struct_36 _f2;
 _GLF_struct_37 _f3;
 bool _f4;
} ;

struct _GLF_struct_33 {
 uvec2 _f0;
 mat2 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 bool _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_34 {
 uvec2 _f0;
 _GLF_struct_33 _f1;
} ;

struct _GLF_struct_39 {
 _GLF_struct_34 _f0;
 int _f1;
 uint workgroup_base;
 _GLF_struct_38 _f2;
} ;

struct _GLF_struct_31 {
 mat2x4 _f0;
 bool _f1;
 vec4 _f2;
} ;

struct _GLF_struct_29 {
 uvec3 _f0;
 vec2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 ivec4 _f1;
 float _f2;
 mat4x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_27 {
 mat2x3 _f0;
 bvec3 _f1;
 ivec4 _f2;
 uvec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_30 {
 mat3 _f0;
 mat4 _f1;
 _GLF_struct_27 _f2;
 mat3x4 _f3;
 _GLF_struct_28 _f4;
 ivec4 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_32 {
 bvec4 _f0;
 _GLF_struct_30 _f1;
 vec3 _f2;
 _GLF_struct_31 _f3;
 uint subgroup_id;
 bvec4 _f4;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
} ;

struct _GLF_struct_23 {
 vec2 _f0;
 bool _f1;
 mat4 _f2;
 mat3 _f3;
 uvec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_25 {
 _GLF_struct_23 _f0;
 uvec2 _f1;
 _GLF_struct_24 _f2;
 bvec4 _f3;
 ivec2 _f4;
 ivec2 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
 ivec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 vec3 _f1;
 mat4x3 _f2;
 bvec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 mat3x4 _f2;
 _GLF_struct_20 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 _GLF_struct_16 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 bvec4 _f1;
 mat2 _f2;
 uvec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 bvec4 _f4;
 mat4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_22 {
 uint _f0;
 uint _f1;
 uint virtual_gid;
 _GLF_struct_15 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_21 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 uint workgroup_id;
 ivec4 _f1;
 ivec3 _f2;
 vec3 _f3;
 bool _f4;
 mat4 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 mat2x4 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 float _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 int _f1;
 uvec4 _f2;
 mat2x3 _f3;
 int _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 vec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uvec3 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uvec3 _f1;
 mat4x2 _f2;
 float _f3;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 ivec3 _f1;
 vec2 _f2;
 mat4x3 _f3;
 _GLF_struct_0 _f4;
 _GLF_struct_5 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(bvec4(true), _GLF_struct_30(mat3(1.0), mat4(1.0), _GLF_struct_27(mat2x3(1.0), bvec3(true), ivec4(1), uvec3(1u), mat4(1.0)), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_28(mat2(1.0), ivec4(1), 1.0, mat4x2(1.0), mat2x3(1.0)), ivec4(1), _GLF_struct_29(uvec3(1u), vec2(1.0), bvec3(true))), vec3(1.0), _GLF_struct_31(mat2x4(1.0), true, vec4(1.0)), gl_SubgroupID, bvec4(true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_25(_GLF_struct_23(vec2(1.0), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), mat4(1.0), mat3(1.0), uvec4(1u), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(1, 1, 1, 1) * (_GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, 0, 0))))) ^ (ivec4(1)))), uvec2(1u), _GLF_struct_24(ivec2(1)), bvec4(true), ivec2(1), ivec2(1), gl_SubgroupSize), vec4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat2x4(1.0), ivec3(1), vec2(1.0), mat4x3(1.0), _GLF_struct_0(bvec2(true), uvec3(1u), mat4x2(1.0), 1.0), _GLF_struct_5(_GLF_struct_1(uvec2(1u), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) + mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0))), bvec4(true)), _GLF_struct_2(mat4x2(1.0), 1, uvec4(1u), mat2x3(1.0), 1, mat4x3(1.0)), uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) << 0u), 1u, _GLF_IDENTITY(1u, (1u) | 0u)))), _GLF_struct_3(vec4(1.0), bvec3(true)), _GLF_struct_4(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED((14.06 * -5118.3818)), mix(float(true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED((14.06 * _GLF_IDENTITY(-5118.3818, (false ? _GLF_FUZZED(652.269) : -5118.3818))))), float(_GLF_IDENTITY(_GLF_FUZZED(-93.69), clamp(_GLF_IDENTITY(_GLF_FUZZED(-93.69), (_GLF_FUZZED(-93.69)) - 0.0), _GLF_FUZZED(-93.69), _GLF_FUZZED(-93.69)))), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), gl_SubgroupInvocationID)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-54.65) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_61 _GLF_struct_replacement_61 = _GLF_struct_61(_GLF_struct_46(uvec3(1u), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-1868.1365)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_struct_44(vec3(1.0)), _GLF_struct_45(true, bvec4(true), ivec3(1), bvec4(true))), _GLF_struct_49(_GLF_struct_47(uvec4(1u), ivec4(1), mat3x4(1.0), 1.0), _GLF_struct_48(bvec3(true), uvec4(1u), vec2(1.0), ivec3(1), bvec2(true), mat2x3(1.0), 1u)), _GLF_struct_53(_GLF_struct_50(mat4(1.0), mat3x4(1.0), ivec4(1), mat4x2(1.0), _GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u)) * (uvec4(1u))))), mat2(1.0), mat2(1.0)), _GLF_struct_51(mat2x3(1.0), mat2(1.0)), bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))), bvec3(true), _GLF_struct_52(mat2x3(1.0), mat3(1.0), ivec4(1), 1u, mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0))), 1.0))), mat2x4(1.0)), 1), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2(1.0), _GLF_struct_56(uvec2(1u), mat2x3(1.0), _GLF_struct_54(mat4x3(1.0), uvec3(1u)), _GLF_struct_55(ivec3(1), 1u, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(771.513, min(771.513, 771.513)))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), uvec3(1u), true)), _GLF_struct_60(mat3x4(1.0), bvec4(true), _GLF_struct_57(mat3x2(1.0)), _GLF_struct_58(1.0, 1, mat3x2(1.0)), _GLF_struct_59(bvec4(true), uvec2(1u), mat4x2(1.0), mat3x2(1.0), gl_NumWorkGroups.x), ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (true ? ivec3(1, 0, 0) : _GLF_FUZZED(ivec3(-17932, -8889, -94732))))))), mat3x4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0))), injectionSwitch)).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_79 _GLF_struct_replacement_79 = _GLF_struct_79(_GLF_struct_66(_GLF_struct_62(uvec4(1u), uvec3(1u), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))))))), mat2x3(1.0)), gl_WorkGroupSize.x, mat4(1.0), _GLF_struct_63(ivec4(1), bvec3(true), mat3(1.0), 1u, mat4x2(1.0), vec4(1.0), vec2(1.0)), _GLF_struct_64(ivec4(1), mat2(1.0), mat4x3(1.0), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(120472u) : _GLF_IDENTITY(1u, min(1u, 1u)))), ivec4(1), mat4x3(1.0)), _GLF_struct_65(mat3x4(1.0))), mat3x4(1.0), vec3(1.0), _GLF_struct_70(_GLF_struct_67(uvec4(1u), mat4x3(1.0), bvec3(true), uvec3(1u), bvec4(true), 1u, ivec2(1)), uvec2(1u), _GLF_struct_68(mat2(1.0), mat3(1.0), mat2x3(1.0)), mat2(1.0), _GLF_struct_69(vec3(1.0), 1.0, _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), true)))))), bvec4(true), ivec2(1), mat4x3(1.0)), bvec2(true)), _GLF_struct_73(_GLF_struct_71(mat2x3(1.0), mat3(1.0), uvec3(1u), bvec3(true), mat4x3(1.0)), 1u, uvec2(1u), _GLF_struct_72(vec4(1.0), mat3(1.0))), _GLF_struct_78(_GLF_struct_74(1u, 1, uvec2(1u), ivec2(1)), _GLF_struct_75(vec2(1.0), bvec4(true), mat2x3(1.0)), _GLF_struct_76(true, 1u, vec4(1.0), bvec4(true)), _GLF_struct_77(vec2(1.0), true, mat4x2(1.0))), vec4(1.0));
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_8(_GLF_struct_7(vec2(1.0), mat2x3(1.0))), _GLF_struct_11(_GLF_struct_9(mat4x2(1.0), gl_WorkGroupID.x, ivec4(1), ivec3(1), vec3(1.0), true, mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)))), mat2x4(1.0), _GLF_struct_10(mat3(1.0), mat4(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_34(uvec2(1u), _GLF_struct_33(uvec2(1u), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0)), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4x3(1.0), true, mat4x3(1.0))), 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_79._f0.workgroup_size, min(_GLF_struct_replacement_79._f0.workgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_79._f0.workgroup_size, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_79._f0.workgroup_size, max(_GLF_struct_replacement_79._f0.workgroup_size, _GLF_struct_replacement_79._f0.workgroup_size)))))) * _GLF_IDENTITY(_GLF_struct_replacement_12._f1._f0.workgroup_id, (false ? _GLF_FUZZED(_GLF_struct_replacement_61._f6._f4.num_workgroup) : _GLF_struct_replacement_12._f1._f0.workgroup_id)), min(_GLF_IDENTITY(_GLF_struct_replacement_79._f0.workgroup_size * _GLF_struct_replacement_12._f1._f0.workgroup_id, (true ? _GLF_IDENTITY(_GLF_struct_replacement_79._f0.workgroup_size * _GLF_struct_replacement_12._f1._f0.workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_struct_replacement_79._f0.workgroup_size * _GLF_struct_replacement_12._f1._f0.workgroup_id)) : _GLF_FUZZED(145273u))), _GLF_IDENTITY(_GLF_struct_replacement_79._f0.workgroup_size, (_GLF_struct_replacement_79._f0.workgroup_size) << 0u) * _GLF_struct_replacement_12._f1._f0.workgroup_id)), _GLF_struct_38(vec4(1.0), _GLF_struct_35(mat2(1.0), 1.0, mat4x3(1.0), mat3x4(1.0), mat3x2(1.0)), _GLF_struct_36(ivec2(1), mat3x2(1.0), vec3(1.0), uvec4(1u), uvec2(1u)), _GLF_struct_37(mat2x4(1.0), mat2x4(1.0), uvec4(1u), mat3(1.0), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))) : _GLF_FUZZED((uvec4(89226u, 16127u, 54416u, 87840u) , 194498u))))), ((1u)) >> 0u) / 1u)) >> 0u))), true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(1u, 1u, _GLF_struct_replacement_39.workgroup_base + _GLF_struct_replacement_32.subgroup_id * _GLF_struct_replacement_26._f0.subgroup_size + _GLF_struct_replacement_6._f5._f4.subgroup_local_id, _GLF_struct_15(_GLF_struct_13(mat3x4(1.0), ivec3(1), mat2x3(1.0), uvec3(1u), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), true && (bool(bool(_GLF_IDENTITY(true, (true) && true))))))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), bvec4(true)), _GLF_struct_14(vec2(1.0), bvec4(true), mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.6) : 1.0))), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), mat2x4(1.0))), _GLF_struct_17(mat2x3(1.0), _GLF_struct_16(mat3(1.0), uvec3(1u)), _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(144590u) : 1u)), 1u)))))))), _GLF_struct_21(_GLF_struct_18(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.3) : 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat2(1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + (float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat2(1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), 0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))), 0.0))), transpose(transpose(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, (0.0) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0)))), 0.0, 1.0, 0.0)), 1.0 * (dot(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.4) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(8.9, -1102.0386, 774.059, 749.722))))), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 0.0))) - 0.0), 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(sqrt(1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0)), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)))) * 1.0))), 1.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, tan(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.9)), float(1.0), bool(true))), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0)))))))))), vec3(1.0), mat4x3(1.0), bvec4(true), mat4x2(1.0)), _GLF_struct_19(mat2(1.0)), mat3x4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_struct_20(bvec4(true), ivec4(1), mat4(1.0)), mat2(1.0)), vec2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_43 _GLF_struct_replacement_43 = _GLF_struct_43(ivec3(1), _GLF_struct_replacement_39.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_id, (_GLF_struct_replacement_32.subgroup_id) | (_GLF_struct_replacement_32.subgroup_id)) * _GLF_struct_replacement_26._f0.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_id, (_GLF_struct_replacement_32.subgroup_id) | (_GLF_struct_replacement_32.subgroup_id)) * _GLF_struct_replacement_26._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_id, (_GLF_struct_replacement_32.subgroup_id) | (_GLF_struct_replacement_32.subgroup_id)) * _GLF_struct_replacement_26._f0.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_id, (_GLF_struct_replacement_32.subgroup_id) | (_GLF_struct_replacement_32.subgroup_id)) * _GLF_struct_replacement_26._f0.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_id, (_GLF_struct_replacement_32.subgroup_id) | (_GLF_struct_replacement_32.subgroup_id)) * _GLF_struct_replacement_26._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_id, (_GLF_struct_replacement_32.subgroup_id) | (_GLF_struct_replacement_32.subgroup_id)) * _GLF_struct_replacement_26._f0.subgroup_size)))) + ((_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1) % _GLF_struct_replacement_26._f0.subgroup_size), ivec4(1), uvec3(1u), _GLF_struct_40(vec2(1.0)), _GLF_struct_42(true, bvec2(true), _GLF_struct_41(bvec4(true), mat2x4(1.0), ivec3(1), bvec4(true), mat4x2(1.0), ivec4(1), mat3x2(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_22.virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_43.next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-31.75, -113.040)))).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size, ! (! (_GLF_struct_replacement_6._f5._f4.subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) + ivec2(0, 0))), int(ivec3(int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) + ivec2(0, 0))), 0, 1)))) < _GLF_IDENTITY(_GLF_struct_replacement_26._f0.subgroup_size, max(_GLF_struct_replacement_26._f0.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_26._f0.subgroup_size, uint(uvec2(_GLF_struct_replacement_26._f0.subgroup_size, 1u))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f5._f4.subgroup_local_id, max(_GLF_struct_replacement_6._f5._f4.subgroup_local_id, _GLF_struct_replacement_6._f5._f4.subgroup_local_id)) + 1 < _GLF_struct_replacement_26._f0.subgroup_size, ! (! (_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size)))))))), (_GLF_IDENTITY(_GLF_struct_replacement_6._f5._f4.subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0))) < _GLF_struct_replacement_26._f0.subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size, ! (! (_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size, ! (! (_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size)))) && true), ! (! (_GLF_struct_replacement_6._f5._f4.subgroup_local_id + 1 < _GLF_struct_replacement_26._f0.subgroup_size))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_struct_replacement_22.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_22.virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false))))))), ! (! (bool((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false))))))))))))) && true))))))), false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (! (! (! (_GLF_IDENTITY(false, false || (false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, false)))))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && ((false)))), false, false, false)))))))))))), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
