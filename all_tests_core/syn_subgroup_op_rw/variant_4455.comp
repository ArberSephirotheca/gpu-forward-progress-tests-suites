#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)).x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))), _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_id)))) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x) - (1u ^ 1u)), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))), _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(0u, (0u) >> 0u)))), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, 1u * (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED(uint(70113)) : _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_id)))))) >> 0u))))), max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), (_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), min(_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), min(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups))), _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY((min(gl_NumWorkGroups, gl_NumWorkGroups)) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((min(gl_NumWorkGroups, gl_NumWorkGroups)) / uvec3(1u, 1u, 1u), ((min(gl_NumWorkGroups, gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) ^ uvec3(0u, 0u, 0u))).x, gl_NumWorkGroups.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true && ((bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, true, true)), (bool(bvec4(bool(false), true, true, true))) && true))), _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_IDENTITY((bool(bool(false))), bool(bvec3((bool(bool(false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false)))), false))))), _GLF_IDENTITY(true, (true) || false) && ((bool(bool(false)))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bool(false))), bool(bvec3((bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true))))))))))) && true) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (0u & 58593u) | (_GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (0u & 58593u) | _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) ^ 0u))))))), (true ? _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) ^ 0u))))))) : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) ^ 0u))))))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, 0u ^ (6u))))), 1u, 0u)), max(uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | 0u)), uint(6u))), 1u, 0u)), uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) ^ 0u)), (_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), (uvec2(uvec2(uvec2(subgroup_size, 1u)))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) * uvec2(1u, 1u)))))), max(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), max(uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), _GLF_IDENTITY(uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, 0u, 0u)))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) >> 0u), 0u)) * uvec4(1u, 1u, 1u, 1u))))), (uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, 0u, 0u)))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) >> 0u), 0u)) * uvec4(1u, 1u, 1u, 1u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), (uvec2(uvec2(uvec2(subgroup_size, 1u)))) | (uvec2(uvec2(uvec2(subgroup_size, 1u)))))), min((_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), (uvec2(uvec2(uvec2(subgroup_size, 1u)))) | (uvec2(uvec2(uvec2(subgroup_size, 1u)))))), (_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), (uvec2(uvec2(uvec2(subgroup_size, 1u)))) | (uvec2(uvec2(uvec2(subgroup_size, 1u)))))))) << uvec2(0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | uvec2(0u, 0u))) ^ uvec2(0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), (uvec2(uvec2(uvec2(subgroup_size, 1u)))) | (uvec2(uvec2(uvec2(subgroup_size, 1u)))))), min((_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), (uvec2(uvec2(uvec2(subgroup_size, 1u)))) | (uvec2(uvec2(uvec2(subgroup_size, 1u)))))), (_GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_size, 1u))), (uvec2(uvec2(uvec2(subgroup_size, 1u)))) | (uvec2(uvec2(uvec2(subgroup_size, 1u)))))))) << _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * uvec2(1u, 1u)))))))))) * uvec2(1u, _GLF_IDENTITY(1u, (1u) | (1u)))))))), min((_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(78955u))))))), 0u))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) | 0u)), uvec2(uvec2(uvec2(subgroup_size, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))))))) * uvec2(1u, 1u)))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), 0u ^ (~ (~ (subgroup_size)))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(num_workgroup) : subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u, 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u, max((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u))))), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) ^ 0u)), uint(6u))), 1u, 0u))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (_GLF_IDENTITY(uvec2(subgroup_size, 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec2(8541u, 173958u) >> uvec2(119246u, 34259u))) : uvec2(subgroup_size, 1u))))))) * uvec2(1u, 1u)))))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))), max(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), ~ (~ (max(subgroup_size, subgroup_size)))))) / 1u), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u)) >> 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))))), uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), uvec2(uvec2(uvec2(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u), (uvec2(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) << uvec2(0u, 0u)))), 0u + (1u)))))), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, (1u) / 1u)), uvec2(uvec2(uvec2(subgroup_size, _GLF_IDENTITY(1u, 0u + (1u)))))))))) * uvec2(1u, 1u)))))))))) >> 0u) : _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(num_workgroup)))))) / 1u) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), (true ? (0u) : _GLF_FUZZED(num_workgroup)))))) / 1u) : _GLF_FUZZED(num_workgroup)))) / 1u), _GLF_IDENTITY(0u, (0u) + 0u)))), ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u)))) / 1u), 0u + (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u))))))) / 1u) : _GLF_FUZZED(num_workgroup), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u))))))) / 1u) : _GLF_FUZZED(num_workgroup)) | (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u))))))) / 1u) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u | (0u))), (_GLF_IDENTITY(true ? (0u) : _GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (true ? (0u) : _GLF_FUZZED(num_workgroup)), (~ (true ? (0u) : _GLF_FUZZED(num_workgroup))) | (~ (true ? (0u) : _GLF_FUZZED(num_workgroup))))))))))) / 1u) : _GLF_FUZZED(num_workgroup)))) / 1u), _GLF_IDENTITY(0u, (0u) + 0u)))), ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u))), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u)))) / 1u)))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(num_workgroup)))))) / 1u) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), (true ? (0u) : _GLF_FUZZED(num_workgroup)))))) / 1u) : _GLF_FUZZED(num_workgroup)))) / 1u), _GLF_IDENTITY(0u, (0u) + 0u))), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(num_workgroup)))))) / 1u) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(true, (true) && true) ? (0u) : _GLF_FUZZED(num_workgroup)))), ((_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(true, (true) && true) ? (0u) : _GLF_FUZZED(num_workgroup))))) - 0u))) / 1u) : _GLF_FUZZED(num_workgroup)))) / 1u), _GLF_IDENTITY(0u, (0u) + 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec2(~ (0u), 1u))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u)) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) / 1u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u)))) / 1u))) - 0u)) | _GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec2((gl_WorkGroupSize.x), 1u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, (false) || false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ((false) || _GLF_IDENTITY(false, (false) || false)) && true)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), true && (_GLF_IDENTITY((false) || false, ((false) || false) && true)))), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(197548u, 48297u, _GLF_IDENTITY(43158u, clamp(43158u, 43158u, 43158u)))) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(197548u, 48297u, 43158u)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))), ((false ? _GLF_FUZZED(uvec3(197548u, 48297u, 43158u)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))))) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), false, false)))), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) * 1.0))), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true)))), (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0))))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! ((false)))))), true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u)), max(uint(_GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u)), uint(_GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u)), max(uint(_GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u)), uint(_GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), max(_GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u)))), _GLF_IDENTITY((uint(3u)), 0u | ((uint(3u)))))) << 0u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) - 0u)))))) ^ (0u ^ 0u))))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)), min(min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))), (true ? (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), 1u * (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (uint(3u)))) << 0u))))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u ^ (3u))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(761.866)), float(0.0), bool(true))))), injectionSwitch.x)) << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, (num_workgroup) * 1u), num_workgroup))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) : _GLF_FUZZED(atomicMin(workgroup_size, num_workgroup)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), max(_GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), clamp((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) | ((workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(_GLF_IDENTITY(3u, (3u) << 0u)), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))) >> 0u), (_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_base)))) ^ 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) | (6u), 0u | (_GLF_IDENTITY((6u) | (6u), ~ (~ ((6u) | (6u)))))))), uint(6u))), (0u | 0u))))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u ^ (_GLF_IDENTITY(3u, 0u | (3u))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) - 0u) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(virtual_gid))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8545.3000)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))), injectionSwitch.y))), bool(true)))))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 0u)), max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 4, 64, 2);
 if((_GLF_IDENTITY(subgroup_local_id % 2, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(virtual_gid) : uint(2u)))) | 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | 0u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(subgroup_id))), 0u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(subgroup_id))), 0u, 1u))))))), (false ? _GLF_FUZZED(virtual_gid) : uint(2u)))) | 0u)), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) << 0u) : uint(2u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) << 0u) : uint(2u)))))) | 0u))))) ^ (_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)))) % 2))))) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) / 1.0)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), cos(0.0)))), (0.0) - 0.0), (false ? _GLF_FUZZED(7118.7779) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-414.184)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, sqrt(sqrt(0.0)), 0.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), cos(0.0)))), (0.0) - 0.0))), 0.0, 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-65.57) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, exp(0.0), 0.0, sqrt(0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1737.4194)), float(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, exp(0.0), 0.0, sqrt(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0 + (mix(_GLF_IDENTITY(float(_GLF_FUZZED(1737.4194)), float(mat2x4(float(_GLF_FUZZED(1737.4194)), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), float(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (injectionSwitch.x) + 0.0), 1.0, 0.0, exp(0.0), 0.0, sqrt(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))))) / 1)), 0 ^ (max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))) / 1.0)) + abs(0.0)), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), cos(0.0)))), (0.0) - 0.0), (false ? _GLF_FUZZED(7118.7779) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), cos(0.0)))), (0.0) - 0.0))), 0.0, 0.0)), 0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-65.57) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, exp(0.0), 0.0, sqrt(0.0))), mix(float(_GLF_FUZZED(1737.4194)), float(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(90.83)), float(_GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(78.70)), bool(false)))), bool(true))))), 0.0, sqrt(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(injectionSwitch.x, injectionSwitch.x))))))) / 1))))) + (1))), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((_GLF_IDENTITY(-49645, (_GLF_IDENTITY(-49645, (-49645) | 0)) / 1) % -68430)))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(1), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / sqrt(vec2(1.0, 1.0))).y))))
      barrier();
     barrier();
    }
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false))) || false), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))), bool(bool(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))).y), false, true, false)))) || false)), bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))).y), false, true, false)))) || false)), bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))).y), false, true, false)))) || false)), bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))).y), false, true, false)))) || false)), bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))), false), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))).y), false, true, false)))) || false)), bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))).y), false, true, false)))) || false)), bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))).y), false, true, false)))) || false)), bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)))))), false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0)))), (vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0))))) / sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), false, true, false))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-26.37))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y, false, true), true)))))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) ? injectionSwitch.x : _GLF_FUZZED(-26.37))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), true, false))))), false, true, false)))))) && true)) || false)))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))), false, true, false)))) || false))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true, false)))))), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false, true, false)))) || false)))))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0))).y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)))), (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true))))) || false), false, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-846.800)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-4.0, mix(float(-4.0), float(_GLF_FUZZED(-10.33)), bool(false))), -5.6)))))), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))))[1], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))))[1]) / 1.0)), vec2(_GLF_FUZZED(16.14), _GLF_FUZZED((618.330 + 96.83))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -5.6)))))))))).y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, (true) && true)))), false, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))))) || false))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6897.1510), _GLF_FUZZED(-9.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec2(-6865.8671, -7.9), injectionSwitch)) : injectionSwitch)), injectionSwitch)).x < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec2(-6865.8671, -7.9), injectionSwitch)) : injectionSwitch)), injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec2(-6865.8671, -7.9), injectionSwitch)) : injectionSwitch)), injectionSwitch), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec2(-6865.8671, -7.9), injectionSwitch)) : injectionSwitch)), injectionSwitch)) * mat2(1.0), mix(vec2(_GLF_FUZZED(-6131.4931), ((min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec2(-6865.8671, -7.9), injectionSwitch)) : injectionSwitch)), injectionSwitch)) * mat2(1.0))[1]), vec2(((min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(step(vec2(-6865.8671, -7.9), injectionSwitch)) : injectionSwitch)), injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(6.1)), bvec2(true, false))))).x < injectionSwitch.y)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), false, true, false)))) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) || false)))), false, true, false)))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), false, true, false)))) || false)), ! (! (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))), false, true, false)))) || false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), true, false))), false, true, false)))) || false)), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), _GLF_IDENTITY(false, ! (! (false))), true, false)))) || false))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(146.355)), vec2(_GLF_FUZZED(573.737), (injectionSwitch)[1]), bvec2(false, true))).y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), false, true, false)))) || false))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), max(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), sqrt(1.0) * (max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x), mix(float(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), float(_GLF_FUZZED(-575.210)), bool(false)))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), false, true, false)))) || false))))))))))))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
