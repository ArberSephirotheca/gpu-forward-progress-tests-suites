#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, true, false)), true, false))))) && true))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), (gl_WorkGroupSize.x) | 0u);
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0)), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(1.1, -866.972, -6.4, -1.5, 4965.2116, 680.696, -2.7, 6436.0234, -9.4, -5309.0095, 1.7, 995.888, 3212.8594, -6.3, -540.829, 3554.3026)) : mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0)), 1.0, 0.0, 1.0, 1.0))))))))))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) && true); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8221.0629)), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))) && true)) && true)))))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8221.0629)), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))) && true)) && true)))))).x) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0)]), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(8221.0629)), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false)))), true))))))))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), false || ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))), gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(1u, 1u), 0u | (max(1u, 1u))), max(_GLF_IDENTITY(max(1u, 1u), 0u | (max(1u, 1u))), _GLF_IDENTITY(max(1u, 1u), 0u | (max(1u, 1u))))), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), ~ (~ (max(1u, 1u))))))))))))) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))), _GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))))) * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))), _GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))))) * workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))), (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))) | (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))))), (uint(_GLF_IDENTITY(uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))), (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))) | (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))))))) | (uint(_GLF_IDENTITY(uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))), (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))) | (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))))))))), uint(_GLF_IDENTITY(uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), clamp(~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), ~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), ~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))))))))) * workgroup_id), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))), (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))) | (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))))), (uint(_GLF_IDENTITY(uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))), (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))) | (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))))))) | (uint(_GLF_IDENTITY(uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))), (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))))) | (uint(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))))))))), uint(_GLF_IDENTITY(uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), clamp(~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), ~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), ~ (uvec4(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), clamp(workgroup_size, workgroup_size, workgroup_size)))), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)))))))))) * workgroup_id)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u), (_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))) | (workgroup_size)), _GLF_IDENTITY(1u, max(1u, 1u))))) * workgroup_id) | (_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u)))))))) * workgroup_id))) | (_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(1u, max(1u, 1u))))) * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec3(0, 0, 1))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ~ (~ ((0)))))))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, 0u + (_GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, clamp((subgroup_id * subgroup_size) ^ 0u, (subgroup_id * subgroup_size) ^ 0u, (subgroup_id * subgroup_size) ^ 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))), (subgroup_id * subgroup_size) ^ 0u))))), 0u + (subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u) - 0u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, _GLF_IDENTITY(((1) >> 0), max(((1) >> 0), _GLF_IDENTITY(((1) >> 0), 0 + (((1) >> 0))))) | (_GLF_IDENTITY((1) >> 0, min((1) >> 0, (1) >> 0)))), ((1) >> 0) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) | (_GLF_IDENTITY((1) >> 0, min((1) >> 0, (1) >> 0)))), _GLF_IDENTITY(((1) >> 0), int(ivec2(((1) >> 0), 0))) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) | (_GLF_IDENTITY((1) >> 0, min((1) >> 0, (1) >> 0)))), _GLF_IDENTITY(((1) >> 0) >> 0, clamp(((1) >> 0) >> 0, ((1) >> 0) >> 0, _GLF_IDENTITY(((1) >> 0) >> 0, (((1) >> 0) >> 0) | (((1) >> 0) >> 0))))))))) / 1)) + 0)), uint(uvec2((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), 0u))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(3125))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat2x3(mat2(1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(mat2x3(-863.492, -4178.5547, -2288.1953, -567.574, -651.055, 35.28)) : mat2x3(mat2(1.0, 0.0, 0.0, 1.0)))))))))), abs(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))) + _GLF_IDENTITY((vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))))), min(sqrt(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0))), 0.0, sqrt(0.0), 0.0)))))), sqrt(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))), max((vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), min(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), sqrt(determinant(mat2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(670.241)), bool(false)))))) + 0.0), 0.0, 1.0)))))))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), min(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), mix(vec2(_GLF_FUZZED(-36.11), ((vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), min(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), sqrt(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))))))))[1]), vec2(((vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), min(sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))[0], _GLF_FUZZED(-9.6)), bvec2(true, false))))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((- -748.329))), bool(false))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((- -748.329))), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((- -748.329))), bool(false))), injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((- -748.329))), bool(false))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED((- -748.329))), min(float(_GLF_FUZZED((- -748.329))), float(_GLF_FUZZED((- -748.329))))), bool(false))), injectionSwitch.y))) - 0.0)) - 0.0)))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(135.770)), float(injectionSwitch.y), bool(true))), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((false ? 3.7 : 502.396))), bool(false))), false ? _GLF_FUZZED(-3.7) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) || false)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true)), true))))) || false), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)), true), true, false)))))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))))), false || (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))))))) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0))))) - mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8035.9983))), 0.0))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), true && (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.84), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.0)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), bool(bool(_GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.2) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, abs(1.0), log(1.0), 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(64.22)), bool(false))), 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), abs(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(364.397)))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-75.44)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-58.51 - 214.574))), bool(false))), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 0.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(-5587.4060)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true))).x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0)), 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), 0.0))))).x)), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(41.24)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), exp(0.0), 1.0, 0.0, 0.0)), max(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x)), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), max(float(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))) + 0.0), _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(9.5) : _GLF_ZERO(0.0, injectionSwitch.x))), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-938.340))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0)))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.8)), bool(false))), exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), vec2(_GLF_IDENTITY(vec4(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), 0.0, 1.0), clamp(vec4(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), 0.0, 1.0), vec4(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), 0.0, 1.0), vec4(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(abs(1.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(7.1)), bool(false))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), min(vec4(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(7.1)), bool(false))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0), vec4(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(7.1)), bool(false))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))))), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), 0.0, 1.0))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-3576.8173, -4.0)), (_GLF_FUZZED(vec2(-3576.8173, -4.0))) - log(vec2(1.0, 1.0)))))).x)), 0.0, 0.0, exp(0.0), exp(0.0), 1.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((5.1 + -800.713))), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(64.39), _GLF_FUZZED(-89.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6270.5395)), float(0.0), bool(true))), float(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6270.5395)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, 0.0 + (0.0))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(60.48)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + sqrt(0.0)), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, abs(1.0)))), 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))[1]), vec2(_GLF_FUZZED(446.160), _GLF_FUZZED(2.0)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ldexp(-528.807, 5031)) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.4)), bool(false))), 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.3) : 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).x)), 0.0, 0.0, exp(0.0), exp(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(219.753) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), clamp(0.0, 0.0, 0.0))))))) > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)), _GLF_IDENTITY(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false, _GLF_IDENTITY(bool(bool(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)), ! (! (_GLF_IDENTITY(bool(bool(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)), (bool(bool(((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))) && true)))))))) && true)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.0) : injectionSwitch.y)))), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           do
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true && (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.3))), injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false)))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                    return;
                  }
                 return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-71.77))) : _GLF_FUZZED(7927.1624)))))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.6)))) - 0.0) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(92.53), _GLF_FUZZED(7893.7229)), bvec2(false, false))).x : _GLF_IDENTITY(_GLF_FUZZED(-4.6), min(_GLF_IDENTITY(_GLF_FUZZED(-4.6), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(-4.6), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_FUZZED(-4.6), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_FUZZED(-4.6)))))) - 0.0) < injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), _GLF_IDENTITY((false ? _GLF_FUZZED(46739) : _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), int(int(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0)))))) ^ 0)), (true ? (false ? _GLF_FUZZED(46739) : _GLF_IDENTITY((0), _GLF_IDENTITY(((0)), int(int(((0))))) ^ 0)) : _GLF_FUZZED((77424 - 11329))))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  continue;
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false))) && true)) && true), true && (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && true), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), false))) && true)) && true))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false)))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)), false || _GLF_IDENTITY((false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, false))) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, false))) && true))), ! (! ((false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, false))) && true)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, false))) && true))), ! (! ((false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, false))) && true)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))), false, false))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), clamp(4, _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) | _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) ^ 0, max(_GLF_IDENTITY(((4)) ^ 0, (false ? _GLF_FUZZED(bitCount(subgroup_id)) : ((4)) ^ 0)), _GLF_IDENTITY(((4)) ^ 0, ~ (~ (((4)) ^ 0)))))), (4))), ((4) | _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) ^ 0, max(_GLF_IDENTITY((_GLF_IDENTITY((4), 0 | ((4)))) ^ 0, (false ? _GLF_FUZZED(bitCount(subgroup_id)) : ((4)) ^ 0)), _GLF_IDENTITY(((4)) ^ 0, ~ (~ (((4)) ^ 0)))))), (4)))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY((4) | _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) ^ 0, max(_GLF_IDENTITY(((4)) ^ 0, (false ? _GLF_FUZZED(bitCount(subgroup_id)) : (_GLF_IDENTITY((4), ((4)) ^ 0)) ^ 0)), _GLF_IDENTITY(((4)) ^ 0, ~ (~ (((_GLF_IDENTITY(4, min(4, 4)))) ^ 0)))))), (4))), ((4) | _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) ^ 0, max(_GLF_IDENTITY(((4)) ^ 0, (false ? _GLF_FUZZED(bitCount(subgroup_id)) : (_GLF_IDENTITY((4), ~ (~ ((4))))) ^ 0)), _GLF_IDENTITY(((4)) ^ 0, ~ (~ (((4)) ^ 0)))))), (4)))) + 0)) - 0)))), 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) - ((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), (_GLF_IDENTITY((0) - ((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))), ((0) - ((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))) ^ 0)) * (1 & 1))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 1u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(next_virtual_gid, 1u, 0u, 0u), (uvec4(next_virtual_gid, 1u, 0u, 0u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-2661.1807), _GLF_FUZZED(-29.34)), bvec2(false, false)))).x))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(183876u, 52432u, 118951u, 90727u)), (_GLF_FUZZED(uvec4(183876u, 52432u, 118951u, 90727u))) | (_GLF_FUZZED(uvec4(183876u, 52432u, 118951u, 90727u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u))), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))), _GLF_IDENTITY(0u | ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (_GLF_IDENTITY(0u | (0u), (0u | (0u)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) ^ 0u))))), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u)))))) << (0u | 0u)), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))), clamp(0u | ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) ^ 0u)))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) ^ 0u))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))), (false ? _GLF_FUZZED(read) : (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))))), (0u | ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), next_virtual_gid, next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / uint(_GLF_ONE(1.0, injectionSwitch.y))), next_virtual_gid, next_virtual_gid))))) ^ 0u)))) | (0u | ((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), 0u | (min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))))))), _GLF_IDENTITY(0u | ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u))))))), (true ? _GLF_IDENTITY(0u | ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)))))), (0u | ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 1u, 0u, 0u), min(_GLF_IDENTITY(uvec4(next_virtual_gid, 1u, 0u, 0u), (uvec4(next_virtual_gid, 1u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)), uvec4(next_virtual_gid, 1u, 0u, 0u))))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))))) | (_GLF_IDENTITY(0u | ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))), (0u | _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))))), (((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 0u))), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))))) | 0u)) * 1u))) : _GLF_FUZZED(clamp(workgroup_size, subgroup_local_id, workgroup_id))))))))], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false))))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0))), (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0)))) | (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) ^ 0)))))) / (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)))); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         subgroupAll(false);
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))))) > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) : _GLF_FUZZED(4010.9027))) > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), mix(float(_GLF_FUZZED(20.94)), float(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(true)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))).x > injectionSwitch.y, false, true)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.1))), injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), mix(float(_GLF_FUZZED(_GLF_IDENTITY(20.94, (20.94) / 1.0))), float(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(true)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))), vec2(0.0, 0.0) + (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))))).x > injectionSwitch.y, false, true))))), true && (bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), mix(float(_GLF_FUZZED(_GLF_IDENTITY(20.94, (20.94) / 1.0))), float(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(true)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))), vec2(0.0, 0.0) + (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)))))).x > injectionSwitch.y, false, true)))))))))))))))))))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.20)), float(injectionSwitch.y), bool(true)))))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)) * 1, ((_GLF_IDENTITY(4, (4) / 1)) * 1) >> 0)), _GLF_IDENTITY(64, (64) | 0), 4);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0)))); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))))))));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & 1), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6517.3818))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.4)))), float(_GLF_FUZZED(-2.0)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(326.489) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(326.489) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (true ? float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(326.489) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) : _GLF_FUZZED(50.74))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, 1.0)))), (mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(326.489) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (true ? float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(326.489) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) : _GLF_FUZZED(50.74))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, 1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), min(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))), bool(false))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6517.3818))))) : _GLF_FUZZED(-67.10))) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-95210, (_GLF_IDENTITY(-95210, (-95210) - 0)) - 0), (_GLF_IDENTITY(-95210, (_GLF_IDENTITY(-95210, (-95210) - 0)) - 0)) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), int(8))))) : _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, (1 & _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)))), min((_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, (1 & _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, (1 & _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)))), ~ (~ ((_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, (1 & _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)))))))))))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
              return;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
