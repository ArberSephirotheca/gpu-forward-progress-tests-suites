#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uvec2 _f0;
 ivec4 _f1;
 bvec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_8 {
 int _f0;
 int _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_7 {
 bool _f0;
 ivec2 _f1;
 ivec2 _f2;
 bool _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 _GLF_struct_8 _f3;
 int _f4;
 bvec2 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 uvec3 _f1;
 uvec2 _f2;
 vec4 _f3;
 mat2x4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 vec3 _f1;
 ivec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 vec4 _f1;
 vec2 _f2;
 mat4 _f3;
 mat2 _f4;
 int _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 mat3x4 _f1;
 uint subgroup_size;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_10 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat2(1.0), mat3x4(1.0), gl_SubgroupSize, _GLF_struct_5(_GLF_struct_0(uvec4(1u)), _GLF_struct_1(true, vec4(1.0), vec2(1.0), mat4(1.0), mat2(1.0), 1, mat4x2(1.0)), _GLF_struct_2(mat2x3(1.0), vec3(1.0), ivec3(1), bvec4(true)), _GLF_struct_3(vec3(1.0), mat4(1.0)), _GLF_struct_4(mat2x3(1.0), uvec3(1u), uvec2(1u), vec4(1.0), mat2x4(1.0), ivec4(1))), _GLF_struct_6(bvec2(true)), _GLF_struct_10(_GLF_struct_7(true, ivec2(1), ivec2(1), true, uvec4(1u)), mat4x2(1.0), uvec2(1u), _GLF_struct_8(1, 1, mat4x3(1.0)), 1, bvec2(true), _GLF_struct_9(uvec2(1u), ivec4(1), bvec2(true), uvec3(1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 30:
       case 61:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       case 18:
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           switch(_GLF_SWITCH(0))
            {
             case 18:
             float(subgroup_id);
             case 51:
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                intBitsToFloat(-34903);
                case 93:
                do
                 {
                  distance(injectionSwitch, (vec4(7.2, -79.93, -9.8, 3.1) * mat2x4(-5573.0850, 25.96, 6.0, -2.4, 8905.2237, 8.1, 657.520, 5.0)));
                 }
                while(_GLF_WRAPPED_LOOP(false));
                ((ivec4(17577, -49399, 99096, -28289) - 85799) , uvec4(78514u, 94918u, 41932u, 156387u));
                case 91:
                uint _GLF_SWITCH_5_0v[71], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[86];
                case 13:
                case 14:
                int _GLF_SWITCH_5_3v[13], _GLF_SWITCH_5_4v[93], _GLF_SWITCH_5_5v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  ;
                 }
                else
                 {
                 }
                break;
                case 79:
                mat4x3 _GLF_SWITCH_6_0v[63], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                case 55:
                vec3 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v, _GLF_SWITCH_6_5v;
                if(_GLF_DEAD(false))
                 continue;
                default:
                1;
               }
             }
             case 0:
             case 12:
             case 1:
             case 63:
             case 53:
             if(_GLF_DEAD(false))
              return;
             case 3:
             if(_GLF_DEAD(false))
              return;
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             break;
             if(_GLF_DEAD(false))
              return;
             default:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               1;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 95:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             ivec4(-51312, -82543, 13129, 10530);
            }
           case 0:
           case 73:
           case 47:
           case 8:
           if(_GLF_DEAD(false))
            return;
           case 42:
           case 77:
           case 9:
           case 4:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 0:
               case 83:
               case 57:
               case 82:
               case 15:
               if(_GLF_DEAD(false))
                return;
               case 44:
               case 96:
               case 25:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               break;
               case 41:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (-76.17 - mat4x3(-4360.4800, 1.7, -0.9, -42.58, 2011.9831, 7284.8488, 2.8, 3.1, -642.975, -5.9, -4.5, -5.3));
                }
               else
                {
                }
               default:
               1;
              }
            }
           break;
           case 7:
           uvec4 _GLF_SWITCH_6_0v[37], _GLF_SWITCH_6_1v;
           default:
           1;
          }
        }
       default:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 93:
             case 73:
             case 77:
             case 4:
             case 16:
             case 30:
             case 70:
             return;
             break;
             case 6:
             do
              {
               while(false)
                {
                 mat4x3 _GLF_SWITCH_4_0v[75], _GLF_SWITCH_4_1v[76];
                }
               if((-4361 == ivec3(12012, -71955, -81375).z))
                {
                 lessThanEqual(vec2(54.53, -812.483), sinh(injectionSwitch));
                 (mat2x4(-2769.6343, -7.5, 4.0, 202.361, 94.42, -73.36, 4929.4410, -73.35) / (-0.7 * 6981.6256));
                 mat4(6690.5697, 99.78, -839.377, -81.22, 7.8, -81.55, -3.3, -812.251, 1.4, -7.3, 7.2, -892.745, 26.14, -0.9, -99.98, -2.9);
                 ivec3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                 bvec2(true, false);
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    return;
                   (ivec2(-52327, -36573) | ivec2(-80202, -95367));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 mat2x3(7060.2596, 6.2, 6.1, -9.4, 53.71, -6254.4633);
                 mat4 _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v;
                 float _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v[67];
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat3x4(mat2x3(0.4, 6591.9945, 0.5, 4674.1018, -3.0, -430.437));
                }
               else
                {
                }
               (mat3x2(-34.52, 7.0, -745.643, -325.147, 2.6, -9047.1823) + 5.9);
               uvec2 _GLF_SWITCH_4_10v;
               while(true)
                {
                 ;
                 uvec4 _GLF_SWITCH_4_11v[2];
                 vec2(-5.7, -96.27);
                 _GLF_SWITCH_4_10v;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(true);
             case 87:
             ivec4 _GLF_SWITCH_4_12v, _GLF_SWITCH_4_13v[95], _GLF_SWITCH_4_14v;
             default:
             if(_GLF_DEAD(false))
              return;
             1;
            }
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         1;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   switch(_GLF_SWITCH(0))
    {
     case 59:
     mat3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[18], _GLF_SWITCH_5_2v;
     case 0:
     case 32:
     case 66:
     case 70:
     case 98:
     case 80:
     case 88:
     case 41:
     case 15:
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     break;
     default:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       1;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       case 94:
       if(_GLF_DEAD(false))
        return;
       case 41:
       case 15:
       if(_GLF_DEAD(false))
        return;
       case 36:
       case 62:
       case 52:
       case 66:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 97:
             vec3 _GLF_SWITCH_7_0v;
             case 0:
             case 10:
             case 38:
             case 67:
             case 50:
             case 73:
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 42:
               uvec3(29361u, 28339u, 72792u);
               if(_GLF_DEAD(false))
                return;
               case 40:
               uvec4(28461u, 117548u, 168956u, 8070u);
               case 0:
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                return;
               case 93:
               case 30:
               case 50:
               case 73:
               case 67:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               case 39:
               case 10:
               case 19:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 83:
               return;
               break;
               case 65:
               notEqual(bvec4(true, true, true, false), bvec4(false, false, false, true));
               case 96:
               for(               4.2;
 true; mat2x4(mat2x3(6.7, 4.1, 510.319, 2.8, 6.4, 3016.3809)))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               default:
               1;
              }
             break;
             default:
             1;
            }
          }
        }
       else
        {
        }
       break;
       default:
       1;
      }
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY((0 | 0), ((0 | 0)) + 0)))
    {
     case 0:
     case 6:
     case 1:
     case 50:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     case 60:
     case 67:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     case 30:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     case 70:
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     break;
     default:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       1;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_11.subgroup_size);
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
              {
              }
             else
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                {
                 return;
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
          }
         else
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-15951 & 0)); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(subgroup_local_id + 1 < _GLF_struct_replacement_11.subgroup_size)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), int(6)))))
                {
                 case 35:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(3), int(3))) ^ 0)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    break;
                   switch(_GLF_SWITCH(0))
                    {
                     case 1:
                     ;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     case 0:
                     case 49:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     case 24:
                     case 60:
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 34:
                         case 20:
                         case 28:
                         case 89:
                         case 67:
                         if(_GLF_DEAD(false))
                          return;
                         case 86:
                         case 87:
                         case 79:
                         case 12:
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               (mat4x2(-89.10, 224.158, -4632.0047, 2.9, 8208.7565, -48.92, -9496.5542, -8305.6488) * mat2x4(6.6, 56.07, 493.355, -2.9, -70.33, -2.1, -6.0, -0.0));
                              }
                            }
                           else
                            {
                            }
                          }
                         break;
                         default:
                         1;
                        }
                      }
                     break;
                     case 39:
                     if(_GLF_DEAD(false))
                      return;
                     ;
                     case 93:
                     (ivec3(13838, -66743, -83958) << ivec3(48569, -24799, 57553));
                     default:
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       1;
                      }
                    }
                  }
                 case 90:
                 {
                  mat4x3(mat2(-287.418, 5394.9902, 56.21, 6.0));
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        return;
                       }
                      else
                       {
                       }
                     }
                   }
                  else
                   {
                   }
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                  else
                   {
                   }
                  for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 9:
                      uvec3 _GLF_SWITCH_6_0v;
                      case 88:
                      if(_GLF_DEAD(false))
                       return;
                      bvec4(false, false, true, true);
                      case 0:
                      case 54:
                      case 16:
                      case 69:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))
                       {
                        case 79:
                        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                         continue;
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          mat2x4(9584.9952, 4558.7191, -4022.6451, -6224.3141, -14.66, -4.7, 4748.3629, -6761.9159);
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           continue;
                         }
                        if(_GLF_DEAD(false))
                         continue;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        case 74:
                        mat4 _GLF_SWITCH_2_0v[48], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                        case 0:
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(false))
                         continue;
                        case 80:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             return;
                            continue;
                           }
                          break;
                         }
                        case 69:
                        case 94:
                        if(_GLF_DEAD(false))
                         continue;
                        if(_GLF_DEAD(false))
                         break;
                        do
                         {
                          if(_GLF_DEAD(false))
                           return;
                          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                           {
                            case 67:
                            mat2x4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[3], _GLF_SWITCH_5_2v;
                            if(_GLF_DEAD(false))
                             return;
                            case 89:
                            if(_GLF_DEAD(false))
                             break;
                            int _GLF_SWITCH_5_3v;
                            case 0:
                            if(_GLF_DEAD(false))
                             continue;
                            case 49:
                            case 98:
                            do
                             {
                              if(_GLF_DEAD(false))
                               break;
                              ivec4(37893, -1626, -11449, -20846);
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            break;
                            case 25:
                            uvec3(70829u, 98243u, 33305u);
                            default:
                            1;
                           }
                          if(_GLF_DEAD(false))
                           continue;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        if(_GLF_DEAD(false))
                         continue;
                        if(_GLF_DEAD(false))
                         continue;
                        if(_GLF_DEAD(false))
                         return;
                        break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(false))
                         continue;
                        case 76:
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(false))
                             break;
                            switch(_GLF_SWITCH(0))
                             {
                              case 0:
                              case 12:
                              case 4:
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                               }
                              else
                               {
                                return;
                               }
                              if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false)))
                               return;
                              break;
                              case 67:
                              (ivec2(6274, -49166) , mat2x4(-6.9, -6.1, 6.0, -7090.1113, -3035.8075, -7.4, -2.2, -2330.9023));
                              default:
                              1;
                             }
                           }
                          if(_GLF_DEAD(false))
                           return;
                         }
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
                         {
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_DEAD(false))
                           continue;
                          break;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           return;
                         }
                        uvec2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
                        case 93:
                        if(_GLF_DEAD(false))
                         continue;
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              mat2x4(-7.0, -30.15, -6.8, 9.9, -9.0, -3.9, -10.14, 170.822);
                             }
                           }
                          else
                           {
                           }
                         }
                        default:
                        do
                         {
                          if(_GLF_DEAD(false))
                           return;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        if(_GLF_DEAD(false))
                         continue;
                        1;
                       }
                      break;
                      case 23:
                      if(_GLF_DEAD(false))
                       continue;
                      uvec3(47954u, 132264u, 18538u);
                      case 1:
                      (_GLF_SWITCH_6_0v >> _GLF_SWITCH_6_0v);
                      default:
                      1;
                     }
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      continue;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      do
                       {
                        return;
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          continue;
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    if(_GLF_DEAD(false))
                     return;
                    return;
                   }
                  ivec3 _GLF_SWITCH_0_0v;
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    do
                     {
                      switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
                       {
                        case 55:
                        mat2x3 _GLF_SWITCH_6_0v[70];
                        if(_GLF_DEAD(false))
                         return;
                        case 0:
                        case 59:
                        case 72:
                        switch(_GLF_SWITCH(0))
                         {
                          case 91:
                          max(ivec2(-88109, 2564), -53895);
                          if(_GLF_DEAD(false))
                           continue;
                          case 33:
                          ivec2(33902, -10561);
                          case 0:
                          case 24:
                          case 48:
                          case 16:
                          case 67:
                          case 53:
                          do
                           {
                            if(_GLF_DEAD(false))
                             break;
                            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                             {
                              if(_GLF_DEAD(false))
                               break;
                              if(_GLF_DEAD(false))
                               return;
                              do
                               {
                                switch(_GLF_SWITCH(0))
                                 {
                                  case 0:
                                  for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                   {
                                    if(_GLF_DEAD(false))
                                     {
                                      switch(_GLF_SWITCH((0 | 0)))
                                       {
                                        case 10:
                                        int _GLF_SWITCH_7_0v[71], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                                        case 90:
                                        vec2 _GLF_SWITCH_7_3v[92], _GLF_SWITCH_7_4v[92], _GLF_SWITCH_7_5v;
                                        case 0:
                                        case 2:
                                        case 62:
                                        case 68:
                                        if(_GLF_WRAPPED_IF_TRUE(true))
                                         {
                                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                                           {
                                            return;
                                           }
                                         }
                                        else
                                         {
                                         }
                                        break;
                                        default:
                                        1;
                                       }
                                     }
                                   }
                                  case 98:
                                  case 28:
                                  if(_GLF_DEAD(false))
                                   continue;
                                  case 77:
                                  if(_GLF_DEAD(false))
                                   break;
                                  case 83:
                                  case 20:
                                  if(_GLF_DEAD(false))
                                   {
                                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                     {
                                      switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                       {
                                        case 71:
                                        int _GLF_SWITCH_4_0v;
                                        case 55:
                                        ivec4 _GLF_SWITCH_4_1v;
                                        case 0:
                                        case 61:
                                        case 82:
                                        if(_GLF_DEAD(false))
                                         continue;
                                        if(_GLF_DEAD(false))
                                         return;
                                        if(_GLF_DEAD(false))
                                         return;
                                        if(_GLF_DEAD(false))
                                         break;
                                        if(_GLF_DEAD(false))
                                         return;
                                        case 66:
                                        if(_GLF_DEAD(false))
                                         break;
                                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                         continue;
                                        case 51:
                                        if(_GLF_DEAD(false))
                                         return;
                                        case 12:
                                        case 6:
                                        case 77:
                                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                         {
                                         }
                                        else
                                         {
                                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                           break;
                                          return;
                                         }
                                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                         break;
                                        break;
                                        default:
                                        1;
                                       }
                                     }
                                    else
                                     {
                                     }
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     break;
                                   }
                                  break;
                                  case 75:
                                  for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (int(6)) * 1), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                   {
                                    if(_GLF_WRAPPED_IF_FALSE(false))
                                     {
                                     }
                                    else
                                     {
                                      if(_GLF_WRAPPED_IF_TRUE(true))
                                       {
                                        do
                                         {
                                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                           {
                                            for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 1) << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                                             {
                                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                               {
                                                do
                                                 {
                                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                                   {
                                                    return;
                                                   }
                                                  else
                                                   {
                                                   }
                                                  if(_GLF_DEAD(false))
                                                   return;
                                                 }
                                                while(_GLF_WRAPPED_LOOP(false));
                                               }
                                             }
                                           }
                                         }
                                        while(_GLF_WRAPPED_LOOP(false));
                                       }
                                      else
                                       {
                                       }
                                     }
                                   }
                                  do
                                   {
                                    if(_GLF_WRAPPED_IF_TRUE(true))
                                     {
                                      mat2x3(-3.6, -385.300, -7.7, -9.6, 4029.6305, 43.04);
                                     }
                                    else
                                     {
                                     }
                                   }
                                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  case 99:
                                  if(_GLF_DEAD(false))
                                   continue;
                                  ivec4 _GLF_SWITCH_3_0v;
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   break;
                                  if(_GLF_DEAD(false))
                                   continue;
                                  default:
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    1;
                                   }
                                 }
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(false))
                                 return;
                               }
                              else
                               {
                                return;
                               }
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          break;
                          case 88:
                          if(_GLF_DEAD(false))
                           break;
                          vec3 _GLF_SWITCH_5_0v;
                          case 40:
                          _GLF_SWITCH_0_0v;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          default:
                          do
                           {
                            1;
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          if(_GLF_DEAD(false))
                           continue;
                         }
                        break;
                        case 67:
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                         {
                          uvec3(162290u, 182675u, 148191u);
                         }
                        default:
                        1;
                       }
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         return;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  else
                   {
                   }
                 }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 63:
                       uvec3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                       case 0:
                       case 95:
                       case 25:
                       case 94:
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         if(_GLF_DEAD(false))
                          continue;
                         case 47:
                         case 62:
                         case 7:
                         case 61:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         case 60:
                         case 72:
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                              {
                              }
                             else
                              {
                               return;
                              }
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             return;
                            }
                          }
                         case 12:
                         case 37:
                         case 79:
                         return;
                         break;
                         default:
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           1;
                          }
                         else
                          {
                          }
                        }
                       break;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 case 0:
                 case 91:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         return;
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 switch(_GLF_SWITCH(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1), ~ (~ (ivec4(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1))))))))
                  {
                   case 0:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   do
                    {
                     switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 + (0))))
                      {
                       case 9:
                       (mat3x2(6.4, 8421.8658, 6.1, -6562.5222, 54.86, 5.4) - 4.7);
                       case 68:
                       true;
                       case 0:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
                          {
                           case 0:
                           case 52:
                           case 45:
                           case 38:
                           case 43:
                           case 97:
                           case 75:
                           case 80:
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             atomicStore(checker[virtual_gid], read, 4, 64, 4);
                            }
                           break;
                           case 74:
                           mat3x2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                           default:
                           1;
                          }
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         continue;
                        }
                       case 92:
                       case 61:
                       case 89:
                       case 42:
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         switch(_GLF_SWITCH((0 | 0)))
                          {
                           case 0:
                           case 29:
                           case 86:
                           case 40:
                           case 49:
                           case 59:
                           case 72:
                           if(_GLF_DEAD(false))
                            return;
                           case 77:
                           case 74:
                           if(_GLF_DEAD(false))
                            return;
                           continue;
                           break;
                           case 25:
                           float _GLF_SWITCH_4_0v;
                           if(_GLF_DEAD(false))
                            break;
                           case 44:
                           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                           vec4(6.3, -54.53, 3.8, 9.7);
                           default:
                           1;
                          }
                        }
                       break;
                       case 16:
                       uvec4(154934u, 54237u, 140181u, 87071u);
                       case 17:
                       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         atanh(-79.50);
                        }
                       default:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           1;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                        }
                       if(_GLF_DEAD(false))
                        break;
                       break;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   do
                    {
                     switch(_GLF_SWITCH((0 ^ 0)))
                      {
                       case 75:
                       (97386 % ivec4(-98791, 12498, 96602, -94498));
                       case 88:
                       vec4(dot(vec4(5.2, -1066.7025, -497.395, -7353.1936), vec4(1151.1040, -9073.3226, -6700.5045, 9927.1484)), vec3(5.0, -239.705, -9.3));
                       case 0:
                       case 25:
                       case 61:
                       case 91:
                       case 26:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       break;
                       case 36:
                       -89.33;
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     subgroupAll(false);
                    }
                   break;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (27926 & 0)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 0:
                         case 86:
                         case 67:
                         case 43:
                         switch(_GLF_SWITCH(0))
                          {
                           case 49:
                           ;
                           case 0:
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             return;
                            }
                           case 29:
                           case 98:
                           do
                            {
                             switch(_GLF_SWITCH((((0 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0))) >> _GLF_IDENTITY(int(5), int(5)))))
                              {
                               case 98:
                               mat4 _GLF_SWITCH_1_0v;
                               if(_GLF_DEAD(false))
                                continue;
                               case 0:
                               case 53:
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                                    {
                                     if(_GLF_DEAD(false))
                                      break;
                                     return;
                                    }
                                   return;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(false))
                                    return;
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    continue;
                                   switch(_GLF_SWITCH((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 1)))
                                    {
                                     case 57:
                                     mat4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                                     case 24:
                                     do
                                      {
                                       if(_GLF_DEAD(false))
                                        break;
                                       mat2(2097.8461, 9.5, 62.41, 4133.1114)[0];
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     case 0:
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 0:
                                       case 44:
                                       case 66:
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(false))
                                          return;
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if(_GLF_DEAD(false))
                                            continue;
                                          }
                                         else
                                          {
                                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                                            break;
                                           switch(_GLF_SWITCH(0))
                                            {
                                             case 2:
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                return;
                                              }
                                             mat3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[67];
                                             if(_GLF_DEAD(false))
                                              return;
                                             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                              continue;
                                             case 65:
                                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                              {
                                               do
                                                {
                                                 uvec2(uvec4(52067u, 186117u, 69924u, 82536u));
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             case 0:
                                             case 81:
                                             case 72:
                                             case 51:
                                             for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               switch(_GLF_SWITCH(0))
                                                {
                                                 case 0:
                                                 case 91:
                                                 case 41:
                                                 case 73:
                                                 return;
                                                 break;
                                                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
                                                  continue;
                                                 case 90:
                                                 vec3(-7.8, -13.25, 81.77);
                                                 case 77:
                                                 greaterThan(cos(injectionSwitch), injectionSwitch);
                                                 default:
                                                 1;
                                                }
                                               if(_GLF_DEAD(false))
                                                break;
                                              }
                                             break;
                                             default:
                                             1;
                                            }
                                          }
                                         if(_GLF_DEAD(false))
                                          return;
                                        }
                                       else
                                        {
                                        }
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                         break;
                                        }
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(false))
                                          continue;
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                          {
                                           switch(_GLF_SWITCH(0))
                                            {
                                             case 66:
                                             mat4x3(1657.9140, 0.5, 4.2, 3.4, -7.5, -73.55, 16.29, 9914.0567, 4.6, 4.2, 1327.6095, -366.116);
                                             case 0:
                                             if(_GLF_DEAD(false))
                                              {
                                               if(_GLF_DEAD(false))
                                                return;
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 return;
                                                }
                                              }
                                             break;
                                             default:
                                             1;
                                            }
                                          }
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(false))
                                          break;
                                        }
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(false))
                                          continue;
                                         return;
                                        }
                                       break;
                                       case 67:
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           do
                                            {
                                             return;
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                       if(_GLF_DEAD(false))
                                        continue;
                                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
                                        return;
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_DEAD(false))
                                          continue;
                                         if(_GLF_DEAD(false))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            {
                                            }
                                           else
                                            {
                                             switch(_GLF_SWITCH(0))
                                              {
                                               case 93:
                                               bvec4 _GLF_SWITCH_6_0v[44], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                                               case 49:
                                               mat4 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v;
                                               case 0:
                                               case 97:
                                               case 86:
                                               case 65:
                                               case 52:
                                               case 37:
                                               case 76:
                                               case 39:
                                               return;
                                               break;
                                               default:
                                               1;
                                              }
                                            }
                                          }
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             switch(_GLF_SWITCH(0))
                                              {
                                               case 95:
                                               int _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[22];
                                               case 0:
                                               case 54:
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                  {
                                                   if(_GLF_DEAD(false))
                                                    {
                                                     do
                                                      {
                                                       switch(_GLF_SWITCH(0))
                                                        {
                                                         case 48:
                                                         mat4x2(-8950.2978, -3.2, 16.14, 2.1, 43.60, 8.3, -9289.8969, -743.306);
                                                         case 54:
                                                         (-77.82 + mat4x2(73.91, 9.5, -401.111, 8.9, -7.7, -1.7, -49.69, -36.32));
                                                         case 0:
                                                         case 32:
                                                         case 46:
                                                         if(_GLF_DEAD(false))
                                                          {
                                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                            continue;
                                                           return;
                                                          }
                                                         case 36:
                                                         case 72:
                                                         case 33:
                                                         case 29:
                                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                          {
                                                           return;
                                                          }
                                                         break;
                                                         case 75:
                                                         _injected_loop_counter;
                                                         case 61:
                                                         if(_GLF_DEAD(false))
                                                          continue;
                                                         mat2x3(-66.86, -71.21, -59.56, -6677.0989, 5.1, 8273.4614);
                                                         default:
                                                         1;
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               case 77:
                                               case 73:
                                               case 33:
                                               case 98:
                                               case 62:
                                               case 38:
                                               case 67:
                                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                                                break;
                                               case 9:
                                               if(_GLF_DEAD(false))
                                                break;
                                               if(_GLF_DEAD(false))
                                                continue;
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 return;
                                                }
                                               else
                                                {
                                                }
                                               break;
                                               default:
                                               1;
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                         if(_GLF_DEAD(false))
                                          continue;
                                        }
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                          {
                                           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                            {
                                             do
                                              {
                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                {
                                                 mat2x4(mat2(1.9, -959.996, -2292.7955, 1.3));
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                          }
                                         else
                                          {
                                          }
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          return;
                                        }
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_DEAD(false))
                                          continue;
                                         return;
                                        }
                                       if(_GLF_DEAD(false))
                                        continue;
                                       case 88:
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       if(_GLF_DEAD(false))
                                        {
                                         do
                                          {
                                           return;
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       if(_GLF_DEAD(false))
                                        return;
                                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                        {
                                         ivec4(40823, 27464, 95670, -39131);
                                        }
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       default:
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           return;
                                          }
                                        }
                                       if(_GLF_DEAD(false))
                                        return;
                                       1;
                                      }
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                                        return;
                                       if(_GLF_DEAD(false))
                                        break;
                                       return;
                                      }
                                     case 42:
                                     case 35:
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       do
                                        {
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                          {
                                           if(_GLF_DEAD(false))
                                            return;
                                           if(_GLF_DEAD(false))
                                            continue;
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        return;
                                      }
                                     else
                                      {
                                       if(_GLF_DEAD(false))
                                        break;
                                      }
                                     break;
                                     default:
                                     if(_GLF_DEAD(false))
                                      break;
                                     1;
                                    }
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                    break;
                                  }
                                }
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                }
                               break;
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 10:
                                   case 13:
                                   case 58:
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    continue;
                                   case 4:
                                   case 30:
                                   case 8:
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 0:
                                       case 44:
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           switch(_GLF_SWITCH(0))
                                            {
                                             case 8:
                                             for(int _injected_loop_counter = ((-80851 & 0) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                                              {
                                               ivec2(-40467, -70959);
                                              }
                                             case 60:
                                             vec4 _GLF_SWITCH_4_0v;
                                             case 0:
                                             case 30:
                                             for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                              {
                                               return;
                                               if(_GLF_DEAD(false))
                                                break;
                                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                continue;
                                              }
                                             break;
                                             if(_GLF_DEAD(false))
                                              continue;
                                             case 34:
                                             mat3x4 _GLF_SWITCH_4_1v;
                                             if(_GLF_DEAD(false))
                                              break;
                                             default:
                                             1;
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       break;
                                       case 96:
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          continue;
                                         workgroup_id;
                                        }
                                       default:
                                       1;
                                      }
                                    }
                                   break;
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  continue;
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   return;
                                  }
                                 else
                                  {
                                  }
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                               if(_GLF_DEAD(false))
                                break;
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     return;
                                    }
                                  }
                                 return;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                }
                               case 48:
                               do
                                {
                                 bvec3(true, true, false);
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               if(_GLF_DEAD(false))
                                return;
                               case 94:
                               if(_GLF_DEAD(false))
                                return;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                break;
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   return;
                                  }
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   return;
                                  }
                                }
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    return;
                                  }
                                 break;
                                }
                               do
                                {
                                 bvec4(false, true, true, true);
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               default:
                               1;
                               if(_GLF_DEAD(false))
                                return;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               return;
                              }
                            }
                           break;
                           default:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (10180 & 0)); _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               1;
                              }
                            }
                           if(_GLF_DEAD(false))
                            return;
                          }
                         break;
                         case 70:
                         ivec3(74042, 33778, 84521);
                         if(_GLF_DEAD(false))
                          return;
                         default:
                         1;
                        }
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    return;
                   default:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH((1 ^ ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))))) >> _GLF_IDENTITY(int(6), int(6))))))
                      {
                       case 0:
                       case 82:
                       case 55:
                       case 34:
                       case 35:
                       case 90:
                       case 48:
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       break;
                       case 3:
                       bvec3(false, false, false);
                       case 30:
                       ivec2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[88];
                       default:
                       1;
                      }
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     1;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         do
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          return;
                        }
                      }
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                  }
                 break;
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (int(0)) << 0), int(0)))))))
                    {
                     case 0:
                     case 3:
                     case 69:
                     case 56:
                     case 75:
                     case 41:
                     case 95:
                     case 73:
                     case 32:
                     case 50:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       return;
                      }
                     break;
                     case 8:
                     int _GLF_SWITCH_7_0v;
                     case 68:
                     mat2x3(4.0, -29.34, 9307.6991, 0.7, 9.4, -963.201);
                     default:
                     1;
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                  }
                }
               else
                {
                 switch(_GLF_SWITCH((-42401 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))
                  {
                   case 17:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     vec3(-2.4, -6841.5911, -4249.3782);
                    }
                   else
                    {
                    }
                   case 0:
                   case 7:
                   case 18:
                   case 99:
                   case 3:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                        {
                         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
                          {
                           case 98:
                           mat2x4 _GLF_SWITCH_6_0v;
                           case 45:
                           mat4 _GLF_SWITCH_6_1v;
                           case 0:
                           case 78:
                           case 95:
                           case 46:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                           else
                            {
                            }
                           case 57:
                           case 74:
                           if(_GLF_DEAD(false))
                            break;
                           case 47:
                           case 93:
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 return;
                                }
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                  {
                                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                    {
                                     case 0:
                                     case 71:
                                     case 27:
                                     case 96:
                                     case 74:
                                     case 43:
                                     if(_GLF_DEAD(false))
                                      return;
                                     if(_GLF_DEAD(false))
                                      return;
                                     break;
                                     default:
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      continue;
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))); _injected_loop_counter ++)
                                      {
                                       1;
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          return;
                                        }
                                      }
                                    }
                                   if(_GLF_DEAD(false))
                                    return;
                                  }
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    return;
                                  }
                                 else
                                  {
                                  }
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(false))
                                      return;
                                    }
                                  }
                                 else
                                  {
                                   do
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       do
                                        {
                                         return;
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                     if(_GLF_DEAD(false))
                                      return;
                                     return;
                                     if(_GLF_DEAD(false))
                                      continue;
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           break;
                           case 31:
                           mat3 _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v[92];
                           default:
                           1;
                          }
                        }
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     else
                      {
                      }
                    }
                   break;
                   case 75:
                   98.39;
                   case 65:
                   vec4(0.2, -4.0, -1.2, 4.6);
                   default:
                   1;
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             atomicStore(buf[virtual_gid], read, 4, 64, 4);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    break;
                   subgroupAll(true);
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             continue;
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             return;
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                 default:
                 if(_GLF_DEAD(false))
                  continue;
                 1;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
