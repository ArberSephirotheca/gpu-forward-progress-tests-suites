#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_47 {
 bvec4 _f0;
 ivec4 _f1;
 mat3 _f2;
 vec2 _f3;
 ivec2 _f4;
 int _f5;
} ;

struct _GLF_struct_46 {
 vec3 _f0;
 vec2 _f1;
 mat3 _f2;
 mat4 _f3;
 uvec4 _f4;
 bvec2 _f5;
 int _f6;
} ;

struct _GLF_struct_48 {
 vec3 _f0;
 _GLF_struct_46 _f1;
 _GLF_struct_47 _f2;
} ;

struct _GLF_struct_44 {
 mat4 _f0;
 ivec2 _f1;
 vec2 _f2;
 ivec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_43 {
 uvec3 _f0;
 mat3 _f1;
 mat2x3 _f2;
 uint _f3;
 vec2 _f4;
 uvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_42 {
 mat4 _f0;
} ;

struct _GLF_struct_41 {
 ivec4 _f0;
 float _f1;
 mat2x4 _f2;
 mat3 _f3;
 mat4x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_40 {
 mat2x4 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 uint _f3;
 mat4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_39 {
 uvec3 _f0;
 ivec2 _f1;
 vec2 _f2;
 uvec3 _f3;
 ivec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_45 {
 _GLF_struct_39 _f0;
 _GLF_struct_40 _f1;
 _GLF_struct_41 _f2;
 _GLF_struct_42 _f3;
 _GLF_struct_43 _f4;
 mat3x2 _f5;
 _GLF_struct_44 _f6;
} ;

struct _GLF_struct_37 {
 mat4x2 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 uvec2 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_36 {
 mat4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_38 {
 vec3 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
 uint _f3;
 uint subgroup_size;
} ;

struct _GLF_struct_34 {
 mat3x2 _f0;
 int _f1;
 mat4x3 _f2;
 bvec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_33 {
 mat2x4 _f0;
 bvec4 _f1;
 int _f2;
 bool _f3;
 vec2 _f4;
} ;

struct _GLF_struct_32 {
 uvec4 _f0;
 ivec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_31 {
 uvec4 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_35 {
 _GLF_struct_31 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 vec2 _f3;
 mat2 _f4;
 _GLF_struct_34 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_49 {
 _GLF_struct_35 _f0;
 _GLF_struct_38 _f1;
 _GLF_struct_45 _f2;
 _GLF_struct_48 _f3;
} ;

struct _GLF_struct_28 {
 uint _f0;
 mat2x4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_27 {
 mat2x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_26 {
 mat4 _f0;
 uint _f1;
 mat3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_29 {
 vec3 _f0;
 _GLF_struct_26 _f1;
 mat4 _f2;
 _GLF_struct_27 _f3;
 mat3 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
} ;

struct _GLF_struct_22 {
 vec3 _f0;
 mat3x4 _f1;
 float _f2;
 bvec3 _f3;
 mat4x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_21 {
 uvec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_20 {
 mat4x2 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 int _f3;
 mat3 _f4;
 int _f5;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat3 _f1;
} ;

struct _GLF_struct_18 {
 int _f0;
 vec3 _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 uint subgroup_base;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_23 _f0;
 _GLF_struct_25 _f1;
 mat4x3 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_15 {
 int _f0;
 bool _f1;
 float _f2;
 uint _f3;
 mat3x4 _f4;
 ivec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 uvec4 _f1;
 int _f2;
 mat4 _f3;
 uvec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 ivec2 _f1;
 _GLF_struct_15 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 bvec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_11 {
 uint read;
 vec4 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
 _GLF_struct_13 _f1;
 mat2x3 _f2;
 _GLF_struct_16 _f3;
 uvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_8 {
 uint _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 vec4 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat3 _f1;
 vec2 _f2;
 mat4x3 _f3;
 ivec2 _f4;
 bvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 vec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_1 {
 float _f0;
 bool _f1;
 mat4x2 _f2;
 ivec4 _f3;
 vec3 _f4;
 bool _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat2x3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 vec4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 vec2 _f3;
 mat4 _f4;
 int _f5;
 _GLF_struct_5 _f6;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))), bool(bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) && true)) && true)) || false))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  barrier();
 _GLF_struct_49 _GLF_struct_replacement_49 = _GLF_struct_49(_GLF_struct_35(_GLF_struct_31(uvec4(1u), mat3x2(1.0), mat3x2(1.0)), _GLF_struct_32(uvec4(1u), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), sin(vec4(0.0, 0.0, 0.0, 0.0)) + (vec4(1.0))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? _GLF_IDENTITY(vec4(1.0), sin(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, 0.0, 0.0)))) + (vec4(1.0))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-1.8, -7672.3034, 5.4, 6950.2801), clamp(vec4(-1.8, -7672.3034, 5.4, 6950.2801), vec4(-1.8, -7672.3034, 5.4, 6950.2801), _GLF_IDENTITY(vec4(-1.8, -7672.3034, 5.4, 6950.2801), clamp(vec4(-1.8, -7672.3034, 5.4, 6950.2801), vec4(-1.8, -7672.3034, 5.4, 6950.2801), vec4(-1.8, -7672.3034, 5.4, 6950.2801))))), (vec4(-1.8, -7672.3034, _GLF_IDENTITY(5.4, (true ? _GLF_IDENTITY(5.4, min(5.4, 5.4)) : _GLF_FUZZED(527.148))), 6950.2801)) * vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_struct_33(mat2x4(1.0), bvec4(true), 1, true, _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (true ? _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), vec2(mat2x4(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch)))), vec2(1.0), mat2(1.0), _GLF_struct_34(mat3x2(1.0), 1, mat4x3(1.0), bvec4(true), bvec2(true)), uvec3(1u)), _GLF_struct_38(vec3(1.0), _GLF_struct_36(mat4(1.0), mat2x4(1.0), ivec3(1)), _GLF_struct_37(mat4x2(1.0), mat3x2(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 1.0)), (1.0) - 0.0), 1.0)), 1.0)), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6564.5582)), bool(false)))))) + 0.0)), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u)), mat3x4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, tan(0.0), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0, 0.0, 1.0, 0.0))))), 1u, gl_SubgroupSize), _GLF_struct_45(_GLF_struct_39(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), ivec2(1), vec2(1.0), uvec3(1u), _GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_FUZZED(ivec2(48438, -96424)))), mat4(1.0)), _GLF_struct_40(mat2x4(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, _GLF_IDENTITY(3.7, (3.7) * _GLF_ONE(1.0, injectionSwitch.y))) * mat2x3(41.46, 7.8, 862.649, _GLF_IDENTITY(-8.0, min(-8.0, -8.0)), -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, 3.7) * mat2x3(41.46, 7.8, 862.649, -8.0, -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, 3.7) * mat2x3(41.46, 7.8, 862.649, -8.0, -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0), (true ? vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, 3.7) * mat2x3(41.46, 7.8, 862.649, -8.0, -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0) : _GLF_FUZZED(vec3(-1946.0781, -6.9, 85.08)))))))), mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, _GLF_IDENTITY(3.7, (3.7) * _GLF_ONE(1.0, injectionSwitch.y))) * mat2x3(41.46, 7.8, 862.649, _GLF_IDENTITY(-8.0, min(-8.0, -8.0)), -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0), max(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, 3.7) * mat2x3(41.46, 7.8, 862.649, -8.0, -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, 3.7) * mat2x3(41.46, 7.8, 862.649, -8.0, -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0), (true ? vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(0.0, -93.04, 3.7) * mat2x3(41.46, 7.8, 862.649, -8.0, -3125.8847, -739.136)).g)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0) : _GLF_FUZZED(vec3(-1946.0781, -6.9, 85.08))))))))), float(_GLF_FUZZED(6.7)), bool(false)))), uvec4(1u), 1u, mat4(1.0), ivec2(1)), _GLF_struct_41(ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), 1.0, mat2x4(1.0), mat3(1.0), mat4x3(1.0), uvec2(1u)), _GLF_struct_42(mat4(1.0)), _GLF_struct_43(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(81065u) : 1u))) | 0u)), mat3(1.0), mat2x3(1.0), 1u, vec2(1.0), uvec3(1u), uvec4(1u)), mat3x2(1.0), _GLF_struct_44(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), ivec2(1), vec2(1.0), ivec4(1), uvec2(1u))), _GLF_struct_48(vec3(1.0), _GLF_struct_46(vec3(1.0), vec2(1.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4(1.0), uvec4(1u), bvec2(true), 1), _GLF_struct_47(bvec4(true), ivec4(1), mat3(1.0), vec2(1.0), ivec2(1), _GLF_IDENTITY(1, max(1, 1)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), 0 + (_injected_loop_counter)) > (0 & -55311)); _injected_loop_counter --)
    {
     _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y = _GLF_struct_replacement_49._f1.subgroup_size;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(bvec4(true), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3x4(1.0), vec2(1.0), mat4(1.0), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))))), _GLF_struct_5(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(131.001)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)), (mix(float(_GLF_FUZZED(131.001)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))) / 1.0))), vec4(1.0), _GLF_struct_0(vec2(1.0), mat2x3(1.0), ivec3(1)), _GLF_struct_1(1.0, true, mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-693.903)))), ivec4(1), vec3(1.0), true, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), int(ivec3(int(ivec4(1, 1, 1, 1)), _GLF_IDENTITY(0, int(ivec2(0, 1))), 1))))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))), clamp((_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))))), 0), (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))), clamp((_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0))) / 1))) | 0), 1))))))), 0)) - ivec2(0, 0)))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3)))))) - 0) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))))) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))))), 1)), 0 | (int(ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0))), clamp(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((_GLF_IDENTITY(1, min(1, 1)))) - 0)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))), (false ? _GLF_FUZZED(int(-79.29)) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((_GLF_IDENTITY(1, min(1, 1)))) | ((_GLF_IDENTITY(1, min(1, 1)))))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0))))), 0 | (int(ivec4(1, 1, 1, 1))))) | (_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1)))))))))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), int(ivec3(int(ivec4(1, 1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(0, int(ivec2(0, 1))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(90016) : _GLF_IDENTITY(1, 0 | (1))))))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), 1, 1, 1)), 0 | (int(ivec4(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)) | 0), 1))))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec2(3, 0), max(ivec2(3, 0), ivec2(3, 0))))))))) - 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) + 0))), int(int(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) + 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) + 0))), min(~ (~ (_GLF_IDENTITY(1, (1) + 0))), ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) * 1))))))) << ivec4(0, 0, _GLF_IDENTITY(0, (0) | 0), 0))), clamp(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-37218))), 1)), (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0))))))), (ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))))) << ivec4(0, 0, 0, 0))))), 0 | (int(ivec4(1, 1, 1, 1))))) | (_GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), 0 | (int(ivec4(1, 1, 1, 1))))))))))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))))))), _GLF_struct_2(ivec2(1), mat2x3(1.0)), _GLF_struct_3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), exp(sin(0.0)), tan(0.0), abs(1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))), mat2x4(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(1u, 1u)))), (true ? _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(1u, 1u)))) : _GLF_FUZZED(num_workgroup)))), vec2(1.0), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(float(_GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0))))))), _GLF_struct_4(vec2(1.0), mat3(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), mat4x3(1.0), ivec2(1), bvec2(true), mat3(1.0))), gl_WorkGroupSize.x);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((49.32 + 4135.2106))), bool(false))), (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(49.32 + 4135.2106, (49.32 + 4135.2106) + 0.0)))), bool(false))), (injectionSwitch.x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0 : _GLF_IDENTITY(_GLF_FUZZED(61740), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_FUZZED(61740), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1), _GLF_IDENTITY(ivec2(0, 0) + _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), ((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1))) / ivec2(1, 1)), 0)), (ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0))) / ivec2(1, 1))), max(ivec2(0, 0) + _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), _GLF_IDENTITY(ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0)), (ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(61740), ~ (~ (_GLF_FUZZED(61740)))), (_GLF_FUZZED(61740)) + 0))), 1)), 0))) / ivec2(1, 1))), _GLF_IDENTITY(ivec2(0, 0) + _GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), _GLF_IDENTITY(ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0)), (ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0))) / ivec2(1, 1))), (false ? _GLF_FUZZED(ivec2(26168, -99507)) : _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), _GLF_IDENTITY(ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0)), (ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0))) / _GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1)))))))), ivec2(1, 1) * (ivec2(0, 0) + _GLF_IDENTITY((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_FUZZED(61740), _GLF_FUZZED(61740))), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), _GLF_IDENTITY(ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0)), (ivec2(ivec3((ivec2(_GLF_IDENTITY(_GLF_FUZZED(61740), max(_GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_IDENTITY(_GLF_FUZZED(61740), 0 | (_GLF_FUZZED(61740)))) | 0), _GLF_IDENTITY(_GLF_FUZZED(61740), (_GLF_FUZZED(61740)) + 0))), 1)), 0))) / ivec2(1, 1)))))))))))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) - 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 1), (! _GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), ! (! ((_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec2(_injected_loop_counter != 1, true)))))))) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (_injected_loop_counter != 1), (_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), ! (! ((_injected_loop_counter != 1))))) && true), bool(bvec3(! _GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), ! (! ((_injected_loop_counter != 1))))) && true), true, false)))) && true)))))); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), max(int(8), int(8))), int(8))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       _GLF_IDENTITY(_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_struct_replacement_6.workgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_struct_replacement_6.workgroup_size), ((_GLF_IDENTITY(_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_struct_replacement_6.workgroup_size, (_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_struct_replacement_6.workgroup_size) | 0u))) - 0u) * 1u);
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(41.53)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.w * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_23(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(91909u, 151968u, 192253u, 45516u)))))), _GLF_struct_18(1, vec3(1.0), vec4(1.0), bvec4(true)), _GLF_struct_19(1u, mat3(1.0)), _GLF_struct_20(mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6663.2548) : 1.0))), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec3(1), 1, mat3(1.0), 1), subgroup_id * _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y, _GLF_struct_21(uvec2(1u), vec4(1.0)), _GLF_struct_22(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? _GLF_IDENTITY(vec3(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-589.876, -7.6, 3.5)), (true ? _GLF_FUZZED(vec3(_GLF_IDENTITY(-589.876, (_GLF_IDENTITY(-589.876, clamp(_GLF_IDENTITY(-589.876, clamp(-589.876, -589.876, -589.876)), -589.876, -589.876))) - sqrt(0.0)), -7.6, 3.5)) : _GLF_FUZZED(vec3(-4.2, -1.8, 244.605)))) : vec3(1.0))) : _GLF_FUZZED(_GLF_IDENTITY(vec3(9.9, 21.41, -4296.3092), min(vec3(9.9, 21.41, -4296.3092), _GLF_IDENTITY(vec3(9.9, 21.41, -4296.3092), (true ? vec3(9.9, 21.41, -4296.3092) : _GLF_FUZZED(vec3(6.3, -3564.5202, 8.4))))))))))), mat3x4(_GLF_IDENTITY(1.0, (1.0) - length(0.0))), 1.0, bvec3(true), mat4x3(1.0), vec4(1.0))), _GLF_struct_25(_GLF_struct_24(mat2(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0)))))), mat4x3(1.0), _GLF_struct_29(vec3(1.0), _GLF_struct_26(mat4(1.0), 1u, mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(881.811)), bool(false)))), uvec3(1u)), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), _GLF_struct_27(mat2x3(1.0), mat2x4(1.0)), mat3(1.0), _GLF_struct_28(1u, mat2x4(1.0), bvec2(true))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_30._f0.subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 1))), clamp(_GLF_IDENTITY(0, int(ivec3(0, 0, 1))), _GLF_IDENTITY(0, int(ivec3(0, 0, 1))), _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))))) | 0)), (_GLF_IDENTITY((0) | (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0)))), 0)), 0, 1)))), min((0) | (_GLF_IDENTITY(0, int(ivec3(0, 0, 1)))), (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(ivec3(0, 0, 1)), int(ivec2(int(ivec3(0, 0, 1)), 1)))))))))) >> (0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 0 ^ (3)))))))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(false)) && true)), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))))), true && (bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false)))))))), false, true)))) && true), false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)))).y)))), (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))));
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_30._f0.subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true)))) && true))) ? _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))) : _GLF_FUZZED(16616)))))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y) + (0u & 193236u)))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (_GLF_IDENTITY(true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(subgroup_local_id), (((0u | 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))), 0u | (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))))) | ((~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))))) | (subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))))) | (subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))))) | (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))))) | (subgroup_local_id + 1), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))))))) | (subgroup_local_id + 1), 0u, (1u ^ 1u)))))))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (_GLF_IDENTITY(true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(subgroup_local_id), (((0u | 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y)))), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u + (subgroup_local_id + 1), (_GLF_IDENTITY(0u + (subgroup_local_id + 1), 0u + (0u + (subgroup_local_id + 1)))) | 0u)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), min(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y)))) ^ 0u), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))), 0u | (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))), 1u * (~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1)), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1)), 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u))))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59977) : _GLF_IDENTITY(1, (1) << 0)))) % _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.y))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))))))))))) - 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))), true && (_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))), (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(_GLF_IDENTITY(3, (3) - 0)), int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1))) || false)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(876.401)), bool(false))), injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), true)))))))), false)))))))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(bvec3(true), _GLF_struct_13(_GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z], 4, 64, 2), clamp(_GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z], 4, 64, _GLF_IDENTITY(2, max(2, 2))), clamp(atomicLoad(buf[_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z], 4, 64, 2), atomicLoad(buf[_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z], 4, 64, 2), atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z, max(_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z, _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z))], 4, 64, 2))), atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size, (_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)).z], 4, 64, 2), atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size) + _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(186038u, 39893u, 13752u, 63328u)) : _GLF_IDENTITY((_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size) + uvec4(0u, 0u, 0u, 0u), ((_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size) + uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u))))).z], 4, 64, 2))), (atomicLoad(buf[_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z], 4, 64, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))))) ^ 0u), vec4(1.0)), _GLF_struct_12(uvec3(1u), mat2x3(1.0), uvec3(1u), bvec2(true), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true)))), true))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), true)))))))), mat2x3(1.0), _GLF_struct_16(_GLF_struct_14(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), (float(mat4x3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(73.47))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))) * 1.0)), 1.0))))), uvec4(1u), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(37609, (37609) << 0)) : 1)), mat4(1.0), uvec3(1u), true), ivec2(1), _GLF_struct_15(1, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), 1.0, 1u, mat3x4(1.0), ivec4(1), vec2(1.0)), mat3x2(1.0)), uvec3(1u), mat4(1.0));
 _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.x = _GLF_struct_replacement_17._f1._f0.read;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))));
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(2, int(ivec3(2, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0)))) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)), ((vec3(injectionSwitch, 1.0))) + abs(vec3(0.0, 0.0, 0.0))) + vec3(0.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY((vec3(injectionSwitch, 1.0)), ((vec3(injectionSwitch, 1.0))) + abs(vec3(0.0, 0.0, 0.0))) + vec3(0.0, 0.0, 0.0)))), 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(55.83)), bool(false))), 0.0), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6855.4617)), bool(false)))) + _GLF_IDENTITY(dot(vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0)))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) + vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) * mat4(1.0)))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))))), true, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true, false)))), ((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true, false))))) || _GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) - 0.0), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.9)), bool(false))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, true, true)))), true && (bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (true)))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(false, true), true))))))), true, true, true)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true, true, true))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   else
    {
     subgroupAll(false);
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), int(ivec4(_GLF_IDENTITY(0, 0 | (0)), 1, 1, 1))) : _GLF_FUZZED(-87045)))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
         for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (_injected_loop_counter))))))) > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, 0 | (1))), 0 ^ (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, 0 | (1))), (false ? _GLF_FUZZED(atomicAdd(_injected_loop_counter, 99508)) : min(1, _GLF_IDENTITY(1, 0 | (1))))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(61.28) : (_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-107.043) : false ? _GLF_FUZZED(61.28) : (_GLF_ONE(1.0, injectionSwitch.y)))))) - 0.0, max((_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(0.0), sqrt(1.0), 0.0)))) - 0.0, (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) - 0.0)))) * 1.0)))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) || false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / 1.0)))).y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(length(vec2(2.1, 4651.8130))) : injectionSwitch[1])), (injectionSwitch[1]) - 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, length(vec2(0.0, 0.0)) + (injectionSwitch.y))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))) || false, ! (! ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))) || false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), (false ? _GLF_FUZZED(workgroup_base) : (next_virtual_gid))))], uint(1), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(int(4))), 0, _GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(_GLF_IDENTITY(4, int(int(4))), 0, _GLF_IDENTITY(1, ~ (~ (1))))) << ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(int(4))), 0, _GLF_IDENTITY(1, ~ (~ (1)))), (ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), (int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))) * 1))), _GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(1, ~ (~ (1))))) | _GLF_IDENTITY(_GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), max(int(int(4)), int(int(4))))), 0, _GLF_IDENTITY(1, ~ (~ (1))))), ((ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), max(int(int(4)), int(_GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), int(int(_GLF_IDENTITY(int(4), (int(4)) | 0)))))))))), 0, _GLF_IDENTITY(1, ~ (~ (1)))))) ^ (ivec3(0, 0, 0) | ivec3(0, 0, 0))), ivec3(0, 0, 0) ^ ((ivec3(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec4(0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (1 & 1), 0)))))), _GLF_IDENTITY(1, ~ (~ (1))))))))) << _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0)))))))))))), 64, 4);
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, sqrt(0.0)), (vec3(injectionSwitch.y, 1.0, sqrt(0.0))) - vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / exp(tan(vec2(0.0, 0.0)))) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, injectionSwitch.x)) > injectionSwitch.y))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat4(-91.98, -75.85, -958.729, 748.714, -2581.5663, 6.4, _GLF_IDENTITY(473.893, clamp(473.893, _GLF_IDENTITY(473.893, mix(float(473.893), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(473.893, float(vec3(473.893, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(6583.1722, (6583.1722) - 0.0), 3.2, -1494.2329, 16.85, 1.0, -4252.8375, -2.3, _GLF_IDENTITY(635.591, clamp(635.591, _GLF_IDENTITY(635.591, clamp(635.591, _GLF_IDENTITY(635.591, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 635.591 : _GLF_FUZZED(310.988))), 635.591)), 635.591))))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat4(-91.98, -75.85, -958.729, 748.714, -2581.5663, 6.4, 473.893, 1.0, 6583.1722, 3.2, -1494.2329, 16.85, 1.0, -4252.8375, -2.3, 635.591))) : injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true, false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(buf[_GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.z], _GLF_struct_replacement_10._f0.GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_14readsubgroup_sizevirtual_gidworkgroup_size.x, 4, 64, 4);
}
