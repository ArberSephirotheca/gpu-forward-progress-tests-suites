#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(false)))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2373.7776)), bool(false))), (injectionSwitch.y))), (injectionSwitch.y))) - 0.0)))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) && true)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) && true)), true), true))))))), false, true)))))), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)))))), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))), true, false, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((2.8 / _GLF_IDENTITY(vec2(2.0, -0.9), min(vec2(2.0, -0.9), vec2(2.0, -0.9))).t))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0))), 1.0, 1.0, 0.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(93.27), _GLF_IDENTITY(_GLF_FUZZED(1.1), min(_GLF_IDENTITY(_GLF_FUZZED(1.1), max(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1))), _GLF_FUZZED(1.1)))), bvec2(false, false))).y)), false, true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(52.39) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(52.39) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(52.39) : injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(false ? _GLF_FUZZED(52.39) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(true)))) - 0.0)))) * 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), true)), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (false))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, cos(0.0), 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(! (false)), false, true), bvec3(bvec4(bvec3(bool(! (false)), false, true), true)))), (bool(_GLF_IDENTITY(bvec3(bool(! (false)), false, true), bvec3(bvec4(bvec3(bool(! (false)), false, true), true))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(sqrt(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(sqrt(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, sin(0.0), log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(9.6, -73.71, -2.8, -5.8, 4.7, 9.6, -2.3, 4941.7094, -18.82, 7.4, 357.814, -5.8, 4416.7818, -6157.9448, -202.425, 9.4)) : mat4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(sqrt(0.0), 0.0)), dot(vec2(1.0, 1.0), vec2(sqrt(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, sin(0.0), log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(25.05) : injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)), 1.0)), (float(vec2(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)), 1.0))) - 0.0)))))) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), bool(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), true, false))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(565.333)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true), ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), bool(bvec4(bool(bvec2(! (false), true)), false, false, false)))), false, false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, length(0.0), sqrt(0.0))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, _GLF_IDENTITY((25641u), max(_GLF_IDENTITY((25641u), (true ? (25641u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))), (25641u))) | 0u), 153319u)), min(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, _GLF_IDENTITY((25641u), max(_GLF_IDENTITY((25641u), (true ? (25641u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))), (25641u))) | 0u), 153319u)), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, _GLF_IDENTITY((25641u), max(_GLF_IDENTITY((25641u), (true ? (25641u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))), (25641u))) | 0u), 153319u))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (_GLF_IDENTITY(~ (153319u), (_GLF_IDENTITY(~ (153319u), clamp(~ (_GLF_IDENTITY(153319u, (_GLF_IDENTITY(153319u, (153319u) ^ 0u)) << 0u)), ~ (153319u), ~ (153319u)))) | (1u ^ 1u)))))), (false ? _GLF_FUZZED(uvec2(52519u, 109319u)) : _GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (_GLF_IDENTITY(~ (153319u), (_GLF_IDENTITY(~ (153319u), clamp(~ (153319u), ~ (153319u), ~ (153319u)))) | (1u ^ 1u)))))))))), _GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), clamp(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (false ? _GLF_FUZZED(uvec2(177603u, 108500u)) : _GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), ~ (~ (_GLF_FUZZED(uvec2(25641u, 153319u))))), _GLF_FUZZED(uvec2(25641u, 153319u)))))))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(_GLF_IDENTITY(25641u, ~ (~ (25641u))), 25641u)), 153319u))) | _GLF_IDENTITY((_GLF_FUZZED(uvec2(25641u, 153319u))), clamp(_GLF_IDENTITY((_GLF_FUZZED(uvec2(25641u, 153319u))), (false ? _GLF_FUZZED(uvec2(191484u, 75535u)) : (_GLF_FUZZED(uvec2(25641u, 153319u))))), (_GLF_FUZZED(uvec2(25641u, 153319u))), (_GLF_FUZZED(uvec2(25641u, 153319u)))))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), clamp(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) - 0u))), 0u))))) + subgroup_local_id, min(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))), max(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) >> _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (_GLF_IDENTITY(~ (153319u), (_GLF_IDENTITY(~ (153319u), clamp(~ (153319u), ~ (153319u), ~ (153319u)))) << (_GLF_IDENTITY(0u, (0u) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 7751u)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u))))) << uvec2(0u, 0u)), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u)))), uvec2(0u, 0u) + (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * _GLF_IDENTITY((_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, uint(uint(153319u)))))), ((_GLF_FUZZED(uvec2(25641u, 153319u)))) | ((_GLF_FUZZED(uvec2(25641u, 153319u))))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(_GLF_IDENTITY(153319u, min(153319u, 153319u)), (_GLF_IDENTITY(153319u, min(153319u, 153319u))) | (_GLF_IDENTITY(_GLF_IDENTITY(153319u, min(153319u, 153319u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(153319u, min(153319u, 153319u)))))))), (_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, max(_GLF_IDENTITY(25641u, ~ (~ (25641u))), _GLF_IDENTITY(25641u, clamp(25641u, _GLF_IDENTITY(25641u, ~ (~ (25641u))), 25641u)))), 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), max(_GLF_FUZZED(uvec2(25641u, 153319u)), _GLF_FUZZED(uvec2(25641u, 153319u))))) >> uvec2(0u, 0u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u)))) >> uvec2(0u, 0u)), max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(25641u, (25641u) ^ (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u)))))), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? 25641u : _GLF_FUZZED(subgroup_size))), (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, 153319u), clamp(uvec2(25641u, 153319u), uvec2(25641u, 153319u), _GLF_IDENTITY(uvec2(25641u, 153319u), ~ (~ (uvec2(25641u, 153319u))))))), uvec2(1u, 1u) * (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_FUZZED(uvec2(25641u, 153319u)), 1u), (uvec3(_GLF_FUZZED(uvec2(25641u, 153319u)), 1u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u)))))), min((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, 153319u), clamp(uvec2(25641u, 153319u), uvec2(25641u, 153319u), _GLF_IDENTITY(uvec2(25641u, 153319u), ~ (~ (uvec2(25641u, 153319u))))))), uvec2(1u, 1u) * (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_FUZZED(uvec2(25641u, 153319u)), 1u), (uvec3(_GLF_FUZZED(uvec2(25641u, 153319u)), 1u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u)))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, 153319u), clamp(uvec2(25641u, 153319u), uvec2(25641u, 153319u), _GLF_IDENTITY(uvec2(25641u, 153319u), ~ (~ (uvec2(25641u, 153319u))))))), uvec2(1u, 1u) * (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_FUZZED(uvec2(25641u, 153319u)), 1u), (uvec3(_GLF_FUZZED(uvec2(25641u, 153319u)), 1u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_IDENTITY(_GLF_FUZZED(uvec2(197109u, 135519u)), min(_GLF_FUZZED(uvec2(197109u, 135519u)), _GLF_FUZZED(uvec2(197109u, 135519u)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(25641u, min(25641u, 25641u)), (_GLF_IDENTITY(25641u, min(25641u, 25641u))) | 0u), 153319u)), (_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u))) ^ uvec2(0u, 0u))) | uvec2(0u, 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, (153319u) | (_GLF_IDENTITY(153319u, (153319u) | (_GLF_IDENTITY(153319u, 0u + (153319u)))))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), _GLF_IDENTITY(max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(_GLF_IDENTITY(153319u, min(153319u, 153319u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(153319u, min(153319u, 153319u))), (~ (_GLF_IDENTITY(153319u, min(153319u, 153319u)))) - 0u))))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))), max(_GLF_IDENTITY(max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), min(_GLF_FUZZED(uvec2(25641u, 153319u)), _GLF_FUZZED(uvec2(25641u, 153319u)))), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u)))))), ((_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))) << uvec2(0u, 0u))), _GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), min(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), _GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))))))) << uvec2(0u, 0u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))), (max(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), clamp(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | uvec2(0u, 0u)), _GLF_FUZZED(uvec2(25641u, 153319u)), _GLF_FUZZED(uvec2(25641u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(_GLF_IDENTITY(153319u, clamp(153319u, 153319u, 153319u)), min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u)))))) << uvec2(0u, 0u)), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), _GLF_IDENTITY(uvec2(1u, 1u), max(uvec2(1u, 1u), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))))) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))))))) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), max((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), 1u), max(_GLF_IDENTITY(uvec3(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u), ~ (~ (uvec3(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)))), uvec3(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u))))))))), 0u))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) | (subgroup_size)))))), 0u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, 153319u), (true ? uvec2(25641u, 153319u) : _GLF_FUZZED(clamp(uvec2(151395u, 12670u), uvec2(68917u, 92476u), (false ? uvec2(52839u, 30872u) : uvec2(61356u, 112079u)))))))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, _GLF_IDENTITY(1u, 0u + (1u))) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, 0u + (_GLF_IDENTITY(25641u, (25641u) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, max(25641u, _GLF_IDENTITY(25641u, uint(uvec3(25641u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(_GLF_IDENTITY(153319u, (_GLF_IDENTITY(153319u, ~ (~ (153319u)))) | (_GLF_IDENTITY(153319u, 0u ^ (153319u)))), 153319u)))))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, 153319u), (true ? uvec2(25641u, 153319u) : _GLF_FUZZED(clamp(uvec2(151395u, 12670u), uvec2(68917u, 92476u), (false ? uvec2(52839u, 30872u) : uvec2(61356u, 112079u)))))))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, _GLF_IDENTITY(1u, 0u + (1u))) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, 0u + (_GLF_IDENTITY(25641u, (25641u) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, max(25641u, _GLF_IDENTITY(25641u, uint(uvec3(25641u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(_GLF_IDENTITY(153319u, (_GLF_IDENTITY(153319u, ~ (~ (153319u)))) | (_GLF_IDENTITY(153319u, 0u ^ (153319u)))), 153319u)))))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, 153319u), (true ? uvec2(25641u, 153319u) : _GLF_FUZZED(clamp(uvec2(151395u, 12670u), uvec2(68917u, 92476u), (false ? uvec2(52839u, 30872u) : uvec2(61356u, 112079u)))))))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, _GLF_IDENTITY(1u, 0u + (1u))) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, 0u + (_GLF_IDENTITY(25641u, (25641u) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, max(25641u, _GLF_IDENTITY(25641u, uint(uvec3(25641u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(_GLF_IDENTITY(153319u, (_GLF_IDENTITY(153319u, ~ (~ (153319u)))) | (_GLF_IDENTITY(153319u, 0u ^ (153319u)))), 153319u)))))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))))))) : uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (((subgroup_size))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (((subgroup_size))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))))))), ~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), (((subgroup_size))) - 0u)))))) | ((subgroup_size)))) ^ 0u))), ((~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (((subgroup_size))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)))), ~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)))))) | ((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), (((subgroup_size))) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)))), ~ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)))))) | ((subgroup_size))) >> 0u))) ^ 0u)))) * 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u)))))), ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) << 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u)))) + uvec2(0u, 0u)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(_GLF_IDENTITY(25641u, (0u ^ (0u | 0u)) | (_GLF_IDENTITY(25641u, clamp(25641u, 25641u, 25641u)))), 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | _GLF_IDENTITY((_GLF_FUZZED(uvec2(25641u, 153319u))), clamp((_GLF_FUZZED(uvec2(25641u, 153319u))), _GLF_IDENTITY((_GLF_FUZZED(uvec2(25641u, 153319u))), clamp((_GLF_FUZZED(uvec2(25641u, 153319u))), (_GLF_FUZZED(uvec2(25641u, 153319u))), (_GLF_FUZZED(uvec2(25641u, 153319u))))), _GLF_IDENTITY((_GLF_FUZZED(uvec2(25641u, 153319u))), uvec2(0u, 0u) ^ ((_GLF_FUZZED(uvec2(25641u, 153319u)))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, _GLF_IDENTITY((25641u), ((25641u)) ^ 0u) | 0u), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(25641u, 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), _GLF_IDENTITY((_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(_GLF_IDENTITY(153319u, _GLF_IDENTITY((153319u), 1u * ((153319u))) | (_GLF_IDENTITY(153319u, 0u ^ (153319u)))), 153319u))))), (true ? (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(_GLF_IDENTITY(153319u, (153319u) | (_GLF_IDENTITY(153319u, 0u ^ (153319u)))), 153319u))))) : _GLF_FUZZED(uvec2(142801u, 187472u))))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) | (subgroup_size)))), 0u))))))))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, min(25641u, 25641u)), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, _GLF_IDENTITY(uint(uvec2(153319u, 0u)), ~ (~ (uint(uvec2(153319u, 0u)))))))), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))), max(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))))), _GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(25641u, max(_GLF_IDENTITY(25641u, clamp(25641u, 25641u, 25641u)), 25641u)), (25641u) | 0u), 153319u)), (uvec2(0u, 0u) ^ uvec2(0u, 0u)) | (_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, (153319u) ^ 0u)))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, ~ (~ (153319u))))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (false ? _GLF_FUZZED(atomicCompSwap(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), subgroup_size)) : 25641u)), 153319u))), (true ? max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, _GLF_IDENTITY(_GLF_IDENTITY(153319u, min(153319u, 153319u)), max(_GLF_IDENTITY(153319u, min(153319u, 153319u)), _GLF_IDENTITY(_GLF_IDENTITY(153319u, min(153319u, 153319u)), (_GLF_IDENTITY(153319u, min(153319u, 153319u))) / 1u)))), _GLF_IDENTITY(clamp(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))), uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))), uvec2(25641u, _GLF_IDENTITY(_GLF_IDENTITY(153319u, uint(uvec2(_GLF_IDENTITY(153319u, clamp(153319u, 153319u, 153319u)), 0u))), min(153319u, 153319u)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((clamp(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))), uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))), uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))))), ~ (~ ((clamp(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))), uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))), uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))))))))))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u))))))) + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, _GLF_IDENTITY(min(25641u, 25641u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), max(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) | 0u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))) + (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), max(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) | 0u))))), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, _GLF_IDENTITY(25641u, (0u & 14540u) + (25641u))), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) | 0u))), uint(uvec3(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) | 0u))), uint(uvec3(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) | 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : clamp(uint(uvec3(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | 0u, 0u | ((1u) | 0u))))), uint(uvec3(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) | 0u))), uint(uvec3(_GLF_IDENTITY(min(25641u, 25641u), uint(uvec4(min(25641u, 25641u), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, (1u) | 0u))))))))), 153319u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, clamp(25641u, _GLF_IDENTITY(25641u, ~ (~ (25641u))), 25641u)), 153319u)), (_GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, _GLF_IDENTITY(153319u, (153319u) - 0u)), (true ? uvec2(25641u, 153319u) : _GLF_FUZZED(uvec2(82616u, 80327u)))))) | (_GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, 153319u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(uvec2(25641u, 153319u), 1u, 1u), (_GLF_IDENTITY(uvec4(uvec2(25641u, 153319u), 1u, 1u), (uvec4(uvec2(25641u, 153319u), 1u, 1u)) | (uvec4(uvec2(25641u, 153319u), 1u, 1u)))) + uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec2(uvec4(uvec2(25641u, 153319u), 1u, 1u)), (uvec2(uvec4(uvec2(25641u, 153319u), 1u, 1u))) / uvec2(1u, 1u))) - uvec2(0u, 0u)))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, (25641u) | 0u), 153319u))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(153319u, ~ (_GLF_IDENTITY(~ (153319u), min(~ (153319u), ~ (153319u))))), max(153319u, 153319u)), 153319u, _GLF_IDENTITY(153319u, _GLF_IDENTITY((153319u), ((153319u)) | ((153319u))) / 1u))))), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, _GLF_IDENTITY(~ (~ (153319u)), (~ (~ (153319u))) | 0u)))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u), (uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u)) | uvec2(0u, 0u)))), 153319u))), max(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(153319u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (153319u), min(~ (153319u), ~ (153319u)))), clamp((_GLF_IDENTITY(~ (153319u), min(~ (153319u), ~ (153319u)))), (_GLF_IDENTITY(~ (153319u), min(~ (153319u), ~ (153319u)))), (_GLF_IDENTITY(~ (153319u), min(~ (153319u), ~ (153319u))))))), max(153319u, 153319u)), 153319u, _GLF_IDENTITY(153319u, (153319u) / 1u))))), _GLF_IDENTITY(uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))), ~ (~ (uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u)))))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, _GLF_IDENTITY(~ (~ (153319u)), (~ (~ (153319u))) | 0u)))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u), (uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u)) | uvec2(0u, 0u)))), 153319u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(153319u, ~ (_GLF_IDENTITY(~ (153319u), min(~ (153319u), ~ (153319u))))), max(153319u, 153319u)), 153319u, _GLF_IDENTITY(153319u, (153319u) / 1u))))), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, _GLF_IDENTITY(~ (~ (153319u)), (~ (~ (153319u))) | 0u)))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u), (uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u)) | uvec2(0u, 0u)))), 153319u))), min(max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(153319u, ~ (_GLF_IDENTITY(~ (153319u), min(~ (153319u), _GLF_IDENTITY(~ (153319u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (153319u), uint(uvec2(~ (153319u), 1u)))), 0u ^ (uint(_GLF_IDENTITY(~ (153319u), uint(uvec2(~ (153319u), 1u)))))))))))), max(153319u, 153319u)), 153319u, _GLF_IDENTITY(153319u, (_GLF_IDENTITY(153319u, ~ (~ (153319u)))) / 1u))))), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, _GLF_IDENTITY(~ (~ (153319u)), (~ (~ (153319u))) | 0u)))))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u), (uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u)) | uvec2(0u, 0u)))), 153319u))), max(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, 153319u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(153319u, ~ (_GLF_IDENTITY(~ (153319u), min(~ (153319u), ~ (153319u))))), max(153319u, 153319u)), 153319u, _GLF_IDENTITY(153319u, (153319u) / 1u))))), uvec2(1u, 1u) * (_GLF_FUZZED(uvec2(25641u, 153319u))))) | (_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, _GLF_IDENTITY(~ (~ (153319u)), (~ (~ (153319u))) | 0u)))), (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, _GLF_IDENTITY(~ (~ (153319u)), (~ (~ (153319u))) | 0u))))) + uvec2(0u, 0u)))), _GLF_FUZZED(uvec2(_GLF_IDENTITY(25641u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u), (uvec2(_GLF_IDENTITY(25641u, max(25641u, 25641u)), 1u)) | uvec2(0u, 0u)))), 153319u))))))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (false ? _GLF_FUZZED(uvec2(109415u, 2105u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u)))), (_GLF_FUZZED(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))))) | (_GLF_FUZZED(_GLF_IDENTITY(uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))), ~ (~ (uvec2(25641u, _GLF_IDENTITY(153319u, min(153319u, 153319u))))))))))), (_GLF_FUZZED(uvec2(25641u, 153319u))) | (_GLF_FUZZED(uvec2(25641u, 153319u)))), _GLF_FUZZED(uvec2(25641u, 153319u))) : _GLF_FUZZED(uvec2(197109u, 135519u))))))) : uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u))))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u & 87988u)) + 1) | (subgroup_local_id + 1), ((subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) + 1)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (subgroup_local_id + 1), min((subgroup_local_id + 1) | (subgroup_local_id + 1), (subgroup_local_id + 1) | (subgroup_local_id + 1))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) | 0u)), (0u ^ 1u) * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2545.7399) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))).x, 1.0, 1.0)), (false ? _GLF_FUZZED(90.86) : float(vec3(injectionSwitch.x, 1.0, 1.0))))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (! (false)))), true && (_GLF_IDENTITY(! (! (! (! (false)))), (! (! (! (! (false))))) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (! (! (false)))), false || (_GLF_IDENTITY(! (! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (! (! (! (false)))), true, true)), true && (bool(bvec3(! (! (! (! (false)))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (! (! (false)))), false || (_GLF_IDENTITY(! (! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (! (! (! (false)))), true, true)), true && (bool(bvec3(! (! (! (! (false)))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true))))))))), false || (! (! (_GLF_IDENTITY(! (! (! (! (false)))), false || (_GLF_IDENTITY(! (! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (! (! (! (false)))), true, true)), true && (bool(bvec3(! (! (! (! (false)))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)))))))))))), bool(bvec4(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (! (! (false)))), false || (_GLF_IDENTITY(! (! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (! (! (! (false)))), true, true)), true && (bool(bvec3(! (! (! (! (false)))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true))))))))), false || (! (! (_GLF_IDENTITY(! (! (! (! (false)))), false || (_GLF_IDENTITY(! (! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(! (! (! (! (false)))), true, true)), true && (bool(bvec3(! (! (! (! (false)))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)))))))))))), true, true, false))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), true, _GLF_IDENTITY(true, bool(bvec2(true, false))))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), true, _GLF_IDENTITY(true, bool(bvec2(true, false))))), true), bvec2(bvec2(bvec2(bool(bvec3(! (! (_GLF_IDENTITY(false, (false) && true))), true, _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), tan(0.0)))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3x2(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat2(min(injectionSwitch.x, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0, 0.0, 0.0))))), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(7359.7953)), bool(false)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false), false))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))))), false, false), true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(119.819))), injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(119.819))), injectionSwitch.x)) < injectionSwitch.y))))) || false))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), true, false)))))), true, true))))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) || false)))), false, true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))))).y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), clamp(vec3(injectionSwitch.y, 1.0, 1.0), vec3(injectionSwitch.y, 1.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), vec3(mat4x3(vec3(injectionSwitch.y, 1.0, 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))), float(_GLF_FUZZED(-337.639)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || (_GLF_IDENTITY(false, (false) && true))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) | (_GLF_IDENTITY(1u, (1u) / 1u)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)), (bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true))) && true), true && (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)), (bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true))) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3365.0443)), bool(false))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(5368.6219)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(-3365.0443)), bool(false))) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-658.549, 8425.3279, 6626.8452, 46.80, 2.5, 3.7, 3.9, -4.4, 8.2, -82.35, -7293.6653, -8.9, 17.22, -9.9, 1.4, 6317.0976))))))))), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(731.643) : 0.0)))))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), clamp(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)))))), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), clamp(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(8.2, -743.606, -892.391).g)), float(1.0), bool(true)))), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0))))))))))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-658.549, 8425.3279, 6626.8452, 46.80, 2.5, 3.7, 3.9, -4.4, 8.2, -82.35, -7293.6653, -8.9, 17.22, -9.9, 1.4, 6317.0976))))))))), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(731.643) : 0.0)))))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), clamp(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)))))), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), clamp(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(8.2, -743.606, -892.391).g)), float(1.0), bool(true)))), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0))))))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(0.0, exp(0.0), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-658.549, 8425.3279, 6626.8452, 46.80, 2.5, 3.7, 3.9, -4.4, 8.2, -82.35, -7293.6653, -8.9, 17.22, -9.9, 1.4, 6317.0976))))))))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(731.643) : 0.0)))))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.9) : 0.0))), 1.0), vec3(1.0, 1.0, 0.0)), clamp(dot(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)))))), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), clamp(dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(vec3(8.2, -743.606, -892.391).g)), float(1.0), bool(true)))), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, tan(0.0), 1.0), vec3(1.0, 1.0, 0.0))))))))))).y))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true)))))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), ((false)) || false) || false)) || false), true)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, log(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0), min(vec4(1.0, log(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), log(1.0), 0.0, 0.0)))), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, log(1.0), 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), false || (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))) | (0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0) ^ 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))) | (0 ^ (1 ^ 1)), ~ (~ ((_GLF_IDENTITY(4, int(int(4)))) | (0 ^ (_GLF_IDENTITY(1 ^ 1, 0 ^ (1 ^ 1)))))))) >> 0)), _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, false || (true)));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(mix(injectionSwitch, vec2(-5.1, 2.0), bvec2(false, true))))).y), float(vec2(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(mix(injectionSwitch, vec2(-5.1, 2.0), bvec2(false, true))))).y), (float(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(mix(injectionSwitch, vec2(-5.1, 2.0), bvec2(false, true))))).y)) / 1.0), 1.0))), float(_GLF_FUZZED(-807.782)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
