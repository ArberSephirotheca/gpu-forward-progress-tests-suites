#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec3 _f0;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(367.917, -2282.7818)))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))) / 1.0), max(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y), 1.0)))), _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), 1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), vec3(mat2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) / vec3(1.0, 1.0, 1.0)), 0.0))) : vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0)))), min(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(367.917, -2282.7818)))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))) / 1.0), max(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y), 1.0)))), _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), 1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), vec3(mat2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) / vec3(1.0, 1.0, 1.0)), 0.0))) : vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(367.917, -2282.7818)))).x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))) / 1.0), max(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y), 1.0)))), _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), 1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), vec3(mat2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) / vec3(1.0, 1.0, 1.0)), 0.0))) : vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0)))))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-48.51))), 1.0)), float(_GLF_IDENTITY(vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(vec3(-8.8, 6.0, 8.5)) : vec3(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(-3.9), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(-66.31)), vec3((vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(vec4(2775.7666, 11.89, 2.0, -1.4).w), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), max(_GLF_IDENTITY(mix(vec3(_GLF_FUZZED(-3.9), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(-66.31)), vec3((vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(vec4(2775.7666, 11.89, 2.0, -1.4).w), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), mix(vec3(_GLF_FUZZED(-8.8), _GLF_FUZZED(8.1), _GLF_FUZZED(-83.37)), vec3((mix(vec3(_GLF_FUZZED(-3.9), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(-66.31)), vec3((vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(vec4(2775.7666, 11.89, 2.0, -1.4).w), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))[0], (mix(vec3(_GLF_FUZZED(-3.9), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(-66.31)), vec3((vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(vec4(2775.7666, 11.89, 2.0, -1.4).w), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))[1], (mix(vec3(_GLF_FUZZED(-3.9), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(-66.31)), vec3((vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(vec4(2775.7666, 11.89, 2.0, -1.4).w), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))[2]), bvec3(true, true, true))), mix(vec3(_GLF_FUZZED(-3.9), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[1], _GLF_FUZZED(-66.31)), vec3((vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(vec4(2775.7666, 11.89, 2.0, -1.4).w), (vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (false ? _GLF_FUZZED(vec3(73.26, -5714.7745, -92.19)) : _GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mix(vec3(_GLF_FUZZED(_GLF_IDENTITY(-3.9, 1.0 * (-3.9))), (vec3(injectionSwitch.x, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0)))), 1.0))[1], _GLF_FUZZED(-66.31)), vec3((vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0))[0], _GLF_FUZZED(vec4(2775.7666, 11.89, 2.0, -1.4).w), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0))))), 1.0))[2]), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), max(clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))) - _GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))))) > injectionSwitch.y), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(_GLF_IDENTITY(vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, (false) && true)) ? _GLF_FUZZED(vec3(-8.8, 6.0, 8.5)) : vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0)), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0], ((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0]) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(5310.7475), _GLF_FUZZED(-3.8), _GLF_FUZZED((- -1.8))), bvec3(false, false, false))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0], ((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0]) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(5310.7475), _GLF_FUZZED(-3.8), _GLF_FUZZED((- -1.8))), bvec3(false, false, false))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0], ((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0]) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(5310.7475), _GLF_FUZZED(-3.8), _GLF_FUZZED((- -1.8))), bvec3(false, false, false))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))), mix(vec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0], ((_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[0]) - 0.0), (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(_GLF_FUZZED(vec3(-8.8, 6.0, 8.5)), (_GLF_FUZZED(vec3(-8.8, 6.0, 8.5))) - abs(vec3(0.0, 0.0, 0.0))))[2]), vec3(_GLF_FUZZED(5310.7475), _GLF_FUZZED(-3.8), _GLF_FUZZED((- -1.8))), bvec3(false, false, false))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * cos(vec3(0.0, 0.0, 0.0)))) : vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0))), vec3(1.0, 1.0, 1.0) * (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec3(-8.8, 6.0, 8.5)) : vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0)))))))))) > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(_GLF_IDENTITY(vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(-8.8, 6.0, _GLF_IDENTITY(8.5, (8.5) + 0.0))) : vec3(float(vec3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)), float(vec2(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0)), 1.0))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || ((true) && true))), false), false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (ivec3(1))), ivec3(1), ivec3(1))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))) | (gl_WorkGroupID))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec2((workgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u)), max((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec2((workgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u), clamp(max(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u), (max(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u)) + 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u), (max(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u)) >> 0u)))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec2((workgroup_size) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u))))) * _GLF_struct_replacement_0.workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) + 0u)), uint(4u)) : _GLF_FUZZED(uint(-8.6)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << 0u)) << 0u)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) * _GLF_struct_replacement_0.workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << 0u)) << 0u)))) | 0u), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << 0u)) << 0u)))) | 0u)) - 0u) * _GLF_struct_replacement_0.workgroup_id) - 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) | 0u) + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((10254u ^ subgroup_size)), clamp(_GLF_IDENTITY(_GLF_FUZZED((10254u ^ subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((10254u ^ subgroup_size)), 0u | (_GLF_FUZZED((10254u ^ subgroup_size)))), (_GLF_FUZZED((10254u ^ subgroup_size))) ^ 0u), _GLF_FUZZED((10254u ^ subgroup_size)))), _GLF_FUZZED((10254u ^ subgroup_size)), _GLF_FUZZED((10254u ^ subgroup_size)))) : subgroup_id)) * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), clamp(~ (subgroup_id), _GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))), ~ (subgroup_id))))) * subgroup_size + subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) | 0u) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ (0u & 187284u)) + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) | (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))) / 1u)) ^ 0u)), 0u | (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ (0u & 187284u)) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u)) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size))) ^ 0u) + subgroup_local_id)))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 1u)))) / 1u)))), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY((0u | 0u), uint(uint((0u | 0u))))), _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ 0u, _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec3((virtual_gid) ^ 0u, 1u, 0u))), _GLF_IDENTITY((virtual_gid) ^ 0u, 1u * ((virtual_gid) ^ 0u)))))], 0u ^ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), uint(uvec3(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8955u) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))]))), 0u, 1u)))), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]) * _GLF_IDENTITY(1u, (1u) ^ 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ 0u, _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec3((virtual_gid) ^ 0u, 1u, 0u))), _GLF_IDENTITY((virtual_gid) ^ 0u, 1u * ((virtual_gid) ^ 0u)))))], 0u ^ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), uint(uvec3(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8955u) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))]))), 0u, 1u)))), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]) * _GLF_IDENTITY(1u, (1u) ^ 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ 0u, _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec3((virtual_gid) ^ 0u, 1u, 0u))), _GLF_IDENTITY((virtual_gid) ^ 0u, 1u * ((virtual_gid) ^ 0u)))))], 0u ^ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), uint(uvec3(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8955u) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))]))), 0u, 1u)))), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]) * _GLF_IDENTITY(1u, (1u) ^ 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec3((virtual_gid) ^ 0u, 1u, 0u))), _GLF_IDENTITY((virtual_gid) ^ 0u, 1u * ((virtual_gid) ^ 0u)))))], 0u ^ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), uint(uvec3(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8955u) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))]))), 0u, 1u)))), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]) * _GLF_IDENTITY(1u, (1u) ^ 0u))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec3((virtual_gid) ^ 0u, 1u, 0u))), _GLF_IDENTITY((virtual_gid) ^ 0u, 1u * ((virtual_gid) ^ 0u)))))], 0u ^ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), uint(uvec3(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8955u) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))]))), 0u, 1u)))), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]) * _GLF_IDENTITY(1u, (1u) ^ 0u))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec3((virtual_gid) ^ 0u, 1u, 0u))), _GLF_IDENTITY((virtual_gid) ^ 0u, 1u * ((virtual_gid) ^ 0u)))))], 0u ^ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), uint(uvec3(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8955u) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))]))), 0u, 1u)))), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]) * _GLF_IDENTITY(1u, (1u) ^ 0u))), uint(uint(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, clamp((virtual_gid) ^ _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), _GLF_IDENTITY((virtual_gid) ^ 0u, uint(uvec3((virtual_gid) ^ 0u, 1u, 0u))), _GLF_IDENTITY((virtual_gid) ^ 0u, 1u * ((virtual_gid) ^ 0u)))))], 0u ^ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), uint(uvec3(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8955u) : (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))]))), 0u, 1u)))), (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)]) * _GLF_IDENTITY(1u, (1u) ^ 0u))))))) - 0u)) << (0u | 0u))))), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, min(0u, 0u)))], 0u))), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], (true ? buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)] : _GLF_FUZZED(packSnorm4x8(vec4(-6.8, 8603.7464, -84.69, 3.6))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-807.767))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 1u))), (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))))))) / 1u)], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) * 1), _GLF_IDENTITY(4, (4) - 0))), _GLF_IDENTITY(4, (4) - 0))));
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, 0 | (1)))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 1u, 1u))), virtual_gid, virtual_gid))), ((_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 1u, 1u))), virtual_gid, virtual_gid)))) - 0u))], _GLF_IDENTITY(read, clamp(read, read, read)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
}
